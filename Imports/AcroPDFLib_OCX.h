// ************************************************************************ //
// WARNING                                                                    
// -------                                                                    
// The types declared in this file were generated from data read from a       
// Type Library. If this type library is explicitly or indirectly (via        
// another type library referring to this type library) re-imported, or the   
// 'Refresh' command of the Type Library Editor activated while editing the   
// Type Library, the contents of this file will be regenerated and all        
// manual modifications will be lost.                                         
// ************************************************************************ //

// C++ TLBWRTR : $Revision:   1.96.1.40  $
// File generated on 28/09/2008 14:46:57 from Type Library described below.

// ************************************************************************ //
// Type Lib: C:\Program Files\Fichiers communs\Adobe\Acrobat\ActiveX\AcroPDF.dll
// IID\LCID: {05BFD3F1-6319-4F30-B752-C7A22889BCC4}\0
// Helpfile: 
// DepndLst: 
//   (1) v2.0 stdole, (C:\WINDOWS\system32\stdole2.tlb)
//   (2) v4.0 StdVCL, (C:\WINDOWS\system32\STDVCL40.DLL)
// ************************************************************************ //
#ifndef   __AcroPDFLib_OCX_h__
#define   __AcroPDFLib_OCX_h__

#pragma option push -b -w-inl

#include <vcl/utilcls.h>
#if !defined(__UTILCLS_H_VERSION) || (__UTILCLS_H_VERSION < 0x0102)
//
// The code generated by the TLIBIMP utility or the Import|TypeLibrary 
// and Import|ActiveX feature of C++Builder rely on specific versions of
// the header file UTILCLS.H found in the INCLUDE\VCL directory. If an 
// older version of the file is detected, you probably need an update/patch.
//
// NOTE: If the following error is triggered, you probably need to     
//       get a patch to the TLIBIMP.EXE utility or the C++Builder IDE. 
//       Patches/updates are posted on the Borland Website.            
//
#error "This file requires a newer version of the header UTILCLS.H" \
       "You need to apply an update/patch to your copy of C++Builder"
#endif
#include <olectl.h>
#include <ocidl.h>
#if !defined(_NO_VCL)
#include <vcl/stdvcl.hpp>
#endif  //   _NO_VCL
#include <vcl/ocxproxy.h>

#include "AcroPDFLib_TLB.h"
namespace Acropdflib_tlb
{

// *********************************************************************//
// HelpString: Adobe Acrobat Browser Control Type Library 1.0
// Version:    1.0
// *********************************************************************//


// *********************************************************************//
// OCX PROXY CLASS DECLARATION
// Control Name     : TAcroPDF
// Help String      : Adobe Acrobat Browser Control
// Default Interface: IAcroAXDocShim
// Def. Intf. Object: TCOMIAcroAXDocShim
// Def. Intf. DISP? : No
// Event   Interface: _IAcroAXDocShimEvents
// TypeFlags        : (2) CanCreate
// *********************************************************************//

// *********************************************************************//
// Definition of closures to allow VCL handlers to catch OCX events.      
// *********************************************************************//
//+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-
// Proxy class to host Adobe Acrobat Browser Control in CBuilder IDE/Applications.
//-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
class PACKAGE TAcroPDF : public TOleControl
{
  OVERLOADED_PROP_METHODS;
  static TNoParam  OptParam;
  static GUID      DEF_CTL_INTF;

  // Instance of Closures to expose OCX Events as VCL ones
  //
  TNotifyEvent                   FOnError;
  TNotifyEvent                   FOnMessage;

  // Default Interace of OCX
  //
  TCOMIAcroAXDocShim m_OCXIntf;

  // VCL Property Getters/Setters which delegate to OCX
  //
  TVariant        __fastcall Get_messageHandler(void);
  void/*HR*/      __fastcall Set_messageHandler(TVariant pVarOut/*[in]*/);

  // Static variables used by all instances of OCX proxy
  //
  static int          EventDispIDs[2];
  static TControlData CControlData;
  static GUID         CTL_DEF_INTF;

  // Method providing access to interface as __property 
  //
  TCOMIAcroAXDocShim __fastcall GetControlInterface(void);

protected:
  void     __fastcall CreateControl  (void);
  void     __fastcall InitControlData(void);

public:
  virtual  __fastcall TAcroPDF(TComponent* AOwner) : TOleControl(AOwner)
  {};
  virtual  __fastcall TAcroPDF(HWND        Parent) : TOleControl(Parent)
  {};

  // OCX methods
  //
  TOLEBOOL        __fastcall LoadFile(BSTR fileName/*[in]*/);
  void/*HR*/      __fastcall setShowToolbar(TOLEBOOL On/*[in]*/);
  void/*HR*/      __fastcall gotoFirstPage(void);
  void/*HR*/      __fastcall gotoLastPage(void);
  void/*HR*/      __fastcall gotoNextPage(void);
  void/*HR*/      __fastcall gotoPreviousPage(void);
  void/*HR*/      __fastcall setCurrentPage(long n/*[in]*/);
  void/*HR*/      __fastcall goForwardStack(void);
  void/*HR*/      __fastcall goBackwardStack(void);
  void/*HR*/      __fastcall setPageMode(BSTR pageMode/*[in]*/);
  void/*HR*/      __fastcall setLayoutMode(BSTR layoutMode/*[in]*/);
  void/*HR*/      __fastcall setNamedDest(BSTR namedDest/*[in]*/);
  void/*HR*/      __fastcall Print(void);
  void/*HR*/      __fastcall printWithDialog(void);
  void/*HR*/      __fastcall setZoom(float percent/*[in]*/);
  void/*HR*/      __fastcall setZoomScroll(float percent/*[in]*/, float left/*[in]*/, 
                                           float top/*[in]*/);
  void/*HR*/      __fastcall setView(BSTR viewMode/*[in]*/);
  void/*HR*/      __fastcall setViewScroll(BSTR viewMode/*[in]*/, float offset/*[in]*/);
  void/*HR*/      __fastcall setViewRect(float left/*[in]*/, float top/*[in]*/, float width/*[in]*/, 
                                         float height/*[in]*/);
  void/*HR*/      __fastcall printPages(long from/*[in]*/, long to/*[in]*/);
  void/*HR*/      __fastcall printPagesFit(long from/*[in]*/, long to/*[in]*/, 
                                           TOLEBOOL shrinkToFit/*[in]*/);
  void/*HR*/      __fastcall printAll(void);
  void/*HR*/      __fastcall printAllFit(TOLEBOOL shrinkToFit/*[in]*/);
  void/*HR*/      __fastcall setShowScrollbars(TOLEBOOL On/*[in]*/);
  TVariant        __fastcall GetVersions(void);
  void/*HR*/      __fastcall setCurrentHightlight(long a/*[in]*/, long b/*[in]*/, long c/*[in]*/, 
                                                  long d/*[in]*/);
  void/*HR*/      __fastcall setCurrentHighlight(long a/*[in]*/, long b/*[in]*/, long c/*[in]*/, 
                                                 long d/*[in]*/);
  void/*HR*/      __fastcall postMessage(TVariant strArray/*[in]*/);

  // OCX properties
  //
  __property System::OleVariant messageHandler={ read=GetOleVariantProp, write=SetOleVariantProp, index=30 };
  __property TCOMIAcroAXDocShim ControlInterface={ read=GetControlInterface };

  // Published properties
  //
__published:

  // Standard/Extended properties
  //
  __property TabStop;
  __property Align;
  __property DragCursor;
  __property DragMode;
  __property ParentShowHint;
  __property PopupMenu;
  __property ShowHint;
  __property TabOrder;
  __property Visible;
  __property OnDragDrop;
  __property OnDragOver;
  __property OnEndDrag;
  __property OnEnter;
  __property OnExit;
  __property OnStartDrag;

  // OCX properties
  //
  __property System::WideString src={ read=GetWideStringProp, write=SetWideStringProp, stored=false, index=1 };

  // OCX Events
  //
  __property TNotifyEvent OnError={ read=FOnError, write=FOnError };
  __property TNotifyEvent OnMessage={ read=FOnMessage, write=FOnMessage };
};
typedef TAcroPDF  TAcroPDFProxy;

};     // namespace Acropdflib_tlb

#if !defined(NO_IMPLICIT_NAMESPACE_USE)
using  namespace Acropdflib_tlb;
#endif

#pragma option pop

#endif // __AcroPDFLib_OCX_h__
