/*
** Copyright Nautilus, (10/9/2004)
** david.giocanti@nautilus-info.com

** Ce logiciel est un programme informatique servant à [rappeler les
** caractéristiques techniques de votre logiciel].

** Ce logiciel est régi par la licence CeCILL soumise au droit français et
** respectant les principes de diffusion des logiciels libres. Vous pouvez
** utiliser, modifier et/ou redistribuer ce programme sous les conditions
** de la licence CeCILL telle que diffusée par le CEA, le CNRS et l'INRIA
** sur le site "http://www.cecill.info".

** En contrepartie de l'accessibilité au code source et des droits de copie,
** de modification et de redistribution accordés par cette licence, il n'est
** offert aux utilisateurs qu'une garantie limitée.  Pour les mêmes raisons,
** seule une responsabilité restreinte pèse sur l'auteur du programme,  le
** titulaire des droits patrimoniaux et les concédants successifs.

** A cet égard  l'attention de l'utilisateur est attirée sur les risques
** associés au chargement,  à l'utilisation,  à la modification et/ou au
** développement et à la reproduction du logiciel par l'utilisateur étant
** donné sa spécificité de logiciel libre, qui peut le rendre complexe à
** manipuler et qui le réserve donc à des développeurs et des professionnels
** avertis possédant  des  connaissances  informatiques approfondies.  Les
** utilisateurs sont donc invités à charger  et  tester  l'adéquation  du
** logiciel à leurs besoins dans des conditions permettant d'assurer la
** sécurité de leurs systèmes et ou de leurs données et, plus généralement,
** à l'utiliser et l'exploiter dans les mêmes conditions de sécurité.

** Le fait que vous puissiez accéder à cet en-tête signifie que vous avez
** pris connaissance de la licence CeCILL, et que vous en avez accepté les
** termes.
*/

#ifndef __INTERPERTER__COMMUNICATION__
#define 		__INTERPERTER__COMMUNICATION__
/**
* Ce fichier sert a créer une interface pour pouvoir permettre de se relier
* à un interpreteur.
* Le role de cette interface est d'assurer une possibilité de changer
* d'interpreteur si on le désire
*
* Son rôle principale est définir un ensemble de fonction minimale à
* implementer pour pouvoir assurer une compatibilité.
*/

#include <string>

class InterCom
{
	protected:
  	std::string _fileToInterpret;

	public:
    InterCom(InterCom& temp);
    InterCom& operator= (InterCom& tmp);

  public:
  	/*
    ** Load file, parser and make what you have to do
    */
    void Load() = 0;

  	/*
    ** Renvoie le nom de fichier
    */
  	inline std::string getFileName();

    /*
    ** Indique le nom de fichier
    */
    inline void setFileName(std::string nam);

  public:
    void  ExecuteFunction(std::string funcName) = 0;

};

/*
** Renvoie le nom de fichier
*/
inline std::string  getFileName()
{
	return fileToInterpret;
}

/*
** Indique le nom de fichier
*/
inline void setFileName(std::string name)
{
	_fileToInterpret = name;
}


#endif
