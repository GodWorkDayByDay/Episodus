//================================================================================
//
// Info:               Code generated by OLE Proxy Wizard 3
//
// Date:               Tue Jan 17 15:11:35 2012
//
// Version:            8.3
// Copyright:          (C) 2012 Philippe
// Description:        
// Author:             Philippe
// Company:            
//
// File Type:          Proxy class definitions.
//
// File:               wordObjects.cpp
//
// Type Library:       Word
// Type Description:   Microsoft Word 11.0 Object Library
//
// GUID:               {00020905-0000-0000-C000-000000000046}
// System:             WIN32
// Version:            8.3
//
// Copyright (C) by Dr John Maddock 1997, 1998. All rights reserved.
// Copyright (C) by Armin Tueting 2007, 2009. All rights reserved.
//
//================================================================================
// #if defined(__BORLANDC__) && (__BORLANDC__ < 0x530)
// #include <objbase.h>
// #endif
#include <owl/pch.h>
#pragma hrdstop
#include <ocf/pch.h>
#include <initguid.h>
#include "wordObjects.h"
#include "wordObjectsExt.h"

WordApplication* T_GlobalProxy::_Application()
{
	static __OCF TAutoDispId i_(this, 1000);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

long T_GlobalProxy::Creator()
{
	static __OCF TAutoDispId i_(this, 1001);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

IDispatch* T_GlobalProxy::Parent()
{
	static __OCF TAutoDispId i_(this, 1002);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

__OCF TAutoString T_GlobalProxy::Name()
{
	static __OCF TAutoDispId i_(this, (long)0);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

void T_GlobalProxy::_Documents(TDocumentsProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 1);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

void T_GlobalProxy::GetWindows(TWindowsProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 2);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

T_DocumentProxy* T_GlobalProxy::ActiveDocument()
{
	static __OCF TAutoDispId i_(this, 3);
	__OCF TAutoArgs<0> a_;

  // Modified PA
  //
	TAutoVal document = Invoke(acMethod, a_, i_, i_);

  T_DocumentProxy *pResult = new T_DocumentProxy() ;
  pResult->Bind(document) ;
  return pResult ;
}

void T_GlobalProxy::ActiveWindow(TWindowProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 4);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

void T_GlobalProxy::_Selection(TSelectionProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 5);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

IDispatch* T_GlobalProxy::WordBasic()
{
	static __OCF TAutoDispId i_(this, 6);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

/*__OWL*/ TBool T_GlobalProxy::PrintPreview()
{
	static __OCF TAutoDispId i_(this, 27);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

void T_GlobalProxy::PrintPreview(/*__OWL*/ TBool arg0)
{
	static __OCF TAutoDispId i_(this, 27);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

void T_GlobalProxy::_RecentFiles(TRecentFilesProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 7);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

void T_GlobalProxy::NormalTemplate(TTemplateProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 8);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

void T_GlobalProxy::_System(TSystemProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 9);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

void T_GlobalProxy::_AutoCorrect(TAutoCorrectProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 10);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

void T_GlobalProxy::_FontNames(TFontNamesProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 11);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

void T_GlobalProxy::LandscapeFontNames(TFontNamesProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 12);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

void T_GlobalProxy::PortraitFontNames(TFontNamesProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 13);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

void T_GlobalProxy::_Languages(TLanguagesProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 14);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

void T_GlobalProxy::_Assistant(TAssistantProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 15);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

void T_GlobalProxy::_FileConverters(TFileConvertersProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 17);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

void T_GlobalProxy::_Dialogs(TDialogsProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 19);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

void T_GlobalProxy::_CaptionLabels(TCaptionLabelsProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 20);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

void T_GlobalProxy::_AutoCaptions(TAutoCaptionsProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 21);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

void T_GlobalProxy::_AddIns(TAddInsProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 22);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

void T_GlobalProxy::_Tasks(TTasksProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 28);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

IDispatch* T_GlobalProxy::MacroContainer()
{
	static __OCF TAutoDispId i_(this, 55);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

CommandBars* T_GlobalProxy::_CommandBars()
{
	static __OCF TAutoDispId i_(this, 57);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

void T_GlobalProxy::_SynonymInfo(TSynonymInfoProxy& Obj, __OCF TAutoString Word, __OCF TAutoVal* LanguageID)
{
	static __OCF TAutoDispId i_(this, 59);
	__OCF TAutoArgs<2> a_;
	wordObjects::push_arg(a_[1], Word);
	wordObjects::push_arg(a_[2], LanguageID);
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

void T_GlobalProxy::_VBE(TVBEProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 61);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

void T_GlobalProxy::_ListGalleries(TListGalleriesProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 65);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

__OCF TAutoString T_GlobalProxy::ActivePrinter()
{
	static __OCF TAutoDispId i_(this, 66);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

void T_GlobalProxy::ActivePrinter(__OCF TAutoString arg0)
{
	static __OCF TAutoDispId i_(this, 66);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

void T_GlobalProxy::_Templates(TTemplatesProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 67);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

IDispatch* T_GlobalProxy::CustomizationContext()
{
	static __OCF TAutoDispId i_(this, 68);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

void T_GlobalProxy::CustomizationContext(IDispatch* arg0)
{
	static __OCF TAutoDispId i_(this, 68);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

void T_GlobalProxy::_KeyBindings(TKeyBindingsProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 69);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

void T_GlobalProxy::_KeysBoundTo(TKeysBoundToProxy& Obj, WdKeyCategory KeyCategory, __OCF TAutoString Command, __OCF TAutoVal* CommandParameter)
{
	static __OCF TAutoDispId i_(this, 70);
	__OCF TAutoArgs<3> a_;
	wordObjects::push_arg(a_[1], KeyCategory);
	wordObjects::push_arg(a_[2], Command);
	wordObjects::push_arg(a_[3], CommandParameter);
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

void T_GlobalProxy::FindKey(TKeyBindingProxy& Obj, long KeyCode, __OCF TAutoVal* KeyCode2)
{
	static __OCF TAutoDispId i_(this, 71);
	__OCF TAutoArgs<2> a_;
	wordObjects::push_arg(a_[1], KeyCode);
	wordObjects::push_arg(a_[2], KeyCode2);
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

void T_GlobalProxy::_Options(TOptionsProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 93);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

void T_GlobalProxy::CustomDictionaries(TDictionariesProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 95);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

void T_GlobalProxy::StatusBar(__OCF TAutoString arg0)
{
	static __OCF TAutoDispId i_(this, 97);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

/*__OWL*/ TBool T_GlobalProxy::ShowVisualBasicEditor()
{
	static __OCF TAutoDispId i_(this, 104);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

void T_GlobalProxy::ShowVisualBasicEditor(/*__OWL*/ TBool arg0)
{
	static __OCF TAutoDispId i_(this, 104);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

/*__OWL*/ TBool T_GlobalProxy::IsObjectValid(IDispatch* Object)
{
	static __OCF TAutoDispId i_(this, 109);
	__OCF TAutoArgs<1> a_;
	wordObjects::push_arg(a_[1], Object);
	return Invoke(acPropGet, a_, i_, i_);
}

void T_GlobalProxy::HangulHanjaDictionaries(THangulHanjaConversionDictionariesProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 110);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

/*__OWL*/ TBool T_GlobalProxy::Repeat(__OCF TAutoVal* Times)
{
	static __OCF TAutoDispId i_(this, 305);
	__OCF TAutoArgs<1> a_;
	wordObjects::push_arg(a_[1], Times);
	return Invoke(acMethod, a_, i_, i_);
}

void T_GlobalProxy::DDEExecute(long Channel, __OCF TAutoString Command)
{
	static __OCF TAutoDispId i_(this, 310);
	__OCF TAutoArgs<2> a_;
	wordObjects::push_arg(a_[1], Channel);
	wordObjects::push_arg(a_[2], Command);
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

long T_GlobalProxy::DDEInitiate(__OCF TAutoString App, __OCF TAutoString Topic)
{
	static __OCF TAutoDispId i_(this, 311);
	__OCF TAutoArgs<2> a_;
	wordObjects::push_arg(a_[1], App);
	wordObjects::push_arg(a_[2], Topic);
	return Invoke(acMethod, a_, i_, i_);
}

void T_GlobalProxy::DDEPoke(long Channel, __OCF TAutoString Item, __OCF TAutoString Data)
{
	static __OCF TAutoDispId i_(this, 312);
	__OCF TAutoArgs<3> a_;
	wordObjects::push_arg(a_[1], Channel);
	wordObjects::push_arg(a_[2], Item);
	wordObjects::push_arg(a_[3], Data);
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

__OCF TAutoString T_GlobalProxy::DDERequest(long Channel, __OCF TAutoString Item)
{
	static __OCF TAutoDispId i_(this, 313);
	__OCF TAutoArgs<2> a_;
	wordObjects::push_arg(a_[1], Channel);
	wordObjects::push_arg(a_[2], Item);
	return Invoke(acMethod, a_, i_, i_);
}

void T_GlobalProxy::DDETerminate(long Channel)
{
	static __OCF TAutoDispId i_(this, 314);
	__OCF TAutoArgs<1> a_;
	wordObjects::push_arg(a_[1], Channel);
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void T_GlobalProxy::DDETerminateAll()
{
	static __OCF TAutoDispId i_(this, 315);
	__OCF TAutoArgs<0> a_;
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

long T_GlobalProxy::BuildKeyCode(WdKey Arg1, __OCF TAutoVal* Arg2, __OCF TAutoVal* Arg3, __OCF TAutoVal* Arg4)
{
	static __OCF TAutoDispId i_(this, 316);
	__OCF TAutoArgs<4> a_;
	wordObjects::push_arg(a_[1], Arg1);
	wordObjects::push_arg(a_[2], Arg2);
	wordObjects::push_arg(a_[3], Arg3);
	wordObjects::push_arg(a_[4], Arg4);
	return Invoke(acMethod, a_, i_, i_);
}

__OCF TAutoString T_GlobalProxy::KeyString(long KeyCode, __OCF TAutoVal* KeyCode2)
{
	static __OCF TAutoDispId i_(this, 317);
	__OCF TAutoArgs<2> a_;
	wordObjects::push_arg(a_[1], KeyCode);
	wordObjects::push_arg(a_[2], KeyCode2);
	return Invoke(acMethod, a_, i_, i_);
}

/*__OWL*/ TBool T_GlobalProxy::CheckSpelling(__OCF TAutoString Word, __OCF TAutoVal* CustomDictionary, __OCF TAutoVal* IgnoreUppercase, __OCF TAutoVal* MainDictionary, __OCF TAutoVal* CustomDictionary2, __OCF TAutoVal* CustomDictionary3, __OCF TAutoVal* CustomDictionary4, __OCF TAutoVal* CustomDictionary5, __OCF TAutoVal* CustomDictionary6, __OCF TAutoVal* CustomDictionary7, __OCF TAutoVal* CustomDictionary8, __OCF TAutoVal* CustomDictionary9, __OCF TAutoVal* CustomDictionary10)
{
	static __OCF TAutoDispId i_(this, 324);
	__OCF TAutoArgs<13> a_;
	wordObjects::push_arg(a_[1], Word);
	wordObjects::push_arg(a_[2], CustomDictionary);
	wordObjects::push_arg(a_[3], IgnoreUppercase);
	wordObjects::push_arg(a_[4], MainDictionary);
	wordObjects::push_arg(a_[5], CustomDictionary2);
	wordObjects::push_arg(a_[6], CustomDictionary3);
	wordObjects::push_arg(a_[7], CustomDictionary4);
	wordObjects::push_arg(a_[8], CustomDictionary5);
	wordObjects::push_arg(a_[9], CustomDictionary6);
	wordObjects::push_arg(a_[10], CustomDictionary7);
	wordObjects::push_arg(a_[11], CustomDictionary8);
	wordObjects::push_arg(a_[12], CustomDictionary9);
	wordObjects::push_arg(a_[13], CustomDictionary10);
	return Invoke(acMethod, a_, i_, i_);
}

void T_GlobalProxy::GetSpellingSuggestions(TSpellingSuggestionsProxy& Obj, __OCF TAutoString Word, __OCF TAutoVal* CustomDictionary, __OCF TAutoVal* IgnoreUppercase, __OCF TAutoVal* MainDictionary, __OCF TAutoVal* SuggestionMode, __OCF TAutoVal* CustomDictionary2, __OCF TAutoVal* CustomDictionary3, __OCF TAutoVal* CustomDictionary4, __OCF TAutoVal* CustomDictionary5, __OCF TAutoVal* CustomDictionary6, __OCF TAutoVal* CustomDictionary7, __OCF TAutoVal* CustomDictionary8, __OCF TAutoVal* CustomDictionary9, __OCF TAutoVal* CustomDictionary10)
{
	static __OCF TAutoDispId i_(this, 327);
	__OCF TAutoArgs<14> a_;
	wordObjects::push_arg(a_[1], Word);
	wordObjects::push_arg(a_[2], CustomDictionary);
	wordObjects::push_arg(a_[3], IgnoreUppercase);
	wordObjects::push_arg(a_[4], MainDictionary);
	wordObjects::push_arg(a_[5], SuggestionMode);
	wordObjects::push_arg(a_[6], CustomDictionary2);
	wordObjects::push_arg(a_[7], CustomDictionary3);
	wordObjects::push_arg(a_[8], CustomDictionary4);
	wordObjects::push_arg(a_[9], CustomDictionary5);
	wordObjects::push_arg(a_[10], CustomDictionary6);
	wordObjects::push_arg(a_[11], CustomDictionary7);
	wordObjects::push_arg(a_[12], CustomDictionary8);
	wordObjects::push_arg(a_[13], CustomDictionary9);
	wordObjects::push_arg(a_[14], CustomDictionary10);
	Obj.Bind(Invoke(acMethod, a_, i_, i_));
}

void T_GlobalProxy::Help(__OCF TAutoVal* HelpType)
{
	static __OCF TAutoDispId i_(this, 329);
	__OCF TAutoArgs<1> a_;
	wordObjects::push_arg(a_[1], HelpType);
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void T_GlobalProxy::NewWindow(TWindowProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 345);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acMethod, a_, i_, i_));
}

__OCF TAutoString T_GlobalProxy::CleanString(__OCF TAutoString String)
{
	static __OCF TAutoDispId i_(this, 354);
	__OCF TAutoArgs<1> a_;
	wordObjects::push_arg(a_[1], String);
	return Invoke(acMethod, a_, i_, i_);
}

void T_GlobalProxy::ChangeFileOpenDirectory(__OCF TAutoString Path)
{
	static __OCF TAutoDispId i_(this, 355);
	__OCF TAutoArgs<1> a_;
	wordObjects::push_arg(a_[1], Path);
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

float T_GlobalProxy::InchesToPoints(float Inches)
{
	static __OCF TAutoDispId i_(this, 370);
	__OCF TAutoArgs<1> a_;
	wordObjects::push_arg(a_[1], Inches);
	return Invoke(acMethod, a_, i_, i_);
}

float T_GlobalProxy::CentimetersToPoints(float Centimeters)
{
	static __OCF TAutoDispId i_(this, 371);
	__OCF TAutoArgs<1> a_;
	wordObjects::push_arg(a_[1], Centimeters);
	return Invoke(acMethod, a_, i_, i_);
}

float T_GlobalProxy::MillimetersToPoints(float Millimeters)
{
	static __OCF TAutoDispId i_(this, 372);
	__OCF TAutoArgs<1> a_;
	wordObjects::push_arg(a_[1], Millimeters);
	return Invoke(acMethod, a_, i_, i_);
}

float T_GlobalProxy::PicasToPoints(float Picas)
{
	static __OCF TAutoDispId i_(this, 373);
	__OCF TAutoArgs<1> a_;
	wordObjects::push_arg(a_[1], Picas);
	return Invoke(acMethod, a_, i_, i_);
}

float T_GlobalProxy::LinesToPoints(float Lines)
{
	static __OCF TAutoDispId i_(this, 374);
	__OCF TAutoArgs<1> a_;
	wordObjects::push_arg(a_[1], Lines);
	return Invoke(acMethod, a_, i_, i_);
}

float T_GlobalProxy::PointsToInches(float Points)
{
	static __OCF TAutoDispId i_(this, 380);
	__OCF TAutoArgs<1> a_;
	wordObjects::push_arg(a_[1], Points);
	return Invoke(acMethod, a_, i_, i_);
}

float T_GlobalProxy::PointsToCentimeters(float Points)
{
	static __OCF TAutoDispId i_(this, 381);
	__OCF TAutoArgs<1> a_;
	wordObjects::push_arg(a_[1], Points);
	return Invoke(acMethod, a_, i_, i_);
}

float T_GlobalProxy::PointsToMillimeters(float Points)
{
	static __OCF TAutoDispId i_(this, 382);
	__OCF TAutoArgs<1> a_;
	wordObjects::push_arg(a_[1], Points);
	return Invoke(acMethod, a_, i_, i_);
}

float T_GlobalProxy::PointsToPicas(float Points)
{
	static __OCF TAutoDispId i_(this, 383);
	__OCF TAutoArgs<1> a_;
	wordObjects::push_arg(a_[1], Points);
	return Invoke(acMethod, a_, i_, i_);
}

float T_GlobalProxy::PointsToLines(float Points)
{
	static __OCF TAutoDispId i_(this, 384);
	__OCF TAutoArgs<1> a_;
	wordObjects::push_arg(a_[1], Points);
	return Invoke(acMethod, a_, i_, i_);
}

float T_GlobalProxy::PointsToPixels(float Points, __OCF TAutoVal* fVertical)
{
	static __OCF TAutoDispId i_(this, 385);
	__OCF TAutoArgs<2> a_;
	wordObjects::push_arg(a_[1], Points);
	wordObjects::push_arg(a_[2], fVertical);
	return Invoke(acMethod, a_, i_, i_);
}

float T_GlobalProxy::PixelsToPoints(float Pixels, __OCF TAutoVal* fVertical)
{
	static __OCF TAutoDispId i_(this, 386);
	__OCF TAutoArgs<2> a_;
	wordObjects::push_arg(a_[1], Pixels);
	wordObjects::push_arg(a_[2], fVertical);
	return Invoke(acMethod, a_, i_, i_);
}

void T_GlobalProxy::_LanguageSettings(TLanguageSettingsProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 111);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

void T_GlobalProxy::_AnswerWizard(TAnswerWizardProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 112);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

void T_GlobalProxy::AutoCorrectEmail(TAutoCorrectProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 113);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

WordApplication* T_ApplicationProxy::_Application()
{
	static __OCF TAutoDispId i_(this, 1000);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

long T_ApplicationProxy::Creator()
{
	static __OCF TAutoDispId i_(this, 1001);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

IDispatch* T_ApplicationProxy::Parent()
{
	static __OCF TAutoDispId i_(this, 1002);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

__OCF TAutoString T_ApplicationProxy::Name()
{
	static __OCF TAutoDispId i_(this, (long)0);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

void T_ApplicationProxy::_Documents(TDocumentsProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 6);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

void T_ApplicationProxy::_GetWindows(TWindowsProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 2);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

T_DocumentProxy* T_ApplicationProxy::ActiveDocument()
{
	static __OCF TAutoDispId i_(this, 3);
	__OCF TAutoArgs<0> a_;

  // Modified PA
  //
	TAutoVal document = Invoke(acPropGet, a_, i_, i_);

  T_DocumentProxy *pResult = new T_DocumentProxy() ;
  pResult->Bind(document) ;
  return pResult ;
}

void T_ApplicationProxy::ActiveWindow(TWindowProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 4);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

void T_ApplicationProxy::_Selection(TSelectionProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 5);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

IDispatch* T_ApplicationProxy::WordBasic()
{
	static __OCF TAutoDispId i_(this, 1);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

void T_ApplicationProxy::_RecentFiles(TRecentFilesProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 7);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

void T_ApplicationProxy::NormalTemplate(TTemplateProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 8);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

void T_ApplicationProxy::_System(TSystemProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 9);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

void T_ApplicationProxy::_AutoCorrect(TAutoCorrectProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 10);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

void T_ApplicationProxy::_FontNames(TFontNamesProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 11);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

void T_ApplicationProxy::LandscapeFontNames(TFontNamesProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 12);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

void T_ApplicationProxy::PortraitFontNames(TFontNamesProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 13);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

void T_ApplicationProxy::_Languages(TLanguagesProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 14);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

void T_ApplicationProxy::_Assistant(TAssistantProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 15);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

void T_ApplicationProxy::_Browser(TBrowserProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 16);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

void T_ApplicationProxy::_FileConverters(TFileConvertersProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 17);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

void T_ApplicationProxy::_MailingLabel(TMailingLabelProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 18);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

void T_ApplicationProxy::_Dialogs(TDialogsProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 19);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

void T_ApplicationProxy::_CaptionLabels(TCaptionLabelsProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 20);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

void T_ApplicationProxy::_AutoCaptions(TAutoCaptionsProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 21);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

void T_ApplicationProxy::_AddIns(TAddInsProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 22);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

/*__OWL*/ TBool T_ApplicationProxy::Visible()
{
	static __OCF TAutoDispId i_(this, 23);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

void T_ApplicationProxy::Visible(/*__OWL*/ TBool arg0)
{
	static __OCF TAutoDispId i_(this, 23);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

/*__OCF*/ TString T_ApplicationProxy::Version()
{
	static __OCF TAutoDispId i_(this, 24);
	__OCF TAutoArgs<0> a_;
	// return Invoke(acPropGet, a_, i_, i_);

  // Modified PA
  //
  TAutoVal text = Invoke(acPropGet, a_, i_, i_);
  return text.StrVal(); ;
}

/*__OWL*/ TBool T_ApplicationProxy::ScreenUpdating()
{
	static __OCF TAutoDispId i_(this, 26);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

void T_ApplicationProxy::ScreenUpdating(/*__OWL*/ TBool arg0)
{
	static __OCF TAutoDispId i_(this, 26);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

/*__OWL*/ TBool T_ApplicationProxy::PrintPreview()
{
	static __OCF TAutoDispId i_(this, 27);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

void T_ApplicationProxy::PrintPreview(/*__OWL*/ TBool arg0)
{
	static __OCF TAutoDispId i_(this, 27);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

void T_ApplicationProxy::_Tasks(TTasksProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 28);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

/*__OWL*/ TBool T_ApplicationProxy::DisplayStatusBar()
{
	static __OCF TAutoDispId i_(this, 29);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

void T_ApplicationProxy::DisplayStatusBar(/*__OWL*/ TBool arg0)
{
	static __OCF TAutoDispId i_(this, 29);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

/*__OWL*/ TBool T_ApplicationProxy::SpecialMode()
{
	static __OCF TAutoDispId i_(this, 30);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

long T_ApplicationProxy::UsableWidth()
{
	static __OCF TAutoDispId i_(this, 33);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

long T_ApplicationProxy::UsableHeight()
{
	static __OCF TAutoDispId i_(this, 34);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

/*__OWL*/ TBool T_ApplicationProxy::MathCoprocessorAvailable()
{
	static __OCF TAutoDispId i_(this, 36);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

/*__OWL*/ TBool T_ApplicationProxy::MouseAvailable()
{
	static __OCF TAutoDispId i_(this, 37);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

__OCF TAutoVal T_ApplicationProxy::International(WdInternationalIndex Index)
{
	static __OCF TAutoDispId i_(this, 46);
	__OCF TAutoArgs<1> a_;
	wordObjects::push_arg(a_[1], Index);
	return Invoke(acPropGet, a_, i_, i_);
}

__OCF TAutoString T_ApplicationProxy::Build()
{
	static __OCF TAutoDispId i_(this, 47);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

/*__OWL*/ TBool T_ApplicationProxy::CapsLock()
{
	static __OCF TAutoDispId i_(this, 48);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

/*__OWL*/ TBool T_ApplicationProxy::NumLock()
{
	static __OCF TAutoDispId i_(this, 49);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

__OCF TAutoString T_ApplicationProxy::UserName()
{
	static __OCF TAutoDispId i_(this, 52);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

void T_ApplicationProxy::UserName(__OCF TAutoString arg0)
{
	static __OCF TAutoDispId i_(this, 52);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

__OCF TAutoString T_ApplicationProxy::UserInitials()
{
	static __OCF TAutoDispId i_(this, 53);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

void T_ApplicationProxy::UserInitials(__OCF TAutoString arg0)
{
	static __OCF TAutoDispId i_(this, 53);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

__OCF TAutoString T_ApplicationProxy::UserAddress()
{
	static __OCF TAutoDispId i_(this, 54);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

void T_ApplicationProxy::UserAddress(__OCF TAutoString arg0)
{
	static __OCF TAutoDispId i_(this, 54);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

IDispatch* T_ApplicationProxy::MacroContainer()
{
	static __OCF TAutoDispId i_(this, 55);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

/*__OWL*/ TBool T_ApplicationProxy::DisplayRecentFiles()
{
	static __OCF TAutoDispId i_(this, 56);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

void T_ApplicationProxy::DisplayRecentFiles(/*__OWL*/ TBool arg0)
{
	static __OCF TAutoDispId i_(this, 56);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

CommandBars* T_ApplicationProxy::_CommandBars()
{
	static __OCF TAutoDispId i_(this, 57);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

void T_ApplicationProxy::_SynonymInfo(TSynonymInfoProxy& Obj, __OCF TAutoString Word, __OCF TAutoVal* LanguageID)
{
	static __OCF TAutoDispId i_(this, 59);
	__OCF TAutoArgs<2> a_;
	wordObjects::push_arg(a_[1], Word);
	wordObjects::push_arg(a_[2], LanguageID);
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

void T_ApplicationProxy::_VBE(TVBEProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 61);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

__OCF TAutoString T_ApplicationProxy::DefaultSaveFormat()
{
	static __OCF TAutoDispId i_(this, 64);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

void T_ApplicationProxy::DefaultSaveFormat(__OCF TAutoString arg0)
{
	static __OCF TAutoDispId i_(this, 64);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

void T_ApplicationProxy::_ListGalleries(TListGalleriesProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 65);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

__OCF TAutoString T_ApplicationProxy::ActivePrinter()
{
	static __OCF TAutoDispId i_(this, 66);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

void T_ApplicationProxy::ActivePrinter(__OCF TAutoString arg0)
{
	static __OCF TAutoDispId i_(this, 66);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

void T_ApplicationProxy::_Templates(TTemplatesProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 67);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

IDispatch* T_ApplicationProxy::CustomizationContext()
{
	static __OCF TAutoDispId i_(this, 68);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

void T_ApplicationProxy::CustomizationContext(IDispatch* arg0)
{
	static __OCF TAutoDispId i_(this, 68);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

void T_ApplicationProxy::_KeyBindings(TKeyBindingsProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 69);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

void T_ApplicationProxy::_KeysBoundTo(TKeysBoundToProxy& Obj, WdKeyCategory KeyCategory, __OCF TAutoString Command, __OCF TAutoVal* CommandParameter)
{
	static __OCF TAutoDispId i_(this, 70);
	__OCF TAutoArgs<3> a_;
	wordObjects::push_arg(a_[1], KeyCategory);
	wordObjects::push_arg(a_[2], Command);
	wordObjects::push_arg(a_[3], CommandParameter);
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

void T_ApplicationProxy::FindKey(TKeyBindingProxy& Obj, long KeyCode, __OCF TAutoVal* KeyCode2)
{
	static __OCF TAutoDispId i_(this, 71);
	__OCF TAutoArgs<2> a_;
	wordObjects::push_arg(a_[1], KeyCode);
	wordObjects::push_arg(a_[2], KeyCode2);
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

__OCF TAutoString T_ApplicationProxy::Caption()
{
	static __OCF TAutoDispId i_(this, 80);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

void T_ApplicationProxy::Caption(__OCF TAutoString arg0)
{
	static __OCF TAutoDispId i_(this, 80);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

__OCF TAutoString T_ApplicationProxy::Path()
{
	static __OCF TAutoDispId i_(this, 81);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

/*__OWL*/ TBool T_ApplicationProxy::DisplayScrollBars()
{
	static __OCF TAutoDispId i_(this, 82);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

void T_ApplicationProxy::DisplayScrollBars(/*__OWL*/ TBool arg0)
{
	static __OCF TAutoDispId i_(this, 82);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

__OCF TAutoString T_ApplicationProxy::StartupPath()
{
	static __OCF TAutoDispId i_(this, 83);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

void T_ApplicationProxy::StartupPath(__OCF TAutoString arg0)
{
	static __OCF TAutoDispId i_(this, 83);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

long T_ApplicationProxy::BackgroundSavingStatus()
{
	static __OCF TAutoDispId i_(this, 85);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

long T_ApplicationProxy::BackgroundPrintingStatus()
{
	static __OCF TAutoDispId i_(this, 86);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

long T_ApplicationProxy::Left()
{
	static __OCF TAutoDispId i_(this, 87);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

void T_ApplicationProxy::Left(long arg0)
{
	static __OCF TAutoDispId i_(this, 87);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

long T_ApplicationProxy::Top()
{
	static __OCF TAutoDispId i_(this, 88);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

void T_ApplicationProxy::Top(long arg0)
{
	static __OCF TAutoDispId i_(this, 88);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

long T_ApplicationProxy::Width()
{
	static __OCF TAutoDispId i_(this, 89);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

void T_ApplicationProxy::Width(long arg0)
{
	static __OCF TAutoDispId i_(this, 89);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

long T_ApplicationProxy::Height()
{
	static __OCF TAutoDispId i_(this, 90);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

void T_ApplicationProxy::Height(long arg0)
{
	static __OCF TAutoDispId i_(this, 90);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

WdWindowState T_ApplicationProxy::WindowState()
{
	static __OCF TAutoDispId i_(this, 91);
	__OCF TAutoArgs<0> a_;
	return (WdWindowState)(int)Invoke(acPropGet, a_, i_, i_);
}

void T_ApplicationProxy::WindowState(WdWindowState arg0)
{
	static __OCF TAutoDispId i_(this, 91);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

/*__OWL*/ TBool T_ApplicationProxy::DisplayAutoCompleteTips()
{
	static __OCF TAutoDispId i_(this, 92);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

void T_ApplicationProxy::DisplayAutoCompleteTips(/*__OWL*/ TBool arg0)
{
	static __OCF TAutoDispId i_(this, 92);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

void T_ApplicationProxy::_Options(TOptionsProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 93);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

WdAlertLevel T_ApplicationProxy::DisplayAlerts()
{
	static __OCF TAutoDispId i_(this, 94);
	__OCF TAutoArgs<0> a_;
	return (WdAlertLevel)(int)Invoke(acPropGet, a_, i_, i_);
}

void T_ApplicationProxy::DisplayAlerts(WdAlertLevel arg0)
{
	static __OCF TAutoDispId i_(this, 94);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

void T_ApplicationProxy::CustomDictionaries(TDictionariesProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 95);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

__OCF TAutoString T_ApplicationProxy::PathSeparator()
{
	static __OCF TAutoDispId i_(this, 96);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

void T_ApplicationProxy::StatusBar(__OCF TAutoString arg0)
{
	static __OCF TAutoDispId i_(this, 97);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

/*__OWL*/ TBool T_ApplicationProxy::MAPIAvailable()
{
	static __OCF TAutoDispId i_(this, 98);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

/*__OWL*/ TBool T_ApplicationProxy::DisplayScreenTips()
{
	static __OCF TAutoDispId i_(this, 99);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

void T_ApplicationProxy::DisplayScreenTips(/*__OWL*/ TBool arg0)
{
	static __OCF TAutoDispId i_(this, 99);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

WdEnableCancelKey T_ApplicationProxy::EnableCancelKey()
{
	static __OCF TAutoDispId i_(this, 100);
	__OCF TAutoArgs<0> a_;
	return (WdEnableCancelKey)(int)Invoke(acPropGet, a_, i_, i_);
}

void T_ApplicationProxy::EnableCancelKey(WdEnableCancelKey arg0)
{
	static __OCF TAutoDispId i_(this, 100);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

/*__OWL*/ TBool T_ApplicationProxy::UserControl()
{
	static __OCF TAutoDispId i_(this, 101);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

void T_ApplicationProxy::_FileSearch(TFileSearchProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 103);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

WdMailSystem T_ApplicationProxy::MailSystem()
{
	static __OCF TAutoDispId i_(this, 104);
	__OCF TAutoArgs<0> a_;
	return (WdMailSystem)(int)Invoke(acPropGet, a_, i_, i_);
}

__OCF TAutoString T_ApplicationProxy::DefaultTableSeparator()
{
	static __OCF TAutoDispId i_(this, 105);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

void T_ApplicationProxy::DefaultTableSeparator(__OCF TAutoString arg0)
{
	static __OCF TAutoDispId i_(this, 105);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

/*__OWL*/ TBool T_ApplicationProxy::ShowVisualBasicEditor()
{
	static __OCF TAutoDispId i_(this, 106);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

void T_ApplicationProxy::ShowVisualBasicEditor(/*__OWL*/ TBool arg0)
{
	static __OCF TAutoDispId i_(this, 106);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

__OCF TAutoString T_ApplicationProxy::BrowseExtraFileTypes()
{
	static __OCF TAutoDispId i_(this, 108);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

void T_ApplicationProxy::BrowseExtraFileTypes(__OCF TAutoString arg0)
{
	static __OCF TAutoDispId i_(this, 108);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

/*__OWL*/ TBool T_ApplicationProxy::IsObjectValid(IDispatch* Object)
{
	static __OCF TAutoDispId i_(this, 109);
	__OCF TAutoArgs<1> a_;
	wordObjects::push_arg(a_[1], Object);
	return Invoke(acPropGet, a_, i_, i_);
}

void T_ApplicationProxy::HangulHanjaDictionaries(THangulHanjaConversionDictionariesProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 110);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

void T_ApplicationProxy::_MailMessage(TMailMessageProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 348);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

/*__OWL*/ TBool T_ApplicationProxy::FocusInMailHeader()
{
	static __OCF TAutoDispId i_(this, 386);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

void T_ApplicationProxy::Quit(__OCF TAutoVal* SaveChanges, __OCF TAutoVal* OriginalFormat, __OCF TAutoVal* RouteDocument)
{
	static __OCF TAutoDispId i_(this, 1105);
	__OCF TAutoArgs<3> a_;
	wordObjects::push_arg(a_[1], SaveChanges);
	wordObjects::push_arg(a_[2], OriginalFormat);
	wordObjects::push_arg(a_[3], RouteDocument);
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void T_ApplicationProxy::ScreenRefresh()
{
	static __OCF TAutoDispId i_(this, 301);
	__OCF TAutoArgs<0> a_;
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void T_ApplicationProxy::PrintOutOld(__OCF TAutoVal* Background, __OCF TAutoVal* Append, __OCF TAutoVal* Range, __OCF TAutoVal* OutputFileName, __OCF TAutoVal* From, __OCF TAutoVal* To, __OCF TAutoVal* Item, __OCF TAutoVal* Copies, __OCF TAutoVal* Pages, __OCF TAutoVal* PageType, __OCF TAutoVal* PrintToFile, __OCF TAutoVal* Collate, __OCF TAutoVal* FileName, __OCF TAutoVal* ActivePrinterMacGX, __OCF TAutoVal* ManualDuplexPrint)
{
	static __OCF TAutoDispId i_(this, 302);
	__OCF TAutoArgs<15> a_;
	wordObjects::push_arg(a_[1], Background);
	wordObjects::push_arg(a_[2], Append);
	wordObjects::push_arg(a_[3], Range);
	wordObjects::push_arg(a_[4], OutputFileName);
	wordObjects::push_arg(a_[5], From);
	wordObjects::push_arg(a_[6], To);
	wordObjects::push_arg(a_[7], Item);
	wordObjects::push_arg(a_[8], Copies);
	wordObjects::push_arg(a_[9], Pages);
	wordObjects::push_arg(a_[10], PageType);
	wordObjects::push_arg(a_[11], PrintToFile);
	wordObjects::push_arg(a_[12], Collate);
	wordObjects::push_arg(a_[13], FileName);
	wordObjects::push_arg(a_[14], ActivePrinterMacGX);
	wordObjects::push_arg(a_[15], ManualDuplexPrint);
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void T_ApplicationProxy::LookupNameProperties(__OCF TAutoString Name)
{
	static __OCF TAutoDispId i_(this, 303);
	__OCF TAutoArgs<1> a_;
	wordObjects::push_arg(a_[1], Name);
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void T_ApplicationProxy::SubstituteFont(__OCF TAutoString UnavailableFont, __OCF TAutoString SubstituteFont)
{
	static __OCF TAutoDispId i_(this, 304);
	__OCF TAutoArgs<2> a_;
	wordObjects::push_arg(a_[1], UnavailableFont);
	wordObjects::push_arg(a_[2], SubstituteFont);
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

/*__OWL*/ TBool T_ApplicationProxy::Repeat(__OCF TAutoVal* Times)
{
	static __OCF TAutoDispId i_(this, 305);
	__OCF TAutoArgs<1> a_;
	wordObjects::push_arg(a_[1], Times);
	return Invoke(acMethod, a_, i_, i_);
}

void T_ApplicationProxy::DDEExecute(long Channel, __OCF TAutoString Command)
{
	static __OCF TAutoDispId i_(this, 310);
	__OCF TAutoArgs<2> a_;
	wordObjects::push_arg(a_[1], Channel);
	wordObjects::push_arg(a_[2], Command);
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

long T_ApplicationProxy::DDEInitiate(__OCF TAutoString App, __OCF TAutoString Topic)
{
	static __OCF TAutoDispId i_(this, 311);
	__OCF TAutoArgs<2> a_;
	wordObjects::push_arg(a_[1], App);
	wordObjects::push_arg(a_[2], Topic);
	return Invoke(acMethod, a_, i_, i_);
}

void T_ApplicationProxy::DDEPoke(long Channel, __OCF TAutoString Item, __OCF TAutoString Data)
{
	static __OCF TAutoDispId i_(this, 312);
	__OCF TAutoArgs<3> a_;
	wordObjects::push_arg(a_[1], Channel);
	wordObjects::push_arg(a_[2], Item);
	wordObjects::push_arg(a_[3], Data);
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

__OCF TAutoString T_ApplicationProxy::DDERequest(long Channel, __OCF TAutoString Item)
{
	static __OCF TAutoDispId i_(this, 313);
	__OCF TAutoArgs<2> a_;
	wordObjects::push_arg(a_[1], Channel);
	wordObjects::push_arg(a_[2], Item);
	return Invoke(acMethod, a_, i_, i_);
}

void T_ApplicationProxy::DDETerminate(long Channel)
{
	static __OCF TAutoDispId i_(this, 314);
	__OCF TAutoArgs<1> a_;
	wordObjects::push_arg(a_[1], Channel);
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void T_ApplicationProxy::DDETerminateAll()
{
	static __OCF TAutoDispId i_(this, 315);
	__OCF TAutoArgs<0> a_;
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

long T_ApplicationProxy::BuildKeyCode(WdKey Arg1, __OCF TAutoVal* Arg2, __OCF TAutoVal* Arg3, __OCF TAutoVal* Arg4)
{
	static __OCF TAutoDispId i_(this, 316);
	__OCF TAutoArgs<4> a_;
	wordObjects::push_arg(a_[1], Arg1);
	wordObjects::push_arg(a_[2], Arg2);
	wordObjects::push_arg(a_[3], Arg3);
	wordObjects::push_arg(a_[4], Arg4);
	return Invoke(acMethod, a_, i_, i_);
}

__OCF TAutoString T_ApplicationProxy::KeyString(long KeyCode, __OCF TAutoVal* KeyCode2)
{
	static __OCF TAutoDispId i_(this, 317);
	__OCF TAutoArgs<2> a_;
	wordObjects::push_arg(a_[1], KeyCode);
	wordObjects::push_arg(a_[2], KeyCode2);
	return Invoke(acMethod, a_, i_, i_);
}

void T_ApplicationProxy::OrganizerCopy(__OCF TAutoString Source, __OCF TAutoString Destination, __OCF TAutoString Name, WdOrganizerObject Object)
{
	static __OCF TAutoDispId i_(this, 318);
	__OCF TAutoArgs<4> a_;
	wordObjects::push_arg(a_[1], Source);
	wordObjects::push_arg(a_[2], Destination);
	wordObjects::push_arg(a_[3], Name);
	wordObjects::push_arg(a_[4], Object);
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void T_ApplicationProxy::OrganizerDelete(__OCF TAutoString Source, __OCF TAutoString Name, WdOrganizerObject Object)
{
	static __OCF TAutoDispId i_(this, 319);
	__OCF TAutoArgs<3> a_;
	wordObjects::push_arg(a_[1], Source);
	wordObjects::push_arg(a_[2], Name);
	wordObjects::push_arg(a_[3], Object);
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void T_ApplicationProxy::OrganizerRename(__OCF TAutoString Source, __OCF TAutoString Name, __OCF TAutoString NewName, WdOrganizerObject Object)
{
	static __OCF TAutoDispId i_(this, 320);
	__OCF TAutoArgs<4> a_;
	wordObjects::push_arg(a_[1], Source);
	wordObjects::push_arg(a_[2], Name);
	wordObjects::push_arg(a_[3], NewName);
	wordObjects::push_arg(a_[4], Object);
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void T_ApplicationProxy::AddAddress(wordObjects::SafeArray<__OCF TAutoString>* TagID, wordObjects::SafeArray<__OCF TAutoString>* Value)
{
	static __OCF TAutoDispId i_(this, 321);
	__OCF TAutoArgs<2> a_;
	wordObjects::push_arg(a_[1], static_cast<wordObjects::SafeArrayBase*>(TagID));
	wordObjects::push_arg(a_[2], static_cast<wordObjects::SafeArrayBase*>(Value));
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

__OCF TAutoString T_ApplicationProxy::GetAddress(__OCF TAutoVal* Name, __OCF TAutoVal* AddressProperties, __OCF TAutoVal* UseAutoText, __OCF TAutoVal* DisplaySelectDialog, __OCF TAutoVal* SelectDialog, __OCF TAutoVal* CheckNamesDialog, __OCF TAutoVal* RecentAddressesChoice, __OCF TAutoVal* UpdateRecentAddresses)
{
	static __OCF TAutoDispId i_(this, 322);
	__OCF TAutoArgs<8> a_;
	wordObjects::push_arg(a_[1], Name);
	wordObjects::push_arg(a_[2], AddressProperties);
	wordObjects::push_arg(a_[3], UseAutoText);
	wordObjects::push_arg(a_[4], DisplaySelectDialog);
	wordObjects::push_arg(a_[5], SelectDialog);
	wordObjects::push_arg(a_[6], CheckNamesDialog);
	wordObjects::push_arg(a_[7], RecentAddressesChoice);
	wordObjects::push_arg(a_[8], UpdateRecentAddresses);
	return Invoke(acMethod, a_, i_, i_);
}

/*__OWL*/ TBool T_ApplicationProxy::CheckGrammar(__OCF TAutoString String)
{
	static __OCF TAutoDispId i_(this, 323);
	__OCF TAutoArgs<1> a_;
	wordObjects::push_arg(a_[1], String);
	return Invoke(acMethod, a_, i_, i_);
}

/*__OWL*/ TBool T_ApplicationProxy::CheckSpelling(__OCF TAutoString Word, __OCF TAutoVal* CustomDictionary, __OCF TAutoVal* IgnoreUppercase, __OCF TAutoVal* MainDictionary, __OCF TAutoVal* CustomDictionary2, __OCF TAutoVal* CustomDictionary3, __OCF TAutoVal* CustomDictionary4, __OCF TAutoVal* CustomDictionary5, __OCF TAutoVal* CustomDictionary6, __OCF TAutoVal* CustomDictionary7, __OCF TAutoVal* CustomDictionary8, __OCF TAutoVal* CustomDictionary9, __OCF TAutoVal* CustomDictionary10)
{
	static __OCF TAutoDispId i_(this, 324);
	__OCF TAutoArgs<13> a_;
	wordObjects::push_arg(a_[1], Word);
	wordObjects::push_arg(a_[2], CustomDictionary);
	wordObjects::push_arg(a_[3], IgnoreUppercase);
	wordObjects::push_arg(a_[4], MainDictionary);
	wordObjects::push_arg(a_[5], CustomDictionary2);
	wordObjects::push_arg(a_[6], CustomDictionary3);
	wordObjects::push_arg(a_[7], CustomDictionary4);
	wordObjects::push_arg(a_[8], CustomDictionary5);
	wordObjects::push_arg(a_[9], CustomDictionary6);
	wordObjects::push_arg(a_[10], CustomDictionary7);
	wordObjects::push_arg(a_[11], CustomDictionary8);
	wordObjects::push_arg(a_[12], CustomDictionary9);
	wordObjects::push_arg(a_[13], CustomDictionary10);
	return Invoke(acMethod, a_, i_, i_);
}

void T_ApplicationProxy::ResetIgnoreAll()
{
	static __OCF TAutoDispId i_(this, 326);
	__OCF TAutoArgs<0> a_;
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void T_ApplicationProxy::GetSpellingSuggestions(TSpellingSuggestionsProxy& Obj, __OCF TAutoString Word, __OCF TAutoVal* CustomDictionary, __OCF TAutoVal* IgnoreUppercase, __OCF TAutoVal* MainDictionary, __OCF TAutoVal* SuggestionMode, __OCF TAutoVal* CustomDictionary2, __OCF TAutoVal* CustomDictionary3, __OCF TAutoVal* CustomDictionary4, __OCF TAutoVal* CustomDictionary5, __OCF TAutoVal* CustomDictionary6, __OCF TAutoVal* CustomDictionary7, __OCF TAutoVal* CustomDictionary8, __OCF TAutoVal* CustomDictionary9, __OCF TAutoVal* CustomDictionary10)
{
	static __OCF TAutoDispId i_(this, 327);
	__OCF TAutoArgs<14> a_;
	wordObjects::push_arg(a_[1], Word);
	wordObjects::push_arg(a_[2], CustomDictionary);
	wordObjects::push_arg(a_[3], IgnoreUppercase);
	wordObjects::push_arg(a_[4], MainDictionary);
	wordObjects::push_arg(a_[5], SuggestionMode);
	wordObjects::push_arg(a_[6], CustomDictionary2);
	wordObjects::push_arg(a_[7], CustomDictionary3);
	wordObjects::push_arg(a_[8], CustomDictionary4);
	wordObjects::push_arg(a_[9], CustomDictionary5);
	wordObjects::push_arg(a_[10], CustomDictionary6);
	wordObjects::push_arg(a_[11], CustomDictionary7);
	wordObjects::push_arg(a_[12], CustomDictionary8);
	wordObjects::push_arg(a_[13], CustomDictionary9);
	wordObjects::push_arg(a_[14], CustomDictionary10);
	Obj.Bind(Invoke(acMethod, a_, i_, i_));
}

void T_ApplicationProxy::GoBack()
{
	static __OCF TAutoDispId i_(this, 328);
	__OCF TAutoArgs<0> a_;
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void T_ApplicationProxy::Help(__OCF TAutoVal* HelpType)
{
	static __OCF TAutoDispId i_(this, 329);
	__OCF TAutoArgs<1> a_;
	wordObjects::push_arg(a_[1], HelpType);
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void T_ApplicationProxy::AutomaticChange()
{
	static __OCF TAutoDispId i_(this, 330);
	__OCF TAutoArgs<0> a_;
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void T_ApplicationProxy::ShowMe()
{
	static __OCF TAutoDispId i_(this, 331);
	__OCF TAutoArgs<0> a_;
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void T_ApplicationProxy::HelpTool()
{
	static __OCF TAutoDispId i_(this, 332);
	__OCF TAutoArgs<0> a_;
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void T_ApplicationProxy::NewWindow(TWindowProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 345);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acMethod, a_, i_, i_));
}

void T_ApplicationProxy::ListCommands(/*__OWL*/ TBool ListAllCommands)
{
	static __OCF TAutoDispId i_(this, 346);
	__OCF TAutoArgs<1> a_;
	wordObjects::push_arg(a_[1], ListAllCommands);
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void T_ApplicationProxy::ShowClipboard()
{
	static __OCF TAutoDispId i_(this, 349);
	__OCF TAutoArgs<0> a_;
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void T_ApplicationProxy::OnTime(__OCF TAutoVal* When, __OCF TAutoString Name, __OCF TAutoVal* Tolerance)
{
	static __OCF TAutoDispId i_(this, 350);
	__OCF TAutoArgs<3> a_;
	wordObjects::push_arg(a_[1], When);
	wordObjects::push_arg(a_[2], Name);
	wordObjects::push_arg(a_[3], Tolerance);
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void T_ApplicationProxy::NextLetter()
{
	static __OCF TAutoDispId i_(this, 351);
	__OCF TAutoArgs<0> a_;
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

short T_ApplicationProxy::MountVolume(__OCF TAutoString Zone, __OCF TAutoString Server, __OCF TAutoString Volume, __OCF TAutoVal* User, __OCF TAutoVal* UserPassword, __OCF TAutoVal* VolumePassword)
{
	static __OCF TAutoDispId i_(this, 353);
	__OCF TAutoArgs<6> a_;
	wordObjects::push_arg(a_[1], Zone);
	wordObjects::push_arg(a_[2], Server);
	wordObjects::push_arg(a_[3], Volume);
	wordObjects::push_arg(a_[4], User);
	wordObjects::push_arg(a_[5], UserPassword);
	wordObjects::push_arg(a_[6], VolumePassword);
	return Invoke(acMethod, a_, i_, i_);
}

__OCF TAutoString T_ApplicationProxy::CleanString(__OCF TAutoString String)
{
	static __OCF TAutoDispId i_(this, 354);
	__OCF TAutoArgs<1> a_;
	wordObjects::push_arg(a_[1], String);
	return Invoke(acMethod, a_, i_, i_);
}

void T_ApplicationProxy::SendFax()
{
	static __OCF TAutoDispId i_(this, 356);
	__OCF TAutoArgs<0> a_;
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void T_ApplicationProxy::ChangeFileOpenDirectory(__OCF TAutoString Path)
{
	static __OCF TAutoDispId i_(this, 357);
	__OCF TAutoArgs<1> a_;
	wordObjects::push_arg(a_[1], Path);
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void T_ApplicationProxy::RunOld(__OCF TAutoString MacroName)
{
	static __OCF TAutoDispId i_(this, 358);
	__OCF TAutoArgs<1> a_;
	wordObjects::push_arg(a_[1], MacroName);
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void T_ApplicationProxy::GoForward()
{
	static __OCF TAutoDispId i_(this, 359);
	__OCF TAutoArgs<0> a_;
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void T_ApplicationProxy::Move(long Left, long Top)
{
	static __OCF TAutoDispId i_(this, 360);
	__OCF TAutoArgs<2> a_;
	wordObjects::push_arg(a_[1], Left);
	wordObjects::push_arg(a_[2], Top);
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void T_ApplicationProxy::Resize(long Width, long Height)
{
	static __OCF TAutoDispId i_(this, 361);
	__OCF TAutoArgs<2> a_;
	wordObjects::push_arg(a_[1], Width);
	wordObjects::push_arg(a_[2], Height);
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

float T_ApplicationProxy::InchesToPoints(float Inches)
{
	static __OCF TAutoDispId i_(this, 370);
	__OCF TAutoArgs<1> a_;
	wordObjects::push_arg(a_[1], Inches);
	return Invoke(acMethod, a_, i_, i_);
}

float T_ApplicationProxy::CentimetersToPoints(float Centimeters)
{
	static __OCF TAutoDispId i_(this, 371);
	__OCF TAutoArgs<1> a_;
	wordObjects::push_arg(a_[1], Centimeters);
	return Invoke(acMethod, a_, i_, i_);
}

float T_ApplicationProxy::MillimetersToPoints(float Millimeters)
{
	static __OCF TAutoDispId i_(this, 372);
	__OCF TAutoArgs<1> a_;
	wordObjects::push_arg(a_[1], Millimeters);
	return Invoke(acMethod, a_, i_, i_);
}

float T_ApplicationProxy::PicasToPoints(float Picas)
{
	static __OCF TAutoDispId i_(this, 373);
	__OCF TAutoArgs<1> a_;
	wordObjects::push_arg(a_[1], Picas);
	return Invoke(acMethod, a_, i_, i_);
}

float T_ApplicationProxy::LinesToPoints(float Lines)
{
	static __OCF TAutoDispId i_(this, 374);
	__OCF TAutoArgs<1> a_;
	wordObjects::push_arg(a_[1], Lines);
	return Invoke(acMethod, a_, i_, i_);
}

float T_ApplicationProxy::PointsToInches(float Points)
{
	static __OCF TAutoDispId i_(this, 380);
	__OCF TAutoArgs<1> a_;
	wordObjects::push_arg(a_[1], Points);
	return Invoke(acMethod, a_, i_, i_);
}

float T_ApplicationProxy::PointsToCentimeters(float Points)
{
	static __OCF TAutoDispId i_(this, 381);
	__OCF TAutoArgs<1> a_;
	wordObjects::push_arg(a_[1], Points);
	return Invoke(acMethod, a_, i_, i_);
}

float T_ApplicationProxy::PointsToMillimeters(float Points)
{
	static __OCF TAutoDispId i_(this, 382);
	__OCF TAutoArgs<1> a_;
	wordObjects::push_arg(a_[1], Points);
	return Invoke(acMethod, a_, i_, i_);
}

float T_ApplicationProxy::PointsToPicas(float Points)
{
	static __OCF TAutoDispId i_(this, 383);
	__OCF TAutoArgs<1> a_;
	wordObjects::push_arg(a_[1], Points);
	return Invoke(acMethod, a_, i_, i_);
}

float T_ApplicationProxy::PointsToLines(float Points)
{
	static __OCF TAutoDispId i_(this, 384);
	__OCF TAutoArgs<1> a_;
	wordObjects::push_arg(a_[1], Points);
	return Invoke(acMethod, a_, i_, i_);
}

void T_ApplicationProxy::Activate()
{
	static __OCF TAutoDispId i_(this, 385);
	__OCF TAutoArgs<0> a_;
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

float T_ApplicationProxy::PointsToPixels(float Points, __OCF TAutoVal* fVertical)
{
	static __OCF TAutoDispId i_(this, 387);
	__OCF TAutoArgs<2> a_;
	wordObjects::push_arg(a_[1], Points);
	wordObjects::push_arg(a_[2], fVertical);
	return Invoke(acMethod, a_, i_, i_);
}

float T_ApplicationProxy::PixelsToPoints(float Pixels, __OCF TAutoVal* fVertical)
{
	static __OCF TAutoDispId i_(this, 388);
	__OCF TAutoArgs<2> a_;
	wordObjects::push_arg(a_[1], Pixels);
	wordObjects::push_arg(a_[2], fVertical);
	return Invoke(acMethod, a_, i_, i_);
}

void T_ApplicationProxy::KeyboardLatin()
{
	static __OCF TAutoDispId i_(this, 400);
	__OCF TAutoArgs<0> a_;
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void T_ApplicationProxy::KeyboardBidi()
{
	static __OCF TAutoDispId i_(this, 401);
	__OCF TAutoArgs<0> a_;
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void T_ApplicationProxy::ToggleKeyboard()
{
	static __OCF TAutoDispId i_(this, 402);
	__OCF TAutoArgs<0> a_;
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

long T_ApplicationProxy::Keyboard(long LangId)
{
	static __OCF TAutoDispId i_(this, 446);
	__OCF TAutoArgs<1> a_;
	wordObjects::push_arg(a_[1], LangId);
	return Invoke(acMethod, a_, i_, i_);
}

__OCF TAutoString T_ApplicationProxy::ProductCode()
{
	static __OCF TAutoDispId i_(this, 404);
	__OCF TAutoArgs<0> a_;
	return Invoke(acMethod, a_, i_, i_);
}

void T_ApplicationProxy::_DefaultWebOptions(TDefaultWebOptionsProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 405);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acMethod, a_, i_, i_));
}

void T_ApplicationProxy::DiscussionSupport(__OCF TAutoVal* Range, __OCF TAutoVal* cid, __OCF TAutoVal* piCSE)
{
	static __OCF TAutoDispId i_(this, 407);
	__OCF TAutoArgs<3> a_;
	wordObjects::push_arg(a_[1], Range);
	wordObjects::push_arg(a_[2], cid);
	wordObjects::push_arg(a_[3], piCSE);
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void T_ApplicationProxy::SetDefaultTheme(__OCF TAutoString Name, WdDocumentMedium DocumentType)
{
	static __OCF TAutoDispId i_(this, 414);
	__OCF TAutoArgs<2> a_;
	wordObjects::push_arg(a_[1], Name);
	wordObjects::push_arg(a_[2], DocumentType);
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

__OCF TAutoString T_ApplicationProxy::GetDefaultTheme(WdDocumentMedium DocumentType)
{
	static __OCF TAutoDispId i_(this, 416);
	__OCF TAutoArgs<1> a_;
	wordObjects::push_arg(a_[1], DocumentType);
	return Invoke(acMethod, a_, i_, i_);
}

void T_ApplicationProxy::_EmailOptions(TEmailOptionsProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 389);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

MsoLanguageID T_ApplicationProxy::Language()
{
	static __OCF TAutoDispId i_(this, 391);
	__OCF TAutoArgs<0> a_;
	return (MsoLanguageID)(int)Invoke(acPropGet, a_, i_, i_);
}

void T_ApplicationProxy::_COMAddIns(TCOMAddInsProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 111);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

/*__OWL*/ TBool T_ApplicationProxy::CheckLanguage()
{
	static __OCF TAutoDispId i_(this, 112);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

void T_ApplicationProxy::CheckLanguage(/*__OWL*/ TBool arg0)
{
	static __OCF TAutoDispId i_(this, 112);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

void T_ApplicationProxy::_LanguageSettings(TLanguageSettingsProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 403);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

/*__OWL*/ TBool T_ApplicationProxy::Dummy1()
{
	static __OCF TAutoDispId i_(this, 406);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

void T_ApplicationProxy::_AnswerWizard(TAnswerWizardProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 409);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

MsoFeatureInstall T_ApplicationProxy::FeatureInstall()
{
	static __OCF TAutoDispId i_(this, 447);
	__OCF TAutoArgs<0> a_;
	return (MsoFeatureInstall)(int)Invoke(acPropGet, a_, i_, i_);
}

void T_ApplicationProxy::FeatureInstall(MsoFeatureInstall arg0)
{
	static __OCF TAutoDispId i_(this, 447);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

void T_ApplicationProxy::PrintOut2000(__OCF TAutoVal* Background, __OCF TAutoVal* Append, __OCF TAutoVal* Range, __OCF TAutoVal* OutputFileName, __OCF TAutoVal* From, __OCF TAutoVal* To, __OCF TAutoVal* Item, __OCF TAutoVal* Copies, __OCF TAutoVal* Pages, __OCF TAutoVal* PageType, __OCF TAutoVal* PrintToFile, __OCF TAutoVal* Collate, __OCF TAutoVal* FileName, __OCF TAutoVal* ActivePrinterMacGX, __OCF TAutoVal* ManualDuplexPrint, __OCF TAutoVal* PrintZoomColumn, __OCF TAutoVal* PrintZoomRow, __OCF TAutoVal* PrintZoomPaperWidth, __OCF TAutoVal* PrintZoomPaperHeight)
{
	static __OCF TAutoDispId i_(this, 444);
	__OCF TAutoArgs<19> a_;
	wordObjects::push_arg(a_[1], Background);
	wordObjects::push_arg(a_[2], Append);
	wordObjects::push_arg(a_[3], Range);
	wordObjects::push_arg(a_[4], OutputFileName);
	wordObjects::push_arg(a_[5], From);
	wordObjects::push_arg(a_[6], To);
	wordObjects::push_arg(a_[7], Item);
	wordObjects::push_arg(a_[8], Copies);
	wordObjects::push_arg(a_[9], Pages);
	wordObjects::push_arg(a_[10], PageType);
	wordObjects::push_arg(a_[11], PrintToFile);
	wordObjects::push_arg(a_[12], Collate);
	wordObjects::push_arg(a_[13], FileName);
	wordObjects::push_arg(a_[14], ActivePrinterMacGX);
	wordObjects::push_arg(a_[15], ManualDuplexPrint);
	wordObjects::push_arg(a_[16], PrintZoomColumn);
	wordObjects::push_arg(a_[17], PrintZoomRow);
	wordObjects::push_arg(a_[18], PrintZoomPaperWidth);
	wordObjects::push_arg(a_[19], PrintZoomPaperHeight);
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

__OCF TAutoVal T_ApplicationProxy::Run(__OCF TAutoString MacroName, __OCF TAutoVal* varg1, __OCF TAutoVal* varg2, __OCF TAutoVal* varg3, __OCF TAutoVal* varg4, __OCF TAutoVal* varg5, __OCF TAutoVal* varg6, __OCF TAutoVal* varg7, __OCF TAutoVal* varg8, __OCF TAutoVal* varg9, __OCF TAutoVal* varg10, __OCF TAutoVal* varg11, __OCF TAutoVal* varg12, __OCF TAutoVal* varg13, __OCF TAutoVal* varg14, __OCF TAutoVal* varg15, __OCF TAutoVal* varg16, __OCF TAutoVal* varg17, __OCF TAutoVal* varg18, __OCF TAutoVal* varg19, __OCF TAutoVal* varg20, __OCF TAutoVal* varg21, __OCF TAutoVal* varg22, __OCF TAutoVal* varg23, __OCF TAutoVal* varg24, __OCF TAutoVal* varg25, __OCF TAutoVal* varg26, __OCF TAutoVal* varg27, __OCF TAutoVal* varg28, __OCF TAutoVal* varg29, __OCF TAutoVal* varg30)
{
	static __OCF TAutoDispId i_(this, 445);
	__OCF TAutoArgs<31> a_;
	wordObjects::push_arg(a_[1], MacroName);
	wordObjects::push_arg(a_[2], varg1);
	wordObjects::push_arg(a_[3], varg2);
	wordObjects::push_arg(a_[4], varg3);
	wordObjects::push_arg(a_[5], varg4);
	wordObjects::push_arg(a_[6], varg5);
	wordObjects::push_arg(a_[7], varg6);
	wordObjects::push_arg(a_[8], varg7);
	wordObjects::push_arg(a_[9], varg8);
	wordObjects::push_arg(a_[10], varg9);
	wordObjects::push_arg(a_[11], varg10);
	wordObjects::push_arg(a_[12], varg11);
	wordObjects::push_arg(a_[13], varg12);
	wordObjects::push_arg(a_[14], varg13);
	wordObjects::push_arg(a_[15], varg14);
	wordObjects::push_arg(a_[16], varg15);
	wordObjects::push_arg(a_[17], varg16);
	wordObjects::push_arg(a_[18], varg17);
	wordObjects::push_arg(a_[19], varg18);
	wordObjects::push_arg(a_[20], varg19);
	wordObjects::push_arg(a_[21], varg20);
	wordObjects::push_arg(a_[22], varg21);
	wordObjects::push_arg(a_[23], varg22);
	wordObjects::push_arg(a_[24], varg23);
	wordObjects::push_arg(a_[25], varg24);
	wordObjects::push_arg(a_[26], varg25);
	wordObjects::push_arg(a_[27], varg26);
	wordObjects::push_arg(a_[28], varg27);
	wordObjects::push_arg(a_[29], varg28);
	wordObjects::push_arg(a_[30], varg29);
	wordObjects::push_arg(a_[31], varg30);
	return Invoke(acMethod, a_, i_, i_);
}

void T_ApplicationProxy::PrintOut(__OCF TAutoVal* Background, __OCF TAutoVal* Append, __OCF TAutoVal* Range, __OCF TAutoVal* OutputFileName, __OCF TAutoVal* From, __OCF TAutoVal* To, __OCF TAutoVal* Item, __OCF TAutoVal* Copies, __OCF TAutoVal* Pages, __OCF TAutoVal* PageType, __OCF TAutoVal* PrintToFile, __OCF TAutoVal* Collate, __OCF TAutoVal* FileName, __OCF TAutoVal* ActivePrinterMacGX, __OCF TAutoVal* ManualDuplexPrint, __OCF TAutoVal* PrintZoomColumn, __OCF TAutoVal* PrintZoomRow, __OCF TAutoVal* PrintZoomPaperWidth, __OCF TAutoVal* PrintZoomPaperHeight)
{
	static __OCF TAutoDispId i_(this, 448);
	__OCF TAutoArgs<19> a_;
	wordObjects::push_arg(a_[1], Background);
	wordObjects::push_arg(a_[2], Append);
	wordObjects::push_arg(a_[3], Range);
	wordObjects::push_arg(a_[4], OutputFileName);
	wordObjects::push_arg(a_[5], From);
	wordObjects::push_arg(a_[6], To);
	wordObjects::push_arg(a_[7], Item);
	wordObjects::push_arg(a_[8], Copies);
	wordObjects::push_arg(a_[9], Pages);
	wordObjects::push_arg(a_[10], PageType);
	wordObjects::push_arg(a_[11], PrintToFile);
	wordObjects::push_arg(a_[12], Collate);
	wordObjects::push_arg(a_[13], FileName);
	wordObjects::push_arg(a_[14], ActivePrinterMacGX);
	wordObjects::push_arg(a_[15], ManualDuplexPrint);
	wordObjects::push_arg(a_[16], PrintZoomColumn);
	wordObjects::push_arg(a_[17], PrintZoomRow);
	wordObjects::push_arg(a_[18], PrintZoomPaperWidth);
	wordObjects::push_arg(a_[19], PrintZoomPaperHeight);
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

MsoAutomationSecurity T_ApplicationProxy::AutomationSecurity()
{
	static __OCF TAutoDispId i_(this, 449);
	__OCF TAutoArgs<0> a_;
	return (MsoAutomationSecurity)(int)Invoke(acPropGet, a_, i_, i_);
}

void T_ApplicationProxy::AutomationSecurity(MsoAutomationSecurity arg0)
{
	static __OCF TAutoDispId i_(this, 449);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

void T_ApplicationProxy::_FileDialog(TFileDialogProxy& Obj, MsoFileDialogType FileDialogType)
{
	static __OCF TAutoDispId i_(this, 450);
	__OCF TAutoArgs<1> a_;
	wordObjects::push_arg(a_[1], FileDialogType);
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

__OCF TAutoString T_ApplicationProxy::EmailTemplate()
{
	static __OCF TAutoDispId i_(this, 451);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

void T_ApplicationProxy::EmailTemplate(__OCF TAutoString arg0)
{
	static __OCF TAutoDispId i_(this, 451);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

/*__OWL*/ TBool T_ApplicationProxy::ShowWindowsInTaskbar()
{
	static __OCF TAutoDispId i_(this, 452);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

void T_ApplicationProxy::ShowWindowsInTaskbar(/*__OWL*/ TBool arg0)
{
	static __OCF TAutoDispId i_(this, 452);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

void T_ApplicationProxy::NewDocument(TNewFileProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 454);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

/*__OWL*/ TBool T_ApplicationProxy::ShowStartupDialog()
{
	static __OCF TAutoDispId i_(this, 455);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

void T_ApplicationProxy::ShowStartupDialog(/*__OWL*/ TBool arg0)
{
	static __OCF TAutoDispId i_(this, 455);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

void T_ApplicationProxy::AutoCorrectEmail(TAutoCorrectProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 456);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

void T_ApplicationProxy::_TaskPanes(TTaskPanesProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 457);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

/*__OWL*/ TBool T_ApplicationProxy::DefaultLegalBlackline()
{
	static __OCF TAutoDispId i_(this, 459);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

void T_ApplicationProxy::DefaultLegalBlackline(/*__OWL*/ TBool arg0)
{
	static __OCF TAutoDispId i_(this, 459);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

/*__OWL*/ TBool T_ApplicationProxy::Dummy2()
{
	static __OCF TAutoDispId i_(this, 458);
	__OCF TAutoArgs<0> a_;
	return Invoke(acMethod, a_, i_, i_);
}

void T_ApplicationProxy::_SmartTagRecognizers(TSmartTagRecognizersProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 460);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

void T_ApplicationProxy::_SmartTagTypes(TSmartTagTypesProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 461);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

void T_ApplicationProxy::_XMLNamespaces(TXMLNamespacesProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 463);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

void T_ApplicationProxy::PutFocusInMailHeader()
{
	static __OCF TAutoDispId i_(this, 464);
	__OCF TAutoArgs<0> a_;
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

/*__OWL*/ TBool T_ApplicationProxy::ArbitraryXMLSupportAvailable()
{
	static __OCF TAutoDispId i_(this, 465);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

/*

TApplicationEventsProxy::TApplicationEventsProxy(__OWL TWindow* parent, __OWL TResId resId, __OWL TModule* module) : TOleDialog(parent, resId, module)
{
}

TApplicationEventsProxy::~TApplicationEventsProxy(){
}

void TApplicationEventsProxy::SetupWindow()
{
	TOleDialog::SetupWindow();
	Ocx = GetOcControlOfOCX(IID_CoApplication);
	Proxy.Bind(Ocx->GetCtlDispatch());
}

bool TApplicationEventsProxy::EvOcCtrlCustomEvent(__OCF TCtrlCustomEvent* pev)
{
	switch (pev->Args->DispId)
	{
	}
	return true;
}
*/

/*

TApplicationEvents2Proxy::TApplicationEvents2Proxy(__OWL TWindow* parent, __OWL TResId resId, __OWL TModule* module) : TOleDialog(parent, resId, module)
{
}

TApplicationEvents2Proxy::~TApplicationEvents2Proxy(){
}

void TApplicationEvents2Proxy::SetupWindow()
{
	TOleDialog::SetupWindow();
	Ocx = GetOcControlOfOCX(IID_CoApplication);
	Proxy.Bind(Ocx->GetCtlDispatch());
}

void TQuitProxy::Quit()
{
}

void TDocumentChangeProxy::DocumentChange()
{
}

void TDocumentOpenProxy::DocumentOpen(WordDocument* Doc)
{
}

void TDocumentBeforeCloseProxy::DocumentBeforeClose(WordDocument* Doc, __OWL TBool* Cancel)
{
}

void TDocumentBeforePrintProxy::DocumentBeforePrint(WordDocument* Doc, __OWL TBool* Cancel)
{
}

void TDocumentBeforeSaveProxy::DocumentBeforeSave(WordDocument* Doc, __OWL TBool* SaveAsUI, __OWL TBool* Cancel)
{
}

void TNewDocumentProxy::NewDocument(WordDocument* Doc)
{
}

void TWindowActivateProxy::WindowActivate(WordDocument* Doc, TWindowProxy* Wn)
{
}

void TWindowDeactivateProxy::WindowDeactivate(WordDocument* Doc, TWindowProxy* Wn)
{
}

void TWindowSelectionChangeProxy::WindowSelectionChange(TSelectionProxy* Sel)
{
}

void TWindowBeforeRightClickProxy::WindowBeforeRightClick(TSelectionProxy* Sel, __OWL TBool* Cancel)
{
}

void TWindowBeforeDoubleClickProxy::WindowBeforeDoubleClick(TSelectionProxy* Sel, __OWL TBool* Cancel)
{
}

bool TApplicationEvents2Proxy::EvOcCtrlCustomEvent(__OCF TCtrlCustomEvent* pev)
{
	switch (pev->Args->DispId)
	{
	case 2 :
	{
		Quit();
		break;
	}
	case 3 :
	{
		DocumentChange();
		break;
	}
	case 4 :
	{
		WordDocument* arg0 = pev->Args->operator[](0);
		DocumentOpen(arg0);
		break;
	}
	case 6 :
	{
		WordDocument* arg0 = pev->Args->operator[](0);
		__OWL TBool* arg1 = pev->Args->operator[](1);
		DocumentBeforeClose(arg0, arg1);
		break;
	}
	case 7 :
	{
		WordDocument* arg0 = pev->Args->operator[](0);
		__OWL TBool* arg1 = pev->Args->operator[](1);
		DocumentBeforePrint(arg0, arg1);
		break;
	}
	case 8 :
	{
		WordDocument* arg0 = pev->Args->operator[](0);
		__OWL TBool* arg1 = pev->Args->operator[](1);
		__OWL TBool* arg2 = pev->Args->operator[](2);
		DocumentBeforeSave(arg0, arg1, arg2);
		break;
	}
	case 9 :
	{
		WordDocument* arg0 = pev->Args->operator[](0);
		NewDocument(arg0);
		break;
	}
	case 10 :
	{
		WordDocument* arg0 = pev->Args->operator[](0);
		TWindowProxy arg1;
		arg1.Bind((IDispatch*) (pev->Args->operator[](1)));
		WindowActivate(arg0, &arg1);
		break;
	}
	case 11 :
	{
		WordDocument* arg0 = pev->Args->operator[](0);
		TWindowProxy arg1;
		arg1.Bind((IDispatch*) (pev->Args->operator[](1)));
		WindowDeactivate(arg0, &arg1);
		break;
	}
	case 12 :
	{
		TSelectionProxy arg0;
		arg0.Bind((IDispatch*) (pev->Args->operator[](0)));
		WindowSelectionChange(&arg0);
		break;
	}
	case 13 :
	{
		TSelectionProxy arg0;
		arg0.Bind((IDispatch*) (pev->Args->operator[](0)));
		__OWL TBool* arg1 = pev->Args->operator[](1);
		WindowBeforeRightClick(&arg0, arg1);
		break;
	}
	case 14 :
	{
		TSelectionProxy arg0;
		arg0.Bind((IDispatch*) (pev->Args->operator[](0)));
		__OWL TBool* arg1 = pev->Args->operator[](1);
		WindowBeforeDoubleClick(&arg0, arg1);
		break;
	}
	}
	return true;
}
*/

/*

TApplicationEvents3Proxy::TApplicationEvents3Proxy(__OWL TWindow* parent, __OWL TResId resId, __OWL TModule* module) : TOleDialog(parent, resId, module)
{
}

TApplicationEvents3Proxy::~TApplicationEvents3Proxy(){
}

void TApplicationEvents3Proxy::SetupWindow()
{
	TOleDialog::SetupWindow();
	Ocx = GetOcControlOfOCX(IID_CoApplication);
	Proxy.Bind(Ocx->GetCtlDispatch());
}

void TQuitProxy::Quit()
{
}

void TDocumentChangeProxy::DocumentChange()
{
}

void TDocumentOpenProxy::DocumentOpen(WordDocument* Doc)
{
}

void TDocumentBeforeCloseProxy::DocumentBeforeClose(WordDocument* Doc, __OWL TBool* Cancel)
{
}

void TDocumentBeforePrintProxy::DocumentBeforePrint(WordDocument* Doc, __OWL TBool* Cancel)
{
}

void TDocumentBeforeSaveProxy::DocumentBeforeSave(WordDocument* Doc, __OWL TBool* SaveAsUI, __OWL TBool* Cancel)
{
}

void TNewDocumentProxy::NewDocument(WordDocument* Doc)
{
}

void TWindowActivateProxy::WindowActivate(WordDocument* Doc, TWindowProxy* Wn)
{
}

void TWindowDeactivateProxy::WindowDeactivate(WordDocument* Doc, TWindowProxy* Wn)
{
}

void TWindowSelectionChangeProxy::WindowSelectionChange(TSelectionProxy* Sel)
{
}

void TWindowBeforeRightClickProxy::WindowBeforeRightClick(TSelectionProxy* Sel, __OWL TBool* Cancel)
{
}

void TWindowBeforeDoubleClickProxy::WindowBeforeDoubleClick(TSelectionProxy* Sel, __OWL TBool* Cancel)
{
}

void TEPostagePropertyDialogProxy::EPostagePropertyDialog(WordDocument* Doc)
{
}

void TEPostageInsertProxy::EPostageInsert(WordDocument* Doc)
{
}

void TMailMergeAfterMergeProxy::MailMergeAfterMerge(WordDocument* Doc, WordDocument* DocResult)
{
}

void TMailMergeAfterRecordMergeProxy::MailMergeAfterRecordMerge(WordDocument* Doc)
{
}

void TMailMergeBeforeMergeProxy::MailMergeBeforeMerge(WordDocument* Doc, long StartRecord, long EndRecord, __OWL TBool* Cancel)
{
}

void TMailMergeBeforeRecordMergeProxy::MailMergeBeforeRecordMerge(WordDocument* Doc, __OWL TBool* Cancel)
{
}

void TMailMergeDataSourceLoadProxy::MailMergeDataSourceLoad(WordDocument* Doc)
{
}

void TMailMergeDataSourceValidateProxy::MailMergeDataSourceValidate(WordDocument* Doc, __OWL TBool* Handled)
{
}

void TMailMergeWizardSendToCustomProxy::MailMergeWizardSendToCustom(WordDocument* Doc)
{
}

void TMailMergeWizardStateChangeProxy::MailMergeWizardStateChange(WordDocument* Doc, int* FromState, int* ToState, __OWL TBool* Handled)
{
}

void TWindowSizeProxy::WindowSize(WordDocument* Doc, TWindowProxy* Wn)
{
}

bool TApplicationEvents3Proxy::EvOcCtrlCustomEvent(__OCF TCtrlCustomEvent* pev)
{
	switch (pev->Args->DispId)
	{
	case 2 :
	{
		Quit();
		break;
	}
	case 3 :
	{
		DocumentChange();
		break;
	}
	case 4 :
	{
		WordDocument* arg0 = pev->Args->operator[](0);
		DocumentOpen(arg0);
		break;
	}
	case 6 :
	{
		WordDocument* arg0 = pev->Args->operator[](0);
		__OWL TBool* arg1 = pev->Args->operator[](1);
		DocumentBeforeClose(arg0, arg1);
		break;
	}
	case 7 :
	{
		WordDocument* arg0 = pev->Args->operator[](0);
		__OWL TBool* arg1 = pev->Args->operator[](1);
		DocumentBeforePrint(arg0, arg1);
		break;
	}
	case 8 :
	{
		WordDocument* arg0 = pev->Args->operator[](0);
		__OWL TBool* arg1 = pev->Args->operator[](1);
		__OWL TBool* arg2 = pev->Args->operator[](2);
		DocumentBeforeSave(arg0, arg1, arg2);
		break;
	}
	case 9 :
	{
		WordDocument* arg0 = pev->Args->operator[](0);
		NewDocument(arg0);
		break;
	}
	case 10 :
	{
		WordDocument* arg0 = pev->Args->operator[](0);
		TWindowProxy arg1;
		arg1.Bind((IDispatch*) (pev->Args->operator[](1)));
		WindowActivate(arg0, &arg1);
		break;
	}
	case 11 :
	{
		WordDocument* arg0 = pev->Args->operator[](0);
		TWindowProxy arg1;
		arg1.Bind((IDispatch*) (pev->Args->operator[](1)));
		WindowDeactivate(arg0, &arg1);
		break;
	}
	case 12 :
	{
		TSelectionProxy arg0;
		arg0.Bind((IDispatch*) (pev->Args->operator[](0)));
		WindowSelectionChange(&arg0);
		break;
	}
	case 13 :
	{
		TSelectionProxy arg0;
		arg0.Bind((IDispatch*) (pev->Args->operator[](0)));
		__OWL TBool* arg1 = pev->Args->operator[](1);
		WindowBeforeRightClick(&arg0, arg1);
		break;
	}
	case 14 :
	{
		TSelectionProxy arg0;
		arg0.Bind((IDispatch*) (pev->Args->operator[](0)));
		__OWL TBool* arg1 = pev->Args->operator[](1);
		WindowBeforeDoubleClick(&arg0, arg1);
		break;
	}
	case 15 :
	{
		WordDocument* arg0 = pev->Args->operator[](0);
		EPostagePropertyDialog(arg0);
		break;
	}
	case 16 :
	{
		WordDocument* arg0 = pev->Args->operator[](0);
		EPostageInsert(arg0);
		break;
	}
	case 17 :
	{
		WordDocument* arg0 = pev->Args->operator[](0);
		WordDocument* arg1 = pev->Args->operator[](1);
		MailMergeAfterMerge(arg0, arg1);
		break;
	}
	case 18 :
	{
		WordDocument* arg0 = pev->Args->operator[](0);
		MailMergeAfterRecordMerge(arg0);
		break;
	}
	case 19 :
	{
		WordDocument* arg0 = pev->Args->operator[](0);
		long arg1 = pev->Args->operator[](1);
		long arg2 = pev->Args->operator[](2);
		__OWL TBool* arg3 = pev->Args->operator[](3);
		MailMergeBeforeMerge(arg0, arg1, arg2, arg3);
		break;
	}
	case 20 :
	{
		WordDocument* arg0 = pev->Args->operator[](0);
		__OWL TBool* arg1 = pev->Args->operator[](1);
		MailMergeBeforeRecordMerge(arg0, arg1);
		break;
	}
	case 21 :
	{
		WordDocument* arg0 = pev->Args->operator[](0);
		MailMergeDataSourceLoad(arg0);
		break;
	}
	case 22 :
	{
		WordDocument* arg0 = pev->Args->operator[](0);
		__OWL TBool* arg1 = pev->Args->operator[](1);
		MailMergeDataSourceValidate(arg0, arg1);
		break;
	}
	case 23 :
	{
		WordDocument* arg0 = pev->Args->operator[](0);
		MailMergeWizardSendToCustom(arg0);
		break;
	}
	case 24 :
	{
		WordDocument* arg0 = pev->Args->operator[](0);
		int* arg1 = pev->Args->operator[](1);
		int* arg2 = pev->Args->operator[](2);
		__OWL TBool* arg3 = pev->Args->operator[](3);
		MailMergeWizardStateChange(arg0, arg1, arg2, arg3);
		break;
	}
	case 25 :
	{
		WordDocument* arg0 = pev->Args->operator[](0);
		TWindowProxy arg1;
		arg1.Bind((IDispatch*) (pev->Args->operator[](1)));
		WindowSize(arg0, &arg1);
		break;
	}
	}
	return true;
}
*/

/*

TApplicationEvents4Proxy::TApplicationEvents4Proxy(__OWL TWindow* parent, __OWL TResId resId, __OWL TModule* module) : TOleDialog(parent, resId, module)
{
}

TApplicationEvents4Proxy::~TApplicationEvents4Proxy(){
}

void TApplicationEvents4Proxy::SetupWindow()
{
	TOleDialog::SetupWindow();
	Ocx = GetOcControlOfOCX(IID_CoApplication);
	Proxy.Bind(Ocx->GetCtlDispatch());
}

void TQuitProxy::Quit()
{
}

void TDocumentChangeProxy::DocumentChange()
{
}

void TDocumentOpenProxy::DocumentOpen(WordDocument* Doc)
{
}

void TDocumentBeforeCloseProxy::DocumentBeforeClose(WordDocument* Doc, __OWL TBool* Cancel)
{
}

void TDocumentBeforePrintProxy::DocumentBeforePrint(WordDocument* Doc, __OWL TBool* Cancel)
{
}

void TDocumentBeforeSaveProxy::DocumentBeforeSave(WordDocument* Doc, __OWL TBool* SaveAsUI, __OWL TBool* Cancel)
{
}

void TNewDocumentProxy::NewDocument(WordDocument* Doc)
{
}

void TWindowActivateProxy::WindowActivate(WordDocument* Doc, TWindowProxy* Wn)
{
}

void TWindowDeactivateProxy::WindowDeactivate(WordDocument* Doc, TWindowProxy* Wn)
{
}

void TWindowSelectionChangeProxy::WindowSelectionChange(TSelectionProxy* Sel)
{
}

void TWindowBeforeRightClickProxy::WindowBeforeRightClick(TSelectionProxy* Sel, __OWL TBool* Cancel)
{
}

void TWindowBeforeDoubleClickProxy::WindowBeforeDoubleClick(TSelectionProxy* Sel, __OWL TBool* Cancel)
{
}

void TEPostagePropertyDialogProxy::EPostagePropertyDialog(WordDocument* Doc)
{
}

void TEPostageInsertProxy::EPostageInsert(WordDocument* Doc)
{
}

void TMailMergeAfterMergeProxy::MailMergeAfterMerge(WordDocument* Doc, WordDocument* DocResult)
{
}

void TMailMergeAfterRecordMergeProxy::MailMergeAfterRecordMerge(WordDocument* Doc)
{
}

void TMailMergeBeforeMergeProxy::MailMergeBeforeMerge(WordDocument* Doc, long StartRecord, long EndRecord, __OWL TBool* Cancel)
{
}

void TMailMergeBeforeRecordMergeProxy::MailMergeBeforeRecordMerge(WordDocument* Doc, __OWL TBool* Cancel)
{
}

void TMailMergeDataSourceLoadProxy::MailMergeDataSourceLoad(WordDocument* Doc)
{
}

void TMailMergeDataSourceValidateProxy::MailMergeDataSourceValidate(WordDocument* Doc, __OWL TBool* Handled)
{
}

void TMailMergeWizardSendToCustomProxy::MailMergeWizardSendToCustom(WordDocument* Doc)
{
}

void TMailMergeWizardStateChangeProxy::MailMergeWizardStateChange(WordDocument* Doc, int* FromState, int* ToState, __OWL TBool* Handled)
{
}

void TWindowSizeProxy::WindowSize(WordDocument* Doc, TWindowProxy* Wn)
{
}

void TXMLSelectionChangeProxy::XMLSelectionChange(TSelectionProxy* Sel, TXMLNodeProxy* OldXMLNode, TXMLNodeProxy* NewXMLNode, long* Reason)
{
}

void TXMLValidationErrorProxy::XMLValidationError(TXMLNodeProxy* XMLNode)
{
}

void TDocumentSyncProxy::DocumentSync(WordDocument* Doc, MsoSyncEventType SyncEventType)
{
}

void TEPostageInsertExProxy::EPostageInsertEx(WordDocument* Doc, int cpDeliveryAddrStart, int cpDeliveryAddrEnd, int cpReturnAddrStart, int cpReturnAddrEnd, int xaWidth, int yaHeight, __OCF TAutoString bstrPrinterName, __OCF TAutoString bstrPaperFeed, __OWL TBool fPrint, __OWL TBool* fCancel)
{
}

bool TApplicationEvents4Proxy::EvOcCtrlCustomEvent(__OCF TCtrlCustomEvent* pev)
{
	switch (pev->Args->DispId)
	{
	case 2 :
	{
		Quit();
		break;
	}
	case 3 :
	{
		DocumentChange();
		break;
	}
	case 4 :
	{
		WordDocument* arg0 = pev->Args->operator[](0);
		DocumentOpen(arg0);
		break;
	}
	case 6 :
	{
		WordDocument* arg0 = pev->Args->operator[](0);
		__OWL TBool* arg1 = pev->Args->operator[](1);
		DocumentBeforeClose(arg0, arg1);
		break;
	}
	case 7 :
	{
		WordDocument* arg0 = pev->Args->operator[](0);
		__OWL TBool* arg1 = pev->Args->operator[](1);
		DocumentBeforePrint(arg0, arg1);
		break;
	}
	case 8 :
	{
		WordDocument* arg0 = pev->Args->operator[](0);
		__OWL TBool* arg1 = pev->Args->operator[](1);
		__OWL TBool* arg2 = pev->Args->operator[](2);
		DocumentBeforeSave(arg0, arg1, arg2);
		break;
	}
	case 9 :
	{
		WordDocument* arg0 = pev->Args->operator[](0);
		NewDocument(arg0);
		break;
	}
	case 10 :
	{
		WordDocument* arg0 = pev->Args->operator[](0);
		TWindowProxy arg1;
		arg1.Bind((IDispatch*) (pev->Args->operator[](1)));
		WindowActivate(arg0, &arg1);
		break;
	}
	case 11 :
	{
		WordDocument* arg0 = pev->Args->operator[](0);
		TWindowProxy arg1;
		arg1.Bind((IDispatch*) (pev->Args->operator[](1)));
		WindowDeactivate(arg0, &arg1);
		break;
	}
	case 12 :
	{
		TSelectionProxy arg0;
		arg0.Bind((IDispatch*) (pev->Args->operator[](0)));
		WindowSelectionChange(&arg0);
		break;
	}
	case 13 :
	{
		TSelectionProxy arg0;
		arg0.Bind((IDispatch*) (pev->Args->operator[](0)));
		__OWL TBool* arg1 = pev->Args->operator[](1);
		WindowBeforeRightClick(&arg0, arg1);
		break;
	}
	case 14 :
	{
		TSelectionProxy arg0;
		arg0.Bind((IDispatch*) (pev->Args->operator[](0)));
		__OWL TBool* arg1 = pev->Args->operator[](1);
		WindowBeforeDoubleClick(&arg0, arg1);
		break;
	}
	case 15 :
	{
		WordDocument* arg0 = pev->Args->operator[](0);
		EPostagePropertyDialog(arg0);
		break;
	}
	case 16 :
	{
		WordDocument* arg0 = pev->Args->operator[](0);
		EPostageInsert(arg0);
		break;
	}
	case 17 :
	{
		WordDocument* arg0 = pev->Args->operator[](0);
		WordDocument* arg1 = pev->Args->operator[](1);
		MailMergeAfterMerge(arg0, arg1);
		break;
	}
	case 18 :
	{
		WordDocument* arg0 = pev->Args->operator[](0);
		MailMergeAfterRecordMerge(arg0);
		break;
	}
	case 19 :
	{
		WordDocument* arg0 = pev->Args->operator[](0);
		long arg1 = pev->Args->operator[](1);
		long arg2 = pev->Args->operator[](2);
		__OWL TBool* arg3 = pev->Args->operator[](3);
		MailMergeBeforeMerge(arg0, arg1, arg2, arg3);
		break;
	}
	case 20 :
	{
		WordDocument* arg0 = pev->Args->operator[](0);
		__OWL TBool* arg1 = pev->Args->operator[](1);
		MailMergeBeforeRecordMerge(arg0, arg1);
		break;
	}
	case 21 :
	{
		WordDocument* arg0 = pev->Args->operator[](0);
		MailMergeDataSourceLoad(arg0);
		break;
	}
	case 22 :
	{
		WordDocument* arg0 = pev->Args->operator[](0);
		__OWL TBool* arg1 = pev->Args->operator[](1);
		MailMergeDataSourceValidate(arg0, arg1);
		break;
	}
	case 23 :
	{
		WordDocument* arg0 = pev->Args->operator[](0);
		MailMergeWizardSendToCustom(arg0);
		break;
	}
	case 24 :
	{
		WordDocument* arg0 = pev->Args->operator[](0);
		int* arg1 = pev->Args->operator[](1);
		int* arg2 = pev->Args->operator[](2);
		__OWL TBool* arg3 = pev->Args->operator[](3);
		MailMergeWizardStateChange(arg0, arg1, arg2, arg3);
		break;
	}
	case 25 :
	{
		WordDocument* arg0 = pev->Args->operator[](0);
		TWindowProxy arg1;
		arg1.Bind((IDispatch*) (pev->Args->operator[](1)));
		WindowSize(arg0, &arg1);
		break;
	}
	case 26 :
	{
		TSelectionProxy arg0;
		arg0.Bind((IDispatch*) (pev->Args->operator[](0)));
		TXMLNodeProxy arg1;
		arg1.Bind((IDispatch*) (pev->Args->operator[](1)));
		TXMLNodeProxy arg2;
		arg2.Bind((IDispatch*) (pev->Args->operator[](2)));
		long* arg3 = pev->Args->operator[](3);
		XMLSelectionChange(&arg0, &arg1, &arg2, arg3);
		break;
	}
	case 27 :
	{
		TXMLNodeProxy arg0;
		arg0.Bind((IDispatch*) (pev->Args->operator[](0)));
		XMLValidationError(&arg0);
		break;
	}
	case 28 :
	{
		WordDocument* arg0 = pev->Args->operator[](0);
		MsoSyncEventType arg1 = pev->Args->operator[](1);
		DocumentSync(arg0, arg1);
		break;
	}
	case 29 :
	{
		WordDocument* arg0 = pev->Args->operator[](0);
		int arg1 = pev->Args->operator[](1);
		int arg2 = pev->Args->operator[](2);
		int arg3 = pev->Args->operator[](3);
		int arg4 = pev->Args->operator[](4);
		int arg5 = pev->Args->operator[](5);
		int arg6 = pev->Args->operator[](6);
		__OCF TAutoString arg7 = pev->Args->operator[](7);
		__OCF TAutoString arg8 = pev->Args->operator[](8);
		__OWL TBool arg9 = pev->Args->operator[](9);
		__OWL TBool* arg10 = pev->Args->operator[](10);
		EPostageInsertEx(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10);
		break;
	}
	}
	return true;
}
*/

__OCF TAutoString T_DocumentProxy::Name()
{
	static __OCF TAutoDispId i_(this, (long)0);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

WordApplication* T_DocumentProxy::_Application()
{
	static __OCF TAutoDispId i_(this, 1);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

long T_DocumentProxy::Creator()
{
	static __OCF TAutoDispId i_(this, 1001);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

IDispatch* T_DocumentProxy::Parent()
{
	static __OCF TAutoDispId i_(this, 1002);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

IDispatch* T_DocumentProxy::BuiltInDocumentProperties()
{
	static __OCF TAutoDispId i_(this, 1000);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

IDispatch* T_DocumentProxy::CustomDocumentProperties()
{
	static __OCF TAutoDispId i_(this, 2);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

__OCF TAutoString T_DocumentProxy::Path()
{
	static __OCF TAutoDispId i_(this, 3);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

void T_DocumentProxy::_Bookmarks(TBookmarksProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 4);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

void T_DocumentProxy::_Tables(TTablesProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 6);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

void T_DocumentProxy::_Footnotes(TFootnotesProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 7);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

void T_DocumentProxy::_Endnotes(TEndnotesProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 8);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

void T_DocumentProxy::_Comments(TCommentsProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 9);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

WdDocumentType T_DocumentProxy::Type()
{
	static __OCF TAutoDispId i_(this, 10);
	__OCF TAutoArgs<0> a_;
	return (WdDocumentType)(int)Invoke(acPropGet, a_, i_, i_);
}

/*__OWL*/ TBool T_DocumentProxy::AutoHyphenation()
{
	static __OCF TAutoDispId i_(this, 11);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

void T_DocumentProxy::AutoHyphenation(/*__OWL*/ TBool arg0)
{
	static __OCF TAutoDispId i_(this, 11);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

/*__OWL*/ TBool T_DocumentProxy::HyphenateCaps()
{
	static __OCF TAutoDispId i_(this, 12);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

void T_DocumentProxy::HyphenateCaps(/*__OWL*/ TBool arg0)
{
	static __OCF TAutoDispId i_(this, 12);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

long T_DocumentProxy::HyphenationZone()
{
	static __OCF TAutoDispId i_(this, 13);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

void T_DocumentProxy::HyphenationZone(long arg0)
{
	static __OCF TAutoDispId i_(this, 13);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

long T_DocumentProxy::ConsecutiveHyphensLimit()
{
	static __OCF TAutoDispId i_(this, 14);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

void T_DocumentProxy::ConsecutiveHyphensLimit(long arg0)
{
	static __OCF TAutoDispId i_(this, 14);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

void T_DocumentProxy::_Sections(TSectionsProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 15);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

void T_DocumentProxy::_Paragraphs(TParagraphsProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 16);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

void T_DocumentProxy::_Words(TWordsProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 17);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

void T_DocumentProxy::_Sentences(TSentencesProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 18);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

void T_DocumentProxy::_Characters(TCharactersProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 19);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

void T_DocumentProxy::_Fields(TFieldsProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 20);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

void T_DocumentProxy::_FormFields(TFormFieldsProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 21);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

void T_DocumentProxy::_Styles(TStylesProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 22);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

void T_DocumentProxy::_Frames(TFramesProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 23);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

void T_DocumentProxy::_TablesOfFigures(TTablesOfFiguresProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 25);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

void T_DocumentProxy::_Variables(TVariablesProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 26);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

void T_DocumentProxy::_MailMerge(TMailMergeProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 27);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

void T_DocumentProxy::_Envelope(TEnvelopeProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 28);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

__OCF TAutoString T_DocumentProxy::FullName()
{
	static __OCF TAutoDispId i_(this, 29);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

void T_DocumentProxy::_Revisions(TRevisionsProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 30);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

void T_DocumentProxy::_TablesOfContents(TTablesOfContentsProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 31);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

void T_DocumentProxy::_TablesOfAuthorities(TTablesOfAuthoritiesProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 32);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

void T_DocumentProxy::_PageSetup(TPageSetupProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 1101);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

void T_DocumentProxy::_PageSetup(PageSetup* arg0)
{
	static __OCF TAutoDispId i_(this, 1101);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

void T_DocumentProxy::GetWindows(TWindowsProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 34);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

/*__OWL*/ TBool T_DocumentProxy::HasRoutingSlip()
{
	static __OCF TAutoDispId i_(this, 35);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

void T_DocumentProxy::HasRoutingSlip(/*__OWL*/ TBool arg0)
{
	static __OCF TAutoDispId i_(this, 35);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

void T_DocumentProxy::_RoutingSlip(TRoutingSlipProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 36);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

/*__OWL*/ TBool T_DocumentProxy::Routed()
{
	static __OCF TAutoDispId i_(this, 37);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

void T_DocumentProxy::_TablesOfAuthoritiesCategories(TTablesOfAuthoritiesCategoriesProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 38);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

void T_DocumentProxy::_Indexes(TIndexesProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 39);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

/*__OWL*/ TBool T_DocumentProxy::Saved()
{
	static __OCF TAutoDispId i_(this, 40);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

void T_DocumentProxy::Saved(/*__OWL*/ TBool arg0)
{
	static __OCF TAutoDispId i_(this, 40);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

void T_DocumentProxy::Content(TRangeProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 41);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

void T_DocumentProxy::ActiveWindow(TWindowProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 42);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

WdDocumentKind T_DocumentProxy::Kind()
{
	static __OCF TAutoDispId i_(this, 43);
	__OCF TAutoArgs<0> a_;
	return (WdDocumentKind)(int)Invoke(acPropGet, a_, i_, i_);
}

void T_DocumentProxy::Kind(WdDocumentKind arg0)
{
	static __OCF TAutoDispId i_(this, 43);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

/*__OWL*/ TBool T_DocumentProxy::ReadOnly()
{
	static __OCF TAutoDispId i_(this, 44);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

void T_DocumentProxy::_Subdocuments(TSubdocumentsProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 45);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

/*__OWL*/ TBool T_DocumentProxy::IsMasterDocument()
{
	static __OCF TAutoDispId i_(this, 46);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

float T_DocumentProxy::DefaultTabStop()
{
	static __OCF TAutoDispId i_(this, 48);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

void T_DocumentProxy::DefaultTabStop(float arg0)
{
	static __OCF TAutoDispId i_(this, 48);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

/*__OWL*/ TBool T_DocumentProxy::EmbedTrueTypeFonts()
{
	static __OCF TAutoDispId i_(this, 50);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

void T_DocumentProxy::EmbedTrueTypeFonts(/*__OWL*/ TBool arg0)
{
	static __OCF TAutoDispId i_(this, 50);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

/*__OWL*/ TBool T_DocumentProxy::SaveFormsData()
{
	static __OCF TAutoDispId i_(this, 51);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

void T_DocumentProxy::SaveFormsData(/*__OWL*/ TBool arg0)
{
	static __OCF TAutoDispId i_(this, 51);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

/*__OWL*/ TBool T_DocumentProxy::ReadOnlyRecommended()
{
	static __OCF TAutoDispId i_(this, 52);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

void T_DocumentProxy::ReadOnlyRecommended(/*__OWL*/ TBool arg0)
{
	static __OCF TAutoDispId i_(this, 52);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

/*__OWL*/ TBool T_DocumentProxy::SaveSubsetFonts()
{
	static __OCF TAutoDispId i_(this, 53);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

void T_DocumentProxy::SaveSubsetFonts(/*__OWL*/ TBool arg0)
{
	static __OCF TAutoDispId i_(this, 53);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

/*__OWL*/ TBool T_DocumentProxy::Compatibility(WdCompatibility Type)
{
	static __OCF TAutoDispId i_(this, 55);
	__OCF TAutoArgs<1> a_;
	wordObjects::push_arg(a_[1], Type);
	return Invoke(acPropGet, a_, i_, i_);
}

void T_DocumentProxy::Compatibility(WdCompatibility Type, /*__OWL*/ TBool arg1)
{
	static __OCF TAutoDispId i_(this, 55);
	__OCF TAutoArgs<1> a_;
	wordObjects::push_arg(a_[1], Type);
	wordObjects::push_arg(a_[0], arg1);
	Invoke(acPropSet, a_, i_, i_);
}

void T_DocumentProxy::_StoryRanges(TStoryRangesProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 56);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

CommandBars* T_DocumentProxy::_CommandBars()
{
	static __OCF TAutoDispId i_(this, 57);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

/*__OWL*/ TBool T_DocumentProxy::IsSubdocument()
{
	static __OCF TAutoDispId i_(this, 58);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

long T_DocumentProxy::SaveFormat()
{
	static __OCF TAutoDispId i_(this, 59);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

WdProtectionType T_DocumentProxy::ProtectionType()
{
	static __OCF TAutoDispId i_(this, 60);
	__OCF TAutoArgs<0> a_;
	return (WdProtectionType)(int)Invoke(acPropGet, a_, i_, i_);
}

void T_DocumentProxy::_Hyperlinks(THyperlinksProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 61);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

void T_DocumentProxy::_Shapes(TShapesProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 62);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

void T_DocumentProxy::_ListTemplates(TListTemplatesProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 63);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

void T_DocumentProxy::_Lists(TListsProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 64);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

/*__OWL*/ TBool T_DocumentProxy::UpdateStylesOnOpen()
{
	static __OCF TAutoDispId i_(this, 66);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

void T_DocumentProxy::UpdateStylesOnOpen(/*__OWL*/ TBool arg0)
{
	static __OCF TAutoDispId i_(this, 66);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

__OCF TAutoVal T_DocumentProxy::AttachedTemplate()
{
	static __OCF TAutoDispId i_(this, 67);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

void T_DocumentProxy::AttachedTemplate(__OCF TAutoVal* arg0)
{
	static __OCF TAutoDispId i_(this, 67);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

void T_DocumentProxy::_InlineShapes(TInlineShapesProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 68);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

void T_DocumentProxy::Background(TShapeProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 69);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

void T_DocumentProxy::Background(WordShape* arg0)
{
	static __OCF TAutoDispId i_(this, 69);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

/*__OWL*/ TBool T_DocumentProxy::GrammarChecked()
{
	static __OCF TAutoDispId i_(this, 70);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

void T_DocumentProxy::GrammarChecked(/*__OWL*/ TBool arg0)
{
	static __OCF TAutoDispId i_(this, 70);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

/*__OWL*/ TBool T_DocumentProxy::SpellingChecked()
{
	static __OCF TAutoDispId i_(this, 71);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

void T_DocumentProxy::SpellingChecked(/*__OWL*/ TBool arg0)
{
	static __OCF TAutoDispId i_(this, 71);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

/*__OWL*/ TBool T_DocumentProxy::ShowGrammaticalErrors()
{
	static __OCF TAutoDispId i_(this, 72);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

void T_DocumentProxy::ShowGrammaticalErrors(/*__OWL*/ TBool arg0)
{
	static __OCF TAutoDispId i_(this, 72);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

/*__OWL*/ TBool T_DocumentProxy::ShowSpellingErrors()
{
	static __OCF TAutoDispId i_(this, 73);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

void T_DocumentProxy::ShowSpellingErrors(/*__OWL*/ TBool arg0)
{
	static __OCF TAutoDispId i_(this, 73);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

void T_DocumentProxy::_Versions(TVersionsProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 75);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

/*__OWL*/ TBool T_DocumentProxy::ShowSummary()
{
	static __OCF TAutoDispId i_(this, 76);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

void T_DocumentProxy::ShowSummary(/*__OWL*/ TBool arg0)
{
	static __OCF TAutoDispId i_(this, 76);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

WdSummaryMode T_DocumentProxy::SummaryViewMode()
{
	static __OCF TAutoDispId i_(this, 77);
	__OCF TAutoArgs<0> a_;
	return (WdSummaryMode)(int)Invoke(acPropGet, a_, i_, i_);
}

void T_DocumentProxy::SummaryViewMode(WdSummaryMode arg0)
{
	static __OCF TAutoDispId i_(this, 77);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

long T_DocumentProxy::SummaryLength()
{
	static __OCF TAutoDispId i_(this, 78);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

void T_DocumentProxy::SummaryLength(long arg0)
{
	static __OCF TAutoDispId i_(this, 78);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

/*__OWL*/ TBool T_DocumentProxy::PrintFractionalWidths()
{
	static __OCF TAutoDispId i_(this, 79);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

void T_DocumentProxy::PrintFractionalWidths(/*__OWL*/ TBool arg0)
{
	static __OCF TAutoDispId i_(this, 79);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

/*__OWL*/ TBool T_DocumentProxy::PrintPostScriptOverText()
{
	static __OCF TAutoDispId i_(this, 80);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

void T_DocumentProxy::PrintPostScriptOverText(/*__OWL*/ TBool arg0)
{
	static __OCF TAutoDispId i_(this, 80);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

IDispatch* T_DocumentProxy::Container()
{
	static __OCF TAutoDispId i_(this, 82);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

/*__OWL*/ TBool T_DocumentProxy::PrintFormsData()
{
	static __OCF TAutoDispId i_(this, 83);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

void T_DocumentProxy::PrintFormsData(/*__OWL*/ TBool arg0)
{
	static __OCF TAutoDispId i_(this, 83);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

void T_DocumentProxy::_ListParagraphs(TListParagraphsProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 84);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

void T_DocumentProxy::Password(__OCF TAutoString arg0)
{
	static __OCF TAutoDispId i_(this, 85);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

void T_DocumentProxy::WritePassword(__OCF TAutoString arg0)
{
	static __OCF TAutoDispId i_(this, 86);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

/*__OWL*/ TBool T_DocumentProxy::HasPassword()
{
	static __OCF TAutoDispId i_(this, 87);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

/*__OWL*/ TBool T_DocumentProxy::WriteReserved()
{
	static __OCF TAutoDispId i_(this, 88);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

__OCF TAutoString T_DocumentProxy::ActiveWritingStyle(__OCF TAutoVal* LanguageID)
{
	static __OCF TAutoDispId i_(this, 90);
	__OCF TAutoArgs<1> a_;
	wordObjects::push_arg(a_[1], LanguageID);
	return Invoke(acPropGet, a_, i_, i_);
}

void T_DocumentProxy::ActiveWritingStyle(__OCF TAutoVal* LanguageID, __OCF TAutoString arg1)
{
	static __OCF TAutoDispId i_(this, 90);
	__OCF TAutoArgs<1> a_;
	wordObjects::push_arg(a_[1], LanguageID);
	wordObjects::push_arg(a_[0], arg1);
	Invoke(acPropSet, a_, i_, i_);
}

/*__OWL*/ TBool T_DocumentProxy::UserControl()
{
	static __OCF TAutoDispId i_(this, 92);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

void T_DocumentProxy::UserControl(/*__OWL*/ TBool arg0)
{
	static __OCF TAutoDispId i_(this, 92);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

/*__OWL*/ TBool T_DocumentProxy::HasMailer()
{
	static __OCF TAutoDispId i_(this, 93);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

void T_DocumentProxy::HasMailer(/*__OWL*/ TBool arg0)
{
	static __OCF TAutoDispId i_(this, 93);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

void T_DocumentProxy::_Mailer(TMailerProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 94);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

void T_DocumentProxy::_ReadabilityStatistics(TReadabilityStatisticsProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 96);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

void T_DocumentProxy::GrammaticalErrors(TProofreadingErrorsProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 97);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

void T_DocumentProxy::SpellingErrors(TProofreadingErrorsProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 98);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

VBProject* T_DocumentProxy::_VBProject()
{
	static __OCF TAutoDispId i_(this, 99);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

/*__OWL*/ TBool T_DocumentProxy::FormsDesign()
{
	static __OCF TAutoDispId i_(this, 100);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

__OCF TAutoString T_DocumentProxy::_CodeName()
{
	static __OCF TAutoDispId i_(this, -2147418112);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

void T_DocumentProxy::_CodeName(__OCF TAutoString arg0)
{
	static __OCF TAutoDispId i_(this, -2147418112);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

__OCF TAutoString T_DocumentProxy::CodeName()
{
	static __OCF TAutoDispId i_(this, 262);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

/*__OWL*/ TBool T_DocumentProxy::SnapToGrid()
{
	static __OCF TAutoDispId i_(this, 300);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

void T_DocumentProxy::SnapToGrid(/*__OWL*/ TBool arg0)
{
	static __OCF TAutoDispId i_(this, 300);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

/*__OWL*/ TBool T_DocumentProxy::SnapToShapes()
{
	static __OCF TAutoDispId i_(this, 301);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

void T_DocumentProxy::SnapToShapes(/*__OWL*/ TBool arg0)
{
	static __OCF TAutoDispId i_(this, 301);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

float T_DocumentProxy::GridDistanceHorizontal()
{
	static __OCF TAutoDispId i_(this, 302);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

void T_DocumentProxy::GridDistanceHorizontal(float arg0)
{
	static __OCF TAutoDispId i_(this, 302);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

float T_DocumentProxy::GridDistanceVertical()
{
	static __OCF TAutoDispId i_(this, 303);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

void T_DocumentProxy::GridDistanceVertical(float arg0)
{
	static __OCF TAutoDispId i_(this, 303);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

float T_DocumentProxy::GridOriginHorizontal()
{
	static __OCF TAutoDispId i_(this, 304);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

void T_DocumentProxy::GridOriginHorizontal(float arg0)
{
	static __OCF TAutoDispId i_(this, 304);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

float T_DocumentProxy::GridOriginVertical()
{
	static __OCF TAutoDispId i_(this, 305);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

void T_DocumentProxy::GridOriginVertical(float arg0)
{
	static __OCF TAutoDispId i_(this, 305);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

long T_DocumentProxy::GridSpaceBetweenHorizontalLines()
{
	static __OCF TAutoDispId i_(this, 306);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

void T_DocumentProxy::GridSpaceBetweenHorizontalLines(long arg0)
{
	static __OCF TAutoDispId i_(this, 306);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

long T_DocumentProxy::GridSpaceBetweenVerticalLines()
{
	static __OCF TAutoDispId i_(this, 307);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

void T_DocumentProxy::GridSpaceBetweenVerticalLines(long arg0)
{
	static __OCF TAutoDispId i_(this, 307);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

/*__OWL*/ TBool T_DocumentProxy::GridOriginFromMargin()
{
	static __OCF TAutoDispId i_(this, 308);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

void T_DocumentProxy::GridOriginFromMargin(/*__OWL*/ TBool arg0)
{
	static __OCF TAutoDispId i_(this, 308);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

/*__OWL*/ TBool T_DocumentProxy::KerningByAlgorithm()
{
	static __OCF TAutoDispId i_(this, 309);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

void T_DocumentProxy::KerningByAlgorithm(/*__OWL*/ TBool arg0)
{
	static __OCF TAutoDispId i_(this, 309);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

WdJustificationMode T_DocumentProxy::JustificationMode()
{
	static __OCF TAutoDispId i_(this, 310);
	__OCF TAutoArgs<0> a_;
	return (WdJustificationMode)(int)Invoke(acPropGet, a_, i_, i_);
}

void T_DocumentProxy::JustificationMode(WdJustificationMode arg0)
{
	static __OCF TAutoDispId i_(this, 310);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

WdFarEastLineBreakLevel T_DocumentProxy::FarEastLineBreakLevel()
{
	static __OCF TAutoDispId i_(this, 311);
	__OCF TAutoArgs<0> a_;
	return (WdFarEastLineBreakLevel)(int)Invoke(acPropGet, a_, i_, i_);
}

void T_DocumentProxy::FarEastLineBreakLevel(WdFarEastLineBreakLevel arg0)
{
	static __OCF TAutoDispId i_(this, 311);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

__OCF TAutoString T_DocumentProxy::NoLineBreakBefore()
{
	static __OCF TAutoDispId i_(this, 312);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

void T_DocumentProxy::NoLineBreakBefore(__OCF TAutoString arg0)
{
	static __OCF TAutoDispId i_(this, 312);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

__OCF TAutoString T_DocumentProxy::NoLineBreakAfter()
{
	static __OCF TAutoDispId i_(this, 313);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

void T_DocumentProxy::NoLineBreakAfter(__OCF TAutoString arg0)
{
	static __OCF TAutoDispId i_(this, 313);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

/*__OWL*/ TBool T_DocumentProxy::TrackRevisions()
{
	static __OCF TAutoDispId i_(this, 314);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

void T_DocumentProxy::TrackRevisions(/*__OWL*/ TBool arg0)
{
	static __OCF TAutoDispId i_(this, 314);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

/*__OWL*/ TBool T_DocumentProxy::PrintRevisions()
{
	static __OCF TAutoDispId i_(this, 315);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

void T_DocumentProxy::PrintRevisions(/*__OWL*/ TBool arg0)
{
	static __OCF TAutoDispId i_(this, 315);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

/*__OWL*/ TBool T_DocumentProxy::ShowRevisions()
{
	static __OCF TAutoDispId i_(this, 316);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

void T_DocumentProxy::ShowRevisions(/*__OWL*/ TBool arg0)
{
	static __OCF TAutoDispId i_(this, 316);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

void T_DocumentProxy::Close(__OCF TAutoVal* SaveChanges, __OCF TAutoVal* OriginalFormat, __OCF TAutoVal* RouteDocument)
{
	static __OCF TAutoDispId i_(this, 1105);
	__OCF TAutoArgs<3> a_;
	wordObjects::push_arg(a_[1], SaveChanges);
	wordObjects::push_arg(a_[2], OriginalFormat);
	wordObjects::push_arg(a_[3], RouteDocument);
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void T_DocumentProxy::SaveAs2000(__OCF TAutoVal* FileName, __OCF TAutoVal* FileFormat, __OCF TAutoVal* LockComments, __OCF TAutoVal* Password, __OCF TAutoVal* AddToRecentFiles, __OCF TAutoVal* WritePassword, __OCF TAutoVal* ReadOnlyRecommended, __OCF TAutoVal* EmbedTrueTypeFonts, __OCF TAutoVal* SaveNativePictureFormat, __OCF TAutoVal* SaveFormsData, __OCF TAutoVal* SaveAsAOCELetter)
{
	static __OCF TAutoDispId i_(this, 102);
	__OCF TAutoArgs<11> a_;
	wordObjects::push_arg(a_[1], FileName);
	wordObjects::push_arg(a_[2], FileFormat);
	wordObjects::push_arg(a_[3], LockComments);
	wordObjects::push_arg(a_[4], Password);
	wordObjects::push_arg(a_[5], AddToRecentFiles);
	wordObjects::push_arg(a_[6], WritePassword);
	wordObjects::push_arg(a_[7], ReadOnlyRecommended);
	wordObjects::push_arg(a_[8], EmbedTrueTypeFonts);
	wordObjects::push_arg(a_[9], SaveNativePictureFormat);
	wordObjects::push_arg(a_[10], SaveFormsData);
	wordObjects::push_arg(a_[11], SaveAsAOCELetter);
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void T_DocumentProxy::Repaginate()
{
	static __OCF TAutoDispId i_(this, 103);
	__OCF TAutoArgs<0> a_;
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void T_DocumentProxy::FitToPages()
{
	static __OCF TAutoDispId i_(this, 104);
	__OCF TAutoArgs<0> a_;
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void T_DocumentProxy::ManualHyphenation()
{
	static __OCF TAutoDispId i_(this, 105);
	__OCF TAutoArgs<0> a_;
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void T_DocumentProxy::Select()
{
	static __OCF TAutoDispId i_(this, 65535);
	__OCF TAutoArgs<0> a_;
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void T_DocumentProxy::DataForm()
{
	static __OCF TAutoDispId i_(this, 106);
	__OCF TAutoArgs<0> a_;
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void T_DocumentProxy::Route()
{
	static __OCF TAutoDispId i_(this, 107);
	__OCF TAutoArgs<0> a_;
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void T_DocumentProxy::Save()
{
	static __OCF TAutoDispId i_(this, 108);
	__OCF TAutoArgs<0> a_;
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void T_DocumentProxy::PrintOutOld(__OCF TAutoVal* Background, __OCF TAutoVal* Append, __OCF TAutoVal* arg2, __OCF TAutoVal* OutputFileName, __OCF TAutoVal* From, __OCF TAutoVal* To, __OCF TAutoVal* Item, __OCF TAutoVal* Copies, __OCF TAutoVal* Pages, __OCF TAutoVal* PageType, __OCF TAutoVal* PrintToFile, __OCF TAutoVal* Collate, __OCF TAutoVal* ActivePrinterMacGX, __OCF TAutoVal* ManualDuplexPrint)
{
	static __OCF TAutoDispId i_(this, 109);
	__OCF TAutoArgs<14> a_;
	wordObjects::push_arg(a_[1], Background);
	wordObjects::push_arg(a_[2], Append);
	wordObjects::push_arg(a_[3], arg2);
	wordObjects::push_arg(a_[4], OutputFileName);
	wordObjects::push_arg(a_[5], From);
	wordObjects::push_arg(a_[6], To);
	wordObjects::push_arg(a_[7], Item);
	wordObjects::push_arg(a_[8], Copies);
	wordObjects::push_arg(a_[9], Pages);
	wordObjects::push_arg(a_[10], PageType);
	wordObjects::push_arg(a_[11], PrintToFile);
	wordObjects::push_arg(a_[12], Collate);
	wordObjects::push_arg(a_[13], ActivePrinterMacGX);
	wordObjects::push_arg(a_[14], ManualDuplexPrint);
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void T_DocumentProxy::SendMail()
{
	static __OCF TAutoDispId i_(this, 110);
	__OCF TAutoArgs<0> a_;
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void T_DocumentProxy::_Range(TRangeProxy& Obj, __OCF TAutoVal* Start, __OCF TAutoVal* End)
{
	static __OCF TAutoDispId i_(this, 2000);
	__OCF TAutoArgs<2> a_;
	wordObjects::push_arg(a_[1], Start);
	wordObjects::push_arg(a_[2], End);
	Obj.Bind(Invoke(acMethod, a_, i_, i_));
}

void T_DocumentProxy::RunAutoMacro(WdAutoMacros Which)
{
	static __OCF TAutoDispId i_(this, 112);
	__OCF TAutoArgs<1> a_;
	wordObjects::push_arg(a_[1], Which);
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void T_DocumentProxy::Activate()
{
	static __OCF TAutoDispId i_(this, 113);
	__OCF TAutoArgs<0> a_;
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void T_DocumentProxy::PrintPreview()
{
	static __OCF TAutoDispId i_(this, 114);
	__OCF TAutoArgs<0> a_;
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void T_DocumentProxy::GoTo(TRangeProxy& Obj, __OCF TAutoVal* What, __OCF TAutoVal* Which, __OCF TAutoVal* Count, __OCF TAutoVal* Name)
{
	static __OCF TAutoDispId i_(this, 115);
	__OCF TAutoArgs<4> a_;
	wordObjects::push_arg(a_[1], What);
	wordObjects::push_arg(a_[2], Which);
	wordObjects::push_arg(a_[3], Count);
	wordObjects::push_arg(a_[4], Name);
	Obj.Bind(Invoke(acMethod, a_, i_, i_));
}

/*__OWL*/ TBool T_DocumentProxy::Undo(__OCF TAutoVal* Times)
{
	static __OCF TAutoDispId i_(this, 116);
	__OCF TAutoArgs<1> a_;
	wordObjects::push_arg(a_[1], Times);
	return Invoke(acMethod, a_, i_, i_);
}

/*__OWL*/ TBool T_DocumentProxy::Redo(__OCF TAutoVal* Times)
{
	static __OCF TAutoDispId i_(this, 117);
	__OCF TAutoArgs<1> a_;
	wordObjects::push_arg(a_[1], Times);
	return Invoke(acMethod, a_, i_, i_);
}

long T_DocumentProxy::ComputeStatistics(WdStatistic Statistic, __OCF TAutoVal* IncludeFootnotesAndEndnotes)
{
	static __OCF TAutoDispId i_(this, 118);
	__OCF TAutoArgs<2> a_;
	wordObjects::push_arg(a_[1], Statistic);
	wordObjects::push_arg(a_[2], IncludeFootnotesAndEndnotes);
	return Invoke(acMethod, a_, i_, i_);
}

void T_DocumentProxy::MakeCompatibilityDefault()
{
	static __OCF TAutoDispId i_(this, 119);
	__OCF TAutoArgs<0> a_;
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void T_DocumentProxy::Protect2002(WdProtectionType Type, __OCF TAutoVal* NoReset, __OCF TAutoVal* Password)
{
	static __OCF TAutoDispId i_(this, 120);
	__OCF TAutoArgs<3> a_;
	wordObjects::push_arg(a_[1], Type);
	wordObjects::push_arg(a_[2], NoReset);
	wordObjects::push_arg(a_[3], Password);
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void T_DocumentProxy::Unprotect(__OCF TAutoVal* Password)
{
	static __OCF TAutoDispId i_(this, 121);
	__OCF TAutoArgs<1> a_;
	wordObjects::push_arg(a_[1], Password);
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void T_DocumentProxy::EditionOptions(WdEditionType Type, WdEditionOption Option, __OCF TAutoString Name, __OCF TAutoVal* Format)
{
	static __OCF TAutoDispId i_(this, 122);
	__OCF TAutoArgs<4> a_;
	wordObjects::push_arg(a_[1], Type);
	wordObjects::push_arg(a_[2], Option);
	wordObjects::push_arg(a_[3], Name);
	wordObjects::push_arg(a_[4], Format);
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void T_DocumentProxy::RunLetterWizard(__OCF TAutoVal* arg0, __OCF TAutoVal* WizardMode)
{
	static __OCF TAutoDispId i_(this, 123);
	__OCF TAutoArgs<2> a_;
	wordObjects::push_arg(a_[1], arg0);
	wordObjects::push_arg(a_[2], WizardMode);
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

LetterContent* T_DocumentProxy::GetLetterContent()
{
	static __OCF TAutoDispId i_(this, 124);
	__OCF TAutoArgs<0> a_;
	return Invoke(acMethod, a_, i_, i_);
}

void T_DocumentProxy::SetLetterContent(__OCF TAutoVal* arg0)
{
	static __OCF TAutoDispId i_(this, 125);
	__OCF TAutoArgs<1> a_;
	wordObjects::push_arg(a_[1], arg0);
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void T_DocumentProxy::CopyStylesFromTemplate(__OCF TAutoString arg0)
{
	static __OCF TAutoDispId i_(this, 126);
	__OCF TAutoArgs<1> a_;
	wordObjects::push_arg(a_[1], arg0);
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void T_DocumentProxy::UpdateStyles()
{
	static __OCF TAutoDispId i_(this, 127);
	__OCF TAutoArgs<0> a_;
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void T_DocumentProxy::CheckGrammar()
{
	static __OCF TAutoDispId i_(this, 131);
	__OCF TAutoArgs<0> a_;
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void T_DocumentProxy::CheckSpelling(__OCF TAutoVal* CustomDictionary, __OCF TAutoVal* IgnoreUppercase, __OCF TAutoVal* AlwaysSuggest, __OCF TAutoVal* CustomDictionary2, __OCF TAutoVal* CustomDictionary3, __OCF TAutoVal* CustomDictionary4, __OCF TAutoVal* CustomDictionary5, __OCF TAutoVal* CustomDictionary6, __OCF TAutoVal* CustomDictionary7, __OCF TAutoVal* CustomDictionary8, __OCF TAutoVal* CustomDictionary9, __OCF TAutoVal* CustomDictionary10)
{
	static __OCF TAutoDispId i_(this, 132);
	__OCF TAutoArgs<12> a_;
	wordObjects::push_arg(a_[1], CustomDictionary);
	wordObjects::push_arg(a_[2], IgnoreUppercase);
	wordObjects::push_arg(a_[3], AlwaysSuggest);
	wordObjects::push_arg(a_[4], CustomDictionary2);
	wordObjects::push_arg(a_[5], CustomDictionary3);
	wordObjects::push_arg(a_[6], CustomDictionary4);
	wordObjects::push_arg(a_[7], CustomDictionary5);
	wordObjects::push_arg(a_[8], CustomDictionary6);
	wordObjects::push_arg(a_[9], CustomDictionary7);
	wordObjects::push_arg(a_[10], CustomDictionary8);
	wordObjects::push_arg(a_[11], CustomDictionary9);
	wordObjects::push_arg(a_[12], CustomDictionary10);
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void T_DocumentProxy::FollowHyperlink(__OCF TAutoVal* Address, __OCF TAutoVal* SubAddress, __OCF TAutoVal* NewWindow, __OCF TAutoVal* AddHistory, __OCF TAutoVal* ExtraInfo, __OCF TAutoVal* Method, __OCF TAutoVal* HeaderInfo)
{
	static __OCF TAutoDispId i_(this, 135);
	__OCF TAutoArgs<7> a_;
	wordObjects::push_arg(a_[1], Address);
	wordObjects::push_arg(a_[2], SubAddress);
	wordObjects::push_arg(a_[3], NewWindow);
	wordObjects::push_arg(a_[4], AddHistory);
	wordObjects::push_arg(a_[5], ExtraInfo);
	wordObjects::push_arg(a_[6], Method);
	wordObjects::push_arg(a_[7], HeaderInfo);
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void T_DocumentProxy::AddToFavorites()
{
	static __OCF TAutoDispId i_(this, 136);
	__OCF TAutoArgs<0> a_;
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void T_DocumentProxy::Reload()
{
	static __OCF TAutoDispId i_(this, 137);
	__OCF TAutoArgs<0> a_;
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void T_DocumentProxy::AutoSummarize(TRangeProxy& Obj, __OCF TAutoVal* Length, __OCF TAutoVal* Mode, __OCF TAutoVal* UpdateProperties)
{
	static __OCF TAutoDispId i_(this, 138);
	__OCF TAutoArgs<3> a_;
	wordObjects::push_arg(a_[1], Length);
	wordObjects::push_arg(a_[2], Mode);
	wordObjects::push_arg(a_[3], UpdateProperties);
	Obj.Bind(Invoke(acMethod, a_, i_, i_));
}

void T_DocumentProxy::RemoveNumbers(__OCF TAutoVal* NumberType)
{
	static __OCF TAutoDispId i_(this, 140);
	__OCF TAutoArgs<1> a_;
	wordObjects::push_arg(a_[1], NumberType);
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void T_DocumentProxy::ConvertNumbersToText(__OCF TAutoVal* NumberType)
{
	static __OCF TAutoDispId i_(this, 141);
	__OCF TAutoArgs<1> a_;
	wordObjects::push_arg(a_[1], NumberType);
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

long T_DocumentProxy::CountNumberedItems(__OCF TAutoVal* NumberType, __OCF TAutoVal* Level)
{
	static __OCF TAutoDispId i_(this, 142);
	__OCF TAutoArgs<2> a_;
	wordObjects::push_arg(a_[1], NumberType);
	wordObjects::push_arg(a_[2], Level);
	return Invoke(acMethod, a_, i_, i_);
}

void T_DocumentProxy::Post()
{
	static __OCF TAutoDispId i_(this, 143);
	__OCF TAutoArgs<0> a_;
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void T_DocumentProxy::ToggleFormsDesign()
{
	static __OCF TAutoDispId i_(this, 144);
	__OCF TAutoArgs<0> a_;
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void T_DocumentProxy::Compare2000(__OCF TAutoString Name)
{
	static __OCF TAutoDispId i_(this, 145);
	__OCF TAutoArgs<1> a_;
	wordObjects::push_arg(a_[1], Name);
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void T_DocumentProxy::UpdateSummaryProperties()
{
	static __OCF TAutoDispId i_(this, 146);
	__OCF TAutoArgs<0> a_;
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

__OCF TAutoVal T_DocumentProxy::GetCrossReferenceItems(__OCF TAutoVal* ReferenceType)
{
	static __OCF TAutoDispId i_(this, 147);
	__OCF TAutoArgs<1> a_;
	wordObjects::push_arg(a_[1], ReferenceType);
	return Invoke(acMethod, a_, i_, i_);
}

void T_DocumentProxy::AutoFormat()
{
	static __OCF TAutoDispId i_(this, 148);
	__OCF TAutoArgs<0> a_;
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void T_DocumentProxy::ViewCode()
{
	static __OCF TAutoDispId i_(this, 149);
	__OCF TAutoArgs<0> a_;
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void T_DocumentProxy::ViewPropertyBrowser()
{
	static __OCF TAutoDispId i_(this, 150);
	__OCF TAutoArgs<0> a_;
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void T_DocumentProxy::ForwardMailer()
{
	static __OCF TAutoDispId i_(this, 250);
	__OCF TAutoArgs<0> a_;
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void T_DocumentProxy::Reply()
{
	static __OCF TAutoDispId i_(this, 251);
	__OCF TAutoArgs<0> a_;
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void T_DocumentProxy::ReplyAll()
{
	static __OCF TAutoDispId i_(this, 252);
	__OCF TAutoArgs<0> a_;
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void T_DocumentProxy::SendMailer(__OCF TAutoVal* FileFormat, __OCF TAutoVal* Priority)
{
	static __OCF TAutoDispId i_(this, 253);
	__OCF TAutoArgs<2> a_;
	wordObjects::push_arg(a_[1], FileFormat);
	wordObjects::push_arg(a_[2], Priority);
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void T_DocumentProxy::UndoClear()
{
	static __OCF TAutoDispId i_(this, 254);
	__OCF TAutoArgs<0> a_;
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void T_DocumentProxy::PresentIt()
{
	static __OCF TAutoDispId i_(this, 255);
	__OCF TAutoArgs<0> a_;
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void T_DocumentProxy::SendFax(__OCF TAutoString Address, __OCF TAutoVal* Subject)
{
	static __OCF TAutoDispId i_(this, 256);
	__OCF TAutoArgs<2> a_;
	wordObjects::push_arg(a_[1], Address);
	wordObjects::push_arg(a_[2], Subject);
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void T_DocumentProxy::Merge2000(__OCF TAutoString FileName)
{
	static __OCF TAutoDispId i_(this, 257);
	__OCF TAutoArgs<1> a_;
	wordObjects::push_arg(a_[1], FileName);
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void T_DocumentProxy::ClosePrintPreview()
{
	static __OCF TAutoDispId i_(this, 258);
	__OCF TAutoArgs<0> a_;
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void T_DocumentProxy::CheckConsistency()
{
	static __OCF TAutoDispId i_(this, 259);
	__OCF TAutoArgs<0> a_;
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

LetterContent* T_DocumentProxy::CreateLetterContent(__OCF TAutoString DateFormat, /*__OWL*/ TBool IncludeHeaderFooter, __OCF TAutoString PageDesign, WdLetterStyle LetterStyle, /*__OWL*/ TBool Letterhead, WdLetterheadLocation LetterheadLocation, float LetterheadSize, __OCF TAutoString RecipientName, __OCF TAutoString RecipientAddress, __OCF TAutoString Salutation, WdSalutationType SalutationType, __OCF TAutoString RecipientReference, __OCF TAutoString MailingInstructions, __OCF TAutoString AttentionLine, __OCF TAutoString Subject, __OCF TAutoString CCList, __OCF TAutoString ReturnAddress, __OCF TAutoString SenderName, __OCF TAutoString Closing, __OCF TAutoString SenderCompany, __OCF TAutoString SenderJobTitle, __OCF TAutoString SenderInitials, long EnclosureNumber, __OCF TAutoVal* InfoBlock, __OCF TAutoVal* RecipientCode, __OCF TAutoVal* RecipientGender, __OCF TAutoVal* ReturnAddressShortForm, __OCF TAutoVal* SenderCity, __OCF TAutoVal* SenderCode, __OCF TAutoVal* SenderGender, __OCF TAutoVal* SenderReference)
{
	static __OCF TAutoDispId i_(this, 260);
	__OCF TAutoArgs<31> a_;
	wordObjects::push_arg(a_[1], DateFormat);
	wordObjects::push_arg(a_[2], IncludeHeaderFooter);
	wordObjects::push_arg(a_[3], PageDesign);
	wordObjects::push_arg(a_[4], LetterStyle);
	wordObjects::push_arg(a_[5], Letterhead);
	wordObjects::push_arg(a_[6], LetterheadLocation);
	wordObjects::push_arg(a_[7], LetterheadSize);
	wordObjects::push_arg(a_[8], RecipientName);
	wordObjects::push_arg(a_[9], RecipientAddress);
	wordObjects::push_arg(a_[10], Salutation);
	wordObjects::push_arg(a_[11], SalutationType);
	wordObjects::push_arg(a_[12], RecipientReference);
	wordObjects::push_arg(a_[13], MailingInstructions);
	wordObjects::push_arg(a_[14], AttentionLine);
	wordObjects::push_arg(a_[15], Subject);
	wordObjects::push_arg(a_[16], CCList);
	wordObjects::push_arg(a_[17], ReturnAddress);
	wordObjects::push_arg(a_[18], SenderName);
	wordObjects::push_arg(a_[19], Closing);
	wordObjects::push_arg(a_[20], SenderCompany);
	wordObjects::push_arg(a_[21], SenderJobTitle);
	wordObjects::push_arg(a_[22], SenderInitials);
	wordObjects::push_arg(a_[23], EnclosureNumber);
	wordObjects::push_arg(a_[24], InfoBlock);
	wordObjects::push_arg(a_[25], RecipientCode);
	wordObjects::push_arg(a_[26], RecipientGender);
	wordObjects::push_arg(a_[27], ReturnAddressShortForm);
	wordObjects::push_arg(a_[28], SenderCity);
	wordObjects::push_arg(a_[29], SenderCode);
	wordObjects::push_arg(a_[30], SenderGender);
	wordObjects::push_arg(a_[31], SenderReference);
	return Invoke(acMethod, a_, i_, i_);
}

void T_DocumentProxy::AcceptAllRevisions()
{
	static __OCF TAutoDispId i_(this, 317);
	__OCF TAutoArgs<0> a_;
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void T_DocumentProxy::RejectAllRevisions()
{
	static __OCF TAutoDispId i_(this, 318);
	__OCF TAutoArgs<0> a_;
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void T_DocumentProxy::DetectLanguage()
{
	static __OCF TAutoDispId i_(this, 151);
	__OCF TAutoArgs<0> a_;
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void T_DocumentProxy::ApplyTheme(__OCF TAutoString Name)
{
	static __OCF TAutoDispId i_(this, 322);
	__OCF TAutoArgs<1> a_;
	wordObjects::push_arg(a_[1], Name);
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void T_DocumentProxy::RemoveTheme()
{
	static __OCF TAutoDispId i_(this, 323);
	__OCF TAutoArgs<0> a_;
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void T_DocumentProxy::WebPagePreview()
{
	static __OCF TAutoDispId i_(this, 325);
	__OCF TAutoArgs<0> a_;
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void T_DocumentProxy::ReloadAs(MsoEncoding Encoding)
{
	static __OCF TAutoDispId i_(this, 331);
	__OCF TAutoArgs<1> a_;
	wordObjects::push_arg(a_[1], Encoding);
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

__OCF TAutoString T_DocumentProxy::ActiveTheme()
{
	static __OCF TAutoDispId i_(this, 540);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

__OCF TAutoString T_DocumentProxy::ActiveThemeDisplayName()
{
	static __OCF TAutoDispId i_(this, 541);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

void T_DocumentProxy::_Email(TEmailProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 319);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

void T_DocumentProxy::_Scripts(TScriptsProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 320);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

/*__OWL*/ TBool T_DocumentProxy::LanguageDetected()
{
	static __OCF TAutoDispId i_(this, 321);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

void T_DocumentProxy::LanguageDetected(/*__OWL*/ TBool arg0)
{
	static __OCF TAutoDispId i_(this, 321);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

WdFarEastLineBreakLanguageID T_DocumentProxy::FarEastLineBreakLanguage()
{
	static __OCF TAutoDispId i_(this, 326);
	__OCF TAutoArgs<0> a_;
	return (WdFarEastLineBreakLanguageID)(int)Invoke(acPropGet, a_, i_, i_);
}

void T_DocumentProxy::FarEastLineBreakLanguage(WdFarEastLineBreakLanguageID arg0)
{
	static __OCF TAutoDispId i_(this, 326);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

void T_DocumentProxy::_Frameset(TFramesetProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 327);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

__OCF TAutoVal T_DocumentProxy::ClickAndTypeParagraphStyle()
{
	static __OCF TAutoDispId i_(this, 328);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

void T_DocumentProxy::ClickAndTypeParagraphStyle(__OCF TAutoVal* arg0)
{
	static __OCF TAutoDispId i_(this, 328);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

void T_DocumentProxy::_HTMLProject(THTMLProjectProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 329);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

void T_DocumentProxy::_WebOptions(TWebOptionsProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 330);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

MsoEncoding T_DocumentProxy::OpenEncoding()
{
	static __OCF TAutoDispId i_(this, 332);
	__OCF TAutoArgs<0> a_;
	return (MsoEncoding)(int)Invoke(acPropGet, a_, i_, i_);
}

MsoEncoding T_DocumentProxy::SaveEncoding()
{
	static __OCF TAutoDispId i_(this, 333);
	__OCF TAutoArgs<0> a_;
	return (MsoEncoding)(int)Invoke(acPropGet, a_, i_, i_);
}

void T_DocumentProxy::SaveEncoding(MsoEncoding arg0)
{
	static __OCF TAutoDispId i_(this, 333);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

/*__OWL*/ TBool T_DocumentProxy::OptimizeForWord97()
{
	static __OCF TAutoDispId i_(this, 334);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

void T_DocumentProxy::OptimizeForWord97(/*__OWL*/ TBool arg0)
{
	static __OCF TAutoDispId i_(this, 334);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

/*__OWL*/ TBool T_DocumentProxy::VBASigned()
{
	static __OCF TAutoDispId i_(this, 335);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

void T_DocumentProxy::PrintOut2000(__OCF TAutoVal* Background, __OCF TAutoVal* Append, __OCF TAutoVal* arg2, __OCF TAutoVal* OutputFileName, __OCF TAutoVal* From, __OCF TAutoVal* To, __OCF TAutoVal* Item, __OCF TAutoVal* Copies, __OCF TAutoVal* Pages, __OCF TAutoVal* PageType, __OCF TAutoVal* PrintToFile, __OCF TAutoVal* Collate, __OCF TAutoVal* ActivePrinterMacGX, __OCF TAutoVal* ManualDuplexPrint, __OCF TAutoVal* PrintZoomColumn, __OCF TAutoVal* PrintZoomRow, __OCF TAutoVal* PrintZoomPaperWidth, __OCF TAutoVal* PrintZoomPaperHeight)
{
	static __OCF TAutoDispId i_(this, 444);
	__OCF TAutoArgs<18> a_;
	wordObjects::push_arg(a_[1], Background);
	wordObjects::push_arg(a_[2], Append);
	wordObjects::push_arg(a_[3], arg2);
	wordObjects::push_arg(a_[4], OutputFileName);
	wordObjects::push_arg(a_[5], From);
	wordObjects::push_arg(a_[6], To);
	wordObjects::push_arg(a_[7], Item);
	wordObjects::push_arg(a_[8], Copies);
	wordObjects::push_arg(a_[9], Pages);
	wordObjects::push_arg(a_[10], PageType);
	wordObjects::push_arg(a_[11], PrintToFile);
	wordObjects::push_arg(a_[12], Collate);
	wordObjects::push_arg(a_[13], ActivePrinterMacGX);
	wordObjects::push_arg(a_[14], ManualDuplexPrint);
	wordObjects::push_arg(a_[15], PrintZoomColumn);
	wordObjects::push_arg(a_[16], PrintZoomRow);
	wordObjects::push_arg(a_[17], PrintZoomPaperWidth);
	wordObjects::push_arg(a_[18], PrintZoomPaperHeight);
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void T_DocumentProxy::sblt(__OCF TAutoString s)
{
	static __OCF TAutoDispId i_(this, 445);
	__OCF TAutoArgs<1> a_;
	wordObjects::push_arg(a_[1], s);
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void T_DocumentProxy::ConvertVietDoc(long CodePageOrigin)
{
	static __OCF TAutoDispId i_(this, 447);
	__OCF TAutoArgs<1> a_;
	wordObjects::push_arg(a_[1], CodePageOrigin);
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void T_DocumentProxy::PrintOut(__OCF TAutoVal* Background, __OCF TAutoVal* Append, __OCF TAutoVal* arg2, __OCF TAutoVal* OutputFileName, __OCF TAutoVal* From, __OCF TAutoVal* To, __OCF TAutoVal* Item, __OCF TAutoVal* Copies, __OCF TAutoVal* Pages, __OCF TAutoVal* PageType, __OCF TAutoVal* PrintToFile, __OCF TAutoVal* Collate, __OCF TAutoVal* ActivePrinterMacGX, __OCF TAutoVal* ManualDuplexPrint, __OCF TAutoVal* PrintZoomColumn, __OCF TAutoVal* PrintZoomRow, __OCF TAutoVal* PrintZoomPaperWidth, __OCF TAutoVal* PrintZoomPaperHeight)
{
	static __OCF TAutoDispId i_(this, 446);
	__OCF TAutoArgs<18> a_;
	wordObjects::push_arg(a_[1], Background);
	wordObjects::push_arg(a_[2], Append);
	wordObjects::push_arg(a_[3], arg2);
	wordObjects::push_arg(a_[4], OutputFileName);
	wordObjects::push_arg(a_[5], From);
	wordObjects::push_arg(a_[6], To);
	wordObjects::push_arg(a_[7], Item);
	wordObjects::push_arg(a_[8], Copies);
	wordObjects::push_arg(a_[9], Pages);
	wordObjects::push_arg(a_[10], PageType);
	wordObjects::push_arg(a_[11], PrintToFile);
	wordObjects::push_arg(a_[12], Collate);
	wordObjects::push_arg(a_[13], ActivePrinterMacGX);
	wordObjects::push_arg(a_[14], ManualDuplexPrint);
	wordObjects::push_arg(a_[15], PrintZoomColumn);
	wordObjects::push_arg(a_[16], PrintZoomRow);
	wordObjects::push_arg(a_[17], PrintZoomPaperWidth);
	wordObjects::push_arg(a_[18], PrintZoomPaperHeight);
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

MsoEnvelope* T_DocumentProxy::MailEnvelope()
{
	static __OCF TAutoDispId i_(this, 336);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

/*__OWL*/ TBool T_DocumentProxy::DisableFeatures()
{
	static __OCF TAutoDispId i_(this, 337);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

void T_DocumentProxy::DisableFeatures(/*__OWL*/ TBool arg0)
{
	static __OCF TAutoDispId i_(this, 337);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

/*__OWL*/ TBool T_DocumentProxy::DoNotEmbedSystemFonts()
{
	static __OCF TAutoDispId i_(this, 338);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

void T_DocumentProxy::DoNotEmbedSystemFonts(/*__OWL*/ TBool arg0)
{
	static __OCF TAutoDispId i_(this, 338);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

void T_DocumentProxy::Signatures(TSignatureSetProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 339);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

__OCF TAutoString T_DocumentProxy::DefaultTargetFrame()
{
	static __OCF TAutoDispId i_(this, 340);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

void T_DocumentProxy::DefaultTargetFrame(__OCF TAutoString arg0)
{
	static __OCF TAutoDispId i_(this, 340);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

void T_DocumentProxy::_HTMLDivisions(THTMLDivisionsProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 342);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

WdDisableFeaturesIntroducedAfter T_DocumentProxy::DisableFeaturesIntroducedAfter()
{
	static __OCF TAutoDispId i_(this, 343);
	__OCF TAutoArgs<0> a_;
	return (WdDisableFeaturesIntroducedAfter)(int)Invoke(acPropGet, a_, i_, i_);
}

void T_DocumentProxy::DisableFeaturesIntroducedAfter(WdDisableFeaturesIntroducedAfter arg0)
{
	static __OCF TAutoDispId i_(this, 343);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

/*__OWL*/ TBool T_DocumentProxy::RemovePersonalInformation()
{
	static __OCF TAutoDispId i_(this, 344);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

void T_DocumentProxy::RemovePersonalInformation(/*__OWL*/ TBool arg0)
{
	static __OCF TAutoDispId i_(this, 344);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

void T_DocumentProxy::_SmartTags(TSmartTagsProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 346);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

void T_DocumentProxy::Compare2002(__OCF TAutoString Name, __OCF TAutoVal* AuthorName, __OCF TAutoVal* CompareTarget, __OCF TAutoVal* DetectFormatChanges, __OCF TAutoVal* IgnoreAllComparisonWarnings, __OCF TAutoVal* AddToRecentFiles)
{
	static __OCF TAutoDispId i_(this, 345);
	__OCF TAutoArgs<6> a_;
	wordObjects::push_arg(a_[1], Name);
	wordObjects::push_arg(a_[2], AuthorName);
	wordObjects::push_arg(a_[3], CompareTarget);
	wordObjects::push_arg(a_[4], DetectFormatChanges);
	wordObjects::push_arg(a_[5], IgnoreAllComparisonWarnings);
	wordObjects::push_arg(a_[6], AddToRecentFiles);
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void T_DocumentProxy::CheckIn(/*__OWL*/ TBool SaveChanges, __OCF TAutoVal* arg1, /*__OWL*/ TBool MakePublic)
{
	static __OCF TAutoDispId i_(this, 349);
	__OCF TAutoArgs<3> a_;
	wordObjects::push_arg(a_[1], SaveChanges);
	wordObjects::push_arg(a_[2], arg1);
	wordObjects::push_arg(a_[3], MakePublic);
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

/*__OWL*/ TBool T_DocumentProxy::CanCheckin()
{
	static __OCF TAutoDispId i_(this, 351);
	__OCF TAutoArgs<0> a_;
	return Invoke(acMethod, a_, i_, i_);
}

void T_DocumentProxy::Merge(__OCF TAutoString FileName, __OCF TAutoVal* MergeTarget, __OCF TAutoVal* DetectFormatChanges, __OCF TAutoVal* UseFormattingFrom, __OCF TAutoVal* AddToRecentFiles)
{
	static __OCF TAutoDispId i_(this, 362);
	__OCF TAutoArgs<5> a_;
	wordObjects::push_arg(a_[1], FileName);
	wordObjects::push_arg(a_[2], MergeTarget);
	wordObjects::push_arg(a_[3], DetectFormatChanges);
	wordObjects::push_arg(a_[4], UseFormattingFrom);
	wordObjects::push_arg(a_[5], AddToRecentFiles);
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

/*__OWL*/ TBool T_DocumentProxy::EmbedSmartTags()
{
	static __OCF TAutoDispId i_(this, 347);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

void T_DocumentProxy::EmbedSmartTags(/*__OWL*/ TBool arg0)
{
	static __OCF TAutoDispId i_(this, 347);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

/*__OWL*/ TBool T_DocumentProxy::SmartTagsAsXMLProps()
{
	static __OCF TAutoDispId i_(this, 348);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

void T_DocumentProxy::SmartTagsAsXMLProps(/*__OWL*/ TBool arg0)
{
	static __OCF TAutoDispId i_(this, 348);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

MsoEncoding T_DocumentProxy::TextEncoding()
{
	static __OCF TAutoDispId i_(this, 357);
	__OCF TAutoArgs<0> a_;
	return (MsoEncoding)(int)Invoke(acPropGet, a_, i_, i_);
}

void T_DocumentProxy::TextEncoding(MsoEncoding arg0)
{
	static __OCF TAutoDispId i_(this, 357);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

WdLineEndingType T_DocumentProxy::TextLineEnding()
{
	static __OCF TAutoDispId i_(this, 358);
	__OCF TAutoArgs<0> a_;
	return (WdLineEndingType)(int)Invoke(acPropGet, a_, i_, i_);
}

void T_DocumentProxy::TextLineEnding(WdLineEndingType arg0)
{
	static __OCF TAutoDispId i_(this, 358);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

void T_DocumentProxy::SendForReview(__OCF TAutoVal* Recipients, __OCF TAutoVal* Subject, __OCF TAutoVal* ShowMessage, __OCF TAutoVal* IncludeAttachment)
{
	static __OCF TAutoDispId i_(this, 353);
	__OCF TAutoArgs<4> a_;
	wordObjects::push_arg(a_[1], Recipients);
	wordObjects::push_arg(a_[2], Subject);
	wordObjects::push_arg(a_[3], ShowMessage);
	wordObjects::push_arg(a_[4], IncludeAttachment);
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void T_DocumentProxy::ReplyWithChanges(__OCF TAutoVal* ShowMessage)
{
	static __OCF TAutoDispId i_(this, 354);
	__OCF TAutoArgs<1> a_;
	wordObjects::push_arg(a_[1], ShowMessage);
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void T_DocumentProxy::EndReview()
{
	static __OCF TAutoDispId i_(this, 356);
	__OCF TAutoArgs<0> a_;
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void T_DocumentProxy::_StyleSheets(TStyleSheetsProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 360);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

__OCF TAutoVal T_DocumentProxy::DefaultTableStyle()
{
	static __OCF TAutoDispId i_(this, 365);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

__OCF TAutoString T_DocumentProxy::PasswordEncryptionProvider()
{
	static __OCF TAutoDispId i_(this, 367);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

__OCF TAutoString T_DocumentProxy::PasswordEncryptionAlgorithm()
{
	static __OCF TAutoDispId i_(this, 368);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

long T_DocumentProxy::PasswordEncryptionKeyLength()
{
	static __OCF TAutoDispId i_(this, 369);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

/*__OWL*/ TBool T_DocumentProxy::PasswordEncryptionFileProperties()
{
	static __OCF TAutoDispId i_(this, 370);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

void T_DocumentProxy::SetPasswordEncryptionOptions(__OCF TAutoString PasswordEncryptionProvider, __OCF TAutoString PasswordEncryptionAlgorithm, long PasswordEncryptionKeyLength, __OCF TAutoVal* PasswordEncryptionFileProperties)
{
	static __OCF TAutoDispId i_(this, 361);
	__OCF TAutoArgs<4> a_;
	wordObjects::push_arg(a_[1], PasswordEncryptionProvider);
	wordObjects::push_arg(a_[2], PasswordEncryptionAlgorithm);
	wordObjects::push_arg(a_[3], PasswordEncryptionKeyLength);
	wordObjects::push_arg(a_[4], PasswordEncryptionFileProperties);
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void T_DocumentProxy::RecheckSmartTags()
{
	static __OCF TAutoDispId i_(this, 363);
	__OCF TAutoArgs<0> a_;
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void T_DocumentProxy::RemoveSmartTags()
{
	static __OCF TAutoDispId i_(this, 364);
	__OCF TAutoArgs<0> a_;
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void T_DocumentProxy::SetDefaultTableStyle(__OCF TAutoVal* Style, /*__OWL*/ TBool SetInTemplate)
{
	static __OCF TAutoDispId i_(this, 366);
	__OCF TAutoArgs<2> a_;
	wordObjects::push_arg(a_[1], Style);
	wordObjects::push_arg(a_[2], SetInTemplate);
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void T_DocumentProxy::DeleteAllComments()
{
	static __OCF TAutoDispId i_(this, 371);
	__OCF TAutoArgs<0> a_;
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void T_DocumentProxy::AcceptAllRevisionsShown()
{
	static __OCF TAutoDispId i_(this, 372);
	__OCF TAutoArgs<0> a_;
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void T_DocumentProxy::RejectAllRevisionsShown()
{
	static __OCF TAutoDispId i_(this, 373);
	__OCF TAutoArgs<0> a_;
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void T_DocumentProxy::DeleteAllCommentsShown()
{
	static __OCF TAutoDispId i_(this, 374);
	__OCF TAutoArgs<0> a_;
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void T_DocumentProxy::ResetFormFields()
{
	static __OCF TAutoDispId i_(this, 375);
	__OCF TAutoArgs<0> a_;
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void T_DocumentProxy::SaveAs(__OCF TAutoVal* FileName, __OCF TAutoVal* FileFormat, __OCF TAutoVal* LockComments, __OCF TAutoVal* Password, __OCF TAutoVal* AddToRecentFiles, __OCF TAutoVal* WritePassword, __OCF TAutoVal* ReadOnlyRecommended, __OCF TAutoVal* EmbedTrueTypeFonts, __OCF TAutoVal* SaveNativePictureFormat, __OCF TAutoVal* SaveFormsData, __OCF TAutoVal* SaveAsAOCELetter, __OCF TAutoVal* Encoding, __OCF TAutoVal* InsertLineBreaks, __OCF TAutoVal* AllowSubstitutions, __OCF TAutoVal* LineEnding, __OCF TAutoVal* AddBiDiMarks)
{
	static __OCF TAutoDispId i_(this, 376);
	__OCF TAutoArgs<16> a_;
	wordObjects::push_arg(a_[1], FileName);
	wordObjects::push_arg(a_[2], FileFormat);
	wordObjects::push_arg(a_[3], LockComments);
	wordObjects::push_arg(a_[4], Password);
	wordObjects::push_arg(a_[5], AddToRecentFiles);
	wordObjects::push_arg(a_[6], WritePassword);
	wordObjects::push_arg(a_[7], ReadOnlyRecommended);
	wordObjects::push_arg(a_[8], EmbedTrueTypeFonts);
	wordObjects::push_arg(a_[9], SaveNativePictureFormat);
	wordObjects::push_arg(a_[10], SaveFormsData);
	wordObjects::push_arg(a_[11], SaveAsAOCELetter);
	wordObjects::push_arg(a_[12], Encoding);
	wordObjects::push_arg(a_[13], InsertLineBreaks);
	wordObjects::push_arg(a_[14], AllowSubstitutions);
	wordObjects::push_arg(a_[15], LineEnding);
	wordObjects::push_arg(a_[16], AddBiDiMarks);
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

/*__OWL*/ TBool T_DocumentProxy::EmbedLinguisticData()
{
	static __OCF TAutoDispId i_(this, 377);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

void T_DocumentProxy::EmbedLinguisticData(/*__OWL*/ TBool arg0)
{
	static __OCF TAutoDispId i_(this, 377);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

/*__OWL*/ TBool T_DocumentProxy::FormattingShowFont()
{
	static __OCF TAutoDispId i_(this, 448);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

void T_DocumentProxy::FormattingShowFont(/*__OWL*/ TBool arg0)
{
	static __OCF TAutoDispId i_(this, 448);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

/*__OWL*/ TBool T_DocumentProxy::FormattingShowClear()
{
	static __OCF TAutoDispId i_(this, 449);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

void T_DocumentProxy::FormattingShowClear(/*__OWL*/ TBool arg0)
{
	static __OCF TAutoDispId i_(this, 449);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

/*__OWL*/ TBool T_DocumentProxy::FormattingShowParagraph()
{
	static __OCF TAutoDispId i_(this, 450);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

void T_DocumentProxy::FormattingShowParagraph(/*__OWL*/ TBool arg0)
{
	static __OCF TAutoDispId i_(this, 450);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

/*__OWL*/ TBool T_DocumentProxy::FormattingShowNumbering()
{
	static __OCF TAutoDispId i_(this, 451);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

void T_DocumentProxy::FormattingShowNumbering(/*__OWL*/ TBool arg0)
{
	static __OCF TAutoDispId i_(this, 451);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

WdShowFilter T_DocumentProxy::FormattingShowFilter()
{
	static __OCF TAutoDispId i_(this, 452);
	__OCF TAutoArgs<0> a_;
	return (WdShowFilter)(int)Invoke(acPropGet, a_, i_, i_);
}

void T_DocumentProxy::FormattingShowFilter(WdShowFilter arg0)
{
	static __OCF TAutoDispId i_(this, 452);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

void T_DocumentProxy::CheckNewSmartTags()
{
	static __OCF TAutoDispId i_(this, 378);
	__OCF TAutoArgs<0> a_;
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void T_DocumentProxy::_Permission(TPermissionProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 453);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

void T_DocumentProxy::_XMLNodes(TXMLNodesProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 460);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

void T_DocumentProxy::_XMLSchemaReferences(TXMLSchemaReferencesProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 461);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

void T_DocumentProxy::_SmartDocument(TSmartDocumentProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 462);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

void T_DocumentProxy::_SharedWorkspace(TSharedWorkspaceProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 463);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

void T_DocumentProxy::_Sync(TSyncProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 466);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

/*__OWL*/ TBool T_DocumentProxy::EnforceStyle()
{
	static __OCF TAutoDispId i_(this, 471);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

void T_DocumentProxy::EnforceStyle(/*__OWL*/ TBool arg0)
{
	static __OCF TAutoDispId i_(this, 471);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

/*__OWL*/ TBool T_DocumentProxy::AutoFormatOverride()
{
	static __OCF TAutoDispId i_(this, 472);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

void T_DocumentProxy::AutoFormatOverride(/*__OWL*/ TBool arg0)
{
	static __OCF TAutoDispId i_(this, 472);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

/*__OWL*/ TBool T_DocumentProxy::XMLSaveDataOnly()
{
	static __OCF TAutoDispId i_(this, 473);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

void T_DocumentProxy::XMLSaveDataOnly(/*__OWL*/ TBool arg0)
{
	static __OCF TAutoDispId i_(this, 473);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

/*__OWL*/ TBool T_DocumentProxy::XMLHideNamespaces()
{
	static __OCF TAutoDispId i_(this, 477);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

void T_DocumentProxy::XMLHideNamespaces(/*__OWL*/ TBool arg0)
{
	static __OCF TAutoDispId i_(this, 477);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

/*__OWL*/ TBool T_DocumentProxy::XMLShowAdvancedErrors()
{
	static __OCF TAutoDispId i_(this, 478);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

void T_DocumentProxy::XMLShowAdvancedErrors(/*__OWL*/ TBool arg0)
{
	static __OCF TAutoDispId i_(this, 478);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

/*__OWL*/ TBool T_DocumentProxy::XMLUseXSLTWhenSaving()
{
	static __OCF TAutoDispId i_(this, 474);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

void T_DocumentProxy::XMLUseXSLTWhenSaving(/*__OWL*/ TBool arg0)
{
	static __OCF TAutoDispId i_(this, 474);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

__OCF TAutoString T_DocumentProxy::XMLSaveThroughXSLT()
{
	static __OCF TAutoDispId i_(this, 475);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

void T_DocumentProxy::XMLSaveThroughXSLT(__OCF TAutoString arg0)
{
	static __OCF TAutoDispId i_(this, 475);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

void T_DocumentProxy::_DocumentLibraryVersions(TDocumentLibraryVersionsProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 476);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

/*__OWL*/ TBool T_DocumentProxy::ReadingModeLayoutFrozen()
{
	static __OCF TAutoDispId i_(this, 481);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

void T_DocumentProxy::ReadingModeLayoutFrozen(/*__OWL*/ TBool arg0)
{
	static __OCF TAutoDispId i_(this, 481);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

/*__OWL*/ TBool T_DocumentProxy::RemoveDateAndTime()
{
	static __OCF TAutoDispId i_(this, 484);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

void T_DocumentProxy::RemoveDateAndTime(/*__OWL*/ TBool arg0)
{
	static __OCF TAutoDispId i_(this, 484);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

void T_DocumentProxy::SendFaxOverInternet(__OCF TAutoVal* Recipients, __OCF TAutoVal* Subject, __OCF TAutoVal* ShowMessage)
{
	static __OCF TAutoDispId i_(this, 464);
	__OCF TAutoArgs<3> a_;
	wordObjects::push_arg(a_[1], Recipients);
	wordObjects::push_arg(a_[2], Subject);
	wordObjects::push_arg(a_[3], ShowMessage);
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void T_DocumentProxy::TransformDocument(__OCF TAutoString Path, /*__OWL*/ TBool DataOnly)
{
	static __OCF TAutoDispId i_(this, 500);
	__OCF TAutoArgs<2> a_;
	wordObjects::push_arg(a_[1], Path);
	wordObjects::push_arg(a_[2], DataOnly);
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void T_DocumentProxy::Protect(WdProtectionType Type, __OCF TAutoVal* NoReset, __OCF TAutoVal* Password, __OCF TAutoVal* UseIRM, __OCF TAutoVal* EnforceStyleLock)
{
	static __OCF TAutoDispId i_(this, 467);
	__OCF TAutoArgs<5> a_;
	wordObjects::push_arg(a_[1], Type);
	wordObjects::push_arg(a_[2], NoReset);
	wordObjects::push_arg(a_[3], Password);
	wordObjects::push_arg(a_[4], UseIRM);
	wordObjects::push_arg(a_[5], EnforceStyleLock);
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void T_DocumentProxy::SelectAllEditableRanges(__OCF TAutoVal* EditorID)
{
	static __OCF TAutoDispId i_(this, 468);
	__OCF TAutoArgs<1> a_;
	wordObjects::push_arg(a_[1], EditorID);
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void T_DocumentProxy::DeleteAllEditableRanges(__OCF TAutoVal* EditorID)
{
	static __OCF TAutoDispId i_(this, 469);
	__OCF TAutoArgs<1> a_;
	wordObjects::push_arg(a_[1], EditorID);
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void T_DocumentProxy::DeleteAllInkAnnotations()
{
	static __OCF TAutoDispId i_(this, 479);
	__OCF TAutoArgs<0> a_;
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void T_DocumentProxy::AddDocumentWorkspaceHeader(/*__OWL*/ TBool RichFormat, __OCF TAutoString Url, __OCF TAutoString Title, __OCF TAutoString Description, __OCF TAutoString ID)
{
	static __OCF TAutoDispId i_(this, 482);
	__OCF TAutoArgs<5> a_;
	wordObjects::push_arg(a_[1], RichFormat);
	wordObjects::push_arg(a_[2], Url);
	wordObjects::push_arg(a_[3], Title);
	wordObjects::push_arg(a_[4], Description);
	wordObjects::push_arg(a_[5], ID);
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void T_DocumentProxy::RemoveDocumentWorkspaceHeader(__OCF TAutoString ID)
{
	static __OCF TAutoDispId i_(this, 483);
	__OCF TAutoArgs<1> a_;
	wordObjects::push_arg(a_[1], ID);
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void T_DocumentProxy::Compare(__OCF TAutoString Name, __OCF TAutoVal* AuthorName, __OCF TAutoVal* CompareTarget, __OCF TAutoVal* DetectFormatChanges, __OCF TAutoVal* IgnoreAllComparisonWarnings, __OCF TAutoVal* AddToRecentFiles, __OCF TAutoVal* RemovePersonalInformation, __OCF TAutoVal* RemoveDateAndTime)
{
	static __OCF TAutoDispId i_(this, 485);
	__OCF TAutoArgs<8> a_;
	wordObjects::push_arg(a_[1], Name);
	wordObjects::push_arg(a_[2], AuthorName);
	wordObjects::push_arg(a_[3], CompareTarget);
	wordObjects::push_arg(a_[4], DetectFormatChanges);
	wordObjects::push_arg(a_[5], IgnoreAllComparisonWarnings);
	wordObjects::push_arg(a_[6], AddToRecentFiles);
	wordObjects::push_arg(a_[7], RemovePersonalInformation);
	wordObjects::push_arg(a_[8], RemoveDateAndTime);
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void T_DocumentProxy::RemoveLockedStyles()
{
	static __OCF TAutoDispId i_(this, 487);
	__OCF TAutoArgs<0> a_;
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void T_DocumentProxy::ChildNodeSuggestions(TXMLChildNodeSuggestionsProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 486);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

void T_DocumentProxy::SelectSingleNode(TXMLNodeProxy& Obj, __OCF TAutoString XPath, __OCF TAutoString PrefixMapping, /*__OWL*/ TBool FastSearchSkippingTextNodes)
{
	static __OCF TAutoDispId i_(this, 488);
	__OCF TAutoArgs<3> a_;
	wordObjects::push_arg(a_[1], XPath);
	wordObjects::push_arg(a_[2], PrefixMapping);
	wordObjects::push_arg(a_[3], FastSearchSkippingTextNodes);
	Obj.Bind(Invoke(acMethod, a_, i_, i_));
}

void T_DocumentProxy::SelectNodes(TXMLNodesProxy& Obj, __OCF TAutoString XPath, __OCF TAutoString PrefixMapping, /*__OWL*/ TBool FastSearchSkippingTextNodes)
{
	static __OCF TAutoDispId i_(this, 489);
	__OCF TAutoArgs<3> a_;
	wordObjects::push_arg(a_[1], XPath);
	wordObjects::push_arg(a_[2], PrefixMapping);
	wordObjects::push_arg(a_[3], FastSearchSkippingTextNodes);
	Obj.Bind(Invoke(acMethod, a_, i_, i_));
}

void T_DocumentProxy::XMLSchemaViolations(TXMLNodesProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 490);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

long T_DocumentProxy::ReadingLayoutSizeX()
{
	static __OCF TAutoDispId i_(this, 491);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

void T_DocumentProxy::ReadingLayoutSizeX(long arg0)
{
	static __OCF TAutoDispId i_(this, 491);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

long T_DocumentProxy::ReadingLayoutSizeY()
{
	static __OCF TAutoDispId i_(this, 492);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

void T_DocumentProxy::ReadingLayoutSizeY(long arg0)
{
	static __OCF TAutoDispId i_(this, 492);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

/*

TDocumentEventsProxy::TDocumentEventsProxy(__OWL TWindow* parent, __OWL TResId resId, __OWL TModule* module) : TOleDialog(parent, resId, module)
{
}

TDocumentEventsProxy::~TDocumentEventsProxy(){
}

void TDocumentEventsProxy::SetupWindow()
{
	TOleDialog::SetupWindow();
	Ocx = GetOcControlOfOCX(IID_CoDocument);
	Proxy.Bind(Ocx->GetCtlDispatch());
}

void TNewProxy::New()
{
}

void TOpenProxy::Open()
{
}

void TCloseProxy::Close()
{
}

bool TDocumentEventsProxy::EvOcCtrlCustomEvent(__OCF TCtrlCustomEvent* pev)
{
	switch (pev->Args->DispId)
	{
	case 4 :
	{
		New();
		break;
	}
	case 5 :
	{
		Open();
		break;
	}
	case 6 :
	{
		Close();
		break;
	}
	}
	return true;
}
*/

/*

TDocumentEvents2Proxy::TDocumentEvents2Proxy(__OWL TWindow* parent, __OWL TResId resId, __OWL TModule* module) : TOleDialog(parent, resId, module)
{
}

TDocumentEvents2Proxy::~TDocumentEvents2Proxy(){
}

void TDocumentEvents2Proxy::SetupWindow()
{
	TOleDialog::SetupWindow();
	Ocx = GetOcControlOfOCX(IID_CoDocument);
	Proxy.Bind(Ocx->GetCtlDispatch());
}

void TNewProxy::New()
{
}

void TOpenProxy::Open()
{
}

void TCloseProxy::Close()
{
}

void TSyncProxy::Sync(MsoSyncEventType SyncEventType)
{
}

void TXMLAfterInsertProxy::XMLAfterInsert(TXMLNodeProxy* NewXMLNode, __OWL TBool InUndoRedo)
{
}

void TXMLBeforeDeleteProxy::XMLBeforeDelete(TRangeProxy* DeletedRange, TXMLNodeProxy* OldXMLNode, __OWL TBool InUndoRedo)
{
}

bool TDocumentEvents2Proxy::EvOcCtrlCustomEvent(__OCF TCtrlCustomEvent* pev)
{
	switch (pev->Args->DispId)
	{
	case 4 :
	{
		New();
		break;
	}
	case 5 :
	{
		Open();
		break;
	}
	case 6 :
	{
		Close();
		break;
	}
	case 7 :
	{
		MsoSyncEventType arg0 = pev->Args->operator[](0);
		Sync(arg0);
		break;
	}
	case 8 :
	{
		TXMLNodeProxy arg0;
		arg0.Bind((IDispatch*) (pev->Args->operator[](0)));
		__OWL TBool arg1 = pev->Args->operator[](1);
		XMLAfterInsert(&arg0, arg1);
		break;
	}
	case 9 :
	{
		TRangeProxy arg0;
		arg0.Bind((IDispatch*) (pev->Args->operator[](0)));
		TXMLNodeProxy arg1;
		arg1.Bind((IDispatch*) (pev->Args->operator[](1)));
		__OWL TBool arg2 = pev->Args->operator[](2);
		XMLBeforeDelete(&arg0, &arg1, arg2);
		break;
	}
	}
	return true;
}
*/

void TDocumentsProxy::_NewEnum(__OCF TAutoEnumerator<IUnknown*>& Obj)
{
	static __OCF TAutoDispId i_(this, -4);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

long TDocumentsProxy::Count()
{
	static __OCF TAutoDispId i_(this, 2);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

WordApplication* TDocumentsProxy::_Application()
{
	static __OCF TAutoDispId i_(this, 1000);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

long TDocumentsProxy::Creator()
{
	static __OCF TAutoDispId i_(this, 1001);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

IDispatch* TDocumentsProxy::Parent()
{
	static __OCF TAutoDispId i_(this, 1002);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

WordDocument* TDocumentsProxy::Item(__OCF TAutoVal* Index)
{
	static __OCF TAutoDispId i_(this, (long)0);
	__OCF TAutoArgs<1> a_;
	wordObjects::push_arg(a_[1], Index);
	return Invoke(acMethod, a_, i_, i_);
}

void TDocumentsProxy::Close(__OCF TAutoVal* SaveChanges, __OCF TAutoVal* OriginalFormat, __OCF TAutoVal* RouteDocument)
{
	static __OCF TAutoDispId i_(this, 1105);
	__OCF TAutoArgs<3> a_;
	wordObjects::push_arg(a_[1], SaveChanges);
	wordObjects::push_arg(a_[2], OriginalFormat);
	wordObjects::push_arg(a_[3], RouteDocument);
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

WordDocument* TDocumentsProxy::AddOld(__OCF TAutoVal* arg0, __OCF TAutoVal* NewTemplate)
{
	static __OCF TAutoDispId i_(this, 11);
	__OCF TAutoArgs<2> a_;
	wordObjects::push_arg(a_[1], arg0);
	wordObjects::push_arg(a_[2], NewTemplate);
	return Invoke(acMethod, a_, i_, i_);
}

WordDocument* TDocumentsProxy::OpenOld(__OCF TAutoVal* FileName, __OCF TAutoVal* ConfirmConversions, __OCF TAutoVal* ReadOnly, __OCF TAutoVal* AddToRecentFiles, __OCF TAutoVal* PasswordDocument, __OCF TAutoVal* PasswordTemplate, __OCF TAutoVal* Revert, __OCF TAutoVal* WritePasswordDocument, __OCF TAutoVal* WritePasswordTemplate, __OCF TAutoVal* Format)
{
	static __OCF TAutoDispId i_(this, 12);
	__OCF TAutoArgs<10> a_;
	wordObjects::push_arg(a_[1], FileName);
	wordObjects::push_arg(a_[2], ConfirmConversions);
	wordObjects::push_arg(a_[3], ReadOnly);
	wordObjects::push_arg(a_[4], AddToRecentFiles);
	wordObjects::push_arg(a_[5], PasswordDocument);
	wordObjects::push_arg(a_[6], PasswordTemplate);
	wordObjects::push_arg(a_[7], Revert);
	wordObjects::push_arg(a_[8], WritePasswordDocument);
	wordObjects::push_arg(a_[9], WritePasswordTemplate);
	wordObjects::push_arg(a_[10], Format);
	return Invoke(acMethod, a_, i_, i_);
}

void TDocumentsProxy::Save(__OCF TAutoVal* NoPrompt, __OCF TAutoVal* OriginalFormat)
{
	static __OCF TAutoDispId i_(this, 13);
	__OCF TAutoArgs<2> a_;
	wordObjects::push_arg(a_[1], NoPrompt);
	wordObjects::push_arg(a_[2], OriginalFormat);
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

T_DocumentProxy* TDocumentsProxy::Add(__OCF TAutoVal* arg0, __OCF TAutoVal* NewTemplate, __OCF TAutoVal* DocumentType, __OCF TAutoVal* Visible)
{
	static __OCF TAutoDispId i_(this, 14);
	__OCF TAutoArgs<4> a_;
	wordObjects::push_arg(a_[1], arg0);
	wordObjects::push_arg(a_[2], NewTemplate);
	wordObjects::push_arg(a_[3], DocumentType);
	wordObjects::push_arg(a_[4], Visible);

  // Modified PA
  //
	TAutoVal document = Invoke(acMethod, a_, i_, i_);

  T_DocumentProxy *pResult = new T_DocumentProxy() ;
  pResult->Bind(document) ;
  return pResult ;
}

T_DocumentProxy*
TDocumentsProxy::Open2000(__OCF TAutoVal* FileName, __OCF TAutoVal* ConfirmConversions, __OCF TAutoVal* ReadOnly, __OCF TAutoVal* AddToRecentFiles, __OCF TAutoVal* PasswordDocument, __OCF TAutoVal* PasswordTemplate, __OCF TAutoVal* Revert, __OCF TAutoVal* WritePasswordDocument, __OCF TAutoVal* WritePasswordTemplate, __OCF TAutoVal* Format, __OCF TAutoVal* Encoding, __OCF TAutoVal* Visible)
{
	static __OCF TAutoDispId i_(this, 15);
	__OCF TAutoArgs<12> a_;
	wordObjects::push_arg(a_[1], FileName);
	wordObjects::push_arg(a_[2], ConfirmConversions);
	wordObjects::push_arg(a_[3], ReadOnly);
	wordObjects::push_arg(a_[4], AddToRecentFiles);
	wordObjects::push_arg(a_[5], PasswordDocument);
	wordObjects::push_arg(a_[6], PasswordTemplate);
	wordObjects::push_arg(a_[7], Revert);
	wordObjects::push_arg(a_[8], WritePasswordDocument);
	wordObjects::push_arg(a_[9], WritePasswordTemplate);
	wordObjects::push_arg(a_[10], Format);
	wordObjects::push_arg(a_[11], Encoding);
	wordObjects::push_arg(a_[12], Visible);

  // Modified PA
  //
  TAutoVal document = Invoke(acMethod, a_, i_, i_);

  T_DocumentProxy *pResult = new T_DocumentProxy() ;
  pResult->Bind(document) ;
  return pResult ;
}

void TDocumentsProxy::CheckOut(__OCF TAutoString FileName)
{
	static __OCF TAutoDispId i_(this, 16);
	__OCF TAutoArgs<1> a_;
	wordObjects::push_arg(a_[1], FileName);
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

/*__OWL*/ TBool TDocumentsProxy::CanCheckOut(__OCF TAutoString FileName)
{
	static __OCF TAutoDispId i_(this, 17);
	__OCF TAutoArgs<1> a_;
	wordObjects::push_arg(a_[1], FileName);
	return Invoke(acMethod, a_, i_, i_);
}

T_DocumentProxy*
TDocumentsProxy::Open2002(__OCF TAutoVal* FileName, __OCF TAutoVal* ConfirmConversions, __OCF TAutoVal* ReadOnly, __OCF TAutoVal* AddToRecentFiles, __OCF TAutoVal* PasswordDocument, __OCF TAutoVal* PasswordTemplate, __OCF TAutoVal* Revert, __OCF TAutoVal* WritePasswordDocument, __OCF TAutoVal* WritePasswordTemplate, __OCF TAutoVal* Format, __OCF TAutoVal* Encoding, __OCF TAutoVal* Visible, __OCF TAutoVal* OpenAndRepair, __OCF TAutoVal* DocumentDirection, __OCF TAutoVal* NoEncodingDialog)
{
	static __OCF TAutoDispId i_(this, 18);
	__OCF TAutoArgs<15> a_;
	wordObjects::push_arg(a_[1], FileName);
	wordObjects::push_arg(a_[2], ConfirmConversions);
	wordObjects::push_arg(a_[3], ReadOnly);
	wordObjects::push_arg(a_[4], AddToRecentFiles);
	wordObjects::push_arg(a_[5], PasswordDocument);
	wordObjects::push_arg(a_[6], PasswordTemplate);
	wordObjects::push_arg(a_[7], Revert);
	wordObjects::push_arg(a_[8], WritePasswordDocument);
	wordObjects::push_arg(a_[9], WritePasswordTemplate);
	wordObjects::push_arg(a_[10], Format);
	wordObjects::push_arg(a_[11], Encoding);
	wordObjects::push_arg(a_[12], Visible);
	wordObjects::push_arg(a_[13], OpenAndRepair);
	wordObjects::push_arg(a_[14], DocumentDirection);
	wordObjects::push_arg(a_[15], NoEncodingDialog);

  // Modified PA
  //
  TAutoVal document = Invoke(acMethod, a_, i_, i_);

  T_DocumentProxy *pResult = new T_DocumentProxy() ;
  pResult->Bind(document) ;
  return pResult ;
}

T_DocumentProxy*
TDocumentsProxy::Open(__OCF TAutoVal* FileName, __OCF TAutoVal* ConfirmConversions, __OCF TAutoVal* ReadOnly, __OCF TAutoVal* AddToRecentFiles, __OCF TAutoVal* PasswordDocument, __OCF TAutoVal* PasswordTemplate, __OCF TAutoVal* Revert, __OCF TAutoVal* WritePasswordDocument, __OCF TAutoVal* WritePasswordTemplate, __OCF TAutoVal* Format, __OCF TAutoVal* Encoding, __OCF TAutoVal* Visible, __OCF TAutoVal* OpenAndRepair, __OCF TAutoVal* DocumentDirection, __OCF TAutoVal* NoEncodingDialog, __OCF TAutoVal* XMLTransform)
{
	static __OCF TAutoDispId i_(this, 19);
	__OCF TAutoArgs<16> a_;
	wordObjects::push_arg(a_[1], FileName);
	wordObjects::push_arg(a_[2], ConfirmConversions);
	wordObjects::push_arg(a_[3], ReadOnly);
	wordObjects::push_arg(a_[4], AddToRecentFiles);
	wordObjects::push_arg(a_[5], PasswordDocument);
	wordObjects::push_arg(a_[6], PasswordTemplate);
	wordObjects::push_arg(a_[7], Revert);
	wordObjects::push_arg(a_[8], WritePasswordDocument);
	wordObjects::push_arg(a_[9], WritePasswordTemplate);
	wordObjects::push_arg(a_[10], Format);
	wordObjects::push_arg(a_[11], Encoding);
	wordObjects::push_arg(a_[12], Visible);
	wordObjects::push_arg(a_[13], OpenAndRepair);
	wordObjects::push_arg(a_[14], DocumentDirection);
	wordObjects::push_arg(a_[15], NoEncodingDialog);
	wordObjects::push_arg(a_[16], XMLTransform);

  // Modified PA
  //
  TAutoVal document = Invoke(acMethod, a_, i_, i_);

  T_DocumentProxy *pResult = new T_DocumentProxy() ;
  pResult->Bind(document) ;
  return pResult ;
}

__OCF TAutoString TSelectionProxy::Text()
{
	static __OCF TAutoDispId i_(this, (long)0);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

void TSelectionProxy::Text(__OCF TAutoString arg0)
{
	static __OCF TAutoDispId i_(this, (long)0);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

void TSelectionProxy::FormattedText(TRangeProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 2);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

void TSelectionProxy::FormattedText(WordRange* arg0)
{
	static __OCF TAutoDispId i_(this, 2);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

long TSelectionProxy::Start()
{
	static __OCF TAutoDispId i_(this, 3);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

void TSelectionProxy::Start(long arg0)
{
	static __OCF TAutoDispId i_(this, 3);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

long TSelectionProxy::End()
{
	static __OCF TAutoDispId i_(this, 4);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

void TSelectionProxy::End(long arg0)
{
	static __OCF TAutoDispId i_(this, 4);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

Font* TSelectionProxy::_Font()
{
	static __OCF TAutoDispId i_(this, 5);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

void TSelectionProxy::_Font(Font* arg0)
{
	static __OCF TAutoDispId i_(this, 5);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

WdSelectionType TSelectionProxy::Type()
{
	static __OCF TAutoDispId i_(this, 6);
	__OCF TAutoArgs<0> a_;
	return (WdSelectionType)(int)Invoke(acPropGet, a_, i_, i_);
}

WdStoryType TSelectionProxy::StoryType()
{
	static __OCF TAutoDispId i_(this, 7);
	__OCF TAutoArgs<0> a_;
	return (WdStoryType)(int)Invoke(acPropGet, a_, i_, i_);
}

__OCF TAutoVal TSelectionProxy::_Style()
{
	static __OCF TAutoDispId i_(this, 8);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

void TSelectionProxy::_Style(__OCF TAutoVal* arg0)
{
	static __OCF TAutoDispId i_(this, 8);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

void TSelectionProxy::_Tables(TTablesProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 50);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

void TSelectionProxy::_Words(TWordsProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 51);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

void TSelectionProxy::_Sentences(TSentencesProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 52);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

void TSelectionProxy::_Characters(TCharactersProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 53);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

void TSelectionProxy::_Footnotes(TFootnotesProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 54);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

void TSelectionProxy::_Endnotes(TEndnotesProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 55);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

void TSelectionProxy::_Comments(TCommentsProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 56);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

void TSelectionProxy::_Cells(TCellsProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 57);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

void TSelectionProxy::_Sections(TSectionsProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 58);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

void TSelectionProxy::_Paragraphs(TParagraphsProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 59);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

void TSelectionProxy::_Borders(TBordersProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 1100);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

void TSelectionProxy::_Borders(Borders* arg0)
{
	static __OCF TAutoDispId i_(this, 1100);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

void TSelectionProxy::_Shading(TShadingProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 61);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

void TSelectionProxy::_Fields(TFieldsProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 64);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

void TSelectionProxy::_FormFields(TFormFieldsProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 65);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

void TSelectionProxy::_Frames(TFramesProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 66);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

ParagraphFormat* TSelectionProxy::_ParagraphFormat()
{
	static __OCF TAutoDispId i_(this, 1102);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

void TSelectionProxy::_ParagraphFormat(ParagraphFormat* arg0)
{
	static __OCF TAutoDispId i_(this, 1102);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

void TSelectionProxy::_PageSetup(TPageSetupProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 1101);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

void TSelectionProxy::_PageSetup(PageSetup* arg0)
{
	static __OCF TAutoDispId i_(this, 1101);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

void TSelectionProxy::_Bookmarks(TBookmarksProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 75);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

long TSelectionProxy::StoryLength()
{
	static __OCF TAutoDispId i_(this, 152);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

WdLanguageID TSelectionProxy::LanguageID()
{
	static __OCF TAutoDispId i_(this, 153);
	__OCF TAutoArgs<0> a_;
	return (WdLanguageID)(int)Invoke(acPropGet, a_, i_, i_);
}

void TSelectionProxy::LanguageID(WdLanguageID arg0)
{
	static __OCF TAutoDispId i_(this, 153);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

WdLanguageID TSelectionProxy::LanguageIDFarEast()
{
	static __OCF TAutoDispId i_(this, 154);
	__OCF TAutoArgs<0> a_;
	return (WdLanguageID)(int)Invoke(acPropGet, a_, i_, i_);
}

void TSelectionProxy::LanguageIDFarEast(WdLanguageID arg0)
{
	static __OCF TAutoDispId i_(this, 154);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

WdLanguageID TSelectionProxy::LanguageIDOther()
{
	static __OCF TAutoDispId i_(this, 155);
	__OCF TAutoArgs<0> a_;
	return (WdLanguageID)(int)Invoke(acPropGet, a_, i_, i_);
}

void TSelectionProxy::LanguageIDOther(WdLanguageID arg0)
{
	static __OCF TAutoDispId i_(this, 155);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

void TSelectionProxy::_Hyperlinks(THyperlinksProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 156);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

void TSelectionProxy::_Columns(TColumnsProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 302);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

void TSelectionProxy::_Rows(TRowsProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 303);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

void TSelectionProxy::_HeaderFooter(THeaderFooterProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 306);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

/*__OWL*/ TBool TSelectionProxy::IsEndOfRowMark()
{
	static __OCF TAutoDispId i_(this, 307);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

long TSelectionProxy::BookmarkID()
{
	static __OCF TAutoDispId i_(this, 308);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

long TSelectionProxy::PreviousBookmarkID()
{
	static __OCF TAutoDispId i_(this, 309);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

void TSelectionProxy::_Find(TFindProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 262);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

void TSelectionProxy::_Range(TRangeProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 400);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

__OCF TAutoVal TSelectionProxy::Information(WdInformation Type)
{
	static __OCF TAutoDispId i_(this, 401);
	__OCF TAutoArgs<1> a_;
	wordObjects::push_arg(a_[1], Type);
	return Invoke(acPropGet, a_, i_, i_);
}

WdSelectionFlags TSelectionProxy::Flags()
{
	static __OCF TAutoDispId i_(this, 402);
	__OCF TAutoArgs<0> a_;
	return (WdSelectionFlags)(int)Invoke(acPropGet, a_, i_, i_);
}

void TSelectionProxy::Flags(WdSelectionFlags arg0)
{
	static __OCF TAutoDispId i_(this, 402);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

/*__OWL*/ TBool TSelectionProxy::Active()
{
	static __OCF TAutoDispId i_(this, 403);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

/*__OWL*/ TBool TSelectionProxy::StartIsActive()
{
	static __OCF TAutoDispId i_(this, 404);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

void TSelectionProxy::StartIsActive(/*__OWL*/ TBool arg0)
{
	static __OCF TAutoDispId i_(this, 404);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

/*__OWL*/ TBool TSelectionProxy::IPAtEndOfLine()
{
	static __OCF TAutoDispId i_(this, 405);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

/*__OWL*/ TBool TSelectionProxy::ExtendMode()
{
	static __OCF TAutoDispId i_(this, 406);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

void TSelectionProxy::ExtendMode(/*__OWL*/ TBool arg0)
{
	static __OCF TAutoDispId i_(this, 406);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

/*__OWL*/ TBool TSelectionProxy::ColumnSelectMode()
{
	static __OCF TAutoDispId i_(this, 407);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

void TSelectionProxy::ColumnSelectMode(/*__OWL*/ TBool arg0)
{
	static __OCF TAutoDispId i_(this, 407);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

WdTextOrientation TSelectionProxy::Orientation()
{
	static __OCF TAutoDispId i_(this, 410);
	__OCF TAutoArgs<0> a_;
	return (WdTextOrientation)(int)Invoke(acPropGet, a_, i_, i_);
}

void TSelectionProxy::Orientation(WdTextOrientation arg0)
{
	static __OCF TAutoDispId i_(this, 410);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

void TSelectionProxy::_InlineShapes(TInlineShapesProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 411);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

WordApplication* TSelectionProxy::_Application()
{
	static __OCF TAutoDispId i_(this, 1000);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

long TSelectionProxy::Creator()
{
	static __OCF TAutoDispId i_(this, 1001);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

IDispatch* TSelectionProxy::Parent()
{
	static __OCF TAutoDispId i_(this, 1002);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

Document* TSelectionProxy::_Document()
{
	static __OCF TAutoDispId i_(this, 1003);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

void TSelectionProxy::_ShapeRange(TShapeRangeProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 1004);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

void TSelectionProxy::Select()
{
	static __OCF TAutoDispId i_(this, 65535);
	__OCF TAutoArgs<0> a_;
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void TSelectionProxy::SetRange(long Start, long End)
{
	static __OCF TAutoDispId i_(this, 100);
	__OCF TAutoArgs<2> a_;
	wordObjects::push_arg(a_[1], Start);
	wordObjects::push_arg(a_[2], End);
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void TSelectionProxy::Collapse(__OCF TAutoVal* Direction)
{
	static __OCF TAutoDispId i_(this, 101);
	__OCF TAutoArgs<1> a_;
	wordObjects::push_arg(a_[1], Direction);
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void TSelectionProxy::InsertBefore(__OCF TAutoString Text)
{
	static __OCF TAutoDispId i_(this, 102);
	__OCF TAutoArgs<1> a_;
	wordObjects::push_arg(a_[1], Text);
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void TSelectionProxy::InsertAfter(__OCF TAutoString Text)
{
	static __OCF TAutoDispId i_(this, 104);
	__OCF TAutoArgs<1> a_;
	wordObjects::push_arg(a_[1], Text);
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void TSelectionProxy::Next(TRangeProxy& Obj, __OCF TAutoVal* Unit, __OCF TAutoVal* Count)
{
	static __OCF TAutoDispId i_(this, 105);
	__OCF TAutoArgs<2> a_;
	wordObjects::push_arg(a_[1], Unit);
	wordObjects::push_arg(a_[2], Count);
	Obj.Bind(Invoke(acMethod, a_, i_, i_));
}

void TSelectionProxy::Previous(TRangeProxy& Obj, __OCF TAutoVal* Unit, __OCF TAutoVal* Count)
{
	static __OCF TAutoDispId i_(this, 106);
	__OCF TAutoArgs<2> a_;
	wordObjects::push_arg(a_[1], Unit);
	wordObjects::push_arg(a_[2], Count);
	Obj.Bind(Invoke(acMethod, a_, i_, i_));
}

long TSelectionProxy::StartOf(__OCF TAutoVal* Unit, __OCF TAutoVal* Extend)
{
	static __OCF TAutoDispId i_(this, 107);
	__OCF TAutoArgs<2> a_;
	wordObjects::push_arg(a_[1], Unit);
	wordObjects::push_arg(a_[2], Extend);
	return Invoke(acMethod, a_, i_, i_);
}

long TSelectionProxy::EndOf(__OCF TAutoVal* Unit, __OCF TAutoVal* Extend)
{
	static __OCF TAutoDispId i_(this, 108);
	__OCF TAutoArgs<2> a_;
	wordObjects::push_arg(a_[1], Unit);
	wordObjects::push_arg(a_[2], Extend);
	return Invoke(acMethod, a_, i_, i_);
}

long TSelectionProxy::Move(__OCF TAutoVal* Unit, __OCF TAutoVal* Count)
{
	static __OCF TAutoDispId i_(this, 109);
	__OCF TAutoArgs<2> a_;
	wordObjects::push_arg(a_[1], Unit);
	wordObjects::push_arg(a_[2], Count);
	return Invoke(acMethod, a_, i_, i_);
}

long TSelectionProxy::MoveStart(__OCF TAutoVal* Unit, __OCF TAutoVal* Count)
{
	static __OCF TAutoDispId i_(this, 110);
	__OCF TAutoArgs<2> a_;
	wordObjects::push_arg(a_[1], Unit);
	wordObjects::push_arg(a_[2], Count);
	return Invoke(acMethod, a_, i_, i_);
}

long TSelectionProxy::MoveEnd(__OCF TAutoVal* Unit, __OCF TAutoVal* Count)
{
	static __OCF TAutoDispId i_(this, 111);
	__OCF TAutoArgs<2> a_;
	wordObjects::push_arg(a_[1], Unit);
	wordObjects::push_arg(a_[2], Count);
	return Invoke(acMethod, a_, i_, i_);
}

long TSelectionProxy::MoveWhile(__OCF TAutoVal* Cset, __OCF TAutoVal* Count)
{
	static __OCF TAutoDispId i_(this, 112);
	__OCF TAutoArgs<2> a_;
	wordObjects::push_arg(a_[1], Cset);
	wordObjects::push_arg(a_[2], Count);
	return Invoke(acMethod, a_, i_, i_);
}

long TSelectionProxy::MoveStartWhile(__OCF TAutoVal* Cset, __OCF TAutoVal* Count)
{
	static __OCF TAutoDispId i_(this, 113);
	__OCF TAutoArgs<2> a_;
	wordObjects::push_arg(a_[1], Cset);
	wordObjects::push_arg(a_[2], Count);
	return Invoke(acMethod, a_, i_, i_);
}

long TSelectionProxy::MoveEndWhile(__OCF TAutoVal* Cset, __OCF TAutoVal* Count)
{
	static __OCF TAutoDispId i_(this, 114);
	__OCF TAutoArgs<2> a_;
	wordObjects::push_arg(a_[1], Cset);
	wordObjects::push_arg(a_[2], Count);
	return Invoke(acMethod, a_, i_, i_);
}

long TSelectionProxy::MoveUntil(__OCF TAutoVal* Cset, __OCF TAutoVal* Count)
{
	static __OCF TAutoDispId i_(this, 115);
	__OCF TAutoArgs<2> a_;
	wordObjects::push_arg(a_[1], Cset);
	wordObjects::push_arg(a_[2], Count);
	return Invoke(acMethod, a_, i_, i_);
}

long TSelectionProxy::MoveStartUntil(__OCF TAutoVal* Cset, __OCF TAutoVal* Count)
{
	static __OCF TAutoDispId i_(this, 116);
	__OCF TAutoArgs<2> a_;
	wordObjects::push_arg(a_[1], Cset);
	wordObjects::push_arg(a_[2], Count);
	return Invoke(acMethod, a_, i_, i_);
}

long TSelectionProxy::MoveEndUntil(__OCF TAutoVal* Cset, __OCF TAutoVal* Count)
{
	static __OCF TAutoDispId i_(this, 117);
	__OCF TAutoArgs<2> a_;
	wordObjects::push_arg(a_[1], Cset);
	wordObjects::push_arg(a_[2], Count);
	return Invoke(acMethod, a_, i_, i_);
}

void TSelectionProxy::Cut()
{
	static __OCF TAutoDispId i_(this, 119);
	__OCF TAutoArgs<0> a_;
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void TSelectionProxy::Copy()
{
	static __OCF TAutoDispId i_(this, 120);
	__OCF TAutoArgs<0> a_;
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void TSelectionProxy::Paste()
{
	static __OCF TAutoDispId i_(this, 121);
	__OCF TAutoArgs<0> a_;
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void TSelectionProxy::InsertBreak(__OCF TAutoVal* Type)
{
	static __OCF TAutoDispId i_(this, 122);
	__OCF TAutoArgs<1> a_;
	wordObjects::push_arg(a_[1], Type);
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void TSelectionProxy::InsertFile(__OCF TAutoString FileName, __OCF TAutoVal* arg1, __OCF TAutoVal* ConfirmConversions, __OCF TAutoVal* Link, __OCF TAutoVal* Attachment)
{
	static __OCF TAutoDispId i_(this, 123);
	__OCF TAutoArgs<5> a_;
	wordObjects::push_arg(a_[1], FileName);
	wordObjects::push_arg(a_[2], arg1);
	wordObjects::push_arg(a_[3], ConfirmConversions);
	wordObjects::push_arg(a_[4], Link);
	wordObjects::push_arg(a_[5], Attachment);
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

/*__OWL*/ TBool TSelectionProxy::InStory(WordRange* arg0)
{
	static __OCF TAutoDispId i_(this, 125);
	__OCF TAutoArgs<1> a_;
	wordObjects::push_arg(a_[1], arg0);
	return Invoke(acMethod, a_, i_, i_);
}

/*__OWL*/ TBool TSelectionProxy::InRange(WordRange* arg0)
{
	static __OCF TAutoDispId i_(this, 126);
	__OCF TAutoArgs<1> a_;
	wordObjects::push_arg(a_[1], arg0);
	return Invoke(acMethod, a_, i_, i_);
}

long TSelectionProxy::Delete(__OCF TAutoVal* Unit, __OCF TAutoVal* Count)
{
	static __OCF TAutoDispId i_(this, 127);
	__OCF TAutoArgs<2> a_;
	wordObjects::push_arg(a_[1], Unit);
	wordObjects::push_arg(a_[2], Count);
	return Invoke(acMethod, a_, i_, i_);
}

long TSelectionProxy::Expand(__OCF TAutoVal* Unit)
{
	static __OCF TAutoDispId i_(this, 129);
	__OCF TAutoArgs<1> a_;
	wordObjects::push_arg(a_[1], Unit);
	return Invoke(acMethod, a_, i_, i_);
}

void TSelectionProxy::InsertParagraph()
{
	static __OCF TAutoDispId i_(this, 160);
	__OCF TAutoArgs<0> a_;
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void TSelectionProxy::InsertParagraphAfter()
{
	static __OCF TAutoDispId i_(this, 161);
	__OCF TAutoArgs<0> a_;
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void TSelectionProxy::ConvertToTableOld(TTableProxy& Obj, __OCF TAutoVal* Separator, __OCF TAutoVal* NumRows, __OCF TAutoVal* NumColumns, __OCF TAutoVal* InitialColumnWidth, __OCF TAutoVal* Format, __OCF TAutoVal* ApplyBorders, __OCF TAutoVal* ApplyShading, __OCF TAutoVal* ApplyFont, __OCF TAutoVal* ApplyColor, __OCF TAutoVal* ApplyHeadingRows, __OCF TAutoVal* ApplyLastRow, __OCF TAutoVal* ApplyFirstColumn, __OCF TAutoVal* ApplyLastColumn, __OCF TAutoVal* AutoFit)
{
	static __OCF TAutoDispId i_(this, 162);
	__OCF TAutoArgs<14> a_;
	wordObjects::push_arg(a_[1], Separator);
	wordObjects::push_arg(a_[2], NumRows);
	wordObjects::push_arg(a_[3], NumColumns);
	wordObjects::push_arg(a_[4], InitialColumnWidth);
	wordObjects::push_arg(a_[5], Format);
	wordObjects::push_arg(a_[6], ApplyBorders);
	wordObjects::push_arg(a_[7], ApplyShading);
	wordObjects::push_arg(a_[8], ApplyFont);
	wordObjects::push_arg(a_[9], ApplyColor);
	wordObjects::push_arg(a_[10], ApplyHeadingRows);
	wordObjects::push_arg(a_[11], ApplyLastRow);
	wordObjects::push_arg(a_[12], ApplyFirstColumn);
	wordObjects::push_arg(a_[13], ApplyLastColumn);
	wordObjects::push_arg(a_[14], AutoFit);
	Obj.Bind(Invoke(acMethod, a_, i_, i_));
}

void TSelectionProxy::InsertDateTimeOld(__OCF TAutoVal* DateTimeFormat, __OCF TAutoVal* InsertAsField, __OCF TAutoVal* InsertAsFullWidth)
{
	static __OCF TAutoDispId i_(this, 163);
	__OCF TAutoArgs<3> a_;
	wordObjects::push_arg(a_[1], DateTimeFormat);
	wordObjects::push_arg(a_[2], InsertAsField);
	wordObjects::push_arg(a_[3], InsertAsFullWidth);
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void TSelectionProxy::InsertSymbol(long CharacterNumber, __OCF TAutoVal* arg1, __OCF TAutoVal* Unicode, __OCF TAutoVal* Bias)
{
	static __OCF TAutoDispId i_(this, 164);
	__OCF TAutoArgs<4> a_;
	wordObjects::push_arg(a_[1], CharacterNumber);
	wordObjects::push_arg(a_[2], arg1);
	wordObjects::push_arg(a_[3], Unicode);
	wordObjects::push_arg(a_[4], Bias);
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void TSelectionProxy::InsertCrossReference_2002(__OCF TAutoVal* ReferenceType, WdReferenceKind ReferenceKind, __OCF TAutoVal* ReferenceItem, __OCF TAutoVal* InsertAsHyperlink, __OCF TAutoVal* IncludePosition)
{
	static __OCF TAutoDispId i_(this, 165);
	__OCF TAutoArgs<5> a_;
	wordObjects::push_arg(a_[1], ReferenceType);
	wordObjects::push_arg(a_[2], ReferenceKind);
	wordObjects::push_arg(a_[3], ReferenceItem);
	wordObjects::push_arg(a_[4], InsertAsHyperlink);
	wordObjects::push_arg(a_[5], IncludePosition);
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void TSelectionProxy::InsertCaptionXP(__OCF TAutoVal* Label, __OCF TAutoVal* Title, __OCF TAutoVal* TitleAutoText, __OCF TAutoVal* Position)
{
	static __OCF TAutoDispId i_(this, 166);
	__OCF TAutoArgs<4> a_;
	wordObjects::push_arg(a_[1], Label);
	wordObjects::push_arg(a_[2], Title);
	wordObjects::push_arg(a_[3], TitleAutoText);
	wordObjects::push_arg(a_[4], Position);
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void TSelectionProxy::CopyAsPicture()
{
	static __OCF TAutoDispId i_(this, 167);
	__OCF TAutoArgs<0> a_;
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void TSelectionProxy::SortOld(__OCF TAutoVal* ExcludeHeader, __OCF TAutoVal* FieldNumber, __OCF TAutoVal* SortFieldType, __OCF TAutoVal* SortOrder, __OCF TAutoVal* FieldNumber2, __OCF TAutoVal* SortFieldType2, __OCF TAutoVal* SortOrder2, __OCF TAutoVal* FieldNumber3, __OCF TAutoVal* SortFieldType3, __OCF TAutoVal* SortOrder3, __OCF TAutoVal* SortColumn, __OCF TAutoVal* Separator, __OCF TAutoVal* CaseSensitive, __OCF TAutoVal* LanguageID)
{
	static __OCF TAutoDispId i_(this, 168);
	__OCF TAutoArgs<14> a_;
	wordObjects::push_arg(a_[1], ExcludeHeader);
	wordObjects::push_arg(a_[2], FieldNumber);
	wordObjects::push_arg(a_[3], SortFieldType);
	wordObjects::push_arg(a_[4], SortOrder);
	wordObjects::push_arg(a_[5], FieldNumber2);
	wordObjects::push_arg(a_[6], SortFieldType2);
	wordObjects::push_arg(a_[7], SortOrder2);
	wordObjects::push_arg(a_[8], FieldNumber3);
	wordObjects::push_arg(a_[9], SortFieldType3);
	wordObjects::push_arg(a_[10], SortOrder3);
	wordObjects::push_arg(a_[11], SortColumn);
	wordObjects::push_arg(a_[12], Separator);
	wordObjects::push_arg(a_[13], CaseSensitive);
	wordObjects::push_arg(a_[14], LanguageID);
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void TSelectionProxy::SortAscending()
{
	static __OCF TAutoDispId i_(this, 169);
	__OCF TAutoArgs<0> a_;
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void TSelectionProxy::SortDescending()
{
	static __OCF TAutoDispId i_(this, 170);
	__OCF TAutoArgs<0> a_;
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

/*__OWL*/ TBool TSelectionProxy::IsEqual(WordRange* arg0)
{
	static __OCF TAutoDispId i_(this, 171);
	__OCF TAutoArgs<1> a_;
	wordObjects::push_arg(a_[1], arg0);
	return Invoke(acMethod, a_, i_, i_);
}

float TSelectionProxy::Calculate()
{
	static __OCF TAutoDispId i_(this, 172);
	__OCF TAutoArgs<0> a_;
	return Invoke(acMethod, a_, i_, i_);
}

void TSelectionProxy::GoTo(TRangeProxy& Obj, __OCF TAutoVal* What, __OCF TAutoVal* Which, __OCF TAutoVal* Count, __OCF TAutoVal* Name)
{
	static __OCF TAutoDispId i_(this, 173);
	__OCF TAutoArgs<4> a_;
	wordObjects::push_arg(a_[1], What);
	wordObjects::push_arg(a_[2], Which);
	wordObjects::push_arg(a_[3], Count);
	wordObjects::push_arg(a_[4], Name);
	Obj.Bind(Invoke(acMethod, a_, i_, i_));
}

void TSelectionProxy::GoToNext(TRangeProxy& Obj, WdGoToItem What)
{
	static __OCF TAutoDispId i_(this, 174);
	__OCF TAutoArgs<1> a_;
	wordObjects::push_arg(a_[1], What);
	Obj.Bind(Invoke(acMethod, a_, i_, i_));
}

void TSelectionProxy::GoToPrevious(TRangeProxy& Obj, WdGoToItem What)
{
	static __OCF TAutoDispId i_(this, 175);
	__OCF TAutoArgs<1> a_;
	wordObjects::push_arg(a_[1], What);
	Obj.Bind(Invoke(acMethod, a_, i_, i_));
}

void TSelectionProxy::PasteSpecial(__OCF TAutoVal* IconIndex, __OCF TAutoVal* Link, __OCF TAutoVal* Placement, __OCF TAutoVal* DisplayAsIcon, __OCF TAutoVal* DataType, __OCF TAutoVal* IconFileName, __OCF TAutoVal* IconLabel)
{
	static __OCF TAutoDispId i_(this, 176);
	__OCF TAutoArgs<7> a_;
	wordObjects::push_arg(a_[1], IconIndex);
	wordObjects::push_arg(a_[2], Link);
	wordObjects::push_arg(a_[3], Placement);
	wordObjects::push_arg(a_[4], DisplayAsIcon);
	wordObjects::push_arg(a_[5], DataType);
	wordObjects::push_arg(a_[6], IconFileName);
	wordObjects::push_arg(a_[7], IconLabel);
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void TSelectionProxy::PreviousField(TFieldProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 177);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acMethod, a_, i_, i_));
}

void TSelectionProxy::NextField(TFieldProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 178);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acMethod, a_, i_, i_));
}

void TSelectionProxy::InsertParagraphBefore()
{
	static __OCF TAutoDispId i_(this, 212);
	__OCF TAutoArgs<0> a_;
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void TSelectionProxy::InsertCells(__OCF TAutoVal* ShiftCells)
{
	static __OCF TAutoDispId i_(this, 214);
	__OCF TAutoArgs<1> a_;
	wordObjects::push_arg(a_[1], ShiftCells);
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void TSelectionProxy::Extend(__OCF TAutoVal* Character)
{
	static __OCF TAutoDispId i_(this, 300);
	__OCF TAutoArgs<1> a_;
	wordObjects::push_arg(a_[1], Character);
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void TSelectionProxy::Shrink()
{
	static __OCF TAutoDispId i_(this, 301);
	__OCF TAutoArgs<0> a_;
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

long TSelectionProxy::MoveLeft(__OCF TAutoVal* Unit, __OCF TAutoVal* Count, __OCF TAutoVal* Extend)
{
	static __OCF TAutoDispId i_(this, 500);
	__OCF TAutoArgs<3> a_;
	wordObjects::push_arg(a_[1], Unit);
	wordObjects::push_arg(a_[2], Count);
	wordObjects::push_arg(a_[3], Extend);
	return Invoke(acMethod, a_, i_, i_);
}

long TSelectionProxy::MoveRight(__OCF TAutoVal* Unit, __OCF TAutoVal* Count, __OCF TAutoVal* Extend)
{
	static __OCF TAutoDispId i_(this, 501);
	__OCF TAutoArgs<3> a_;
	wordObjects::push_arg(a_[1], Unit);
	wordObjects::push_arg(a_[2], Count);
	wordObjects::push_arg(a_[3], Extend);
	return Invoke(acMethod, a_, i_, i_);
}

long TSelectionProxy::MoveUp(__OCF TAutoVal* Unit, __OCF TAutoVal* Count, __OCF TAutoVal* Extend)
{
	static __OCF TAutoDispId i_(this, 502);
	__OCF TAutoArgs<3> a_;
	wordObjects::push_arg(a_[1], Unit);
	wordObjects::push_arg(a_[2], Count);
	wordObjects::push_arg(a_[3], Extend);
	return Invoke(acMethod, a_, i_, i_);
}

long TSelectionProxy::MoveDown(__OCF TAutoVal* Unit, __OCF TAutoVal* Count, __OCF TAutoVal* Extend)
{
	static __OCF TAutoDispId i_(this, 503);
	__OCF TAutoArgs<3> a_;
	wordObjects::push_arg(a_[1], Unit);
	wordObjects::push_arg(a_[2], Count);
	wordObjects::push_arg(a_[3], Extend);
	return Invoke(acMethod, a_, i_, i_);
}

long TSelectionProxy::HomeKey(__OCF TAutoVal* Unit, __OCF TAutoVal* Extend)
{
	static __OCF TAutoDispId i_(this, 504);
	__OCF TAutoArgs<2> a_;
	wordObjects::push_arg(a_[1], Unit);
	wordObjects::push_arg(a_[2], Extend);
	return Invoke(acMethod, a_, i_, i_);
}

long TSelectionProxy::EndKey(__OCF TAutoVal* Unit, __OCF TAutoVal* Extend)
{
	static __OCF TAutoDispId i_(this, 505);
	__OCF TAutoArgs<2> a_;
	wordObjects::push_arg(a_[1], Unit);
	wordObjects::push_arg(a_[2], Extend);
	return Invoke(acMethod, a_, i_, i_);
}

void TSelectionProxy::EscapeKey()
{
	static __OCF TAutoDispId i_(this, 506);
	__OCF TAutoArgs<0> a_;
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void TSelectionProxy::TypeText(__OCF TAutoString Text)
{
	static __OCF TAutoDispId i_(this, 507);
	__OCF TAutoArgs<1> a_;
	wordObjects::push_arg(a_[1], Text);
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void TSelectionProxy::CopyFormat()
{
	static __OCF TAutoDispId i_(this, 509);
	__OCF TAutoArgs<0> a_;
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void TSelectionProxy::PasteFormat()
{
	static __OCF TAutoDispId i_(this, 510);
	__OCF TAutoArgs<0> a_;
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void TSelectionProxy::TypeParagraph()
{
	static __OCF TAutoDispId i_(this, 512);
	__OCF TAutoArgs<0> a_;
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void TSelectionProxy::TypeBackspace()
{
	static __OCF TAutoDispId i_(this, 513);
	__OCF TAutoArgs<0> a_;
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void TSelectionProxy::NextSubdocument()
{
	static __OCF TAutoDispId i_(this, 514);
	__OCF TAutoArgs<0> a_;
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void TSelectionProxy::PreviousSubdocument()
{
	static __OCF TAutoDispId i_(this, 515);
	__OCF TAutoArgs<0> a_;
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void TSelectionProxy::SelectColumn()
{
	static __OCF TAutoDispId i_(this, 516);
	__OCF TAutoArgs<0> a_;
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void TSelectionProxy::SelectCurrentFont()
{
	static __OCF TAutoDispId i_(this, 517);
	__OCF TAutoArgs<0> a_;
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void TSelectionProxy::SelectCurrentAlignment()
{
	static __OCF TAutoDispId i_(this, 518);
	__OCF TAutoArgs<0> a_;
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void TSelectionProxy::SelectCurrentSpacing()
{
	static __OCF TAutoDispId i_(this, 519);
	__OCF TAutoArgs<0> a_;
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void TSelectionProxy::SelectCurrentIndent()
{
	static __OCF TAutoDispId i_(this, 520);
	__OCF TAutoArgs<0> a_;
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void TSelectionProxy::SelectCurrentTabs()
{
	static __OCF TAutoDispId i_(this, 521);
	__OCF TAutoArgs<0> a_;
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void TSelectionProxy::SelectCurrentColor()
{
	static __OCF TAutoDispId i_(this, 522);
	__OCF TAutoArgs<0> a_;
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void TSelectionProxy::CreateTextbox()
{
	static __OCF TAutoDispId i_(this, 523);
	__OCF TAutoArgs<0> a_;
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void TSelectionProxy::WholeStory()
{
	static __OCF TAutoDispId i_(this, 524);
	__OCF TAutoArgs<0> a_;
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void TSelectionProxy::SelectRow()
{
	static __OCF TAutoDispId i_(this, 525);
	__OCF TAutoArgs<0> a_;
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void TSelectionProxy::SplitTable()
{
	static __OCF TAutoDispId i_(this, 526);
	__OCF TAutoArgs<0> a_;
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void TSelectionProxy::InsertRows(__OCF TAutoVal* NumRows)
{
	static __OCF TAutoDispId i_(this, 528);
	__OCF TAutoArgs<1> a_;
	wordObjects::push_arg(a_[1], NumRows);
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void TSelectionProxy::InsertColumns()
{
	static __OCF TAutoDispId i_(this, 529);
	__OCF TAutoArgs<0> a_;
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void TSelectionProxy::InsertFormula(__OCF TAutoVal* Formula, __OCF TAutoVal* NumberFormat)
{
	static __OCF TAutoDispId i_(this, 530);
	__OCF TAutoArgs<2> a_;
	wordObjects::push_arg(a_[1], Formula);
	wordObjects::push_arg(a_[2], NumberFormat);
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void TSelectionProxy::NextRevision(TRevisionProxy& Obj, __OCF TAutoVal* Wrap)
{
	static __OCF TAutoDispId i_(this, 531);
	__OCF TAutoArgs<1> a_;
	wordObjects::push_arg(a_[1], Wrap);
	Obj.Bind(Invoke(acMethod, a_, i_, i_));
}

void TSelectionProxy::PreviousRevision(TRevisionProxy& Obj, __OCF TAutoVal* Wrap)
{
	static __OCF TAutoDispId i_(this, 532);
	__OCF TAutoArgs<1> a_;
	wordObjects::push_arg(a_[1], Wrap);
	Obj.Bind(Invoke(acMethod, a_, i_, i_));
}

void TSelectionProxy::PasteAsNestedTable()
{
	static __OCF TAutoDispId i_(this, 533);
	__OCF TAutoArgs<0> a_;
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void TSelectionProxy::CreateAutoTextEntry(TAutoTextEntryProxy& Obj, __OCF TAutoString Name, __OCF TAutoString StyleName)
{
	static __OCF TAutoDispId i_(this, 534);
	__OCF TAutoArgs<2> a_;
	wordObjects::push_arg(a_[1], Name);
	wordObjects::push_arg(a_[2], StyleName);
	Obj.Bind(Invoke(acMethod, a_, i_, i_));
}

void TSelectionProxy::DetectLanguage()
{
	static __OCF TAutoDispId i_(this, 535);
	__OCF TAutoArgs<0> a_;
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void TSelectionProxy::SelectCell()
{
	static __OCF TAutoDispId i_(this, 536);
	__OCF TAutoArgs<0> a_;
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void TSelectionProxy::InsertRowsBelow(__OCF TAutoVal* NumRows)
{
	static __OCF TAutoDispId i_(this, 537);
	__OCF TAutoArgs<1> a_;
	wordObjects::push_arg(a_[1], NumRows);
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void TSelectionProxy::InsertColumnsRight()
{
	static __OCF TAutoDispId i_(this, 538);
	__OCF TAutoArgs<0> a_;
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void TSelectionProxy::InsertRowsAbove(__OCF TAutoVal* NumRows)
{
	static __OCF TAutoDispId i_(this, 539);
	__OCF TAutoArgs<1> a_;
	wordObjects::push_arg(a_[1], NumRows);
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void TSelectionProxy::RtlRun()
{
	static __OCF TAutoDispId i_(this, 600);
	__OCF TAutoArgs<0> a_;
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void TSelectionProxy::LtrRun()
{
	static __OCF TAutoDispId i_(this, 601);
	__OCF TAutoArgs<0> a_;
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void TSelectionProxy::BoldRun()
{
	static __OCF TAutoDispId i_(this, 602);
	__OCF TAutoArgs<0> a_;
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void TSelectionProxy::ItalicRun()
{
	static __OCF TAutoDispId i_(this, 603);
	__OCF TAutoArgs<0> a_;
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void TSelectionProxy::RtlPara()
{
	static __OCF TAutoDispId i_(this, 605);
	__OCF TAutoArgs<0> a_;
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void TSelectionProxy::LtrPara()
{
	static __OCF TAutoDispId i_(this, 606);
	__OCF TAutoArgs<0> a_;
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void TSelectionProxy::InsertDateTime(__OCF TAutoVal* DateTimeFormat, __OCF TAutoVal* InsertAsField, __OCF TAutoVal* InsertAsFullWidth, __OCF TAutoVal* DateLanguage, __OCF TAutoVal* CalendarType)
{
	static __OCF TAutoDispId i_(this, 444);
	__OCF TAutoArgs<5> a_;
	wordObjects::push_arg(a_[1], DateTimeFormat);
	wordObjects::push_arg(a_[2], InsertAsField);
	wordObjects::push_arg(a_[3], InsertAsFullWidth);
	wordObjects::push_arg(a_[4], DateLanguage);
	wordObjects::push_arg(a_[5], CalendarType);
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void TSelectionProxy::Sort2000(__OCF TAutoVal* ExcludeHeader, __OCF TAutoVal* FieldNumber, __OCF TAutoVal* SortFieldType, __OCF TAutoVal* SortOrder, __OCF TAutoVal* FieldNumber2, __OCF TAutoVal* SortFieldType2, __OCF TAutoVal* SortOrder2, __OCF TAutoVal* FieldNumber3, __OCF TAutoVal* SortFieldType3, __OCF TAutoVal* SortOrder3, __OCF TAutoVal* SortColumn, __OCF TAutoVal* Separator, __OCF TAutoVal* CaseSensitive, __OCF TAutoVal* BidiSort, __OCF TAutoVal* IgnoreThe, __OCF TAutoVal* IgnoreKashida, __OCF TAutoVal* IgnoreDiacritics, __OCF TAutoVal* IgnoreHe, __OCF TAutoVal* LanguageID)
{
	static __OCF TAutoDispId i_(this, 445);
	__OCF TAutoArgs<19> a_;
	wordObjects::push_arg(a_[1], ExcludeHeader);
	wordObjects::push_arg(a_[2], FieldNumber);
	wordObjects::push_arg(a_[3], SortFieldType);
	wordObjects::push_arg(a_[4], SortOrder);
	wordObjects::push_arg(a_[5], FieldNumber2);
	wordObjects::push_arg(a_[6], SortFieldType2);
	wordObjects::push_arg(a_[7], SortOrder2);
	wordObjects::push_arg(a_[8], FieldNumber3);
	wordObjects::push_arg(a_[9], SortFieldType3);
	wordObjects::push_arg(a_[10], SortOrder3);
	wordObjects::push_arg(a_[11], SortColumn);
	wordObjects::push_arg(a_[12], Separator);
	wordObjects::push_arg(a_[13], CaseSensitive);
	wordObjects::push_arg(a_[14], BidiSort);
	wordObjects::push_arg(a_[15], IgnoreThe);
	wordObjects::push_arg(a_[16], IgnoreKashida);
	wordObjects::push_arg(a_[17], IgnoreDiacritics);
	wordObjects::push_arg(a_[18], IgnoreHe);
	wordObjects::push_arg(a_[19], LanguageID);
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void TSelectionProxy::ConvertToTable(TTableProxy& Obj, __OCF TAutoVal* Separator, __OCF TAutoVal* NumRows, __OCF TAutoVal* NumColumns, __OCF TAutoVal* InitialColumnWidth, __OCF TAutoVal* Format, __OCF TAutoVal* ApplyBorders, __OCF TAutoVal* ApplyShading, __OCF TAutoVal* ApplyFont, __OCF TAutoVal* ApplyColor, __OCF TAutoVal* ApplyHeadingRows, __OCF TAutoVal* ApplyLastRow, __OCF TAutoVal* ApplyFirstColumn, __OCF TAutoVal* ApplyLastColumn, __OCF TAutoVal* AutoFit, __OCF TAutoVal* AutoFitBehavior, __OCF TAutoVal* DefaultTableBehavior)
{
	static __OCF TAutoDispId i_(this, 457);
	__OCF TAutoArgs<16> a_;
	wordObjects::push_arg(a_[1], Separator);
	wordObjects::push_arg(a_[2], NumRows);
	wordObjects::push_arg(a_[3], NumColumns);
	wordObjects::push_arg(a_[4], InitialColumnWidth);
	wordObjects::push_arg(a_[5], Format);
	wordObjects::push_arg(a_[6], ApplyBorders);
	wordObjects::push_arg(a_[7], ApplyShading);
	wordObjects::push_arg(a_[8], ApplyFont);
	wordObjects::push_arg(a_[9], ApplyColor);
	wordObjects::push_arg(a_[10], ApplyHeadingRows);
	wordObjects::push_arg(a_[11], ApplyLastRow);
	wordObjects::push_arg(a_[12], ApplyFirstColumn);
	wordObjects::push_arg(a_[13], ApplyLastColumn);
	wordObjects::push_arg(a_[14], AutoFit);
	wordObjects::push_arg(a_[15], AutoFitBehavior);
	wordObjects::push_arg(a_[16], DefaultTableBehavior);
	Obj.Bind(Invoke(acMethod, a_, i_, i_));
}

long TSelectionProxy::NoProofing()
{
	static __OCF TAutoDispId i_(this, 1005);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

void TSelectionProxy::NoProofing(long arg0)
{
	static __OCF TAutoDispId i_(this, 1005);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

void TSelectionProxy::TopLevelTables(TTablesProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 1006);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

/*__OWL*/ TBool TSelectionProxy::LanguageDetected()
{
	static __OCF TAutoDispId i_(this, 1007);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

void TSelectionProxy::LanguageDetected(/*__OWL*/ TBool arg0)
{
	static __OCF TAutoDispId i_(this, 1007);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

float TSelectionProxy::FitTextWidth()
{
	static __OCF TAutoDispId i_(this, 1008);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

void TSelectionProxy::FitTextWidth(float arg0)
{
	static __OCF TAutoDispId i_(this, 1008);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

void TSelectionProxy::ClearFormatting()
{
	static __OCF TAutoDispId i_(this, 1009);
	__OCF TAutoArgs<0> a_;
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void TSelectionProxy::PasteAppendTable()
{
	static __OCF TAutoDispId i_(this, 1010);
	__OCF TAutoArgs<0> a_;
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void TSelectionProxy::_HTMLDivisions(THTMLDivisionsProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 1011);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

void TSelectionProxy::_SmartTags(TSmartTagsProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 1015);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

void TSelectionProxy::ChildShapeRange(TShapeRangeProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 1021);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

/*__OWL*/ TBool TSelectionProxy::HasChildShapeRange()
{
	static __OCF TAutoDispId i_(this, 1022);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

void TSelectionProxy::_FootnoteOptions(TFootnoteOptionsProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 1024);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

void TSelectionProxy::_EndnoteOptions(TEndnoteOptionsProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 1025);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

void TSelectionProxy::ToggleCharacterCode()
{
	static __OCF TAutoDispId i_(this, 1012);
	__OCF TAutoArgs<0> a_;
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void TSelectionProxy::PasteAndFormat(WdRecoveryType Type)
{
	static __OCF TAutoDispId i_(this, 1013);
	__OCF TAutoArgs<1> a_;
	wordObjects::push_arg(a_[1], Type);
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void TSelectionProxy::PasteExcelTable(/*__OWL*/ TBool LinkedToExcel, /*__OWL*/ TBool WordFormatting, /*__OWL*/ TBool RTF)
{
	static __OCF TAutoDispId i_(this, 1014);
	__OCF TAutoArgs<3> a_;
	wordObjects::push_arg(a_[1], LinkedToExcel);
	wordObjects::push_arg(a_[2], WordFormatting);
	wordObjects::push_arg(a_[3], RTF);
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void TSelectionProxy::ShrinkDiscontiguousSelection()
{
	static __OCF TAutoDispId i_(this, 1019);
	__OCF TAutoArgs<0> a_;
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void TSelectionProxy::InsertStyleSeparator()
{
	static __OCF TAutoDispId i_(this, 1020);
	__OCF TAutoArgs<0> a_;
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void TSelectionProxy::Sort(__OCF TAutoVal* ExcludeHeader, __OCF TAutoVal* FieldNumber, __OCF TAutoVal* SortFieldType, __OCF TAutoVal* SortOrder, __OCF TAutoVal* FieldNumber2, __OCF TAutoVal* SortFieldType2, __OCF TAutoVal* SortOrder2, __OCF TAutoVal* FieldNumber3, __OCF TAutoVal* SortFieldType3, __OCF TAutoVal* SortOrder3, __OCF TAutoVal* SortColumn, __OCF TAutoVal* Separator, __OCF TAutoVal* CaseSensitive, __OCF TAutoVal* BidiSort, __OCF TAutoVal* IgnoreThe, __OCF TAutoVal* IgnoreKashida, __OCF TAutoVal* IgnoreDiacritics, __OCF TAutoVal* IgnoreHe, __OCF TAutoVal* LanguageID, __OCF TAutoVal* SubFieldNumber, __OCF TAutoVal* SubFieldNumber2, __OCF TAutoVal* SubFieldNumber3)
{
	static __OCF TAutoDispId i_(this, 1023);
	__OCF TAutoArgs<22> a_;
	wordObjects::push_arg(a_[1], ExcludeHeader);
	wordObjects::push_arg(a_[2], FieldNumber);
	wordObjects::push_arg(a_[3], SortFieldType);
	wordObjects::push_arg(a_[4], SortOrder);
	wordObjects::push_arg(a_[5], FieldNumber2);
	wordObjects::push_arg(a_[6], SortFieldType2);
	wordObjects::push_arg(a_[7], SortOrder2);
	wordObjects::push_arg(a_[8], FieldNumber3);
	wordObjects::push_arg(a_[9], SortFieldType3);
	wordObjects::push_arg(a_[10], SortOrder3);
	wordObjects::push_arg(a_[11], SortColumn);
	wordObjects::push_arg(a_[12], Separator);
	wordObjects::push_arg(a_[13], CaseSensitive);
	wordObjects::push_arg(a_[14], BidiSort);
	wordObjects::push_arg(a_[15], IgnoreThe);
	wordObjects::push_arg(a_[16], IgnoreKashida);
	wordObjects::push_arg(a_[17], IgnoreDiacritics);
	wordObjects::push_arg(a_[18], IgnoreHe);
	wordObjects::push_arg(a_[19], LanguageID);
	wordObjects::push_arg(a_[20], SubFieldNumber);
	wordObjects::push_arg(a_[21], SubFieldNumber2);
	wordObjects::push_arg(a_[22], SubFieldNumber3);
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void TSelectionProxy::_XMLNodes(TXMLNodesProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 310);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

void TSelectionProxy::XMLParentNode(TXMLNodeProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 311);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

void TSelectionProxy::_Editors(TEditorsProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 313);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

__OCF TAutoString TSelectionProxy::XML(/*__OWL*/ TBool DataOnly)
{
	static __OCF TAutoDispId i_(this, 314);
	__OCF TAutoArgs<1> a_;
	wordObjects::push_arg(a_[1], DataOnly);
	return Invoke(acPropGet, a_, i_, i_);
}

__OCF TAutoVal TSelectionProxy::EnhMetaFileBits()
{
	static __OCF TAutoDispId i_(this, 315);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

void TSelectionProxy::GoToEditableRange(TRangeProxy& Obj, __OCF TAutoVal* EditorID)
{
	static __OCF TAutoDispId i_(this, 1027);
	__OCF TAutoArgs<1> a_;
	wordObjects::push_arg(a_[1], EditorID);
	Obj.Bind(Invoke(acMethod, a_, i_, i_));
}

void TSelectionProxy::InsertXML(__OCF TAutoString XML, __OCF TAutoVal* Transform)
{
	static __OCF TAutoDispId i_(this, 1028);
	__OCF TAutoArgs<2> a_;
	wordObjects::push_arg(a_[1], XML);
	wordObjects::push_arg(a_[2], Transform);
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void TSelectionProxy::InsertCaption(__OCF TAutoVal* Label, __OCF TAutoVal* Title, __OCF TAutoVal* TitleAutoText, __OCF TAutoVal* Position, __OCF TAutoVal* ExcludeLabel)
{
	static __OCF TAutoDispId i_(this, 417);
	__OCF TAutoArgs<5> a_;
	wordObjects::push_arg(a_[1], Label);
	wordObjects::push_arg(a_[2], Title);
	wordObjects::push_arg(a_[3], TitleAutoText);
	wordObjects::push_arg(a_[4], Position);
	wordObjects::push_arg(a_[5], ExcludeLabel);
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void TSelectionProxy::InsertCrossReference(__OCF TAutoVal* ReferenceType, WdReferenceKind ReferenceKind, __OCF TAutoVal* ReferenceItem, __OCF TAutoVal* InsertAsHyperlink, __OCF TAutoVal* IncludePosition, __OCF TAutoVal* SeparateNumbers, __OCF TAutoVal* SeparatorString)
{
	static __OCF TAutoDispId i_(this, 418);
	__OCF TAutoArgs<7> a_;
	wordObjects::push_arg(a_[1], ReferenceType);
	wordObjects::push_arg(a_[2], ReferenceKind);
	wordObjects::push_arg(a_[3], ReferenceItem);
	wordObjects::push_arg(a_[4], InsertAsHyperlink);
	wordObjects::push_arg(a_[5], IncludePosition);
	wordObjects::push_arg(a_[6], SeparateNumbers);
	wordObjects::push_arg(a_[7], SeparatorString);
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

/* __OCF */ TString TRangeProxy::Text()
{
	static __OCF TAutoDispId i_(this, (long)0);
	__OCF TAutoArgs<0> a_;

	// return Invoke(acPropGet, a_, i_, i_);
  // Modified PA
  //
  TAutoVal text = Invoke(acPropGet, a_, i_, i_);
  return text.StrVal(); ;
}

void TRangeProxy::Text(__OCF TAutoString arg0)
{
	static __OCF TAutoDispId i_(this, (long)0);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

void TRangeProxy::FormattedText(TRangeProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 2);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

void TRangeProxy::FormattedText(WordRange* arg0)
{
	static __OCF TAutoDispId i_(this, 2);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

long TRangeProxy::Start()
{
	static __OCF TAutoDispId i_(this, 3);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

void TRangeProxy::Start(long arg0)
{
	static __OCF TAutoDispId i_(this, 3);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

long TRangeProxy::End()
{
	static __OCF TAutoDispId i_(this, 4);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

void TRangeProxy::End(long arg0)
{
	static __OCF TAutoDispId i_(this, 4);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

Font* TRangeProxy::_Font()
{
	static __OCF TAutoDispId i_(this, 5);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

void TRangeProxy::_Font(Font* arg0)
{
	static __OCF TAutoDispId i_(this, 5);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

void TRangeProxy::Duplicate(TRangeProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 6);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

WdStoryType TRangeProxy::StoryType()
{
	static __OCF TAutoDispId i_(this, 7);
	__OCF TAutoArgs<0> a_;
	return (WdStoryType)(int)Invoke(acPropGet, a_, i_, i_);
}

void TRangeProxy::_Tables(TTablesProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 50);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

void TRangeProxy::_Words(TWordsProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 51);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

void TRangeProxy::_Sentences(TSentencesProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 52);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

void TRangeProxy::_Characters(TCharactersProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 53);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

void TRangeProxy::_Footnotes(TFootnotesProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 54);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

void TRangeProxy::_Endnotes(TEndnotesProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 55);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

void TRangeProxy::_Comments(TCommentsProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 56);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

void TRangeProxy::_Cells(TCellsProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 57);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

void TRangeProxy::_Sections(TSectionsProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 58);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

void TRangeProxy::_Paragraphs(TParagraphsProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 59);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

void TRangeProxy::_Borders(TBordersProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 1100);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

void TRangeProxy::_Borders(Borders* arg0)
{
	static __OCF TAutoDispId i_(this, 1100);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

void TRangeProxy::_Shading(TShadingProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 61);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

void TRangeProxy::_TextRetrievalMode(TTextRetrievalModeProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 62);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

void TRangeProxy::_TextRetrievalMode(TextRetrievalMode* arg0)
{
	static __OCF TAutoDispId i_(this, 62);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

void TRangeProxy::_Fields(TFieldsProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 64);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

void TRangeProxy::_FormFields(TFormFieldsProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 65);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

void TRangeProxy::_Frames(TFramesProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 66);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

ParagraphFormat* TRangeProxy::_ParagraphFormat()
{
	static __OCF TAutoDispId i_(this, 1102);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

void TRangeProxy::_ParagraphFormat(ParagraphFormat* arg0)
{
	static __OCF TAutoDispId i_(this, 1102);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

void TRangeProxy::_ListFormat(TListFormatProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 68);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

void TRangeProxy::_Bookmarks(TBookmarksProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 75);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

WordApplication* TRangeProxy::_Application()
{
	static __OCF TAutoDispId i_(this, 1000);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

long TRangeProxy::Creator()
{
	static __OCF TAutoDispId i_(this, 1001);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

IDispatch* TRangeProxy::Parent()
{
	static __OCF TAutoDispId i_(this, 1002);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

long TRangeProxy::Bold()
{
	static __OCF TAutoDispId i_(this, 130);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

void TRangeProxy::Bold(long arg0)
{
	static __OCF TAutoDispId i_(this, 130);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

long TRangeProxy::Italic()
{
	static __OCF TAutoDispId i_(this, 131);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

void TRangeProxy::Italic(long arg0)
{
	static __OCF TAutoDispId i_(this, 131);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

WdUnderline TRangeProxy::Underline()
{
	static __OCF TAutoDispId i_(this, 139);
	__OCF TAutoArgs<0> a_;
	return (WdUnderline)(int)Invoke(acPropGet, a_, i_, i_);
}

void TRangeProxy::Underline(WdUnderline arg0)
{
	static __OCF TAutoDispId i_(this, 139);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

WdEmphasisMark TRangeProxy::EmphasisMark()
{
	static __OCF TAutoDispId i_(this, 140);
	__OCF TAutoArgs<0> a_;
	return (WdEmphasisMark)(int)Invoke(acPropGet, a_, i_, i_);
}

void TRangeProxy::EmphasisMark(WdEmphasisMark arg0)
{
	static __OCF TAutoDispId i_(this, 140);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

/*__OWL*/ TBool TRangeProxy::DisableCharacterSpaceGrid()
{
	static __OCF TAutoDispId i_(this, 141);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

void TRangeProxy::DisableCharacterSpaceGrid(/*__OWL*/ TBool arg0)
{
	static __OCF TAutoDispId i_(this, 141);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

void TRangeProxy::_Revisions(TRevisionsProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 150);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

__OCF TAutoVal TRangeProxy::_Style()
{
	static __OCF TAutoDispId i_(this, 151);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

void TRangeProxy::_Style(__OCF TAutoVal* arg0)
{
	static __OCF TAutoDispId i_(this, 151);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

long TRangeProxy::StoryLength()
{
	static __OCF TAutoDispId i_(this, 152);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

WdLanguageID TRangeProxy::LanguageID()
{
	static __OCF TAutoDispId i_(this, 153);
	__OCF TAutoArgs<0> a_;
	return (WdLanguageID)(int)Invoke(acPropGet, a_, i_, i_);
}

void TRangeProxy::LanguageID(WdLanguageID arg0)
{
	static __OCF TAutoDispId i_(this, 153);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

void TRangeProxy::_SynonymInfo(TSynonymInfoProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 155);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

void TRangeProxy::_Hyperlinks(THyperlinksProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 156);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

void TRangeProxy::_ListParagraphs(TListParagraphsProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 157);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

void TRangeProxy::_Subdocuments(TSubdocumentsProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 159);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

/*__OWL*/ TBool TRangeProxy::GrammarChecked()
{
	static __OCF TAutoDispId i_(this, 260);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

void TRangeProxy::GrammarChecked(/*__OWL*/ TBool arg0)
{
	static __OCF TAutoDispId i_(this, 260);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

/*__OWL*/ TBool TRangeProxy::SpellingChecked()
{
	static __OCF TAutoDispId i_(this, 261);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

void TRangeProxy::SpellingChecked(/*__OWL*/ TBool arg0)
{
	static __OCF TAutoDispId i_(this, 261);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

WdColorIndex TRangeProxy::HighlightColorIndex()
{
	static __OCF TAutoDispId i_(this, 301);
	__OCF TAutoArgs<0> a_;
	return (WdColorIndex)(int)Invoke(acPropGet, a_, i_, i_);
}

void TRangeProxy::HighlightColorIndex(WdColorIndex arg0)
{
	static __OCF TAutoDispId i_(this, 301);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

void TRangeProxy::_Columns(TColumnsProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 302);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

void TRangeProxy::_Rows(TRowsProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 303);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

long TRangeProxy::CanEdit()
{
	static __OCF TAutoDispId i_(this, 304);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

long TRangeProxy::CanPaste()
{
	static __OCF TAutoDispId i_(this, 305);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

/*__OWL*/ TBool TRangeProxy::IsEndOfRowMark()
{
	static __OCF TAutoDispId i_(this, 307);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

long TRangeProxy::BookmarkID()
{
	static __OCF TAutoDispId i_(this, 308);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

long TRangeProxy::PreviousBookmarkID()
{
	static __OCF TAutoDispId i_(this, 309);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

void TRangeProxy::_Find(TFindProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 262);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

void TRangeProxy::_PageSetup(TPageSetupProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 1101);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

void TRangeProxy::_PageSetup(PageSetup* arg0)
{
	static __OCF TAutoDispId i_(this, 1101);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

void TRangeProxy::_ShapeRange(TShapeRangeProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 311);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

WdCharacterCase TRangeProxy::Case()
{
	static __OCF TAutoDispId i_(this, 312);
	__OCF TAutoArgs<0> a_;
	return (WdCharacterCase)(int)Invoke(acPropGet, a_, i_, i_);
}

void TRangeProxy::Case(WdCharacterCase arg0)
{
	static __OCF TAutoDispId i_(this, 312);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

__OCF TAutoVal TRangeProxy::Information(WdInformation Type)
{
	static __OCF TAutoDispId i_(this, 313);
	__OCF TAutoArgs<1> a_;
	wordObjects::push_arg(a_[1], Type);
	return Invoke(acPropGet, a_, i_, i_);
}

void TRangeProxy::_ReadabilityStatistics(TReadabilityStatisticsProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 314);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

void TRangeProxy::GrammaticalErrors(TProofreadingErrorsProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 315);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

void TRangeProxy::SpellingErrors(TProofreadingErrorsProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 316);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

WdTextOrientation TRangeProxy::Orientation()
{
	static __OCF TAutoDispId i_(this, 317);
	__OCF TAutoArgs<0> a_;
	return (WdTextOrientation)(int)Invoke(acPropGet, a_, i_, i_);
}

void TRangeProxy::Orientation(WdTextOrientation arg0)
{
	static __OCF TAutoDispId i_(this, 317);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

void TRangeProxy::_InlineShapes(TInlineShapesProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 319);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

void TRangeProxy::NextStoryRange(TRangeProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 320);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

WdLanguageID TRangeProxy::LanguageIDFarEast()
{
	static __OCF TAutoDispId i_(this, 321);
	__OCF TAutoArgs<0> a_;
	return (WdLanguageID)(int)Invoke(acPropGet, a_, i_, i_);
}

void TRangeProxy::LanguageIDFarEast(WdLanguageID arg0)
{
	static __OCF TAutoDispId i_(this, 321);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

WdLanguageID TRangeProxy::LanguageIDOther()
{
	static __OCF TAutoDispId i_(this, 322);
	__OCF TAutoArgs<0> a_;
	return (WdLanguageID)(int)Invoke(acPropGet, a_, i_, i_);
}

void TRangeProxy::LanguageIDOther(WdLanguageID arg0)
{
	static __OCF TAutoDispId i_(this, 322);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

void TRangeProxy::Select()
{
	static __OCF TAutoDispId i_(this, 65535);
	__OCF TAutoArgs<0> a_;
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void TRangeProxy::SetRange(long Start, long End)
{
	static __OCF TAutoDispId i_(this, 100);
	__OCF TAutoArgs<2> a_;
	wordObjects::push_arg(a_[1], Start);
	wordObjects::push_arg(a_[2], End);
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void TRangeProxy::Collapse(__OCF TAutoVal* Direction)
{
	static __OCF TAutoDispId i_(this, 101);
	__OCF TAutoArgs<1> a_;
	wordObjects::push_arg(a_[1], Direction);
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void TRangeProxy::InsertBefore(__OCF TAutoString Text)
{
	static __OCF TAutoDispId i_(this, 102);
	__OCF TAutoArgs<1> a_;
	wordObjects::push_arg(a_[1], Text);
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void TRangeProxy::InsertAfter(__OCF TAutoString Text)
{
	static __OCF TAutoDispId i_(this, 104);
	__OCF TAutoArgs<1> a_;
	wordObjects::push_arg(a_[1], Text);
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void TRangeProxy::Next(TRangeProxy& Obj, __OCF TAutoVal* Unit, __OCF TAutoVal* Count)
{
	static __OCF TAutoDispId i_(this, 105);
	__OCF TAutoArgs<2> a_;
	wordObjects::push_arg(a_[1], Unit);
	wordObjects::push_arg(a_[2], Count);
	Obj.Bind(Invoke(acMethod, a_, i_, i_));
}

void TRangeProxy::Previous(TRangeProxy& Obj, __OCF TAutoVal* Unit, __OCF TAutoVal* Count)
{
	static __OCF TAutoDispId i_(this, 106);
	__OCF TAutoArgs<2> a_;
	wordObjects::push_arg(a_[1], Unit);
	wordObjects::push_arg(a_[2], Count);
	Obj.Bind(Invoke(acMethod, a_, i_, i_));
}

long TRangeProxy::StartOf(__OCF TAutoVal* Unit, __OCF TAutoVal* Extend)
{
	static __OCF TAutoDispId i_(this, 107);
	__OCF TAutoArgs<2> a_;
	wordObjects::push_arg(a_[1], Unit);
	wordObjects::push_arg(a_[2], Extend);
	return Invoke(acMethod, a_, i_, i_);
}

long TRangeProxy::EndOf(__OCF TAutoVal* Unit, __OCF TAutoVal* Extend)
{
	static __OCF TAutoDispId i_(this, 108);
	__OCF TAutoArgs<2> a_;
	wordObjects::push_arg(a_[1], Unit);
	wordObjects::push_arg(a_[2], Extend);
	return Invoke(acMethod, a_, i_, i_);
}

long TRangeProxy::Move(__OCF TAutoVal* Unit, __OCF TAutoVal* Count)
{
	static __OCF TAutoDispId i_(this, 109);
	__OCF TAutoArgs<2> a_;
	wordObjects::push_arg(a_[1], Unit);
	wordObjects::push_arg(a_[2], Count);
	return Invoke(acMethod, a_, i_, i_);
}

long TRangeProxy::MoveStart(__OCF TAutoVal* Unit, __OCF TAutoVal* Count)
{
	static __OCF TAutoDispId i_(this, 110);
	__OCF TAutoArgs<2> a_;
	wordObjects::push_arg(a_[1], Unit);
	wordObjects::push_arg(a_[2], Count);
	return Invoke(acMethod, a_, i_, i_);
}

long TRangeProxy::MoveEnd(__OCF TAutoVal* Unit, __OCF TAutoVal* Count)
{
	static __OCF TAutoDispId i_(this, 111);
	__OCF TAutoArgs<2> a_;
	wordObjects::push_arg(a_[1], Unit);
	wordObjects::push_arg(a_[2], Count);
	return Invoke(acMethod, a_, i_, i_);
}

long TRangeProxy::MoveWhile(__OCF TAutoVal* Cset, __OCF TAutoVal* Count)
{
	static __OCF TAutoDispId i_(this, 112);
	__OCF TAutoArgs<2> a_;
	wordObjects::push_arg(a_[1], Cset);
	wordObjects::push_arg(a_[2], Count);
	return Invoke(acMethod, a_, i_, i_);
}

long TRangeProxy::MoveStartWhile(__OCF TAutoVal* Cset, __OCF TAutoVal* Count)
{
	static __OCF TAutoDispId i_(this, 113);
	__OCF TAutoArgs<2> a_;
	wordObjects::push_arg(a_[1], Cset);
	wordObjects::push_arg(a_[2], Count);
	return Invoke(acMethod, a_, i_, i_);
}

long TRangeProxy::MoveEndWhile(__OCF TAutoVal* Cset, __OCF TAutoVal* Count)
{
	static __OCF TAutoDispId i_(this, 114);
	__OCF TAutoArgs<2> a_;
	wordObjects::push_arg(a_[1], Cset);
	wordObjects::push_arg(a_[2], Count);
	return Invoke(acMethod, a_, i_, i_);
}

long TRangeProxy::MoveUntil(__OCF TAutoVal* Cset, __OCF TAutoVal* Count)
{
	static __OCF TAutoDispId i_(this, 115);
	__OCF TAutoArgs<2> a_;
	wordObjects::push_arg(a_[1], Cset);
	wordObjects::push_arg(a_[2], Count);
	return Invoke(acMethod, a_, i_, i_);
}

long TRangeProxy::MoveStartUntil(__OCF TAutoVal* Cset, __OCF TAutoVal* Count)
{
	static __OCF TAutoDispId i_(this, 116);
	__OCF TAutoArgs<2> a_;
	wordObjects::push_arg(a_[1], Cset);
	wordObjects::push_arg(a_[2], Count);
	return Invoke(acMethod, a_, i_, i_);
}

long TRangeProxy::MoveEndUntil(__OCF TAutoVal* Cset, __OCF TAutoVal* Count)
{
	static __OCF TAutoDispId i_(this, 117);
	__OCF TAutoArgs<2> a_;
	wordObjects::push_arg(a_[1], Cset);
	wordObjects::push_arg(a_[2], Count);
	return Invoke(acMethod, a_, i_, i_);
}

void TRangeProxy::Cut()
{
	static __OCF TAutoDispId i_(this, 119);
	__OCF TAutoArgs<0> a_;
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void TRangeProxy::Copy()
{
	static __OCF TAutoDispId i_(this, 120);
	__OCF TAutoArgs<0> a_;
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void TRangeProxy::Paste()
{
	static __OCF TAutoDispId i_(this, 121);
	__OCF TAutoArgs<0> a_;
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void TRangeProxy::InsertBreak(__OCF TAutoVal* Type)
{
	static __OCF TAutoDispId i_(this, 122);
	__OCF TAutoArgs<1> a_;
	wordObjects::push_arg(a_[1], Type);
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void TRangeProxy::InsertFile(__OCF TAutoString FileName, __OCF TAutoVal* arg1, __OCF TAutoVal* ConfirmConversions, __OCF TAutoVal* Link, __OCF TAutoVal* Attachment)
{
	static __OCF TAutoDispId i_(this, 123);
	__OCF TAutoArgs<5> a_;
	wordObjects::push_arg(a_[1], FileName);
	wordObjects::push_arg(a_[2], arg1);
	wordObjects::push_arg(a_[3], ConfirmConversions);
	wordObjects::push_arg(a_[4], Link);
	wordObjects::push_arg(a_[5], Attachment);
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

/*__OWL*/ TBool TRangeProxy::InStory(WordRange* arg0)
{
	static __OCF TAutoDispId i_(this, 125);
	__OCF TAutoArgs<1> a_;
	wordObjects::push_arg(a_[1], arg0);
	return Invoke(acMethod, a_, i_, i_);
}

/*__OWL*/ TBool TRangeProxy::InRange(WordRange* arg0)
{
	static __OCF TAutoDispId i_(this, 126);
	__OCF TAutoArgs<1> a_;
	wordObjects::push_arg(a_[1], arg0);
	return Invoke(acMethod, a_, i_, i_);
}

long TRangeProxy::Delete(__OCF TAutoVal* Unit, __OCF TAutoVal* Count)
{
	static __OCF TAutoDispId i_(this, 127);
	__OCF TAutoArgs<2> a_;
	wordObjects::push_arg(a_[1], Unit);
	wordObjects::push_arg(a_[2], Count);
	return Invoke(acMethod, a_, i_, i_);
}

void TRangeProxy::WholeStory()
{
	static __OCF TAutoDispId i_(this, 128);
	__OCF TAutoArgs<0> a_;
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

long TRangeProxy::Expand(__OCF TAutoVal* Unit)
{
	static __OCF TAutoDispId i_(this, 129);
	__OCF TAutoArgs<1> a_;
	wordObjects::push_arg(a_[1], Unit);
	return Invoke(acMethod, a_, i_, i_);
}

void TRangeProxy::InsertParagraph()
{
	static __OCF TAutoDispId i_(this, 160);
	__OCF TAutoArgs<0> a_;
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void TRangeProxy::InsertParagraphAfter()
{
	static __OCF TAutoDispId i_(this, 161);
	__OCF TAutoArgs<0> a_;
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void TRangeProxy::ConvertToTableOld(TTableProxy& Obj, __OCF TAutoVal* Separator, __OCF TAutoVal* NumRows, __OCF TAutoVal* NumColumns, __OCF TAutoVal* InitialColumnWidth, __OCF TAutoVal* Format, __OCF TAutoVal* ApplyBorders, __OCF TAutoVal* ApplyShading, __OCF TAutoVal* ApplyFont, __OCF TAutoVal* ApplyColor, __OCF TAutoVal* ApplyHeadingRows, __OCF TAutoVal* ApplyLastRow, __OCF TAutoVal* ApplyFirstColumn, __OCF TAutoVal* ApplyLastColumn, __OCF TAutoVal* AutoFit)
{
	static __OCF TAutoDispId i_(this, 162);
	__OCF TAutoArgs<14> a_;
	wordObjects::push_arg(a_[1], Separator);
	wordObjects::push_arg(a_[2], NumRows);
	wordObjects::push_arg(a_[3], NumColumns);
	wordObjects::push_arg(a_[4], InitialColumnWidth);
	wordObjects::push_arg(a_[5], Format);
	wordObjects::push_arg(a_[6], ApplyBorders);
	wordObjects::push_arg(a_[7], ApplyShading);
	wordObjects::push_arg(a_[8], ApplyFont);
	wordObjects::push_arg(a_[9], ApplyColor);
	wordObjects::push_arg(a_[10], ApplyHeadingRows);
	wordObjects::push_arg(a_[11], ApplyLastRow);
	wordObjects::push_arg(a_[12], ApplyFirstColumn);
	wordObjects::push_arg(a_[13], ApplyLastColumn);
	wordObjects::push_arg(a_[14], AutoFit);
	Obj.Bind(Invoke(acMethod, a_, i_, i_));
}

void TRangeProxy::InsertDateTimeOld(__OCF TAutoVal* DateTimeFormat, __OCF TAutoVal* InsertAsField, __OCF TAutoVal* InsertAsFullWidth)
{
	static __OCF TAutoDispId i_(this, 163);
	__OCF TAutoArgs<3> a_;
	wordObjects::push_arg(a_[1], DateTimeFormat);
	wordObjects::push_arg(a_[2], InsertAsField);
	wordObjects::push_arg(a_[3], InsertAsFullWidth);
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void TRangeProxy::InsertSymbol(long CharacterNumber, __OCF TAutoVal* arg1, __OCF TAutoVal* Unicode, __OCF TAutoVal* Bias)
{
	static __OCF TAutoDispId i_(this, 164);
	__OCF TAutoArgs<4> a_;
	wordObjects::push_arg(a_[1], CharacterNumber);
	wordObjects::push_arg(a_[2], arg1);
	wordObjects::push_arg(a_[3], Unicode);
	wordObjects::push_arg(a_[4], Bias);
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void TRangeProxy::InsertCrossReference_2002(__OCF TAutoVal* ReferenceType, WdReferenceKind ReferenceKind, __OCF TAutoVal* ReferenceItem, __OCF TAutoVal* InsertAsHyperlink, __OCF TAutoVal* IncludePosition)
{
	static __OCF TAutoDispId i_(this, 165);
	__OCF TAutoArgs<5> a_;
	wordObjects::push_arg(a_[1], ReferenceType);
	wordObjects::push_arg(a_[2], ReferenceKind);
	wordObjects::push_arg(a_[3], ReferenceItem);
	wordObjects::push_arg(a_[4], InsertAsHyperlink);
	wordObjects::push_arg(a_[5], IncludePosition);
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void TRangeProxy::InsertCaptionXP(__OCF TAutoVal* Label, __OCF TAutoVal* Title, __OCF TAutoVal* TitleAutoText, __OCF TAutoVal* Position)
{
	static __OCF TAutoDispId i_(this, 166);
	__OCF TAutoArgs<4> a_;
	wordObjects::push_arg(a_[1], Label);
	wordObjects::push_arg(a_[2], Title);
	wordObjects::push_arg(a_[3], TitleAutoText);
	wordObjects::push_arg(a_[4], Position);
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void TRangeProxy::CopyAsPicture()
{
	static __OCF TAutoDispId i_(this, 167);
	__OCF TAutoArgs<0> a_;
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void TRangeProxy::SortOld(__OCF TAutoVal* ExcludeHeader, __OCF TAutoVal* FieldNumber, __OCF TAutoVal* SortFieldType, __OCF TAutoVal* SortOrder, __OCF TAutoVal* FieldNumber2, __OCF TAutoVal* SortFieldType2, __OCF TAutoVal* SortOrder2, __OCF TAutoVal* FieldNumber3, __OCF TAutoVal* SortFieldType3, __OCF TAutoVal* SortOrder3, __OCF TAutoVal* SortColumn, __OCF TAutoVal* Separator, __OCF TAutoVal* CaseSensitive, __OCF TAutoVal* LanguageID)
{
	static __OCF TAutoDispId i_(this, 168);
	__OCF TAutoArgs<14> a_;
	wordObjects::push_arg(a_[1], ExcludeHeader);
	wordObjects::push_arg(a_[2], FieldNumber);
	wordObjects::push_arg(a_[3], SortFieldType);
	wordObjects::push_arg(a_[4], SortOrder);
	wordObjects::push_arg(a_[5], FieldNumber2);
	wordObjects::push_arg(a_[6], SortFieldType2);
	wordObjects::push_arg(a_[7], SortOrder2);
	wordObjects::push_arg(a_[8], FieldNumber3);
	wordObjects::push_arg(a_[9], SortFieldType3);
	wordObjects::push_arg(a_[10], SortOrder3);
	wordObjects::push_arg(a_[11], SortColumn);
	wordObjects::push_arg(a_[12], Separator);
	wordObjects::push_arg(a_[13], CaseSensitive);
	wordObjects::push_arg(a_[14], LanguageID);
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void TRangeProxy::SortAscending()
{
	static __OCF TAutoDispId i_(this, 169);
	__OCF TAutoArgs<0> a_;
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void TRangeProxy::SortDescending()
{
	static __OCF TAutoDispId i_(this, 170);
	__OCF TAutoArgs<0> a_;
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

/*__OWL*/ TBool TRangeProxy::IsEqual(WordRange* arg0)
{
	static __OCF TAutoDispId i_(this, 171);
	__OCF TAutoArgs<1> a_;
	wordObjects::push_arg(a_[1], arg0);
	return Invoke(acMethod, a_, i_, i_);
}

float TRangeProxy::Calculate()
{
	static __OCF TAutoDispId i_(this, 172);
	__OCF TAutoArgs<0> a_;
	return Invoke(acMethod, a_, i_, i_);
}

void TRangeProxy::GoTo(TRangeProxy& Obj, __OCF TAutoVal* What, __OCF TAutoVal* Which, __OCF TAutoVal* Count, __OCF TAutoVal* Name)
{
	static __OCF TAutoDispId i_(this, 173);
	__OCF TAutoArgs<4> a_;
	wordObjects::push_arg(a_[1], What);
	wordObjects::push_arg(a_[2], Which);
	wordObjects::push_arg(a_[3], Count);
	wordObjects::push_arg(a_[4], Name);
	Obj.Bind(Invoke(acMethod, a_, i_, i_));
}

void TRangeProxy::GoToNext(TRangeProxy& Obj, WdGoToItem What)
{
	static __OCF TAutoDispId i_(this, 174);
	__OCF TAutoArgs<1> a_;
	wordObjects::push_arg(a_[1], What);
	Obj.Bind(Invoke(acMethod, a_, i_, i_));
}

void TRangeProxy::GoToPrevious(TRangeProxy& Obj, WdGoToItem What)
{
	static __OCF TAutoDispId i_(this, 175);
	__OCF TAutoArgs<1> a_;
	wordObjects::push_arg(a_[1], What);
	Obj.Bind(Invoke(acMethod, a_, i_, i_));
}

void TRangeProxy::PasteSpecial(__OCF TAutoVal* IconIndex, __OCF TAutoVal* Link, __OCF TAutoVal* Placement, __OCF TAutoVal* DisplayAsIcon, __OCF TAutoVal* DataType, __OCF TAutoVal* IconFileName, __OCF TAutoVal* IconLabel)
{
	static __OCF TAutoDispId i_(this, 176);
	__OCF TAutoArgs<7> a_;
	wordObjects::push_arg(a_[1], IconIndex);
	wordObjects::push_arg(a_[2], Link);
	wordObjects::push_arg(a_[3], Placement);
	wordObjects::push_arg(a_[4], DisplayAsIcon);
	wordObjects::push_arg(a_[5], DataType);
	wordObjects::push_arg(a_[6], IconFileName);
	wordObjects::push_arg(a_[7], IconLabel);
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void TRangeProxy::LookupNameProperties()
{
	static __OCF TAutoDispId i_(this, 177);
	__OCF TAutoArgs<0> a_;
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

long TRangeProxy::ComputeStatistics(WdStatistic Statistic)
{
	static __OCF TAutoDispId i_(this, 178);
	__OCF TAutoArgs<1> a_;
	wordObjects::push_arg(a_[1], Statistic);
	return Invoke(acMethod, a_, i_, i_);
}

void TRangeProxy::Relocate(long Direction)
{
	static __OCF TAutoDispId i_(this, 179);
	__OCF TAutoArgs<1> a_;
	wordObjects::push_arg(a_[1], Direction);
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void TRangeProxy::CheckSynonyms()
{
	static __OCF TAutoDispId i_(this, 180);
	__OCF TAutoArgs<0> a_;
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void TRangeProxy::SubscribeTo(__OCF TAutoString Edition, __OCF TAutoVal* Format)
{
	static __OCF TAutoDispId i_(this, 181);
	__OCF TAutoArgs<2> a_;
	wordObjects::push_arg(a_[1], Edition);
	wordObjects::push_arg(a_[2], Format);
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void TRangeProxy::CreatePublisher(__OCF TAutoVal* Edition, __OCF TAutoVal* ContainsPICT, __OCF TAutoVal* ContainsRTF, __OCF TAutoVal* ContainsText)
{
	static __OCF TAutoDispId i_(this, 182);
	__OCF TAutoArgs<4> a_;
	wordObjects::push_arg(a_[1], Edition);
	wordObjects::push_arg(a_[2], ContainsPICT);
	wordObjects::push_arg(a_[3], ContainsRTF);
	wordObjects::push_arg(a_[4], ContainsText);
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void TRangeProxy::InsertAutoText()
{
	static __OCF TAutoDispId i_(this, 183);
	__OCF TAutoArgs<0> a_;
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void TRangeProxy::InsertDatabase(__OCF TAutoVal* Format, __OCF TAutoVal* arg1, __OCF TAutoVal* LinkToSource, __OCF TAutoVal* Connection, __OCF TAutoVal* SQLStatement, __OCF TAutoVal* SQLStatement1, __OCF TAutoVal* PasswordDocument, __OCF TAutoVal* PasswordTemplate, __OCF TAutoVal* WritePasswordDocument, __OCF TAutoVal* WritePasswordTemplate, __OCF TAutoVal* DataSource, __OCF TAutoVal* From, __OCF TAutoVal* To, __OCF TAutoVal* IncludeFields)
{
	static __OCF TAutoDispId i_(this, 194);
	__OCF TAutoArgs<14> a_;
	wordObjects::push_arg(a_[1], Format);
	wordObjects::push_arg(a_[2], arg1);
	wordObjects::push_arg(a_[3], LinkToSource);
	wordObjects::push_arg(a_[4], Connection);
	wordObjects::push_arg(a_[5], SQLStatement);
	wordObjects::push_arg(a_[6], SQLStatement1);
	wordObjects::push_arg(a_[7], PasswordDocument);
	wordObjects::push_arg(a_[8], PasswordTemplate);
	wordObjects::push_arg(a_[9], WritePasswordDocument);
	wordObjects::push_arg(a_[10], WritePasswordTemplate);
	wordObjects::push_arg(a_[11], DataSource);
	wordObjects::push_arg(a_[12], From);
	wordObjects::push_arg(a_[13], To);
	wordObjects::push_arg(a_[14], IncludeFields);
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void TRangeProxy::AutoFormat()
{
	static __OCF TAutoDispId i_(this, 195);
	__OCF TAutoArgs<0> a_;
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void TRangeProxy::CheckGrammar()
{
	static __OCF TAutoDispId i_(this, 204);
	__OCF TAutoArgs<0> a_;
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void TRangeProxy::CheckSpelling(__OCF TAutoVal* CustomDictionary, __OCF TAutoVal* IgnoreUppercase, __OCF TAutoVal* AlwaysSuggest, __OCF TAutoVal* CustomDictionary2, __OCF TAutoVal* CustomDictionary3, __OCF TAutoVal* CustomDictionary4, __OCF TAutoVal* CustomDictionary5, __OCF TAutoVal* CustomDictionary6, __OCF TAutoVal* CustomDictionary7, __OCF TAutoVal* CustomDictionary8, __OCF TAutoVal* CustomDictionary9, __OCF TAutoVal* CustomDictionary10)
{
	static __OCF TAutoDispId i_(this, 205);
	__OCF TAutoArgs<12> a_;
	wordObjects::push_arg(a_[1], CustomDictionary);
	wordObjects::push_arg(a_[2], IgnoreUppercase);
	wordObjects::push_arg(a_[3], AlwaysSuggest);
	wordObjects::push_arg(a_[4], CustomDictionary2);
	wordObjects::push_arg(a_[5], CustomDictionary3);
	wordObjects::push_arg(a_[6], CustomDictionary4);
	wordObjects::push_arg(a_[7], CustomDictionary5);
	wordObjects::push_arg(a_[8], CustomDictionary6);
	wordObjects::push_arg(a_[9], CustomDictionary7);
	wordObjects::push_arg(a_[10], CustomDictionary8);
	wordObjects::push_arg(a_[11], CustomDictionary9);
	wordObjects::push_arg(a_[12], CustomDictionary10);
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void TRangeProxy::GetSpellingSuggestions(TSpellingSuggestionsProxy& Obj, __OCF TAutoVal* CustomDictionary, __OCF TAutoVal* IgnoreUppercase, __OCF TAutoVal* MainDictionary, __OCF TAutoVal* SuggestionMode, __OCF TAutoVal* CustomDictionary2, __OCF TAutoVal* CustomDictionary3, __OCF TAutoVal* CustomDictionary4, __OCF TAutoVal* CustomDictionary5, __OCF TAutoVal* CustomDictionary6, __OCF TAutoVal* CustomDictionary7, __OCF TAutoVal* CustomDictionary8, __OCF TAutoVal* CustomDictionary9, __OCF TAutoVal* CustomDictionary10)
{
	static __OCF TAutoDispId i_(this, 209);
	__OCF TAutoArgs<13> a_;
	wordObjects::push_arg(a_[1], CustomDictionary);
	wordObjects::push_arg(a_[2], IgnoreUppercase);
	wordObjects::push_arg(a_[3], MainDictionary);
	wordObjects::push_arg(a_[4], SuggestionMode);
	wordObjects::push_arg(a_[5], CustomDictionary2);
	wordObjects::push_arg(a_[6], CustomDictionary3);
	wordObjects::push_arg(a_[7], CustomDictionary4);
	wordObjects::push_arg(a_[8], CustomDictionary5);
	wordObjects::push_arg(a_[9], CustomDictionary6);
	wordObjects::push_arg(a_[10], CustomDictionary7);
	wordObjects::push_arg(a_[11], CustomDictionary8);
	wordObjects::push_arg(a_[12], CustomDictionary9);
	wordObjects::push_arg(a_[13], CustomDictionary10);
	Obj.Bind(Invoke(acMethod, a_, i_, i_));
}

void TRangeProxy::InsertParagraphBefore()
{
	static __OCF TAutoDispId i_(this, 212);
	__OCF TAutoArgs<0> a_;
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void TRangeProxy::NextSubdocument()
{
	static __OCF TAutoDispId i_(this, 219);
	__OCF TAutoArgs<0> a_;
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void TRangeProxy::PreviousSubdocument()
{
	static __OCF TAutoDispId i_(this, 220);
	__OCF TAutoArgs<0> a_;
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void TRangeProxy::ConvertHangulAndHanja(__OCF TAutoVal* ConversionsMode, __OCF TAutoVal* FastConversion, __OCF TAutoVal* CheckHangulEnding, __OCF TAutoVal* EnableRecentOrdering, __OCF TAutoVal* CustomDictionary)
{
	static __OCF TAutoDispId i_(this, 221);
	__OCF TAutoArgs<5> a_;
	wordObjects::push_arg(a_[1], ConversionsMode);
	wordObjects::push_arg(a_[2], FastConversion);
	wordObjects::push_arg(a_[3], CheckHangulEnding);
	wordObjects::push_arg(a_[4], EnableRecentOrdering);
	wordObjects::push_arg(a_[5], CustomDictionary);
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void TRangeProxy::PasteAsNestedTable()
{
	static __OCF TAutoDispId i_(this, 222);
	__OCF TAutoArgs<0> a_;
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void TRangeProxy::ModifyEnclosure(__OCF TAutoVal* arg0, __OCF TAutoVal* Symbol, __OCF TAutoVal* EnclosedText)
{
	static __OCF TAutoDispId i_(this, 223);
	__OCF TAutoArgs<3> a_;
	wordObjects::push_arg(a_[1], arg0);
	wordObjects::push_arg(a_[2], Symbol);
	wordObjects::push_arg(a_[3], EnclosedText);
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void TRangeProxy::PhoneticGuide(__OCF TAutoString Text, WdPhoneticGuideAlignmentType Alignment, long Raise, long arg3, __OCF TAutoString arg4)
{
	static __OCF TAutoDispId i_(this, 224);
	__OCF TAutoArgs<5> a_;
	wordObjects::push_arg(a_[1], Text);
	wordObjects::push_arg(a_[2], Alignment);
	wordObjects::push_arg(a_[3], Raise);
	wordObjects::push_arg(a_[4], arg3);
	wordObjects::push_arg(a_[5], arg4);
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void TRangeProxy::InsertDateTime(__OCF TAutoVal* DateTimeFormat, __OCF TAutoVal* InsertAsField, __OCF TAutoVal* InsertAsFullWidth, __OCF TAutoVal* DateLanguage, __OCF TAutoVal* CalendarType)
{
	static __OCF TAutoDispId i_(this, 444);
	__OCF TAutoArgs<5> a_;
	wordObjects::push_arg(a_[1], DateTimeFormat);
	wordObjects::push_arg(a_[2], InsertAsField);
	wordObjects::push_arg(a_[3], InsertAsFullWidth);
	wordObjects::push_arg(a_[4], DateLanguage);
	wordObjects::push_arg(a_[5], CalendarType);
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void TRangeProxy::Sort(__OCF TAutoVal* ExcludeHeader, __OCF TAutoVal* FieldNumber, __OCF TAutoVal* SortFieldType, __OCF TAutoVal* SortOrder, __OCF TAutoVal* FieldNumber2, __OCF TAutoVal* SortFieldType2, __OCF TAutoVal* SortOrder2, __OCF TAutoVal* FieldNumber3, __OCF TAutoVal* SortFieldType3, __OCF TAutoVal* SortOrder3, __OCF TAutoVal* SortColumn, __OCF TAutoVal* Separator, __OCF TAutoVal* CaseSensitive, __OCF TAutoVal* BidiSort, __OCF TAutoVal* IgnoreThe, __OCF TAutoVal* IgnoreKashida, __OCF TAutoVal* IgnoreDiacritics, __OCF TAutoVal* IgnoreHe, __OCF TAutoVal* LanguageID)
{
	static __OCF TAutoDispId i_(this, 484);
	__OCF TAutoArgs<19> a_;
	wordObjects::push_arg(a_[1], ExcludeHeader);
	wordObjects::push_arg(a_[2], FieldNumber);
	wordObjects::push_arg(a_[3], SortFieldType);
	wordObjects::push_arg(a_[4], SortOrder);
	wordObjects::push_arg(a_[5], FieldNumber2);
	wordObjects::push_arg(a_[6], SortFieldType2);
	wordObjects::push_arg(a_[7], SortOrder2);
	wordObjects::push_arg(a_[8], FieldNumber3);
	wordObjects::push_arg(a_[9], SortFieldType3);
	wordObjects::push_arg(a_[10], SortOrder3);
	wordObjects::push_arg(a_[11], SortColumn);
	wordObjects::push_arg(a_[12], Separator);
	wordObjects::push_arg(a_[13], CaseSensitive);
	wordObjects::push_arg(a_[14], BidiSort);
	wordObjects::push_arg(a_[15], IgnoreThe);
	wordObjects::push_arg(a_[16], IgnoreKashida);
	wordObjects::push_arg(a_[17], IgnoreDiacritics);
	wordObjects::push_arg(a_[18], IgnoreHe);
	wordObjects::push_arg(a_[19], LanguageID);
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void TRangeProxy::DetectLanguage()
{
	static __OCF TAutoDispId i_(this, 203);
	__OCF TAutoArgs<0> a_;
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void TRangeProxy::ConvertToTable(TTableProxy& Obj, __OCF TAutoVal* Separator, __OCF TAutoVal* NumRows, __OCF TAutoVal* NumColumns, __OCF TAutoVal* InitialColumnWidth, __OCF TAutoVal* Format, __OCF TAutoVal* ApplyBorders, __OCF TAutoVal* ApplyShading, __OCF TAutoVal* ApplyFont, __OCF TAutoVal* ApplyColor, __OCF TAutoVal* ApplyHeadingRows, __OCF TAutoVal* ApplyLastRow, __OCF TAutoVal* ApplyFirstColumn, __OCF TAutoVal* ApplyLastColumn, __OCF TAutoVal* AutoFit, __OCF TAutoVal* AutoFitBehavior, __OCF TAutoVal* DefaultTableBehavior)
{
	static __OCF TAutoDispId i_(this, 498);
	__OCF TAutoArgs<16> a_;
	wordObjects::push_arg(a_[1], Separator);
	wordObjects::push_arg(a_[2], NumRows);
	wordObjects::push_arg(a_[3], NumColumns);
	wordObjects::push_arg(a_[4], InitialColumnWidth);
	wordObjects::push_arg(a_[5], Format);
	wordObjects::push_arg(a_[6], ApplyBorders);
	wordObjects::push_arg(a_[7], ApplyShading);
	wordObjects::push_arg(a_[8], ApplyFont);
	wordObjects::push_arg(a_[9], ApplyColor);
	wordObjects::push_arg(a_[10], ApplyHeadingRows);
	wordObjects::push_arg(a_[11], ApplyLastRow);
	wordObjects::push_arg(a_[12], ApplyFirstColumn);
	wordObjects::push_arg(a_[13], ApplyLastColumn);
	wordObjects::push_arg(a_[14], AutoFit);
	wordObjects::push_arg(a_[15], AutoFitBehavior);
	wordObjects::push_arg(a_[16], DefaultTableBehavior);
	Obj.Bind(Invoke(acMethod, a_, i_, i_));
}

void TRangeProxy::TCSCConverter(WdTCSCConverterDirection arg0, /*__OWL*/ TBool CommonTerms, /*__OWL*/ TBool UseVariants)
{
	static __OCF TAutoDispId i_(this, 499);
	__OCF TAutoArgs<3> a_;
	wordObjects::push_arg(a_[1], arg0);
	wordObjects::push_arg(a_[2], CommonTerms);
	wordObjects::push_arg(a_[3], UseVariants);
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

/*__OWL*/ TBool TRangeProxy::LanguageDetected()
{
	static __OCF TAutoDispId i_(this, 263);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

void TRangeProxy::LanguageDetected(/*__OWL*/ TBool arg0)
{
	static __OCF TAutoDispId i_(this, 263);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

float TRangeProxy::FitTextWidth()
{
	static __OCF TAutoDispId i_(this, 264);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

void TRangeProxy::FitTextWidth(float arg0)
{
	static __OCF TAutoDispId i_(this, 264);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

WdHorizontalInVerticalType TRangeProxy::HorizontalInVertical()
{
	static __OCF TAutoDispId i_(this, 265);
	__OCF TAutoArgs<0> a_;
	return (WdHorizontalInVerticalType)(int)Invoke(acPropGet, a_, i_, i_);
}

void TRangeProxy::HorizontalInVertical(WdHorizontalInVerticalType arg0)
{
	static __OCF TAutoDispId i_(this, 265);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

WdTwoLinesInOneType TRangeProxy::TwoLinesInOne()
{
	static __OCF TAutoDispId i_(this, 266);
	__OCF TAutoArgs<0> a_;
	return (WdTwoLinesInOneType)(int)Invoke(acPropGet, a_, i_, i_);
}

void TRangeProxy::TwoLinesInOne(WdTwoLinesInOneType arg0)
{
	static __OCF TAutoDispId i_(this, 266);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

/*__OWL*/ TBool TRangeProxy::CombineCharacters()
{
	static __OCF TAutoDispId i_(this, 267);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

void TRangeProxy::CombineCharacters(/*__OWL*/ TBool arg0)
{
	static __OCF TAutoDispId i_(this, 267);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

long TRangeProxy::NoProofing()
{
	static __OCF TAutoDispId i_(this, 323);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

void TRangeProxy::NoProofing(long arg0)
{
	static __OCF TAutoDispId i_(this, 323);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

void TRangeProxy::TopLevelTables(TTablesProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 324);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

void TRangeProxy::_Scripts(TScriptsProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 325);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

WdCharacterWidth TRangeProxy::CharacterWidth()
{
	static __OCF TAutoDispId i_(this, 326);
	__OCF TAutoArgs<0> a_;
	return (WdCharacterWidth)(int)Invoke(acPropGet, a_, i_, i_);
}

void TRangeProxy::CharacterWidth(WdCharacterWidth arg0)
{
	static __OCF TAutoDispId i_(this, 326);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

WdKana TRangeProxy::Kana()
{
	static __OCF TAutoDispId i_(this, 327);
	__OCF TAutoArgs<0> a_;
	return (WdKana)(int)Invoke(acPropGet, a_, i_, i_);
}

void TRangeProxy::Kana(WdKana arg0)
{
	static __OCF TAutoDispId i_(this, 327);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

long TRangeProxy::BoldBi()
{
	static __OCF TAutoDispId i_(this, 400);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

void TRangeProxy::BoldBi(long arg0)
{
	static __OCF TAutoDispId i_(this, 400);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

long TRangeProxy::ItalicBi()
{
	static __OCF TAutoDispId i_(this, 401);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

void TRangeProxy::ItalicBi(long arg0)
{
	static __OCF TAutoDispId i_(this, 401);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

__OCF TAutoString TRangeProxy::ID()
{
	static __OCF TAutoDispId i_(this, 405);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

void TRangeProxy::ID(__OCF TAutoString arg0)
{
	static __OCF TAutoDispId i_(this, 405);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

void TRangeProxy::_HTMLDivisions(THTMLDivisionsProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 406);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

void TRangeProxy::_SmartTags(TSmartTagsProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 407);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

/*__OWL*/ TBool TRangeProxy::ShowAll()
{
	static __OCF TAutoDispId i_(this, 408);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

void TRangeProxy::ShowAll(/*__OWL*/ TBool arg0)
{
	static __OCF TAutoDispId i_(this, 408);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

Document* TRangeProxy::_Document()
{
	static __OCF TAutoDispId i_(this, 409);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

void TRangeProxy::_FootnoteOptions(TFootnoteOptionsProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 410);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

void TRangeProxy::_EndnoteOptions(TEndnoteOptionsProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 411);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

void TRangeProxy::PasteAndFormat(WdRecoveryType Type)
{
	static __OCF TAutoDispId i_(this, 412);
	__OCF TAutoArgs<1> a_;
	wordObjects::push_arg(a_[1], Type);
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void TRangeProxy::PasteExcelTable(/*__OWL*/ TBool LinkedToExcel, /*__OWL*/ TBool WordFormatting, /*__OWL*/ TBool RTF)
{
	static __OCF TAutoDispId i_(this, 413);
	__OCF TAutoArgs<3> a_;
	wordObjects::push_arg(a_[1], LinkedToExcel);
	wordObjects::push_arg(a_[2], WordFormatting);
	wordObjects::push_arg(a_[3], RTF);
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void TRangeProxy::PasteAppendTable()
{
	static __OCF TAutoDispId i_(this, 414);
	__OCF TAutoArgs<0> a_;
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void TRangeProxy::_XMLNodes(TXMLNodesProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 340);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

void TRangeProxy::XMLParentNode(TXMLNodeProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 341);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

void TRangeProxy::_Editors(TEditorsProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 343);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

__OCF TAutoString TRangeProxy::XML(/*__OWL*/ TBool DataOnly)
{
	static __OCF TAutoDispId i_(this, 344);
	__OCF TAutoArgs<1> a_;
	wordObjects::push_arg(a_[1], DataOnly);
	return Invoke(acPropGet, a_, i_, i_);
}

__OCF TAutoVal TRangeProxy::EnhMetaFileBits()
{
	static __OCF TAutoDispId i_(this, 345);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

void TRangeProxy::GoToEditableRange(TRangeProxy& Obj, __OCF TAutoVal* EditorID)
{
	static __OCF TAutoDispId i_(this, 415);
	__OCF TAutoArgs<1> a_;
	wordObjects::push_arg(a_[1], EditorID);
	Obj.Bind(Invoke(acMethod, a_, i_, i_));
}

void TRangeProxy::InsertXML(__OCF TAutoString XML, __OCF TAutoVal* Transform)
{
	static __OCF TAutoDispId i_(this, 416);
	__OCF TAutoArgs<2> a_;
	wordObjects::push_arg(a_[1], XML);
	wordObjects::push_arg(a_[2], Transform);
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void TRangeProxy::InsertCaption(__OCF TAutoVal* Label, __OCF TAutoVal* Title, __OCF TAutoVal* TitleAutoText, __OCF TAutoVal* Position, __OCF TAutoVal* ExcludeLabel)
{
	static __OCF TAutoDispId i_(this, 417);
	__OCF TAutoArgs<5> a_;
	wordObjects::push_arg(a_[1], Label);
	wordObjects::push_arg(a_[2], Title);
	wordObjects::push_arg(a_[3], TitleAutoText);
	wordObjects::push_arg(a_[4], Position);
	wordObjects::push_arg(a_[5], ExcludeLabel);
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void TRangeProxy::InsertCrossReference(__OCF TAutoVal* ReferenceType, WdReferenceKind ReferenceKind, __OCF TAutoVal* ReferenceItem, __OCF TAutoVal* InsertAsHyperlink, __OCF TAutoVal* IncludePosition, __OCF TAutoVal* SeparateNumbers, __OCF TAutoVal* SeparatorString)
{
	static __OCF TAutoDispId i_(this, 418);
	__OCF TAutoArgs<7> a_;
	wordObjects::push_arg(a_[1], ReferenceType);
	wordObjects::push_arg(a_[2], ReferenceKind);
	wordObjects::push_arg(a_[3], ReferenceItem);
	wordObjects::push_arg(a_[4], InsertAsHyperlink);
	wordObjects::push_arg(a_[5], IncludePosition);
	wordObjects::push_arg(a_[6], SeparateNumbers);
	wordObjects::push_arg(a_[7], SeparatorString);
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

WordApplication* TFindProxy::_Application()
{
	static __OCF TAutoDispId i_(this, 1000);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

long TFindProxy::Creator()
{
	static __OCF TAutoDispId i_(this, 1001);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

IDispatch* TFindProxy::Parent()
{
	static __OCF TAutoDispId i_(this, 1002);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

/*__OWL*/ TBool TFindProxy::Forward()
{
	static __OCF TAutoDispId i_(this, 10);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

void TFindProxy::Forward(/*__OWL*/ TBool arg0)
{
	static __OCF TAutoDispId i_(this, 10);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

Font* TFindProxy::_Font()
{
	static __OCF TAutoDispId i_(this, 11);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

void TFindProxy::_Font(Font* arg0)
{
	static __OCF TAutoDispId i_(this, 11);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

/*__OWL*/ TBool TFindProxy::Found()
{
	static __OCF TAutoDispId i_(this, 12);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

/*__OWL*/ TBool TFindProxy::MatchAllWordForms()
{
	static __OCF TAutoDispId i_(this, 13);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

void TFindProxy::MatchAllWordForms(/*__OWL*/ TBool arg0)
{
	static __OCF TAutoDispId i_(this, 13);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

/*__OWL*/ TBool TFindProxy::MatchCase()
{
	static __OCF TAutoDispId i_(this, 14);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

void TFindProxy::MatchCase(/*__OWL*/ TBool arg0)
{
	static __OCF TAutoDispId i_(this, 14);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

/*__OWL*/ TBool TFindProxy::MatchWildcards()
{
	static __OCF TAutoDispId i_(this, 15);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

void TFindProxy::MatchWildcards(/*__OWL*/ TBool arg0)
{
	static __OCF TAutoDispId i_(this, 15);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

/*__OWL*/ TBool TFindProxy::MatchSoundsLike()
{
	static __OCF TAutoDispId i_(this, 16);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

void TFindProxy::MatchSoundsLike(/*__OWL*/ TBool arg0)
{
	static __OCF TAutoDispId i_(this, 16);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

/*__OWL*/ TBool TFindProxy::MatchWholeWord()
{
	static __OCF TAutoDispId i_(this, 17);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

void TFindProxy::MatchWholeWord(/*__OWL*/ TBool arg0)
{
	static __OCF TAutoDispId i_(this, 17);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

/*__OWL*/ TBool TFindProxy::MatchFuzzy()
{
	static __OCF TAutoDispId i_(this, 40);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

void TFindProxy::MatchFuzzy(/*__OWL*/ TBool arg0)
{
	static __OCF TAutoDispId i_(this, 40);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

/*__OWL*/ TBool TFindProxy::MatchByte()
{
	static __OCF TAutoDispId i_(this, 41);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

void TFindProxy::MatchByte(/*__OWL*/ TBool arg0)
{
	static __OCF TAutoDispId i_(this, 41);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

ParagraphFormat* TFindProxy::_ParagraphFormat()
{
	static __OCF TAutoDispId i_(this, 18);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

void TFindProxy::_ParagraphFormat(ParagraphFormat* arg0)
{
	static __OCF TAutoDispId i_(this, 18);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

__OCF TAutoVal TFindProxy::_Style()
{
	static __OCF TAutoDispId i_(this, 19);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

void TFindProxy::_Style(__OCF TAutoVal* arg0)
{
	static __OCF TAutoDispId i_(this, 19);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

__OCF TAutoString TFindProxy::Text()
{
	static __OCF TAutoDispId i_(this, 22);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

void TFindProxy::Text(__OCF TAutoString arg0)
{
	static __OCF TAutoDispId i_(this, 22);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

WdLanguageID TFindProxy::LanguageID()
{
	static __OCF TAutoDispId i_(this, 23);
	__OCF TAutoArgs<0> a_;
	return (WdLanguageID)(int)Invoke(acPropGet, a_, i_, i_);
}

void TFindProxy::LanguageID(WdLanguageID arg0)
{
	static __OCF TAutoDispId i_(this, 23);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

long TFindProxy::Highlight()
{
	static __OCF TAutoDispId i_(this, 24);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

void TFindProxy::Highlight(long arg0)
{
	static __OCF TAutoDispId i_(this, 24);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

void TFindProxy::_Replacement(TReplacementProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 25);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

void TFindProxy::_Frame(TFrameProxy& Obj)
{
	static __OCF TAutoDispId i_(this, 26);
	__OCF TAutoArgs<0> a_;
	Obj.Bind(Invoke(acPropGet, a_, i_, i_));
}

WdFindWrap TFindProxy::Wrap()
{
	static __OCF TAutoDispId i_(this, 27);
	__OCF TAutoArgs<0> a_;
	return (WdFindWrap)(int)Invoke(acPropGet, a_, i_, i_);
}

void TFindProxy::Wrap(WdFindWrap arg0)
{
	static __OCF TAutoDispId i_(this, 27);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

/*__OWL*/ TBool TFindProxy::Format()
{
	static __OCF TAutoDispId i_(this, 28);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

void TFindProxy::Format(/*__OWL*/ TBool arg0)
{
	static __OCF TAutoDispId i_(this, 28);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

WdLanguageID TFindProxy::LanguageIDFarEast()
{
	static __OCF TAutoDispId i_(this, 29);
	__OCF TAutoArgs<0> a_;
	return (WdLanguageID)(int)Invoke(acPropGet, a_, i_, i_);
}

void TFindProxy::LanguageIDFarEast(WdLanguageID arg0)
{
	static __OCF TAutoDispId i_(this, 29);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

WdLanguageID TFindProxy::LanguageIDOther()
{
	static __OCF TAutoDispId i_(this, 60);
	__OCF TAutoArgs<0> a_;
	return (WdLanguageID)(int)Invoke(acPropGet, a_, i_, i_);
}

void TFindProxy::LanguageIDOther(WdLanguageID arg0)
{
	static __OCF TAutoDispId i_(this, 60);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

/*__OWL*/ TBool TFindProxy::CorrectHangulEndings()
{
	static __OCF TAutoDispId i_(this, 61);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

void TFindProxy::CorrectHangulEndings(/*__OWL*/ TBool arg0)
{
	static __OCF TAutoDispId i_(this, 61);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

/*__OWL*/ TBool TFindProxy::ExecuteOld(__OCF TAutoVal* FindText, __OCF TAutoVal* MatchCase, __OCF TAutoVal* MatchWholeWord, __OCF TAutoVal* MatchWildcards, __OCF TAutoVal* MatchSoundsLike, __OCF TAutoVal* MatchAllWordForms, __OCF TAutoVal* Forward, __OCF TAutoVal* Wrap, __OCF TAutoVal* Format, __OCF TAutoVal* ReplaceWith, __OCF TAutoVal* Replace)
{
	static __OCF TAutoDispId i_(this, 30);
	__OCF TAutoArgs<11> a_;
	wordObjects::push_arg(a_[1], FindText);
	wordObjects::push_arg(a_[2], MatchCase);
	wordObjects::push_arg(a_[3], MatchWholeWord);
	wordObjects::push_arg(a_[4], MatchWildcards);
	wordObjects::push_arg(a_[5], MatchSoundsLike);
	wordObjects::push_arg(a_[6], MatchAllWordForms);
	wordObjects::push_arg(a_[7], Forward);
	wordObjects::push_arg(a_[8], Wrap);
	wordObjects::push_arg(a_[9], Format);
	wordObjects::push_arg(a_[10], ReplaceWith);
	wordObjects::push_arg(a_[11], Replace);
	return Invoke(acMethod, a_, i_, i_);
}

void TFindProxy::ClearFormatting()
{
	static __OCF TAutoDispId i_(this, 31);
	__OCF TAutoArgs<0> a_;
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void TFindProxy::SetAllFuzzyOptions()
{
	static __OCF TAutoDispId i_(this, 32);
	__OCF TAutoArgs<0> a_;
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

void TFindProxy::ClearAllFuzzyOptions()
{
	static __OCF TAutoDispId i_(this, 33);
	__OCF TAutoArgs<0> a_;
	Invoke(acMethod | acVoidRet, a_, i_, i_);
}

/*__OWL*/ TBool TFindProxy::Execute(__OCF TAutoVal* FindText, __OCF TAutoVal* MatchCase, __OCF TAutoVal* MatchWholeWord, __OCF TAutoVal* MatchWildcards, __OCF TAutoVal* MatchSoundsLike, __OCF TAutoVal* MatchAllWordForms, __OCF TAutoVal* Forward, __OCF TAutoVal* Wrap, __OCF TAutoVal* Format, __OCF TAutoVal* ReplaceWith, __OCF TAutoVal* Replace, __OCF TAutoVal* MatchKashida, __OCF TAutoVal* MatchDiacritics, __OCF TAutoVal* MatchAlefHamza, __OCF TAutoVal* MatchControl)
{
	static __OCF TAutoDispId i_(this, 444);
	__OCF TAutoArgs<15> a_;
	wordObjects::push_arg(a_[1], FindText);
	wordObjects::push_arg(a_[2], MatchCase);
	wordObjects::push_arg(a_[3], MatchWholeWord);
	wordObjects::push_arg(a_[4], MatchWildcards);
	wordObjects::push_arg(a_[5], MatchSoundsLike);
	wordObjects::push_arg(a_[6], MatchAllWordForms);
	wordObjects::push_arg(a_[7], Forward);
	wordObjects::push_arg(a_[8], Wrap);
	wordObjects::push_arg(a_[9], Format);
	wordObjects::push_arg(a_[10], ReplaceWith);
	wordObjects::push_arg(a_[11], Replace);
	wordObjects::push_arg(a_[12], MatchKashida);
	wordObjects::push_arg(a_[13], MatchDiacritics);
	wordObjects::push_arg(a_[14], MatchAlefHamza);
	wordObjects::push_arg(a_[15], MatchControl);
	return Invoke(acMethod, a_, i_, i_);
}

long TFindProxy::NoProofing()
{
	static __OCF TAutoDispId i_(this, 34);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

void TFindProxy::NoProofing(long arg0)
{
	static __OCF TAutoDispId i_(this, 34);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

/*__OWL*/ TBool TFindProxy::MatchKashida()
{
	static __OCF TAutoDispId i_(this, 100);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

void TFindProxy::MatchKashida(/*__OWL*/ TBool arg0)
{
	static __OCF TAutoDispId i_(this, 100);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

/*__OWL*/ TBool TFindProxy::MatchDiacritics()
{
	static __OCF TAutoDispId i_(this, 101);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

void TFindProxy::MatchDiacritics(/*__OWL*/ TBool arg0)
{
	static __OCF TAutoDispId i_(this, 101);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

/*__OWL*/ TBool TFindProxy::MatchAlefHamza()
{
	static __OCF TAutoDispId i_(this, 102);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

void TFindProxy::MatchAlefHamza(/*__OWL*/ TBool arg0)
{
	static __OCF TAutoDispId i_(this, 102);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

/*__OWL*/ TBool TFindProxy::MatchControl()
{
	static __OCF TAutoDispId i_(this, 103);
	__OCF TAutoArgs<0> a_;
	return Invoke(acPropGet, a_, i_, i_);
}

void TFindProxy::MatchControl(/*__OWL*/ TBool arg0)
{
	static __OCF TAutoDispId i_(this, 103);
	__OCF TAutoArgs<0> a_;
	wordObjects::push_arg(a_[0], arg0);
	Invoke(acPropSet, a_, i_, i_);
}

