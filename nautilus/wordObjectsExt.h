//================================================================================
//
// Info:               Code generated by OLE Proxy Wizard 3
//
// Date:               Tue Jan 17 15:11:35 2012
//
// Version:            8.3
// Copyright:          (C) 2012 Philippe
// Description:
// Author:             Philippe
// Company:
//
// Header Type:        Abstract type descriptions.
//
// File:               wordObjects.h
//
// Type Library:       Word
// Type Description:   Microsoft Word 11.0 Object Library
//
// GUID:               {00020905-0000-0000-C000-000000000046}
// System:             WIN32
// Version:            8.3
//
// Copyright (C) by Dr John Maddock 1997, 1998. All rights reserved.
// Copyright (C) by Armin Tueting 2007, 2009. All rights reserved.
//
//================================================================================
#if !defined(_WORDOBJECTSEXT_H)
#define _WORDOBJECTSEXT_H

#include "wordObjects.h"

#ifndef _PWCLASS
#define _PWCLASS
#endif

//================================================================================
// Predeclaration of classes and interfaces
//================================================================================
struct WordWindows;
class _PWCLASS TWindowsProxy;
struct _Document;
class _PWCLASS T_DocumentProxy;
struct Window;
class _PWCLASS TWindowProxy;
struct Selection;
class _PWCLASS TSelectionProxy;
struct RecentFiles;
class _PWCLASS TRecentFilesProxy;
struct Template;
class _PWCLASS TTemplateProxy;
struct WordSystem;
class _PWCLASS TSystemProxy;
struct AutoCorrect;
class _PWCLASS TAutoCorrectProxy;
struct FontNames;
class _PWCLASS TFontNamesProxy;
struct Languages;
class _PWCLASS TLanguagesProxy;
struct Assistant;
class _PWCLASS TAssistantProxy;
struct FileConverters;
class _PWCLASS TFileConvertersProxy;
struct Dialogs;
class _PWCLASS TDialogsProxy;
struct CaptionLabels;
class _PWCLASS TCaptionLabelsProxy;
struct AutoCaptions;
class _PWCLASS TAutoCaptionsProxy;
struct WordAddIns;
class _PWCLASS TAddInsProxy;
struct Tasks;
class _PWCLASS TTasksProxy;
struct _CommandBars;
class _PWCLASS T_CommandBarsProxy;
struct SynonymInfo;
class _PWCLASS TSynonymInfoProxy;
struct VBE;
class _PWCLASS TVBEProxy;
struct ListGalleries;
class _PWCLASS TListGalleriesProxy;
struct Templates;
class _PWCLASS TTemplatesProxy;
struct KeyBindings;
class _PWCLASS TKeyBindingsProxy;
struct KeysBoundTo;
class _PWCLASS TKeysBoundToProxy;
struct KeyBinding;
class _PWCLASS TKeyBindingProxy;
struct Options;
class _PWCLASS TOptionsProxy;
struct Dictionaries;
class _PWCLASS TDictionariesProxy;
struct HangulHanjaConversionDictionaries;
class _PWCLASS THangulHanjaConversionDictionariesProxy;
struct SpellingSuggestions;
class _PWCLASS TSpellingSuggestionsProxy;
struct LanguageSettings;
class _PWCLASS TLanguageSettingsProxy;
struct AnswerWizard;
class _PWCLASS TAnswerWizardProxy;
struct Browser;
class _PWCLASS TBrowserProxy;
struct MailingLabel;
class _PWCLASS TMailingLabelProxy;
struct WordFileSearch;
class _PWCLASS TFileSearchProxy;
struct MailMessage;
class _PWCLASS TMailMessageProxy;
struct DefaultWebOptions;
class _PWCLASS TDefaultWebOptionsProxy;
struct EmailOptions;
class _PWCLASS TEmailOptionsProxy;
struct COMAddIns;
class _PWCLASS TCOMAddInsProxy;
struct FileDialog;
class _PWCLASS TFileDialogProxy;
struct NewFile;
class _PWCLASS TNewFileProxy;
struct TaskPanes;
class _PWCLASS TTaskPanesProxy;
struct SmartTagRecognizers;
class _PWCLASS TSmartTagRecognizersProxy;
struct SmartTagTypes;
class _PWCLASS TSmartTagTypesProxy;
struct XMLNamespaces;
class _PWCLASS TXMLNamespacesProxy;
struct Bookmarks;
class _PWCLASS TBookmarksProxy;
struct Tables;
class _PWCLASS TTablesProxy;
struct Footnotes;
class _PWCLASS TFootnotesProxy;
struct Endnotes;
class _PWCLASS TEndnotesProxy;
struct Comments;
class _PWCLASS TCommentsProxy;
struct Sections;
class _PWCLASS TSectionsProxy;
struct Paragraphs;
class _PWCLASS TParagraphsProxy;
struct Words;
class _PWCLASS TWordsProxy;
struct Sentences;
class _PWCLASS TSentencesProxy;
struct Characters;
class _PWCLASS TCharactersProxy;
struct Fields;
class _PWCLASS TFieldsProxy;
struct FormFields;
class _PWCLASS TFormFieldsProxy;
struct Styles;
class _PWCLASS TStylesProxy;
struct Frames;
class _PWCLASS TFramesProxy;
struct TablesOfFigures;
class _PWCLASS TTablesOfFiguresProxy;
struct Variables;
class _PWCLASS TVariablesProxy;
struct MailMerge;
class _PWCLASS TMailMergeProxy;
struct Envelope;
class _PWCLASS TEnvelopeProxy;
struct Revisions;
class _PWCLASS TRevisionsProxy;
struct TablesOfContents;
class _PWCLASS TTablesOfContentsProxy;
struct TablesOfAuthorities;
class _PWCLASS TTablesOfAuthoritiesProxy;
struct PageSetup;
class _PWCLASS TPageSetupProxy;
struct RoutingSlip;
class _PWCLASS TRoutingSlipProxy;
struct TablesOfAuthoritiesCategories;
class _PWCLASS TTablesOfAuthoritiesCategoriesProxy;
struct Indexes;
class _PWCLASS TIndexesProxy;
struct WordRange;
class _PWCLASS TRangeProxy;
struct Subdocuments;
class _PWCLASS TSubdocumentsProxy;
struct StoryRanges;
class _PWCLASS TStoryRangesProxy;
struct Hyperlinks;
class _PWCLASS THyperlinksProxy;
struct Shapes;
class _PWCLASS TShapesProxy;
struct ListTemplates;
class _PWCLASS TListTemplatesProxy;
struct Lists;
class _PWCLASS TListsProxy;
struct InlineShapes;
class _PWCLASS TInlineShapesProxy;
struct WordShape;
class _PWCLASS TShapeProxy;
struct Versions;
class _PWCLASS TVersionsProxy;
struct ListParagraphs;
class _PWCLASS TListParagraphsProxy;
struct Mailer;
class _PWCLASS TMailerProxy;
struct ReadabilityStatistics;
class _PWCLASS TReadabilityStatisticsProxy;
struct ProofreadingErrors;
class _PWCLASS TProofreadingErrorsProxy;
struct _VBProject;
class _PWCLASS T_VBProjectProxy;
struct _LetterContent;
class _PWCLASS T_LetterContentProxy;
struct Email;
class _PWCLASS TEmailProxy;
struct Scripts;
class _PWCLASS TScriptsProxy;
struct Frameset;
class _PWCLASS TFramesetProxy;
struct HTMLProject;
class _PWCLASS THTMLProjectProxy;
struct WebOptions;
class _PWCLASS TWebOptionsProxy;
struct IMsoEnvelopeVB;
class _PWCLASS TIMsoEnvelopeVBProxy;
struct SignatureSet;
class _PWCLASS TSignatureSetProxy;
struct HTMLDivisions;
class _PWCLASS THTMLDivisionsProxy;
struct SmartTags;
class _PWCLASS TSmartTagsProxy;
struct StyleSheets;
class _PWCLASS TStyleSheetsProxy;
struct Permission;
class _PWCLASS TPermissionProxy;
struct XMLNodes;
class _PWCLASS TXMLNodesProxy;
struct XMLSchemaReferences;
class _PWCLASS TXMLSchemaReferencesProxy;
struct SmartDocument;
class _PWCLASS TSmartDocumentProxy;
struct SharedWorkspace;
class _PWCLASS TSharedWorkspaceProxy;
struct Sync;
class _PWCLASS TSyncProxy;
struct DocumentLibraryVersions;
class _PWCLASS TDocumentLibraryVersionsProxy;
struct XMLChildNodeSuggestions;
class _PWCLASS TXMLChildNodeSuggestionsProxy;
struct XMLNode;
class _PWCLASS TXMLNodeProxy;
struct _Font;
class _PWCLASS T_FontProxy;
struct Borders;
class _PWCLASS TBordersProxy;
struct Shading;
class _PWCLASS TShadingProxy;
struct _ParagraphFormat;
class _PWCLASS T_ParagraphFormatProxy;
struct TabStops;
class _PWCLASS TTabStopsProxy;
struct CommandBarControl;
class _PWCLASS TCommandBarControlProxy;
struct CommandBar;
class _PWCLASS TCommandBarProxy;
struct CommandBarControls;
class _PWCLASS TCommandBarControlsProxy;
struct _References;
class _PWCLASS T_ReferencesProxy;
struct _VBProjects;
class _PWCLASS T_VBProjectsProxy;
struct _VBComponents;
class _PWCLASS T_VBComponentsProxy;
struct AddIn;
class _PWCLASS TAddInProxy;
struct AnswerWizardFiles;
class _PWCLASS TAnswerWizardFilesProxy;
struct Balloon;
class _PWCLASS TBalloonProxy;
struct AutoCaption;
class _PWCLASS TAutoCaptionProxy;
struct AutoCorrectEntries;
class _PWCLASS TAutoCorrectEntriesProxy;
struct FirstLetterExceptions;
class _PWCLASS TFirstLetterExceptionsProxy;
struct TwoInitialCapsExceptions;
class _PWCLASS TTwoInitialCapsExceptionsProxy;
struct HangulAndAlphabetExceptions;
class _PWCLASS THangulAndAlphabetExceptionsProxy;
struct OtherCorrectionsExceptions;
class _PWCLASS TOtherCorrectionsExceptionsProxy;
struct Bookmark;
class _PWCLASS TBookmarkProxy;
struct Border;
class _PWCLASS TBorderProxy;
struct CaptionLabel;
class _PWCLASS TCaptionLabelProxy;
struct COMAddIn;
class _PWCLASS TCOMAddInProxy;
struct Comment;
class _PWCLASS TCommentProxy;
struct WebPageFonts;
class _PWCLASS TWebPageFontsProxy;
struct Dialog;
class _PWCLASS TDialogProxy;
struct Dictionary;
class _PWCLASS TDictionaryProxy;
struct DocumentLibraryVersion;
class _PWCLASS TDocumentLibraryVersionProxy;
struct EmailSignature;
class _PWCLASS TEmailSignatureProxy;
struct Style;
class _PWCLASS TStyleProxy;
struct EmailAuthor;
class _PWCLASS TEmailAuthorProxy;
struct EmailSignatureEntries;
class _PWCLASS TEmailSignatureEntriesProxy;
struct Endnote;
class _PWCLASS TEndnoteProxy;
struct Field;
class _PWCLASS TFieldProxy;
struct FileConverter;
class _PWCLASS TFileConverterProxy;
struct FileDialogFilters;
class _PWCLASS TFileDialogFiltersProxy;
struct FileDialogSelectedItems;
class _PWCLASS TFileDialogSelectedItemsProxy;
struct FoundFiles;
class _PWCLASS TFoundFilesProxy;
struct PropertyTests;
class _PWCLASS TPropertyTestsProxy;
struct SearchScopes;
class _PWCLASS TSearchScopesProxy;
struct SearchFolders;
class _PWCLASS TSearchFoldersProxy;
struct FileTypes;
class _PWCLASS TFileTypesProxy;
struct FirstLetterException;
class _PWCLASS TFirstLetterExceptionProxy;
struct Footnote;
class _PWCLASS TFootnoteProxy;
struct FormField;
class _PWCLASS TFormFieldProxy;
struct Frame;
class _PWCLASS TFrameProxy;
struct HangulAndAlphabetException;
class _PWCLASS THangulAndAlphabetExceptionProxy;
struct HTMLDivision;
class _PWCLASS THTMLDivisionProxy;
struct HTMLProjectItems;
class _PWCLASS THTMLProjectItemsProxy;
struct Hyperlink;
class _PWCLASS THyperlinkProxy;
struct Index;
class _PWCLASS TIndexProxy;
struct InlineShape;
class _PWCLASS TInlineShapeProxy;
struct Language;
class _PWCLASS TLanguageProxy;
struct ListGallery;
class _PWCLASS TListGalleryProxy;
struct Paragraph;
class _PWCLASS TParagraphProxy;
struct List;
class _PWCLASS TListProxy;
struct ListTemplate;
class _PWCLASS TListTemplateProxy;
struct CustomLabels;
class _PWCLASS TCustomLabelsProxy;
struct MailMergeDataSource;
class _PWCLASS TMailMergeDataSourceProxy;
struct MailMergeFields;
class _PWCLASS TMailMergeFieldsProxy;
struct OtherCorrectionsException;
class _PWCLASS TOtherCorrectionsExceptionProxy;
struct LineNumbering;
class _PWCLASS TLineNumberingProxy;
struct TextColumns;
class _PWCLASS TTextColumnsProxy;
struct DropCap;
class _PWCLASS TDropCapProxy;
struct UserPermission;
class _PWCLASS TUserPermissionProxy;
struct PropertyTest;
class _PWCLASS TPropertyTestProxy;
struct Cells;
class _PWCLASS TCellsProxy;
struct TextRetrievalMode;
class _PWCLASS TTextRetrievalModeProxy;
struct ListFormat;
class _PWCLASS TListFormatProxy;
struct Columns;
class _PWCLASS TColumnsProxy;
struct Rows;
class _PWCLASS TRowsProxy;
struct Find;
class _PWCLASS TFindProxy;
struct ShapeRange;
class _PWCLASS TShapeRangeProxy;
struct Table;
class _PWCLASS TTableProxy;
struct FootnoteOptions;
class _PWCLASS TFootnoteOptionsProxy;
struct EndnoteOptions;
class _PWCLASS TEndnoteOptionsProxy;
struct Editors;
class _PWCLASS TEditorsProxy;
struct ReadabilityStatistic;
class _PWCLASS TReadabilityStatisticProxy;
struct RecentFile;
class _PWCLASS TRecentFileProxy;
struct Revision;
class _PWCLASS TRevisionProxy;
struct Row;
class _PWCLASS TRowProxy;
struct Script;
class _PWCLASS TScriptProxy;
struct ScopeFolder;
class _PWCLASS TScopeFolderProxy;
struct SearchScope;
class _PWCLASS TSearchScopeProxy;
struct Section;
class _PWCLASS TSectionProxy;
struct HeaderFooter;
class _PWCLASS THeaderFooterProxy;
struct AutoTextEntry;
class _PWCLASS TAutoTextEntryProxy;
struct Adjustments;
class _PWCLASS TAdjustmentsProxy;
struct CalloutFormat;
class _PWCLASS TCalloutFormatProxy;
struct ConnectorFormat;
class _PWCLASS TConnectorFormatProxy;
struct FillFormat;
class _PWCLASS TFillFormatProxy;
struct GroupShapes;
class _PWCLASS TGroupShapesProxy;
struct LineFormat;
class _PWCLASS TLineFormatProxy;
struct ShapeNodes;
class _PWCLASS TShapeNodesProxy;
struct PictureFormat;
class _PWCLASS TPictureFormatProxy;
struct ShadowFormat;
class _PWCLASS TShadowFormatProxy;
struct TextEffectFormat;
class _PWCLASS TTextEffectFormatProxy;
struct TextFrame;
class _PWCLASS TTextFrameProxy;
struct ThreeDFormat;
class _PWCLASS TThreeDFormatProxy;
struct WrapFormat;
class _PWCLASS TWrapFormatProxy;
struct OLEFormat;
class _PWCLASS TOLEFormatProxy;
struct LinkFormat;
class _PWCLASS TLinkFormatProxy;
struct IMsoDiagram;
class _PWCLASS TIMsoDiagramProxy;
struct DiagramNode;
class _PWCLASS TDiagramNodeProxy;
struct CanvasShapes;
class _PWCLASS TCanvasShapesProxy;
struct FreeformBuilder;
class _PWCLASS TFreeformBuilderProxy;
struct SharedWorkspaceMembers;
class _PWCLASS TSharedWorkspaceMembersProxy;
struct SharedWorkspaceTasks;
class _PWCLASS TSharedWorkspaceTasksProxy;
struct SharedWorkspaceFiles;
class _PWCLASS TSharedWorkspaceFilesProxy;
struct SharedWorkspaceFolders;
class _PWCLASS TSharedWorkspaceFoldersProxy;
struct SharedWorkspaceLinks;
class _PWCLASS TSharedWorkspaceLinksProxy;
struct SharedWorkspaceTask;
class _PWCLASS TSharedWorkspaceTaskProxy;
struct Signature;
class _PWCLASS TSignatureProxy;
struct SmartTagRecognizer;
class _PWCLASS TSmartTagRecognizerProxy;
struct SmartTag;
class _PWCLASS TSmartTagProxy;
struct SmartTagType;
class _PWCLASS TSmartTagTypeProxy;
struct SpellingSuggestion;
class _PWCLASS TSpellingSuggestionProxy;
struct TableStyle;
class _PWCLASS TTableStyleProxy;
struct StyleSheet;
class _PWCLASS TStyleSheetProxy;
struct Subdocument;
class _PWCLASS TSubdocumentProxy;
struct Cell;
class _PWCLASS TCellProxy;
struct TableOfAuthoritiesCategory;
class _PWCLASS TTableOfAuthoritiesCategoryProxy;
struct TableOfAuthorities;
class _PWCLASS TTableOfAuthoritiesProxy;
struct TableOfContents;
class _PWCLASS TTableOfContentsProxy;
struct TableOfFigures;
class _PWCLASS TTableOfFiguresProxy;
struct ConditionalStyle;
class _PWCLASS TConditionalStyleProxy;
struct TabStop;
class _PWCLASS TTabStopProxy;
struct TaskPane;
class _PWCLASS TTaskPaneProxy;
struct Task;
class _PWCLASS TTaskProxy;
struct AutoTextEntries;
class _PWCLASS TAutoTextEntriesProxy;
struct TextColumn;
class _PWCLASS TTextColumnProxy;
struct ColorFormat;
class _PWCLASS TColorFormatProxy;
struct TwoInitialCapsException;
class _PWCLASS TTwoInitialCapsExceptionProxy;
struct Variable;
class _PWCLASS TVariableProxy;
struct _CodePanes;
class _PWCLASS T_CodePanesProxy;
struct Events;
class _PWCLASS TEventsProxy;
struct _VBComponent;
class _PWCLASS T_VBComponentProxy;
struct _CodePane;
class _PWCLASS T_CodePaneProxy;
struct Version;
class _PWCLASS TVersionProxy;
struct WebPageFont;
class _PWCLASS TWebPageFontProxy;
struct Pane;
class _PWCLASS TPaneProxy;
struct Panes;
class _PWCLASS TPanesProxy;
struct View;
class _PWCLASS TViewProxy;
struct XMLChildNodeSuggestion;
class _PWCLASS TXMLChildNodeSuggestionProxy;
struct XMLNamespace;
class _PWCLASS TXMLNamespaceProxy;
struct XMLSchemaReference;
class _PWCLASS TXMLSchemaReferenceProxy;
struct _CodeModule;
class _PWCLASS T_CodeModuleProxy;
struct _Properties;
class _PWCLASS T_PropertiesProxy;
struct Property;
class _PWCLASS TPropertyProxy;
struct Reference;
class _PWCLASS TReferenceProxy;
struct AutoCorrectEntry;
class _PWCLASS TAutoCorrectEntryProxy;
struct Column;
class _PWCLASS TColumnProxy;
struct CustomLabel;
class _PWCLASS TCustomLabelProxy;
struct DiagramNodeChildren;
class _PWCLASS TDiagramNodeChildrenProxy;
struct Diagram;
class _PWCLASS TDiagramProxy;
struct DiagramNodes;
class _PWCLASS TDiagramNodesProxy;
struct Editor;
class _PWCLASS TEditorProxy;
struct EmailSignatureEntry;
class _PWCLASS TEmailSignatureEntryProxy;
class _ReferencesEvents;
class _CommandBarControlEvents;
struct FileDialogFilter;
class _PWCLASS TFileDialogFilterProxy;
struct Replacement;
class _PWCLASS TReplacementProxy;
struct TextInput;
class _PWCLASS TTextInputProxy;
struct CheckBox;
class _PWCLASS TCheckBoxProxy;
struct DropDown;
class _PWCLASS TDropDownProxy;
struct PageNumbers;
class _PWCLASS TPageNumbersProxy;
struct HTMLProjectItem;
class _PWCLASS THTMLProjectItemProxy;
struct HorizontalLineFormat;
class _PWCLASS THorizontalLineFormatProxy;
struct ListLevels;
class _PWCLASS TListLevelsProxy;
struct MailMergeFieldNames;
class _PWCLASS TMailMergeFieldNamesProxy;
struct MailMergeDataFields;
class _PWCLASS TMailMergeDataFieldsProxy;
struct MappedDataFields;
class _PWCLASS TMappedDataFieldsProxy;
struct MailMergeFieldName;
class _PWCLASS TMailMergeFieldNameProxy;
struct MailMergeField;
class _PWCLASS TMailMergeFieldProxy;
struct MappedDataField;
class _PWCLASS TMappedDataFieldProxy;
struct PageNumber;
class _PWCLASS TPageNumberProxy;
struct Zooms;
class _PWCLASS TZoomsProxy;
struct Pages;
class _PWCLASS TPagesProxy;
struct ScopeFolders;
class _PWCLASS TScopeFoldersProxy;
struct HeadersFooters;
class _PWCLASS THeadersFootersProxy;
struct ShapeNode;
class _PWCLASS TShapeNodeProxy;
struct SharedWorkspaceFile;
class _PWCLASS TSharedWorkspaceFileProxy;
struct SharedWorkspaceFolder;
class _PWCLASS TSharedWorkspaceFolderProxy;
struct SharedWorkspaceLink;
class _PWCLASS TSharedWorkspaceLinkProxy;
struct SharedWorkspaceMember;
class _PWCLASS TSharedWorkspaceMemberProxy;
struct CustomProperties;
class _PWCLASS TCustomPropertiesProxy;
struct SmartTagActions;
class _PWCLASS TSmartTagActionsProxy;
struct HeadingStyles;
class _PWCLASS THeadingStylesProxy;
struct Zoom;
class _PWCLASS TZoomProxy;
struct Reviewers;
class _PWCLASS TReviewersProxy;
struct XSLTransforms;
class _PWCLASS TXSLTransformsProxy;
struct XSLTransform;
class _PWCLASS TXSLTransformProxy;
struct CustomProperty;
class _PWCLASS TCustomPropertyProxy;
struct ListEntries;
class _PWCLASS TListEntriesProxy;
struct HeadingStyle;
class _PWCLASS THeadingStyleProxy;
struct ListEntry;
class _PWCLASS TListEntryProxy;
struct ListLevel;
class _PWCLASS TListLevelProxy;
struct MailMergeDataField;
class _PWCLASS TMailMergeDataFieldProxy;
struct Page;
class _PWCLASS TPageProxy;
struct Reviewer;
class _PWCLASS TReviewerProxy;
struct SmartTagAction;
class _PWCLASS TSmartTagActionProxy;
struct Rectangles;
class _PWCLASS TRectanglesProxy;
struct Breaks;
class _PWCLASS TBreaksProxy;
struct WordRectangle;
class _PWCLASS TRectangleProxy;
struct Break;
class _PWCLASS TBreakProxy;
struct Lines;
class _PWCLASS TLinesProxy;
struct Line;
class _PWCLASS TLineProxy;

// Coclass: Application
typedef IUnknown WordApplication;

// Coclass: Document
typedef IUnknown Document;

// Coclass: CommandBars
typedef IUnknown CommandBars;

// Coclass: Global
// {000209F0-0000-0000-C000-000000000046}
typedef IUnknown Global;

// Coclass: VBProject
typedef IUnknown VBProject;

// Coclass: LetterContent
typedef IUnknown LetterContent;

// Coclass: MsoEnvelope
typedef IUnknown MsoEnvelope;

// Coclass: Font
typedef IUnknown Font;

// Coclass: ParagraphFormat
typedef IUnknown ParagraphFormat;

// Coclass: OLEControl
// {000209F2-0000-0000-C000-000000000046}
typedef IUnknown OLEControl;

// Coclass: References
typedef IUnknown References;

// Coclass: VBProjects
typedef IUnknown VBProjects;

// Coclass: VBComponents
typedef IUnknown VBComponents;

// Coclass: CodePanes
typedef IUnknown CodePanes;

// Coclass: VBComponent
typedef IUnknown VBComponent;

// Coclass: CodePane
typedef IUnknown CodePane;

// Coclass: CodeModule
typedef IUnknown CodeModule;

// Coclass: Properties
typedef IUnknown Properties;

// Coclass: ReferencesEvents
typedef IUnknown ReferencesEvents;

// Coclass: CommandBarEvents
typedef IUnknown CommandBarEvents;

//================================================================================
// Declaration of GUID's
//================================================================================
DEFINE_GUID(IID__Font, 0x20952, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_CoFont, 0x209f5, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID__ParagraphFormat, 0x20953, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_CoParagraphFormat, 0x209f4, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID__OLEControl, 0x209a4, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_CoOLEControl, 0x209f2, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID__LetterContent, 0x209a1, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_CoLetterContent, 0x209f1, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID__IMsoDispObj, 0xc0300, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID__CommandBars, 0xc0302, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_CoCommandBars, 0x55f88893, 0x7708, 0x11d1, 0xac, 0xeb, 0x0, 0x60, 0x8, 0x96, 0x1d, 0xa5);
DEFINE_GUID(IID_IMsoEnvelopeVB, 0x672ac, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_CoMsoEnvelope, 0x6f01a, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID__ProjectTemplate, 0x2e159, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID__VBProject_Old, 0x2e160, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID__VBProject, 0xeee00915, 0xe393, 0x11d1, 0xbb, 0x3, 0x0, 0xc0, 0x4f, 0xb6, 0xc4, 0xa6);
DEFINE_GUID(IID__VBProjects_Old, 0x2e165, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID__VBProjects, 0xeee00919, 0xe393, 0x11d1, 0xbb, 0x3, 0x0, 0xc0, 0x4f, 0xb6, 0xc4, 0xa6);
DEFINE_GUID(IID_AddIns, 0x2097f, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_AnswerWizard, 0xc0360, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_Assistant, 0xc0322, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_AutoCaptions, 0x2097a, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_AutoCorrect, 0x20949, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_Balloon, 0xc0324, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_Bookmarks, 0x20967, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_Borders, 0x2093c, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_Browser, 0x2092e, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_CaptionLabels, 0x20978, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_Characters, 0x2095d, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_COMAddIns, 0xc0339, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_IAccessible, 0x618736e0, 0x3c3d, 0x11cf, 0x81, 0xc, 0x0, 0xaa, 0x0, 0x38, 0x9b, 0x71);
DEFINE_GUID(IID__IMsoOleAccDispObj, 0xc0301, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_CommandBarControl, 0xc0308, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_CommandBarControls, 0xc0306, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_CommandBar, 0xc0304, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_Comments, 0x20940, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_DefaultWebOptions, 0x209e3, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_Dialogs, 0x20910, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_Dictionaries, 0x209ac, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_Dictionary, 0x209ad, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_DocumentLibraryVersions, 0xc0388, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_Documents, 0x2096c, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_EmailOptions, 0x209db, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_Email, 0x209dd, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_EmailSignature, 0x209dc, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_Endnotes, 0x20941, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_Envelope, 0x20918, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_Fields, 0x20930, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_FileConverters, 0x2099a, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_FileDialog, 0xc0362, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_FileDialogSelectedItems, 0xc0363, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_FileSearch, 0xc0332, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_FileTypes, 0xc036c, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_FirstLetterExceptions, 0x20946, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_FontNames, 0x2096f, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_Footnotes, 0x20942, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_FormFields, 0x20929, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_FoundFiles, 0xc0331, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_Frameset, 0x209e2, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_Frames, 0x2092b, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_HangulAndAlphabetExceptions, 0x209d1, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_HangulHanjaConversionDictionaries, 0x209e0, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_HTMLDivisions, 0x209e8, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_HTMLProject, 0xc0356, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_Hyperlinks, 0x2099c, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_Indexes, 0x2097c, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_Index, 0x2097d, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_InlineShapes, 0x209a9, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_KeyBinding, 0x20998, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_KeyBindings, 0x20996, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_KeysBoundTo, 0x20997, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_LanguageSettings, 0xc0353, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_Languages, 0x2096e, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_ListGalleries, 0x20995, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_ListGallery, 0x20994, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_ListParagraphs, 0x20991, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_Lists, 0x20993, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_ListTemplates, 0x20990, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_Mailer, 0x209bd, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_MailingLabel, 0x20917, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_MailMerge, 0x20920, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_MailMessage, 0x209ba, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_NewFile, 0xc0936, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_Options, 0x209b7, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_OtherCorrectionsExceptions, 0x209df, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_PageSetup, 0x20971, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_Paragraph, 0x20957, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_Paragraphs, 0x20958, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_Permission, 0xc0376, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_ProofreadingErrors, 0x209bb, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_PropertyTests, 0xc0334, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_ReadabilityStatistics, 0x209ae, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_RecentFiles, 0x20963, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_Revisions, 0x20980, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_RoutingSlip, 0x20969, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_Rows, 0x2094c, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_Scripts, 0xc0340, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_SearchFolders, 0xc036a, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_SearchScopes, 0xc0366, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_Sections, 0x2095a, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_Selection, 0x20975, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_Sentences, 0x2095b, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_Shading, 0x2093a, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_Shape, 0x209a0, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_ShapeRange, 0x209b5, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_Shapes, 0x2099f, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_SharedWorkspace, 0xc0385, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_SharedWorkspaceTasks, 0xc037a, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_SignatureSet, 0xc0410, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_SmartDocument, 0xc0377, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_SmartTagRecognizers, 0xf2b60a10, 0xded5, 0x46fb, 0xa9, 0x14, 0x3c, 0x6f, 0x4e, 0xbb, 0x64, 0x51);
DEFINE_GUID(IID_SmartTags, 0x209ee, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_SmartTagTypes, 0xdb8e3072, 0xe106, 0x4453, 0x8e, 0x7c, 0x53, 0x5, 0x6f, 0x1d, 0x30, 0xdc);
DEFINE_GUID(IID_SpellingSuggestions, 0x209aa, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_StoryRanges, 0x2098c, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_Style, 0x2092c, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_StyleSheets, 0x7b7cc7e, 0xe66c, 0x11d3, 0x94, 0x54, 0x0, 0x10, 0x5a, 0xa3, 0x1a, 0x8);
DEFINE_GUID(IID_Styles, 0x2092d, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_Subdocuments, 0x20988, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_Sync, 0xc0386, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_SynonymInfo, 0x2099b, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_System, 0x20935, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_Table, 0x20951, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_TablesOfAuthoritiesCategories, 0x20976, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_TablesOfAuthorities, 0x20912, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_TablesOfContents, 0x20914, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_TablesOfFigures, 0x20922, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_Tables, 0x2094d, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_TableStyle, 0xb7564e97, 0x519, 0x4c68, 0xb4, 0x0, 0x38, 0x3, 0xe7, 0xc6, 0x32, 0x42);
DEFINE_GUID(IID_TabStops, 0x20955, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_TaskPanes, 0xe6aaec05, 0xe543, 0x4085, 0xba, 0x92, 0x9b, 0xf7, 0xd2, 0x47, 0x4f, 0x5c);
DEFINE_GUID(IID_Tasks, 0x20983, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_Template, 0x2096a, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_Templates, 0x209a2, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_TextColumns, 0x20973, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_TextEffectFormat, 0x209cf, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_TextFrame, 0x209b2, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_TextRetrievalMode, 0x20939, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_ThreeDFormat, 0x209d0, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_TwoInitialCapsExceptions, 0x20944, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_UserPermission, 0xc0375, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_Variables, 0x20965, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_VBE, 0x2e166, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_Versions, 0x209b3, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_WebOptions, 0x209e4, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_WebPageFonts, 0xc0914, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_Window, 0x20962, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_Windows, 0x20961, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_Words, 0x2095c, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_WrapFormat, 0x209c3, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_XMLChildNodeSuggestions, 0xde63b5ac, 0xca4f, 0x46fe, 0x91, 0x84, 0xa5, 0x71, 0x9a, 0xb9, 0xed, 0x5b);
DEFINE_GUID(IID_XMLNamespaces, 0x656bbed7, 0xe82d, 0x4b0a, 0x8f, 0x97, 0xec, 0x74, 0x2b, 0xa1, 0x1f, 0xfa);
DEFINE_GUID(IID_XMLNode, 0x9760240, 0xb89, 0x49f7, 0xa7, 0x9d, 0x47, 0x9f, 0x24, 0x72, 0x3f, 0x56);
DEFINE_GUID(IID_XMLNodes, 0xd36c1f42, 0x7044, 0x4b9e, 0x9c, 0xa3, 0x85, 0x91, 0x94, 0x54, 0xdb, 0x4);
DEFINE_GUID(IID_XMLSchemaReferences, 0x356b06ec, 0x4908, 0x42a4, 0x81, 0xfc, 0x4b, 0x5a, 0x51, 0xf3, 0x48, 0x3b);
DEFINE_GUID(IID__VBComponent_Old, 0x2e164, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID__VBComponent, 0xeee00921, 0xe393, 0x11d1, 0xbb, 0x3, 0x0, 0xc0, 0x4f, 0xb6, 0xc4, 0xa6);
DEFINE_GUID(IID_CoVBComponent, 0xbe39f3da, 0x1b13, 0x11d0, 0x88, 0x7f, 0x0, 0xa0, 0xc9, 0xf, 0x27, 0x44);
DEFINE_GUID(IID__VBComponents_Old, 0x2e162, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID__VBComponents, 0xeee0091c, 0xe393, 0x11d1, 0xbb, 0x3, 0x0, 0xc0, 0x4f, 0xb6, 0xc4, 0xa6);
DEFINE_GUID(IID_CoVBComponents, 0xbe39f3d7, 0x1b13, 0x11d0, 0x88, 0x7f, 0x0, 0xa0, 0xc9, 0xf, 0x27, 0x44);
DEFINE_GUID(IID_CoVBProject, 0x2e169, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_CoVBProjects, 0x2e101, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID__CodeModule, 0x2e16e, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_CoCodeModule, 0x2e170, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID__CodePane, 0x2e176, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_CoCodePane, 0x2e178, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID__CodePanes, 0x2e172, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_CoCodePanes, 0x2e174, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID__Properties, 0x2e188, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_CoProperties, 0x2e18b, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID__References, 0x2e17a, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_CoReferences, 0x2e17c, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_AddIn, 0x2097e, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_Adjustments, 0x209c4, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_AnswerWizardFiles, 0xc0361, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_AutoCaption, 0x2097b, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_AutoCorrectEntries, 0x20948, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_AutoCorrectEntry, 0x20947, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_AutoTextEntries, 0x20937, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_AutoTextEntry, 0x20936, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_Bookmark, 0x20968, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_Border, 0x2093b, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_CalloutFormat, 0x209c5, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_CanvasShapes, 0x396f9073, 0xf9fd, 0x11d3, 0x8e, 0xa0, 0x0, 0x50, 0x4, 0x9a, 0x1a, 0x1);
DEFINE_GUID(IID_CaptionLabel, 0x20979, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_Cell, 0x2094e, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_Cells, 0x2094a, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_ColorFormat, 0x209c6, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_Column, 0x2094f, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_Columns, 0x2094b, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_COMAddIn, 0xc033a, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_Comment, 0x2093d, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_ConditionalStyle, 0x1498f56d, 0xed33, 0x41f9, 0xb3, 0x7b, 0xef, 0x30, 0xe5, 0xb, 0x8, 0xac);
DEFINE_GUID(IID_ConnectorFormat, 0x209c7, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_CustomLabels, 0x20916, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_DiagramNode, 0x209e9, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_Diagram, 0x209ec, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_Dialog, 0x209b8, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_DocumentLibraryVersion, 0xc0387, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_DropCap, 0x20956, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_Editors, 0xaed7e08c, 0x14f0, 0x4f33, 0x92, 0x1d, 0x4c, 0x53, 0x53, 0x13, 0x7b, 0xf6);
DEFINE_GUID(IID_EmailAuthor, 0x209d7, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_EmailSignatureEntries, 0x209e5, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_EmailSignatureEntry, 0x209e6, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_EndnoteOptions, 0xbf043168, 0xf4de, 0x4e7c, 0xb2, 0x6, 0x74, 0x1a, 0x8b, 0x3e, 0xf7, 0x1a);
DEFINE_GUID(IID_Endnote, 0x2093e, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_Events, 0x2e167, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_Field, 0x2092f, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_FileConverter, 0x20999, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_FileDialogFilters, 0xc0365, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_FillFormat, 0x209c8, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_Find, 0x209b0, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_FirstLetterException, 0x20945, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_FootnoteOptions, 0xbea85a24, 0xd7da, 0x4f3d, 0xb5, 0x8c, 0xed, 0x90, 0xfb, 0x1, 0xd6, 0x15);
DEFINE_GUID(IID_Footnote, 0x2093f, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_FormField, 0x20928, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_Frame, 0x2092a, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_FreeformBuilder, 0x209c9, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_GroupShapes, 0x209b6, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_HangulAndAlphabetException, 0x209d2, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_HeaderFooter, 0x20985, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_HTMLDivision, 0x209e7, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_HTMLProjectItems, 0xc0357, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_Hyperlink, 0x2099d, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_IMsoDiagram, 0xc036d, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_InlineShape, 0x209a8, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_Language, 0x2096d, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_LineFormat, 0x209ca, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_LineNumbering, 0x20972, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_LinkFormat, 0x20931, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_ListFormat, 0x209c0, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_List, 0x20992, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_ListTemplate, 0x2098f, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_MailMergeDataSource, 0x2091d, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_MailMergeFieldNames, 0x2091c, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_MailMergeFields, 0x2091f, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_MappedDataFields, 0x799a6814, 0xea41, 0x11d3, 0x87, 0xcc, 0x0, 0x10, 0x5a, 0xa3, 0x1a, 0x34);
DEFINE_GUID(IID_OLEFormat, 0x20933, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_OtherCorrectionsException, 0x209e1, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_PageNumbers, 0x20986, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_Pane, 0x20960, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_Panes, 0x2095f, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_PictureFormat, 0x209cb, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_Property, 0x2e18c, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_PropertyTest, 0xc0333, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_ReadabilityStatistic, 0x209af, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_RecentFile, 0x20964, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_Reference, 0x2e17e, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_Replacement, 0x209b1, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_Revision, 0x20981, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_Row, 0x20950, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_ScopeFolder, 0xc0368, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_ScopeFolders, 0xc0369, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_Script, 0xc0341, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_SearchScope, 0xc0367, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_Section, 0x20959, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_ShadowFormat, 0x209cc, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_ShapeNodes, 0x209ce, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_SharedWorkspaceFiles, 0xc037c, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_SharedWorkspaceFolders, 0xc037e, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_SharedWorkspaceLinks, 0xc0380, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_SharedWorkspaceMembers, 0xc0382, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_SharedWorkspaceTask, 0xc0379, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_Signature, 0xc0411, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_SmartTag, 0x209ed, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_SmartTagRecognizer, 0x15ebe471, 0x182, 0x4cce, 0x98, 0xd0, 0xb6, 0x61, 0x4d, 0x1c, 0x32, 0xa1);
DEFINE_GUID(IID_SmartTagType, 0x5e9a888c, 0xe5dc, 0x4dcb, 0x83, 0x8, 0x3c, 0x91, 0xfb, 0x61, 0xe6, 0xf4);
DEFINE_GUID(IID_SpellingSuggestion, 0x209ab, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_StyleSheet, 0x209ef, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_Subdocument, 0x20989, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_TableOfAuthoritiesCategory, 0x20977, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_TableOfAuthorities, 0x20911, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_TableOfContents, 0x20913, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_TableOfFigures, 0x20921, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_TabStop, 0x20954, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_TaskPane, 0xb9f1a4e2, 0xd0a, 0x43b7, 0x84, 0x95, 0x13, 0x9e, 0x7a, 0xcb, 0xd8, 0x40);
DEFINE_GUID(IID_Task, 0x20982, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_TextColumn, 0x20974, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_TextInput, 0x20927, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_TwoInitialCapsException, 0x20943, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_Variable, 0x20966, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_Version, 0x209b4, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_View, 0x209a5, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_WebPageFont, 0xc0913, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_XMLChildNodeSuggestion, 0xa87e00e9, 0x3ac3, 0x4b53, 0xab, 0xe3, 0x73, 0x79, 0x65, 0x3d, 0xe, 0x82);
DEFINE_GUID(IID_XMLNamespace, 0xb140a023, 0x4850, 0x4da6, 0xbc, 0x5f, 0xcc, 0x45, 0x9c, 0x45, 0x7, 0xbc);
DEFINE_GUID(IID_XMLSchemaReference, 0xfe0971f0, 0x5e60, 0x4985, 0xbc, 0xda, 0x95, 0xcb, 0xb, 0x8e, 0x3, 0x8);
DEFINE_GUID(IID_XSLTransform, 0xe3124493, 0x7d6a, 0x410f, 0x9a, 0x48, 0xcc, 0x82, 0x2c, 0x3, 0x3c, 0xec);
DEFINE_GUID(IID_XSLTransforms, 0xc774f5ea, 0xa539, 0x4284, 0xa1, 0xbe, 0x30, 0xae, 0xc0, 0x52, 0xd8, 0x99);
DEFINE_GUID(IID_Zoom, 0x209a6, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_Zooms, 0x209a7, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID__CommandBarControlEvents, 0x2e130, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID__ReferencesEvents, 0x2e11a, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_CoCommandBarEvents, 0x2e132, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_CoReferencesEvents, 0x2e119, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_CheckBox, 0x20926, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_CustomLabel, 0x20915, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_CustomProperties, 0xb923fde1, 0xf08c, 0x11d3, 0x91, 0xb0, 0x0, 0x10, 0x5a, 0xa, 0x19, 0xfd);
DEFINE_GUID(IID_CustomProperty, 0xb923fde0, 0xf08c, 0x11d3, 0x91, 0xb0, 0x0, 0x10, 0x5a, 0xa, 0x19, 0xfd);
DEFINE_GUID(IID_DiagramNodeChildren, 0x209ea, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_DiagramNodes, 0x209eb, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_DropDown, 0x20925, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_Editor, 0xdd947d72, 0xf33c, 0x4198, 0x9b, 0xdf, 0xf8, 0x61, 0x81, 0xd0, 0x5e, 0x41);
DEFINE_GUID(IID_FileDialogFilter, 0xc0364, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_HeadersFooters, 0x20984, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_HeadingStyles, 0x2098a, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_HorizontalLineFormat, 0x209de, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_HTMLProjectItem, 0xc0358, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_ListEntries, 0x20924, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_ListEntry, 0x20923, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_ListLevels, 0x2098e, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_MailMergeDataFields, 0x2091a, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_MailMergeFieldName, 0x2091b, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_MailMergeField, 0x2091e, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_MappedDataField, 0x5d311669, 0xea51, 0x11d3, 0x87, 0xcc, 0x0, 0x10, 0x5a, 0xa3, 0x1a, 0x34);
DEFINE_GUID(IID_PageNumber, 0x20987, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_Pages, 0x91807402, 0x6c6f, 0x47cd, 0xb8, 0xfa, 0xc4, 0x2f, 0xee, 0x8e, 0xe9, 0x24);
DEFINE_GUID(IID_Reviewers, 0x12dcdc9a, 0x5418, 0x48a3, 0xbb, 0xe6, 0xeb, 0x57, 0xba, 0xe2, 0x75, 0xe8);
DEFINE_GUID(IID_ShapeNode, 0x209cd, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_SharedWorkspaceFile, 0xc037b, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_SharedWorkspaceFolder, 0xc037d, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_SharedWorkspaceLink, 0xc037f, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_SharedWorkspaceMember, 0xc0381, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_SmartTagActions, 0xcde12cd8, 0x767b, 0x4757, 0x8a, 0x31, 0x13, 0x2, 0x9a, 0x8, 0x63, 0x5);
DEFINE_GUID(IID_HeadingStyle, 0x2098b, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_ListLevel, 0x2098d, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_MailMergeDataField, 0x20919, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_Page, 0x352840a9, 0xaf7d, 0x4ca4, 0x87, 0xfc, 0x21, 0xc6, 0x8f, 0xda, 0xb3, 0xe4);
DEFINE_GUID(IID_Rectangles, 0x7d0f7985, 0x68d9, 0x4d93, 0x91, 0xcb, 0x81, 0x9, 0x28, 0xe, 0x76, 0xcc);
DEFINE_GUID(IID_Reviewer, 0x47cef4ae, 0xdc32, 0x4220, 0x8a, 0xa5, 0x19, 0xcc, 0xc0, 0xe6, 0x63, 0x3a);
DEFINE_GUID(IID_SmartTagAction, 0xdfb6aa6c, 0x1068, 0x420f, 0x96, 0x9d, 0x1, 0x28, 0xf, 0xcc, 0x16, 0x30);
DEFINE_GUID(IID_Breaks, 0x16be9309, 0xd708, 0x4322, 0xbb, 0x1a, 0xb0, 0x56, 0xf5, 0x8d, 0x17, 0xea);
DEFINE_GUID(IID_Rectangle, 0xadd4edf3, 0x2f33, 0x4734, 0x9c, 0xe6, 0xd4, 0x76, 0x9, 0x7c, 0x5a, 0xda);
DEFINE_GUID(IID_Break, 0x79635bf1, 0xbd1d, 0x4b3f, 0xa5, 0x20, 0xc1, 0x10, 0x6f, 0x1a, 0xaa, 0xd8);
DEFINE_GUID(IID_Lines, 0xe2e8a400, 0x615, 0x427d, 0xad, 0xcc, 0xca, 0xd3, 0x9f, 0xfe, 0xbd, 0x42);
DEFINE_GUID(IID_Line, 0xae6ce2f5, 0xb9d3, 0x407d, 0x85, 0xa8, 0xf, 0x10, 0xc6, 0x32, 0x89, 0xa4);
DEFINE_GUID(IID_IApplicationEvents, 0x209f7, 0x1, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_IApplicationEvents2, 0x209fe, 0x1, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_IApplicationEvents3, 0x20a00, 0x1, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);
DEFINE_GUID(IID_IApplicationEvents4, 0x20a01, 0x1, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46);

// WdAnimation
typedef enum tagWdAnimation
{
	wdAnimationNone = 0, 
	wdAnimationLasVegasLights = 1, 
	wdAnimationBlinkingBackground = 2, 
	wdAnimationSparkleText = 3, 
	wdAnimationMarchingBlackAnts = 4, 
	wdAnimationMarchingRedAnts = 5, 
	wdAnimationShimmer = 6,
} WdAnimation;

// WdColor
typedef enum tagWdColor
{
	wdColorAutomatic = -16777216, 
	wdColorBlack = 0, 
	wdColorBlue = 16711680, 
	wdColorTurquoise = 16776960, 
	wdColorBrightGreen = 65280, 
	wdColorPink = 16711935, 
	wdColorRed = 255, 
	wdColorYellow = 65535, 
	wdColorWhite = 16777215, 
	wdColorDarkBlue = 8388608, 
	wdColorTeal = 8421376, 
	wdColorGreen = 32768,
	wdColorViolet = 8388736, 
	wdColorDarkRed = 128, 
	wdColorDarkYellow = 32896, 
	wdColorBrown = 13209, 
	wdColorOliveGreen = 13107, 
	wdColorDarkGreen = 13056, 
	wdColorDarkTeal = 6697728, 
	wdColorIndigo = 10040115, 
	wdColorOrange = 26367, 
	wdColorBlueGray = 10053222, 
	wdColorLightOrange = 39423, 
	wdColorLime = 52377, 
	wdColorSeaGreen = 6723891, 
	wdColorAqua = 13421619, 
	wdColorLightBlue = 16737843, 
	wdColorGold = 52479, 
	wdColorSkyBlue = 16763904, 
	wdColorPlum = 6697881, 
	wdColorRose = 13408767, 
	wdColorTan = 10079487, 
	wdColorLightYellow = 10092543, 
	wdColorLightGreen = 13434828, 
	wdColorLightTurquoise = 16777164, 
	wdColorPaleBlue = 16764057, 
	wdColorLavender = 16751052, 
	wdColorGray05 = 15987699, 
	wdColorGray10 = 15132390,
	wdColorGray125 = 14737632, 
	wdColorGray15 = 14277081, 
	wdColorGray20 = 13421772, 
	wdColorGray25 = 12632256, 
	wdColorGray30 = 11776947, 
	wdColorGray35 = 10921638, 
	wdColorGray375 = 10526880, 
	wdColorGray40 = 10066329, 
	wdColorGray45 = 9211020, 
	wdColorGray50 = 8421504, 
	wdColorGray55 = 7566195, 
	wdColorGray60 = 6710886, 
	wdColorGray625 = 6316128, 
	wdColorGray65 = 5855577, 
	wdColorGray70 = 5000268, 
	wdColorGray75 = 4210752, 
	wdColorGray80 = 3355443, 
	wdColorGray85 = 2500134, 
	wdColorGray875 = 2105376, 
	wdColorGray90 = 1644825, 
	wdColorGray95 = 789516, 
} WdColor;

// _Font
// {00020952-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE _Font
DECLARE_INTERFACE_(_Font, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// _Font methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE;
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Duplicate) (THIS_ Font** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Bold) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Bold) (THIS_ long prop) PURE; 
	STDMETHOD_(HRESULT, Get_Italic) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Italic) (THIS_ long prop) PURE; 
	STDMETHOD_(HRESULT, Get_Hidden) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Hidden) (THIS_ long prop) PURE; 
	STDMETHOD_(HRESULT, Get_SmallCaps) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Set_SmallCaps) (THIS_ long prop) PURE; 
	STDMETHOD_(HRESULT, Get_AllCaps) (THIS_ long* prop) PURE;
	STDMETHOD_(HRESULT, Set_AllCaps) (THIS_ long prop) PURE; 
	STDMETHOD_(HRESULT, Get_StrikeThrough) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Set_StrikeThrough) (THIS_ long prop) PURE; 
	STDMETHOD_(HRESULT, Get_DoubleStrikeThrough) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Set_DoubleStrikeThrough) (THIS_ long prop) PURE; 
	STDMETHOD_(HRESULT, Get_ColorIndex) (THIS_ WdColorIndex* prop) PURE; 
	STDMETHOD_(HRESULT, Set_ColorIndex) (THIS_ WdColorIndex prop) PURE; 
	STDMETHOD_(HRESULT, Get_Subscript) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Subscript) (THIS_ long prop) PURE; 
	STDMETHOD_(HRESULT, Get_Superscript) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Superscript) (THIS_ long prop) PURE; 
	STDMETHOD_(HRESULT, Get_Underline) (THIS_ WdUnderline* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Underline) (THIS_ WdUnderline prop) PURE; 
	STDMETHOD_(HRESULT, Get_Size) (THIS_ float* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Size) (THIS_ float prop) PURE; 
	STDMETHOD_(HRESULT, Get_Name) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Name) (THIS_ BSTR prop) PURE; 
	STDMETHOD_(HRESULT, Get_Position) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Position) (THIS_ long prop) PURE; 
	STDMETHOD_(HRESULT, Get_Spacing) (THIS_ float* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Spacing) (THIS_ float prop) PURE; 
	STDMETHOD_(HRESULT, Get_Scaling) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Scaling) (THIS_ long prop) PURE; 
	STDMETHOD_(HRESULT, Get_Shadow) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Shadow) (THIS_ long prop) PURE; 
	STDMETHOD_(HRESULT, Get_Outline) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Outline) (THIS_ long prop) PURE;
	STDMETHOD_(HRESULT, Get_Emboss) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Emboss) (THIS_ long prop) PURE; 
	STDMETHOD_(HRESULT, Get_Kerning) (THIS_ float* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Kerning) (THIS_ float prop) PURE; 
	STDMETHOD_(HRESULT, Get_Engrave) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Engrave) (THIS_ long prop) PURE; 
	STDMETHOD_(HRESULT, Get_Animation) (THIS_ WdAnimation* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Animation) (THIS_ WdAnimation prop) PURE; 
	STDMETHOD_(HRESULT, Get_Borders) (THIS_ Borders** prop) PURE; 
	STDMETHOD_(HRESULT, Set_Borders) (THIS_ Borders* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Shading) (THIS_ Shading** prop) PURE; 
	STDMETHOD_(HRESULT, Get_EmphasisMark) (THIS_ WdEmphasisMark* prop) PURE; 
	STDMETHOD_(HRESULT, Set_EmphasisMark) (THIS_ WdEmphasisMark prop) PURE; 
	STDMETHOD_(HRESULT, Get_DisableCharacterSpaceGrid) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_DisableCharacterSpaceGrid) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_NameFarEast) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Set_NameFarEast) (THIS_ BSTR prop) PURE; 
	STDMETHOD_(HRESULT, Get_NameAscii) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Set_NameAscii) (THIS_ BSTR prop) PURE; 
	STDMETHOD_(HRESULT, Get_NameOther) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Set_NameOther) (THIS_ BSTR prop) PURE; 
	STDMETHOD_(HRESULT, Grow) (THIS ) PURE; 
	STDMETHOD_(HRESULT, Shrink) (THIS ) PURE; 
	STDMETHOD_(HRESULT, Reset) (THIS ) PURE; 
	STDMETHOD_(HRESULT, SetAsTemplateDefault) (THIS ) PURE; 
	STDMETHOD_(HRESULT, Get_Color) (THIS_ WdColor* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Color) (THIS_ WdColor prop) PURE;
	STDMETHOD_(HRESULT, Get_BoldBi) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Set_BoldBi) (THIS_ long prop) PURE; 
	STDMETHOD_(HRESULT, Get_ItalicBi) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Set_ItalicBi) (THIS_ long prop) PURE; 
	STDMETHOD_(HRESULT, Get_SizeBi) (THIS_ float* prop) PURE; 
	STDMETHOD_(HRESULT, Set_SizeBi) (THIS_ float prop) PURE; 
	STDMETHOD_(HRESULT, Get_NameBi) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Set_NameBi) (THIS_ BSTR prop) PURE; 
	STDMETHOD_(HRESULT, Get_ColorIndexBi) (THIS_ WdColorIndex* prop) PURE; 
	STDMETHOD_(HRESULT, Set_ColorIndexBi) (THIS_ WdColorIndex prop) PURE; 
	STDMETHOD_(HRESULT, Get_DiacriticColor) (THIS_ WdColor* prop) PURE; 
	STDMETHOD_(HRESULT, Set_DiacriticColor) (THIS_ WdColor prop) PURE; 
	STDMETHOD_(HRESULT, Get_UnderlineColor) (THIS_ WdColor* prop) PURE; 
	STDMETHOD_(HRESULT, Set_UnderlineColor) (THIS_ WdColor prop) PURE; 
};
typedef _Font* LPWORDFONT;
#ifdef __cplusplus
// _Font  {00020952-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FHIDDEN TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS T_FontProxy : public __OCF TAutoProxy
{
public:
	T_FontProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// Duplicate:   [dispid 10]
	Font* Duplicate();

	// Bold:   [dispid 130]
	long Bold();

	// Bold:   [dispid 130]
	void Bold(long arg0);

	// Italic:   [dispid 131]
	long Italic();

	// Italic:   [dispid 131]
	void Italic(long arg0);

	// Hidden:   [dispid 132]
	long Hidden();

	// Hidden:   [dispid 132]
	void Hidden(long arg0);

	// SmallCaps:   [dispid 133]
	long SmallCaps();

	// SmallCaps:   [dispid 133]
	void SmallCaps(long arg0);

	// AllCaps:   [dispid 134]
	long AllCaps();

	// AllCaps:   [dispid 134]
	void AllCaps(long arg0);

	// StrikeThrough:   [dispid 135]
	long StrikeThrough();

	// StrikeThrough:   [dispid 135]
	void StrikeThrough(long arg0);

	// DoubleStrikeThrough:   [dispid 136]
	long DoubleStrikeThrough();

	// DoubleStrikeThrough:   [dispid 136]
	void DoubleStrikeThrough(long arg0);

	// ColorIndex:   [dispid 137]
	WdColorIndex ColorIndex();

	// ColorIndex:   [dispid 137]
	void ColorIndex(WdColorIndex arg0);

	// Subscript:   [dispid 138]
	long Subscript();

	// Subscript:   [dispid 138]
	void Subscript(long arg0);

	// Superscript:   [dispid 139]
	long Superscript();

	// Superscript:   [dispid 139]
	void Superscript(long arg0);

	// Underline:   [dispid 140]
	WdUnderline Underline();

	// Underline:   [dispid 140]
	void Underline(WdUnderline arg0);

	// Size:   [dispid 141]
	float Size();

	// Size:   [dispid 141]
	void Size(float arg0);

	// Name:   [dispid 142]
	__OCF TAutoString Name();

	// Name:   [dispid 142]
	void Name(__OCF TAutoString arg0);

	// Position:   [dispid 143]
	long Position();

	// Position:   [dispid 143]
	void Position(long arg0);

	// Spacing:   [dispid 144]
	float Spacing();

	// Spacing:   [dispid 144]
	void Spacing(float arg0);

	// Scaling:   [dispid 145]
	long Scaling();

	// Scaling:   [dispid 145]
	void Scaling(long arg0);

	// Shadow:   [dispid 146]
	long Shadow();

	// Shadow:   [dispid 146]
	void Shadow(long arg0);

	// Outline:   [dispid 147]
	long Outline();

	// Outline:   [dispid 147]
	void Outline(long arg0);

	// Emboss:   [dispid 148]
	long Emboss();

	// Emboss:   [dispid 148]
	void Emboss(long arg0);

	// Kerning:   [dispid 149]
	float Kerning();

	// Kerning:   [dispid 149]
	void Kerning(float arg0);

	// Engrave:   [dispid 150]
	long Engrave();

	// Engrave:   [dispid 150]
	void Engrave(long arg0);

	// Animation:   [dispid 151]
	WdAnimation Animation();

	// Animation:   [dispid 151]
	void Animation(WdAnimation arg0);

	// _Borders:   [dispid 1100]
	void _Borders(TBordersProxy& Obj);

	// _Borders:   [dispid 1100]
	void _Borders(Borders* arg0);

	// _Shading:   [dispid 153]
	void _Shading(TShadingProxy& Obj);

	// EmphasisMark:   [dispid 154]
	WdEmphasisMark EmphasisMark();

	// EmphasisMark:   [dispid 154]
	void EmphasisMark(WdEmphasisMark arg0);

	// DisableCharacterSpaceGrid:   [dispid 155]
	/*__OWL*/ TBool DisableCharacterSpaceGrid();

	// DisableCharacterSpaceGrid:   [dispid 155]
	void DisableCharacterSpaceGrid(/*__OWL*/ TBool arg0);

	// NameFarEast:   [dispid 156]
	__OCF TAutoString NameFarEast();

	// NameFarEast:   [dispid 156]
	void NameFarEast(__OCF TAutoString arg0);

	// NameAscii:   [dispid 157]
	__OCF TAutoString NameAscii();

	// NameAscii:   [dispid 157]
	void NameAscii(__OCF TAutoString arg0);

	// NameOther:   [dispid 158]
	__OCF TAutoString NameOther();

	// NameOther:   [dispid 158]
	void NameOther(__OCF TAutoString arg0);

	// Grow:   [dispid 100]
	void Grow();

	// Shrink:   [dispid 101]
	void Shrink();

	// Reset:   [dispid 102]
	void Reset();

	// SetAsTemplateDefault:   [dispid 103]
	void SetAsTemplateDefault();

	// Color:   [dispid 159]
	WdColor Color();

	// Color:   [dispid 159]
	void Color(WdColor arg0);

	// BoldBi:   [dispid 160]
	long BoldBi();

	// BoldBi:   [dispid 160]
	void BoldBi(long arg0);

	// ItalicBi:   [dispid 161]
	long ItalicBi();

	// ItalicBi:   [dispid 161]
	void ItalicBi(long arg0);

	// SizeBi:   [dispid 162]
	float SizeBi();

	// SizeBi:   [dispid 162]
	void SizeBi(float arg0);

	// NameBi:   [dispid 163]
	__OCF TAutoString NameBi();

	// NameBi:   [dispid 163]
	void NameBi(__OCF TAutoString arg0);

	// ColorIndexBi:   [dispid 164]
	WdColorIndex ColorIndexBi();

	// ColorIndexBi:   [dispid 164]
	void ColorIndexBi(WdColorIndex arg0);

	// DiacriticColor:   [dispid 165]
	WdColor DiacriticColor();

	// DiacriticColor:   [dispid 165]
	void DiacriticColor(WdColor arg0);

	// UnderlineColor:   [dispid 166]
	WdColor UnderlineColor();

	// UnderlineColor:   [dispid 166]
	void UnderlineColor(WdColor arg0);
};
#endif

// WdParagraphAlignment
typedef enum tagWdParagraphAlignment
{
	wdAlignParagraphLeft = 0, 
	wdAlignParagraphCenter = 1, 
	wdAlignParagraphRight = 2, 
	wdAlignParagraphJustify = 3, 
	wdAlignParagraphDistribute = 4, 
	wdAlignParagraphJustifyMed = 5, 
	wdAlignParagraphJustifyHi = 7, 
	wdAlignParagraphJustifyLow = 8, 
	wdAlignParagraphThaiJustify = 9, 
} WdParagraphAlignment;

// WdLineSpacing
typedef enum tagWdLineSpacing
{
	wdLineSpaceSingle = 0, 
	wdLineSpace1pt5 = 1, 
	wdLineSpaceDouble = 2, 
	wdLineSpaceAtLeast = 3, 
	wdLineSpaceExactly = 4, 
	wdLineSpaceMultiple = 5, 
} WdLineSpacing;

// WdBaselineAlignment
typedef enum tagWdBaselineAlignment
{
	wdBaselineAlignTop = 0, 
	wdBaselineAlignCenter = 1, 
	wdBaselineAlignBaseline = 2, 
	wdBaselineAlignFarEast50 = 3, 
	wdBaselineAlignAuto = 4, 
} WdBaselineAlignment;

// WdOutlineLevel
typedef enum tagWdOutlineLevel
{
	wdOutlineLevel1 = 1, 
	wdOutlineLevel2 = 2, 
	wdOutlineLevel3 = 3, 
	wdOutlineLevel4 = 4, 
	wdOutlineLevel5 = 5, 
	wdOutlineLevel6 = 6, 
	wdOutlineLevel7 = 7, 
	wdOutlineLevel8 = 8, 
	wdOutlineLevel9 = 9, 
	wdOutlineLevelBodyText = 10, 
} WdOutlineLevel;

// WdReadingOrder
typedef enum tagWdReadingOrder
{
	wdReadingOrderRtl = 0, 
	wdReadingOrderLtr = 1,
} WdReadingOrder;

// _ParagraphFormat
// {00020953-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE _ParagraphFormat
DECLARE_INTERFACE_(_ParagraphFormat, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// _ParagraphFormat methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE;
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Duplicate) (THIS_ ParagraphFormat** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Style) (THIS_ VARIANT* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Style) (THIS_ VARIANT* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Alignment) (THIS_ WdParagraphAlignment* prop) PURE;
	STDMETHOD_(HRESULT, Set_Alignment) (THIS_ WdParagraphAlignment prop) PURE; 
	STDMETHOD_(HRESULT, Get_KeepTogether) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Set_KeepTogether) (THIS_ long prop) PURE; 
	STDMETHOD_(HRESULT, Get_KeepWithNext) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Set_KeepWithNext) (THIS_ long prop) PURE; 
	STDMETHOD_(HRESULT, Get_PageBreakBefore) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Set_PageBreakBefore) (THIS_ long prop) PURE; 
	STDMETHOD_(HRESULT, Get_NoLineNumber) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Set_NoLineNumber) (THIS_ long prop) PURE; 
	STDMETHOD_(HRESULT, Get_RightIndent) (THIS_ float* prop) PURE; 
	STDMETHOD_(HRESULT, Set_RightIndent) (THIS_ float prop) PURE; 
	STDMETHOD_(HRESULT, Get_LeftIndent) (THIS_ float* prop) PURE; 
	STDMETHOD_(HRESULT, Set_LeftIndent) (THIS_ float prop) PURE; 
	STDMETHOD_(HRESULT, Get_FirstLineIndent) (THIS_ float* prop) PURE; 
	STDMETHOD_(HRESULT, Set_FirstLineIndent) (THIS_ float prop) PURE; 
	STDMETHOD_(HRESULT, Get_LineSpacing) (THIS_ float* prop) PURE; 
	STDMETHOD_(HRESULT, Set_LineSpacing) (THIS_ float prop) PURE; 
	STDMETHOD_(HRESULT, Get_LineSpacingRule) (THIS_ WdLineSpacing* prop) PURE; 
	STDMETHOD_(HRESULT, Set_LineSpacingRule) (THIS_ WdLineSpacing prop) PURE; 
	STDMETHOD_(HRESULT, Get_SpaceBefore) (THIS_ float* prop) PURE; 
	STDMETHOD_(HRESULT, Set_SpaceBefore) (THIS_ float prop) PURE; 
	STDMETHOD_(HRESULT, Get_SpaceAfter) (THIS_ float* prop) PURE; 
	STDMETHOD_(HRESULT, Set_SpaceAfter) (THIS_ float prop) PURE; 
	STDMETHOD_(HRESULT, Get_Hyphenation) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Hyphenation) (THIS_ long prop) PURE; 
	STDMETHOD_(HRESULT, Get_WidowControl) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Set_WidowControl) (THIS_ long prop) PURE;
	STDMETHOD_(HRESULT, Get_FarEastLineBreakControl) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Set_FarEastLineBreakControl) (THIS_ long prop) PURE; 
	STDMETHOD_(HRESULT, Get_WordWrap) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Set_WordWrap) (THIS_ long prop) PURE; 
	STDMETHOD_(HRESULT, Get_HangingPunctuation) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Set_HangingPunctuation) (THIS_ long prop) PURE; 
	STDMETHOD_(HRESULT, Get_HalfWidthPunctuationOnTopOfLine) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Set_HalfWidthPunctuationOnTopOfLine) (THIS_ long prop) PURE; 
	STDMETHOD_(HRESULT, Get_AddSpaceBetweenFarEastAndAlpha) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Set_AddSpaceBetweenFarEastAndAlpha) (THIS_ long prop) PURE; 
	STDMETHOD_(HRESULT, Get_AddSpaceBetweenFarEastAndDigit) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Set_AddSpaceBetweenFarEastAndDigit) (THIS_ long prop) PURE; 
	STDMETHOD_(HRESULT, Get_BaseLineAlignment) (THIS_ WdBaselineAlignment* prop) PURE; 
	STDMETHOD_(HRESULT, Set_BaseLineAlignment) (THIS_ WdBaselineAlignment prop) PURE; 
	STDMETHOD_(HRESULT, Get_AutoAdjustRightIndent) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Set_AutoAdjustRightIndent) (THIS_ long prop) PURE; 
	STDMETHOD_(HRESULT, Get_DisableLineHeightGrid) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Set_DisableLineHeightGrid) (THIS_ long prop) PURE; 
	STDMETHOD_(HRESULT, Get_TabStops) (THIS_ TabStops** prop) PURE; 
	STDMETHOD_(HRESULT, Set_TabStops) (THIS_ TabStops* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Borders) (THIS_ Borders** prop) PURE; 
	STDMETHOD_(HRESULT, Set_Borders) (THIS_ Borders* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Shading) (THIS_ Shading** prop) PURE; 
	STDMETHOD_(HRESULT, Get_OutlineLevel) (THIS_ WdOutlineLevel* prop) PURE; 
	STDMETHOD_(HRESULT, Set_OutlineLevel) (THIS_ WdOutlineLevel prop) PURE; 
	STDMETHOD_(HRESULT, CloseUp) (THIS ) PURE; 
	STDMETHOD_(HRESULT, OpenUp) (THIS ) PURE;
	STDMETHOD_(HRESULT, OpenOrCloseUp) (THIS ) PURE; 
	STDMETHOD_(HRESULT, TabHangingIndent) (THIS_ short Count) PURE; 
	STDMETHOD_(HRESULT, TabIndent) (THIS_ short Count) PURE; 
	STDMETHOD_(HRESULT, Reset) (THIS ) PURE; 
	STDMETHOD_(HRESULT, Space1) (THIS ) PURE; 
	STDMETHOD_(HRESULT, Space15) (THIS ) PURE; 
	STDMETHOD_(HRESULT, Space2) (THIS ) PURE; 
	STDMETHOD_(HRESULT, IndentCharWidth) (THIS_ short Count) PURE; 
	STDMETHOD_(HRESULT, IndentFirstLineCharWidth) (THIS_ short Count) PURE; 
	STDMETHOD_(HRESULT, Get_CharacterUnitRightIndent) (THIS_ float* prop) PURE; 
	STDMETHOD_(HRESULT, Set_CharacterUnitRightIndent) (THIS_ float prop) PURE; 
	STDMETHOD_(HRESULT, Get_CharacterUnitLeftIndent) (THIS_ float* prop) PURE; 
	STDMETHOD_(HRESULT, Set_CharacterUnitLeftIndent) (THIS_ float prop) PURE; 
	STDMETHOD_(HRESULT, Get_CharacterUnitFirstLineIndent) (THIS_ float* prop) PURE; 
	STDMETHOD_(HRESULT, Set_CharacterUnitFirstLineIndent) (THIS_ float prop) PURE; 
	STDMETHOD_(HRESULT, Get_LineUnitBefore) (THIS_ float* prop) PURE; 
	STDMETHOD_(HRESULT, Set_LineUnitBefore) (THIS_ float prop) PURE; 
	STDMETHOD_(HRESULT, Get_LineUnitAfter) (THIS_ float* prop) PURE; 
	STDMETHOD_(HRESULT, Set_LineUnitAfter) (THIS_ float prop) PURE; 
	STDMETHOD_(HRESULT, Get_ReadingOrder) (THIS_ WdReadingOrder* prop) PURE; 
	STDMETHOD_(HRESULT, Set_ReadingOrder) (THIS_ WdReadingOrder prop) PURE; 
	STDMETHOD_(HRESULT, Get_SpaceBeforeAuto) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Set_SpaceBeforeAuto) (THIS_ long prop) PURE; 
	STDMETHOD_(HRESULT, Get_SpaceAfterAuto) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Set_SpaceAfterAuto) (THIS_ long prop) PURE; 
};
typedef _ParagraphFormat* LPPARAGRAPHFORMAT;
#ifdef __cplusplus
// _ParagraphFormat  {00020953-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FHIDDEN TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS T_ParagraphFormatProxy : public __OCF TAutoProxy
{
public:
	T_ParagraphFormatProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// Duplicate:   [dispid 10]
	ParagraphFormat* Duplicate();

	// Style:   [dispid 100]
	__OCF TAutoVal Style();

	// Style:   [dispid 100]
	void Style(__OCF TAutoVal* arg0);

	// Alignment:   [dispid 101]
	WdParagraphAlignment Alignment();

	// Alignment:   [dispid 101]
	void Alignment(WdParagraphAlignment arg0);

	// KeepTogether:   [dispid 102]
	long KeepTogether();

	// KeepTogether:   [dispid 102]
	void KeepTogether(long arg0);

	// KeepWithNext:   [dispid 103]
	long KeepWithNext();

	// KeepWithNext:   [dispid 103]
	void KeepWithNext(long arg0);

	// PageBreakBefore:   [dispid 104]
	long PageBreakBefore();

	// PageBreakBefore:   [dispid 104]
	void PageBreakBefore(long arg0);

	// NoLineNumber:   [dispid 105]
	long NoLineNumber();

	// NoLineNumber:   [dispid 105]
	void NoLineNumber(long arg0);

	// RightIndent:   [dispid 106]
	float RightIndent();

	// RightIndent:   [dispid 106]
	void RightIndent(float arg0);

	// LeftIndent:   [dispid 107]
	float LeftIndent();

	// LeftIndent:   [dispid 107]
	void LeftIndent(float arg0);

	// FirstLineIndent:   [dispid 108]
	float FirstLineIndent();

	// FirstLineIndent:   [dispid 108]
	void FirstLineIndent(float arg0);

	// LineSpacing:   [dispid 109]
	float LineSpacing();

	// LineSpacing:   [dispid 109]
	void LineSpacing(float arg0);

	// LineSpacingRule:   [dispid 110]
	WdLineSpacing LineSpacingRule();

	// LineSpacingRule:   [dispid 110]
	void LineSpacingRule(WdLineSpacing arg0);

	// SpaceBefore:   [dispid 111]
	float SpaceBefore();

	// SpaceBefore:   [dispid 111]
	void SpaceBefore(float arg0);

	// SpaceAfter:   [dispid 112]
	float SpaceAfter();

	// SpaceAfter:   [dispid 112]
	void SpaceAfter(float arg0);

	// Hyphenation:   [dispid 113]
	long Hyphenation();

	// Hyphenation:   [dispid 113]
	void Hyphenation(long arg0);

	// WidowControl:   [dispid 114]
	long WidowControl();

	// WidowControl:   [dispid 114]
	void WidowControl(long arg0);

	// FarEastLineBreakControl:   [dispid 117]
	long FarEastLineBreakControl();

	// FarEastLineBreakControl:   [dispid 117]
	void FarEastLineBreakControl(long arg0);

	// WordWrap:   [dispid 118]
	long WordWrap();

	// WordWrap:   [dispid 118]
	void WordWrap(long arg0);

	// HangingPunctuation:   [dispid 119]
	long HangingPunctuation();

	// HangingPunctuation:   [dispid 119]
	void HangingPunctuation(long arg0);

	// HalfWidthPunctuationOnTopOfLine:   [dispid 120]
	long HalfWidthPunctuationOnTopOfLine();

	// HalfWidthPunctuationOnTopOfLine:   [dispid 120]
	void HalfWidthPunctuationOnTopOfLine(long arg0);

	// AddSpaceBetweenFarEastAndAlpha:   [dispid 121]
	long AddSpaceBetweenFarEastAndAlpha();

	// AddSpaceBetweenFarEastAndAlpha:   [dispid 121]
	void AddSpaceBetweenFarEastAndAlpha(long arg0);

	// AddSpaceBetweenFarEastAndDigit:   [dispid 122]
	long AddSpaceBetweenFarEastAndDigit();

	// AddSpaceBetweenFarEastAndDigit:   [dispid 122]
	void AddSpaceBetweenFarEastAndDigit(long arg0);

	// BaseLineAlignment:   [dispid 123]
	WdBaselineAlignment BaseLineAlignment();

	// BaseLineAlignment:   [dispid 123]
	void BaseLineAlignment(WdBaselineAlignment arg0);

	// AutoAdjustRightIndent:   [dispid 124]
	long AutoAdjustRightIndent();

	// AutoAdjustRightIndent:   [dispid 124]
	void AutoAdjustRightIndent(long arg0);

	// DisableLineHeightGrid:   [dispid 125]
	long DisableLineHeightGrid();

	// DisableLineHeightGrid:   [dispid 125]
	void DisableLineHeightGrid(long arg0);

	// _TabStops:   [dispid 1103]
	void _TabStops(TTabStopsProxy& Obj);

	// _TabStops:   [dispid 1103]
	void _TabStops(TabStops* arg0);

	// _Borders:   [dispid 1100]
	void _Borders(TBordersProxy& Obj);

	// _Borders:   [dispid 1100]
	void _Borders(Borders* arg0);

	// _Shading:   [dispid 1101]
	void _Shading(TShadingProxy& Obj);

	// OutlineLevel:   [dispid 202]
	WdOutlineLevel OutlineLevel();

	// OutlineLevel:   [dispid 202]
	void OutlineLevel(WdOutlineLevel arg0);

	// CloseUp:   [dispid 301]
	void CloseUp();

	// OpenUp:   [dispid 302]
	void OpenUp();

	// OpenOrCloseUp:   [dispid 303]
	void OpenOrCloseUp();

	// TabHangingIndent:   [dispid 304]
	void TabHangingIndent(short Count);

	// TabIndent:   [dispid 306]
	void TabIndent(short Count);

	// Reset:   [dispid 312]
	void Reset();

	// Space1:   [dispid 313]
	void Space1();

	// Space15:   [dispid 314]
	void Space15();

	// Space2:   [dispid 315]
	void Space2();

	// IndentCharWidth:   [dispid 320]
	void IndentCharWidth(short Count);

	// IndentFirstLineCharWidth:   [dispid 322]
	void IndentFirstLineCharWidth(short Count);

	// CharacterUnitRightIndent:   [dispid 126]
	float CharacterUnitRightIndent();

	// CharacterUnitRightIndent:   [dispid 126]
	void CharacterUnitRightIndent(float arg0);

	// CharacterUnitLeftIndent:   [dispid 127]
	float CharacterUnitLeftIndent();

	// CharacterUnitLeftIndent:   [dispid 127]
	void CharacterUnitLeftIndent(float arg0);

	// CharacterUnitFirstLineIndent:   [dispid 128]
	float CharacterUnitFirstLineIndent();

	// CharacterUnitFirstLineIndent:   [dispid 128]
	void CharacterUnitFirstLineIndent(float arg0);

	// LineUnitBefore:   [dispid 129]
	float LineUnitBefore();

	// LineUnitBefore:   [dispid 129]
	void LineUnitBefore(float arg0);

	// LineUnitAfter:   [dispid 130]
	float LineUnitAfter();

	// LineUnitAfter:   [dispid 130]
	void LineUnitAfter(float arg0);

	// ReadingOrder:   [dispid 131]
	WdReadingOrder ReadingOrder();

	// ReadingOrder:   [dispid 131]
	void ReadingOrder(WdReadingOrder arg0);

	// SpaceBeforeAuto:   [dispid 132]
	long SpaceBeforeAuto();

	// SpaceBeforeAuto:   [dispid 132]
	void SpaceBeforeAuto(long arg0);

	// SpaceAfterAuto:   [dispid 133]
	long SpaceAfterAuto();

	// SpaceAfterAuto:   [dispid 133]
	void SpaceAfterAuto(long arg0);
};
#endif

// _OLEControl
// {000209A4-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE _OLEControl
DECLARE_INTERFACE_(_OLEControl, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// _OLEControl methods:
	STDMETHOD_(HRESULT, Get_Left) (THIS_ float* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Left) (THIS_ float prop) PURE; 
	STDMETHOD_(HRESULT, Get_Top) (THIS_ float* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Top) (THIS_ float prop) PURE; 
	STDMETHOD_(HRESULT, Get_Height) (THIS_ float* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Height) (THIS_ float prop) PURE; 
	STDMETHOD_(HRESULT, Get_Width) (THIS_ float* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Width) (THIS_ float prop) PURE; 
	STDMETHOD_(HRESULT, Get_Name) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Name) (THIS_ BSTR prop) PURE; 
	STDMETHOD_(HRESULT, Get_Automation) (THIS_ IDispatch** prop) PURE;
	STDMETHOD_(HRESULT, Select) (THIS ) PURE; 
	STDMETHOD_(HRESULT, Copy) (THIS ) PURE; 
	STDMETHOD_(HRESULT, Cut) (THIS ) PURE; 
	STDMETHOD_(HRESULT, Delete) (THIS ) PURE; 
	STDMETHOD_(HRESULT, Activate) (THIS ) PURE; 
	STDMETHOD_(HRESULT, Get_AltHTML) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Set_AltHTML) (THIS_ BSTR prop) PURE; 
};
typedef _OLEControl* LPOLEWORDCONTROL;
#ifdef __cplusplus
// _OLEControl  {000209A4-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FHIDDEN TYPEFLAG_FDUAL TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS T_OLEControlProxy : public __OCF TAutoProxy
{
public:
	T_OLEControlProxy() : TAutoProxy(0x0) {}

	// Left:   [dispid -2147417853]
	float Left();

	// Left:   [dispid -2147417853]
	void Left(float arg0);

	// Top:   [dispid -2147417852]
	float Top();

	// Top:   [dispid -2147417852]
	void Top(float arg0);

	// Height:   [dispid -2147417851]
	float Height();

	// Height:   [dispid -2147417851]
	void Height(float arg0);

	// Width:   [dispid -2147417850]
	float Width();

	// Width:   [dispid -2147417850]
	void Width(float arg0);

	// Name:   [dispid -2147418112]
	__OCF TAutoString Name();

	// Name:   [dispid -2147418112]
	void Name(__OCF TAutoString arg0);

	// Automation:   [dispid -2147417849]
	IDispatch* Automation();

	// Select:   [dispid -2147417568]
	void Select();

	// Copy:   [dispid -2147417560]
	void Copy();

	// Cut:   [dispid -2147417559]
	void Cut();

	// Delete:   [dispid -2147417520]
	void Delete();

	// Activate:   [dispid -2147417519]
	void Activate();

	// AltHTML:   [dispid -2147415101]
	__OCF TAutoString AltHTML();

	// AltHTML:   [dispid -2147415101]
	void AltHTML(__OCF TAutoString arg0);
};
#endif

// WdSalutationGender
typedef enum tagWdSalutationGender
{
	wdGenderFemale = 0, 
	wdGenderMale = 1, 
	wdGenderNeutral = 2, 
	wdGenderUnknown = 3, 
} WdSalutationGender;

// _LetterContent
// {000209A1-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE _LetterContent
DECLARE_INTERFACE_(_LetterContent, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// _LetterContent methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE;
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Duplicate) (THIS_ LetterContent** prop) PURE; 
	STDMETHOD_(HRESULT, Get_DateFormat) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Set_DateFormat) (THIS_ BSTR prop) PURE; 
	STDMETHOD_(HRESULT, Get_IncludeHeaderFooter) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_IncludeHeaderFooter) (THIS_ VARIANT_BOOL prop) PURE;
	STDMETHOD_(HRESULT, Get_PageDesign) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Set_PageDesign) (THIS_ BSTR prop) PURE; 
	STDMETHOD_(HRESULT, Get_LetterStyle) (THIS_ WdLetterStyle* prop) PURE; 
	STDMETHOD_(HRESULT, Set_LetterStyle) (THIS_ WdLetterStyle prop) PURE; 
	STDMETHOD_(HRESULT, Get_Letterhead) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Letterhead) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_LetterheadLocation) (THIS_ WdLetterheadLocation* prop) PURE; 
	STDMETHOD_(HRESULT, Set_LetterheadLocation) (THIS_ WdLetterheadLocation prop) PURE; 
	STDMETHOD_(HRESULT, Get_LetterheadSize) (THIS_ float* prop) PURE; 
	STDMETHOD_(HRESULT, Set_LetterheadSize) (THIS_ float prop) PURE; 
	STDMETHOD_(HRESULT, Get_RecipientName) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Set_RecipientName) (THIS_ BSTR prop) PURE; 
	STDMETHOD_(HRESULT, Get_RecipientAddress) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Set_RecipientAddress) (THIS_ BSTR prop) PURE; 
	STDMETHOD_(HRESULT, Get_Salutation) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Salutation) (THIS_ BSTR prop) PURE; 
	STDMETHOD_(HRESULT, Get_SalutationType) (THIS_ WdSalutationType* prop) PURE; 
	STDMETHOD_(HRESULT, Set_SalutationType) (THIS_ WdSalutationType prop) PURE; 
	STDMETHOD_(HRESULT, Get_RecipientReference) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Set_RecipientReference) (THIS_ BSTR prop) PURE; 
	STDMETHOD_(HRESULT, Get_MailingInstructions) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Set_MailingInstructions) (THIS_ BSTR prop) PURE; 
	STDMETHOD_(HRESULT, Get_AttentionLine) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Set_AttentionLine) (THIS_ BSTR prop) PURE; 
	STDMETHOD_(HRESULT, Get_Subject) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Subject) (THIS_ BSTR prop) PURE; 
	STDMETHOD_(HRESULT, Get_EnclosureNumber) (THIS_ long* prop) PURE;
	STDMETHOD_(HRESULT, Set_EnclosureNumber) (THIS_ long prop) PURE; 
	STDMETHOD_(HRESULT, Get_CCList) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Set_CCList) (THIS_ BSTR prop) PURE; 
	STDMETHOD_(HRESULT, Get_ReturnAddress) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Set_ReturnAddress) (THIS_ BSTR prop) PURE; 
	STDMETHOD_(HRESULT, Get_SenderName) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Set_SenderName) (THIS_ BSTR prop) PURE; 
	STDMETHOD_(HRESULT, Get_Closing) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Closing) (THIS_ BSTR prop) PURE; 
	STDMETHOD_(HRESULT, Get_SenderCompany) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Set_SenderCompany) (THIS_ BSTR prop) PURE; 
	STDMETHOD_(HRESULT, Get_SenderJobTitle) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Set_SenderJobTitle) (THIS_ BSTR prop) PURE; 
	STDMETHOD_(HRESULT, Get_SenderInitials) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Set_SenderInitials) (THIS_ BSTR prop) PURE; 
	STDMETHOD_(HRESULT, Get_InfoBlock) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_InfoBlock) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_RecipientCode) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Set_RecipientCode) (THIS_ BSTR prop) PURE; 
	STDMETHOD_(HRESULT, Get_RecipientGender) (THIS_ WdSalutationGender* prop) PURE; 
	STDMETHOD_(HRESULT, Set_RecipientGender) (THIS_ WdSalutationGender prop) PURE; 
	STDMETHOD_(HRESULT, Get_ReturnAddressShortForm) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Set_ReturnAddressShortForm) (THIS_ BSTR prop) PURE; 
	STDMETHOD_(HRESULT, Get_SenderCity) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Set_SenderCity) (THIS_ BSTR prop) PURE; 
	STDMETHOD_(HRESULT, Get_SenderCode) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Set_SenderCode) (THIS_ BSTR prop) PURE;
	STDMETHOD_(HRESULT, Get_SenderGender) (THIS_ WdSalutationGender* prop) PURE; 
	STDMETHOD_(HRESULT, Set_SenderGender) (THIS_ WdSalutationGender prop) PURE; 
	STDMETHOD_(HRESULT, Get_SenderReference) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Set_SenderReference) (THIS_ BSTR prop) PURE; 
};
typedef _LetterContent* LPLETTERCONTENT;
#ifdef __cplusplus
// _LetterContent  {000209A1-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FHIDDEN TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS T_LetterContentProxy : public __OCF TAutoProxy
{
public:
	T_LetterContentProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// Duplicate:   [dispid 10]
	LetterContent* Duplicate();

	// DateFormat:   [dispid 101]
	__OCF TAutoString DateFormat();

	// DateFormat:   [dispid 101]
	void DateFormat(__OCF TAutoString arg0);

	// IncludeHeaderFooter:   [dispid 102]
	/*__OWL*/ TBool IncludeHeaderFooter();

	// IncludeHeaderFooter:   [dispid 102]
	void IncludeHeaderFooter(/*__OWL*/ TBool arg0);

	// PageDesign:   [dispid 103]
	__OCF TAutoString PageDesign();

	// PageDesign:   [dispid 103]
	void PageDesign(__OCF TAutoString arg0);

	// LetterStyle:   [dispid 104]
	WdLetterStyle LetterStyle();

	// LetterStyle:   [dispid 104]
	void LetterStyle(WdLetterStyle arg0);

	// Letterhead:   [dispid 105]
	/*__OWL*/ TBool Letterhead();

	// Letterhead:   [dispid 105]
	void Letterhead(/*__OWL*/ TBool arg0);

	// LetterheadLocation:   [dispid 106]
	WdLetterheadLocation LetterheadLocation();

	// LetterheadLocation:   [dispid 106]
	void LetterheadLocation(WdLetterheadLocation arg0);

	// LetterheadSize:   [dispid 107]
	float LetterheadSize();

	// LetterheadSize:   [dispid 107]
	void LetterheadSize(float arg0);

	// RecipientName:   [dispid 108]
	__OCF TAutoString RecipientName();

	// RecipientName:   [dispid 108]
	void RecipientName(__OCF TAutoString arg0);

	// RecipientAddress:   [dispid 109]
	__OCF TAutoString RecipientAddress();

	// RecipientAddress:   [dispid 109]
	void RecipientAddress(__OCF TAutoString arg0);

	// Salutation:   [dispid 110]
	__OCF TAutoString Salutation();

	// Salutation:   [dispid 110]
	void Salutation(__OCF TAutoString arg0);

	// SalutationType:   [dispid 111]
	WdSalutationType SalutationType();

	// SalutationType:   [dispid 111]
	void SalutationType(WdSalutationType arg0);

	// RecipientReference:   [dispid 112]
	__OCF TAutoString RecipientReference();

	// RecipientReference:   [dispid 112]
	void RecipientReference(__OCF TAutoString arg0);

	// MailingInstructions:   [dispid 114]
	__OCF TAutoString MailingInstructions();

	// MailingInstructions:   [dispid 114]
	void MailingInstructions(__OCF TAutoString arg0);

	// AttentionLine:   [dispid 115]
	__OCF TAutoString AttentionLine();

	// AttentionLine:   [dispid 115]
	void AttentionLine(__OCF TAutoString arg0);

	// Subject:   [dispid 116]
	__OCF TAutoString Subject();

	// Subject:   [dispid 116]
	void Subject(__OCF TAutoString arg0);

	// EnclosureNumber:   [dispid 117]
	long EnclosureNumber();

	// EnclosureNumber:   [dispid 117]
	void EnclosureNumber(long arg0);

	// CCList:   [dispid 118]
	__OCF TAutoString CCList();

	// CCList:   [dispid 118]
	void CCList(__OCF TAutoString arg0);

	// ReturnAddress:   [dispid 119]
	__OCF TAutoString ReturnAddress();

	// ReturnAddress:   [dispid 119]
	void ReturnAddress(__OCF TAutoString arg0);

	// SenderName:   [dispid 120]
	__OCF TAutoString SenderName();

	// SenderName:   [dispid 120]
	void SenderName(__OCF TAutoString arg0);

	// Closing:   [dispid 121]
	__OCF TAutoString Closing();

	// Closing:   [dispid 121]
	void Closing(__OCF TAutoString arg0);

	// SenderCompany:   [dispid 122]
	__OCF TAutoString SenderCompany();

	// SenderCompany:   [dispid 122]
	void SenderCompany(__OCF TAutoString arg0);

	// SenderJobTitle:   [dispid 123]
	__OCF TAutoString SenderJobTitle();

	// SenderJobTitle:   [dispid 123]
	void SenderJobTitle(__OCF TAutoString arg0);

	// SenderInitials:   [dispid 124]
	__OCF TAutoString SenderInitials();

	// SenderInitials:   [dispid 124]
	void SenderInitials(__OCF TAutoString arg0);

	// InfoBlock:   [dispid 125]
	/*__OWL*/ TBool InfoBlock();

	// InfoBlock:   [dispid 125]
	void InfoBlock(/*__OWL*/ TBool arg0);

	// RecipientCode:   [dispid 126]
	__OCF TAutoString RecipientCode();

	// RecipientCode:   [dispid 126]
	void RecipientCode(__OCF TAutoString arg0);

	// RecipientGender:   [dispid 127]
	WdSalutationGender RecipientGender();

	// RecipientGender:   [dispid 127]
	void RecipientGender(WdSalutationGender arg0);

	// ReturnAddressShortForm:   [dispid 128]
	__OCF TAutoString ReturnAddressShortForm();

	// ReturnAddressShortForm:   [dispid 128]
	void ReturnAddressShortForm(__OCF TAutoString arg0);

	// SenderCity:   [dispid 129]
	__OCF TAutoString SenderCity();

	// SenderCity:   [dispid 129]
	void SenderCity(__OCF TAutoString arg0);

	// SenderCode:   [dispid 130]
	__OCF TAutoString SenderCode();

	// SenderCode:   [dispid 130]
	void SenderCode(__OCF TAutoString arg0);

	// SenderGender:   [dispid 131]
	WdSalutationGender SenderGender();

	// SenderGender:   [dispid 131]
	void SenderGender(WdSalutationGender arg0);

	// SenderReference:   [dispid 132]
	__OCF TAutoString SenderReference();

	// SenderReference:   [dispid 132]
	void SenderReference(__OCF TAutoString arg0);
};
#endif

// _IMsoDispObj
// {000C0300-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE _IMsoDispObj
DECLARE_INTERFACE_(_IMsoDispObj, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// _IMsoDispObj methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ IDispatch** ppidisp) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* plCreator) PURE; 
};
typedef _IMsoDispObj* LPIMSODISPOBJ;
// MsoMenuAnimation
typedef enum tagMsoMenuAnimation
{
	msoMenuAnimationNone = 0, 
	msoMenuAnimationRandom = 1, 
	msoMenuAnimationUnfold = 2, 
	msoMenuAnimationSlide = 3,
} MsoMenuAnimation;

// _CommandBars
// {000C0302-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE _CommandBars
DECLARE_INTERFACE_(_CommandBars, _IMsoDispObj)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
	// _IMsoDispObj methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ IDispatch** ppidisp) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* plCreator) PURE; 
#endif
	// _CommandBars methods:
	STDMETHOD_(HRESULT, Get_ActionControl) (THIS_ CommandBarControl** ppcbc) PURE; 
	STDMETHOD_(HRESULT, Get_ActiveMenuBar) (THIS_ CommandBar** ppcb) PURE; 
	STDMETHOD_(HRESULT, Add) (THIS_ VARIANT Name, VARIANT Position, VARIANT MenuBar, VARIANT Temporary, CommandBar** ppcb) PURE; 
	STDMETHOD_(HRESULT, Get_Count) (THIS_ int* pcToolbars) PURE;
	STDMETHOD_(HRESULT, Get_DisplayTooltips) (THIS_ VARIANT_BOOL* pvarfDisplayTooltips) PURE; 
	STDMETHOD_(HRESULT, Set_DisplayTooltips) (THIS_ VARIANT_BOOL pvarfDisplayTooltips) PURE; 
	STDMETHOD_(HRESULT, Get_DisplayKeysInTooltips) (THIS_ VARIANT_BOOL* pvarfDisplayKeys) PURE; 
	STDMETHOD_(HRESULT, Set_DisplayKeysInTooltips) (THIS_ VARIANT_BOOL pvarfDisplayKeys) PURE; 
	STDMETHOD_(HRESULT, FindControl) (THIS_ VARIANT Type, VARIANT Id, VARIANT Tag, VARIANT Visible, CommandBarControl** ppcbc) PURE; 
	STDMETHOD_(HRESULT, Get_Item) (THIS_ VARIANT Index, CommandBar** ppcb) PURE; 
	STDMETHOD_(HRESULT, Get_LargeButtons) (THIS_ VARIANT_BOOL* pvarfLargeButtons) PURE; 
	STDMETHOD_(HRESULT, Set_LargeButtons) (THIS_ VARIANT_BOOL pvarfLargeButtons) PURE; 
	STDMETHOD_(HRESULT, Get_MenuAnimationStyle) (THIS_ MsoMenuAnimation* pma) PURE; 
	STDMETHOD_(HRESULT, Set_MenuAnimationStyle) (THIS_ MsoMenuAnimation pma) PURE; 
	STDMETHOD_(HRESULT, Get__NewEnum) (THIS_ IUnknown** ppienum) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** ppidisp) PURE; 
	STDMETHOD_(HRESULT, ReleaseFocus) (THIS ) PURE; 
	STDMETHOD_(HRESULT, Get_IdsString) (THIS_ int ids, BSTR* pbstrName, int* pcch) PURE; 
	STDMETHOD_(HRESULT, Get_TmcGetName) (THIS_ int tmc, BSTR* pbstrName, int* pcch) PURE; 
	STDMETHOD_(HRESULT, Get_AdaptiveMenus) (THIS_ VARIANT_BOOL* pvarfAdaptiveMenus) PURE; 
	STDMETHOD_(HRESULT, Set_AdaptiveMenus) (THIS_ VARIANT_BOOL pvarfAdaptiveMenus) PURE; 
	STDMETHOD_(HRESULT, FindControls) (THIS_ VARIANT Type, VARIANT Id, VARIANT Tag, VARIANT Visible, CommandBarControls** ppcbcs) PURE; 
	STDMETHOD_(HRESULT, AddEx) (THIS_ VARIANT TbidOrName, VARIANT Position, VARIANT MenuBar, VARIANT Temporary, VARIANT TbtrProtection, CommandBar** ppcb) PURE; 
	STDMETHOD_(HRESULT, Get_DisplayFonts) (THIS_ VARIANT_BOOL* pvarfDisplayFonts) PURE; 
	STDMETHOD_(HRESULT, Set_DisplayFonts) (THIS_ VARIANT_BOOL pvarfDisplayFonts) PURE; 
	STDMETHOD_(HRESULT, Get_DisableCustomize) (THIS_ VARIANT_BOOL* pvarfDisableCustomize) PURE; 
	STDMETHOD_(HRESULT, Set_DisableCustomize) (THIS_ VARIANT_BOOL pvarfDisableCustomize) PURE; 
	STDMETHOD_(HRESULT, Get_DisableAskAQuestionDropdown) (THIS_ VARIANT_BOOL* pvarfDisableAskAQuestionDropdown) PURE; 
	STDMETHOD_(HRESULT, Set_DisableAskAQuestionDropdown) (THIS_ VARIANT_BOOL pvarfDisableAskAQuestionDropdown) PURE; 
};
typedef _CommandBars* LPCOMMANDBARS;
#ifdef __cplusplus
// _CommandBars  {000C0302-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS T_CommandBarsProxy : public __OCF TAutoProxy
{
public:
	T_CommandBarsProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1610743808]
	IDispatch* _Application();

	// Creator:   [dispid 1610743809]
	long Creator();

	// ActionControl:   [dispid 1610809344]
	void ActionControl(TCommandBarControlProxy& Obj);

	// ActiveMenuBar:   [dispid 1610809345]
	void ActiveMenuBar(TCommandBarProxy& Obj);

	// Add:   [dispid 1610809346]
	void Add(TCommandBarProxy& Obj, __OCF TAutoVal Name = __OCF TNoArg(), __OCF TAutoVal Position = __OCF TNoArg(), __OCF TAutoVal MenuBar = __OCF TNoArg(), __OCF TAutoVal Temporary = __OCF TNoArg());

	// Count:   [dispid 1610809347]
	int Count();

	// DisplayTooltips:   [dispid 1610809348]
	/*__OWL*/ TBool DisplayTooltips();

	// DisplayTooltips:   [dispid 1610809348]
	void DisplayTooltips(/*__OWL*/ TBool arg0);

	// DisplayKeysInTooltips:   [dispid 1610809350]
	/*__OWL*/ TBool DisplayKeysInTooltips();

	// DisplayKeysInTooltips:   [dispid 1610809350]
	void DisplayKeysInTooltips(/*__OWL*/ TBool arg0);

	// FindControl:   [dispid 1610809352]
	void FindControl(TCommandBarControlProxy& Obj, __OCF TAutoVal Type = __OCF TNoArg(), __OCF TAutoVal Id = __OCF TNoArg(), __OCF TAutoVal Tag = __OCF TNoArg(), __OCF TAutoVal Visible = __OCF TNoArg());

	// Item:   [dispid 0]
	void Item(TCommandBarProxy& Obj, __OCF TAutoVal Index);

	// LargeButtons:   [dispid 1610809354]
	/*__OWL*/ TBool LargeButtons();

	// LargeButtons:   [dispid 1610809354]
	void LargeButtons(/*__OWL*/ TBool arg0);

	// MenuAnimationStyle:   [dispid 1610809356]
	MsoMenuAnimation MenuAnimationStyle();

	// MenuAnimationStyle:   [dispid 1610809356]
	void MenuAnimationStyle(MsoMenuAnimation arg0);

	// _NewEnum:   [dispid -4]
	void _NewEnum(__OCF TAutoEnumerator<IUnknown*>& Obj);

	// Parent:   [dispid 1610809359]
	IDispatch* Parent();

	// ReleaseFocus:   [dispid 1610809360]
	void ReleaseFocus();

	// IdsString:   [dispid 1610809361]
	int IdsString(int ids, BSTR* pbstrName);

	// TmcGetName:   [dispid 1610809362]
	int TmcGetName(int tmc, BSTR* pbstrName);

	// AdaptiveMenus:   [dispid 1610809363]
	/*__OWL*/ TBool AdaptiveMenus();

	// AdaptiveMenus:   [dispid 1610809363]
	void AdaptiveMenus(/*__OWL*/ TBool arg0);

	// FindControls:   [dispid 1610809365]
	void FindControls(TCommandBarControlsProxy& Obj, __OCF TAutoVal Type = __OCF TNoArg(), __OCF TAutoVal Id = __OCF TNoArg(), __OCF TAutoVal Tag = __OCF TNoArg(), __OCF TAutoVal Visible = __OCF TNoArg());

	// AddEx:   [dispid 1610809366]
	void AddEx(TCommandBarProxy& Obj, __OCF TAutoVal TbidOrName = __OCF TNoArg(), __OCF TAutoVal Position = __OCF TNoArg(), __OCF TAutoVal MenuBar = __OCF TNoArg(), __OCF TAutoVal Temporary = __OCF TNoArg(), __OCF TAutoVal TbtrProtection = __OCF TNoArg());

	// DisplayFonts:   [dispid 1610809367]
	/*__OWL*/ TBool DisplayFonts();

	// DisplayFonts:   [dispid 1610809367]
	void DisplayFonts(/*__OWL*/ TBool arg0);

	// DisableCustomize:   [dispid 1610809369]
	/*__OWL*/ TBool DisableCustomize();

	// DisableCustomize:   [dispid 1610809369]
	void DisableCustomize(/*__OWL*/ TBool arg0);

	// DisableAskAQuestionDropdown:   [dispid 1610809371]
	/*__OWL*/ TBool DisableAskAQuestionDropdown();

	// DisableAskAQuestionDropdown:   [dispid 1610809371]
	void DisableAskAQuestionDropdown(/*__OWL*/ TBool arg0);
};
#endif

// IMsoEnvelopeVB
// {000672AC-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE IMsoEnvelopeVB
DECLARE_INTERFACE_(IMsoEnvelopeVB, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// IMsoEnvelopeVB methods:
	STDMETHOD_(HRESULT, Get_Introduction) (THIS_ BSTR* pbstrIntro) PURE; 
	STDMETHOD_(HRESULT, Set_Introduction) (THIS_ BSTR pbstrIntro) PURE; 
	STDMETHOD_(HRESULT, Get_Item) (THIS_ IDispatch** ppdisp) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** ppdisp) PURE; 
	STDMETHOD_(HRESULT, Get_CommandBars) (THIS_ IDispatch** ppdisp) PURE; 
};
typedef IMsoEnvelopeVB* LPMSOENVELOPEVB;
#ifdef __cplusplus
// IMsoEnvelopeVB  {000672AC-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FHIDDEN TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TIMsoEnvelopeVBProxy : public __OCF TAutoProxy
{
public:
	TIMsoEnvelopeVBProxy() : TAutoProxy(0x0) {}

	// Introduction:   [dispid 1]
	__OCF TAutoString Introduction();

	// Introduction:   [dispid 1]
	void Introduction(__OCF TAutoString arg0);

	// Item:   [dispid 2]
	IDispatch* Item();

	// Parent:   [dispid 3]
	IDispatch* Parent();

	// _CommandBars:   [dispid 4]
	IDispatch* _CommandBars();
};
#endif

// _ProjectTemplate
// {0002E159-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE _ProjectTemplate
DECLARE_INTERFACE_(_ProjectTemplate, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE;
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// _ProjectTemplate methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** lppaReturn) PURE;
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ WordApplication** lppaReturn) PURE;
};
typedef _ProjectTemplate* LPPROJECTTEMPLATE;
// vbext_VBAMode
typedef enum tagvbext_VBAMode
{
	vbext_vm_Run = 0, 
	vbext_vm_Break = 1, 
	vbext_vm_Design = 2, 
} vbext_VBAMode;

// vbext_ProjectProtection
typedef enum tagvbext_ProjectProtection
{
	vbext_pp_none = 0, 
	vbext_pp_locked = 1, 
} vbext_ProjectProtection;

// _VBProject_Old
// {0002E160-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE _VBProject_Old
DECLARE_INTERFACE_(_VBProject_Old, _ProjectTemplate)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
	// _ProjectTemplate methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** lppaReturn) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ WordApplication** lppaReturn) PURE; 
#endif
	// _VBProject_Old methods:
	STDMETHOD_(HRESULT, Get_HelpFile) (THIS_ BSTR* lpbstrHelpFile) PURE; 
	STDMETHOD_(HRESULT, Set_HelpFile) (THIS_ BSTR lpbstrHelpFile) PURE; 
	STDMETHOD_(HRESULT, Get_HelpContextID) (THIS_ long* lpdwContextID) PURE; 
	STDMETHOD_(HRESULT, Set_HelpContextID) (THIS_ long lpdwContextID) PURE; 
	STDMETHOD_(HRESULT, Get_Description) (THIS_ BSTR* lpbstrDescription) PURE;
	STDMETHOD_(HRESULT, Set_Description) (THIS_ BSTR lpbstrDescription) PURE; 
	STDMETHOD_(HRESULT, Get_Mode) (THIS_ vbext_VBAMode* lpVbaMode) PURE; 
	STDMETHOD_(HRESULT, Get_References) (THIS_ References** lppReferences) PURE; 
	STDMETHOD_(HRESULT, Get_Name) (THIS_ BSTR* lpbstrName) PURE; 
	STDMETHOD_(HRESULT, Set_Name) (THIS_ BSTR lpbstrName) PURE; 
	STDMETHOD_(HRESULT, Get_VBE) (THIS_ VBE** lppaReturn) PURE; 
	STDMETHOD_(HRESULT, Get_Collection) (THIS_ VBProjects** lppaReturn) PURE; 
	STDMETHOD_(HRESULT, Get_Protection) (THIS_ vbext_ProjectProtection* lpProtection) PURE; 
	STDMETHOD_(HRESULT, Get_Saved) (THIS_ VARIANT_BOOL* lpfReturn) PURE; 
	STDMETHOD_(HRESULT, Get_VBComponents) (THIS_ VBComponents** lppcReturn) PURE; 
};
typedef _VBProject_Old* LPVBPROJECT_OLD;
// vbext_ProjectType
typedef enum tagvbext_ProjectType
{
	vbext_pt_HostProject = 100, 
	vbext_pt_StandAlone = 101, 
} vbext_ProjectType;

// _VBProject
// {EEE00915-E393-11D1-BB03-00C04FB6C4A6}
#undef INTERFACE
#define INTERFACE _VBProject
DECLARE_INTERFACE_(_VBProject, _VBProject_Old)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE;
	// _ProjectTemplate methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** lppaReturn) PURE;
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ WordApplication** lppaReturn) PURE; 
	// _VBProject_Old methods:
	STDMETHOD_(HRESULT, Get_HelpFile) (THIS_ BSTR* lpbstrHelpFile) PURE; 
	STDMETHOD_(HRESULT, Set_HelpFile) (THIS_ BSTR lpbstrHelpFile) PURE; 
	STDMETHOD_(HRESULT, Get_HelpContextID) (THIS_ long* lpdwContextID) PURE; 
	STDMETHOD_(HRESULT, Set_HelpContextID) (THIS_ long lpdwContextID) PURE; 
	STDMETHOD_(HRESULT, Get_Description) (THIS_ BSTR* lpbstrDescription) PURE; 
	STDMETHOD_(HRESULT, Set_Description) (THIS_ BSTR lpbstrDescription) PURE; 
	STDMETHOD_(HRESULT, Get_Mode) (THIS_ vbext_VBAMode* lpVbaMode) PURE; 
	STDMETHOD_(HRESULT, Get_References) (THIS_ References** lppReferences) PURE; 
	STDMETHOD_(HRESULT, Get_Name) (THIS_ BSTR* lpbstrName) PURE; 
	STDMETHOD_(HRESULT, Set_Name) (THIS_ BSTR lpbstrName) PURE; 
	STDMETHOD_(HRESULT, Get_VBE) (THIS_ VBE** lppaReturn) PURE; 
	STDMETHOD_(HRESULT, Get_Collection) (THIS_ VBProjects** lppaReturn) PURE; 
	STDMETHOD_(HRESULT, Get_Protection) (THIS_ vbext_ProjectProtection* lpProtection) PURE; 
	STDMETHOD_(HRESULT, Get_Saved) (THIS_ VARIANT_BOOL* lpfReturn) PURE; 
	STDMETHOD_(HRESULT, Get_VBComponents) (THIS_ VBComponents** lppcReturn) PURE;
#endif
	// _VBProject methods:
	STDMETHOD_(HRESULT, SaveAs) (THIS_ BSTR FileName) PURE; 
	STDMETHOD_(HRESULT, MakeCompiledFile) (THIS ) PURE; 
	STDMETHOD_(HRESULT, Get_Type) (THIS_ vbext_ProjectType* lpkind) PURE; 
	STDMETHOD_(HRESULT, Get_FileName) (THIS_ BSTR* lpbstrReturn) PURE; 
	STDMETHOD_(HRESULT, Get_BuildFileName) (THIS_ BSTR* lpbstrBldFName) PURE; 
	STDMETHOD_(HRESULT, Set_BuildFileName) (THIS_ BSTR lpbstrBldFName) PURE; 
};
typedef _VBProject* LPVBPROJECT;
#ifdef __cplusplus
// _VBProject  {EEE00915-E393-11D1-BB03-00C04FB6C4A6}
//  [flags: TYPEFLAG_FHIDDEN TYPEFLAG_FDUAL TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS T_VBProjectProxy : public __OCF TAutoProxy
{
public:
	T_VBProjectProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1]
	void _Application(T_ApplicationProxy& Obj);

	// Parent:   [dispid 2]
	void Parent(T_ApplicationProxy& Obj);

	// HelpFile:   [dispid 116]
	__OCF TAutoString HelpFile();

	// HelpFile:   [dispid 116]
	void HelpFile(__OCF TAutoString arg0);

	// HelpContextID:   [dispid 117]
	long HelpContextID();

	// HelpContextID:   [dispid 117]
	void HelpContextID(long arg0);

	// Description:   [dispid 118]
	__OCF TAutoString Description();

	// Description:   [dispid 118]
	void Description(__OCF TAutoString arg0);

	// Mode:   [dispid 119]
	vbext_VBAMode Mode();

	// _References:   [dispid 120]
	References* _References();

	// Name:   [dispid 121]
	__OCF TAutoString Name();

	// Name:   [dispid 121]
	void Name(__OCF TAutoString arg0);

	// _VBE:   [dispid 122]
	void _VBE(TVBEProxy& Obj);

	// Collection:   [dispid 123]
	VBProjects* Collection();

	// Protection:   [dispid 131]
	vbext_ProjectProtection Protection();

	// Saved:   [dispid 133]
	/*__OWL*/ TBool Saved();

	// _VBComponents:   [dispid 135]
	VBComponents* _VBComponents();

	// SaveAs:   [dispid 138]
	void SaveAs(__OCF TAutoString FileName);

	// MakeCompiledFile:   [dispid 139]
	void MakeCompiledFile();

	// Type:   [dispid 140]
	vbext_ProjectType Type();

	// FileName:   [dispid 141]
	__OCF TAutoString FileName();

	// BuildFileName:   [dispid 142]
	__OCF TAutoString BuildFileName();

	// BuildFileName:   [dispid 142]
	void BuildFileName(__OCF TAutoString arg0);
};
#endif

// _VBProjects_Old
// {0002E165-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE _VBProjects_Old
DECLARE_INTERFACE_(_VBProjects_Old, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// _VBProjects_Old methods:
	STDMETHOD_(HRESULT, Item) (THIS_ VARIANT index, VBProject** lppcReturn) PURE;
	STDMETHOD_(HRESULT, Get_VBE) (THIS_ VBE** lppaReturn) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ VBE** lppaReturn) PURE; 
	STDMETHOD_(HRESULT, Get_Count) (THIS_ long* lplReturn) PURE; 
	STDMETHOD_(HRESULT, _NewEnum) (THIS_ IUnknown** lppiuReturn) PURE; 
};
typedef _VBProjects_Old* LPVBPROJECTS_OLD;
// _VBProjects
// {EEE00919-E393-11D1-BB03-00C04FB6C4A6}
#undef INTERFACE
#define INTERFACE _VBProjects
DECLARE_INTERFACE_(_VBProjects, _VBProjects_Old)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
	// _VBProjects_Old methods:
	STDMETHOD_(HRESULT, Item) (THIS_ VARIANT index, VBProject** lppcReturn) PURE; 
	STDMETHOD_(HRESULT, Get_VBE) (THIS_ VBE** lppaReturn) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ VBE** lppaReturn) PURE; 
	STDMETHOD_(HRESULT, Get_Count) (THIS_ long* lplReturn) PURE;
	STDMETHOD_(HRESULT, _NewEnum) (THIS_ IUnknown** lppiuReturn) PURE; 
#endif
	// _VBProjects methods:
	STDMETHOD_(HRESULT, Add) (THIS_ vbext_ProjectType Type, VBProject** lppcReturn) PURE; 
	STDMETHOD_(HRESULT, Remove) (THIS_ VBProject* lpc) PURE; 
	STDMETHOD_(HRESULT, Open) (THIS_ BSTR bstrPath, VBProject** lpc) PURE; 
};
typedef _VBProjects* LPVBPROJECTS;
#ifdef __cplusplus
// _VBProjects  {EEE00919-E393-11D1-BB03-00C04FB6C4A6}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS T_VBProjectsProxy : public __OCF TAutoProxy
{
public:
	T_VBProjectsProxy() : TAutoProxy(0x0) {}

	// Item:   [dispid 0]
	VBProject* Item(__OCF TAutoVal index);

	// _VBE:   [dispid 20]
	void _VBE(TVBEProxy& Obj);

	// Parent:   [dispid 2]
	void Parent(TVBEProxy& Obj);

	// Count:   [dispid 10]
	long Count();

	// _NewEnum:   [dispid -4]
	void _NewEnum(__OCF TAutoEnumerator<IUnknown*>& Obj);

	// Add:   [dispid 137]
	VBProject* Add(vbext_ProjectType Type);

	// Remove:   [dispid 138]
	void Remove(VBProject* lpc);

	// Open:   [dispid 139]
	VBProject* Open(__OCF TAutoString bstrPath);
};
#endif

// AddIns
// {0002097F-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE WordAddIns
DECLARE_INTERFACE_(WordAddIns, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// AddIns methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE;
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get__NewEnum) (THIS_ IUnknown** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Count) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Item) (THIS_ VARIANT* Index, AddIn** prop) PURE; 
	STDMETHOD_(HRESULT, Add) (THIS_ BSTR FileName, VARIANT* Install, AddIn** prop) PURE; 
	STDMETHOD_(HRESULT, Unload) (THIS_ VARIANT_BOOL RemoveFromList) PURE; 
};
typedef WordAddIns* LPDDINS;
#ifdef __cplusplus
// AddIns  {0002097F-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TAddInsProxy : public __OCF TAutoProxy
{
public:
	TAddInsProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// _NewEnum:   [dispid -4]
	void _NewEnum(__OCF TAutoEnumerator<IUnknown*>& Obj);

	// Count:   [dispid 1]
	long Count();

	// Item:   [dispid 0]
	void Item(TAddInProxy& Obj, __OCF TAutoVal* Index);

	// Add:   [dispid 2]
	void Add(TAddInProxy& Obj, __OCF TAutoString FileName, __OCF TAutoVal* Install = 0);

	// Unload:   [dispid 3]
	void Unload(/*__OWL*/ TBool RemoveFromList);
};
#endif

// AnswerWizard
// {000C0360-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE AnswerWizard
DECLARE_INTERFACE_(AnswerWizard, _IMsoDispObj)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
	// _IMsoDispObj methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ IDispatch** ppidisp) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* plCreator) PURE; 
#endif
	// AnswerWizard methods:
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** ppidisp) PURE; 
	STDMETHOD_(HRESULT, Get_Files) (THIS_ AnswerWizardFiles** Files) PURE; 
	STDMETHOD_(HRESULT, ClearFileList) (THIS ) PURE; 
	STDMETHOD_(HRESULT, ResetFileList) (THIS ) PURE; 
};
typedef AnswerWizard* LPNSWERWIZARD;
#ifdef __cplusplus
// AnswerWizard  {000C0360-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TAnswerWizardProxy : public __OCF TAutoProxy
{
public:
	TAnswerWizardProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1610743808]
	IDispatch* _Application();

	// Creator:   [dispid 1610743809]
	long Creator();

	// Parent:   [dispid 1610809344]
	IDispatch* Parent();

	// Files:   [dispid 1610809345]
	void Files(TAnswerWizardFilesProxy& Obj);

	// ClearFileList:   [dispid 1610809346]
	void ClearFileList();

	// ResetFileList:   [dispid 1610809347]
	void ResetFileList();
};
#endif

// MsoWizardActType
typedef enum tagMsoWizardActType
{
	msoWizardActInactive = 0, 
	msoWizardActActive = 1, 
	msoWizardActSuspend = 2, 
	msoWizardActResume = 3, 
} MsoWizardActType;

// MsoBalloonErrorType
typedef enum tagMsoBalloonErrorType
{
	msoBalloonErrorNone = 0, 
	msoBalloonErrorOther = 1, 
	msoBalloonErrorTooBig = 2, 
	msoBalloonErrorOutOfMemory = 3, 
	msoBalloonErrorBadPictureRef = 4, 
	msoBalloonErrorBadReference = 5, 
	msoBalloonErrorButtonlessModal = 6, 
	msoBalloonErrorButtonModeless = 7, 
	msoBalloonErrorBadCharacter = 8, 
	msoBalloonErrorCOMFailure = 9, 
	msoBalloonErrorCharNotTopmostForModal = 10, 
	msoBalloonErrorTooManyControls = 11, 
} MsoBalloonErrorType;

// MsoAnimationType
typedef enum tagMsoAnimationType
{
	msoAnimationIdle = 1,
	msoAnimationGreeting = 2, 
	msoAnimationGoodbye = 3, 
	msoAnimationBeginSpeaking = 4, 
	msoAnimationRestPose = 5, 
	msoAnimationCharacterSuccessMajor = 6, 
	msoAnimationGetAttentionMajor = 11, 
	msoAnimationGetAttentionMinor = 12, 
	msoAnimationSearching = 13, 
	msoAnimationPrinting = 18, 
	msoAnimationGestureRight = 19, 
	msoAnimationWritingNotingSomething = 22, 
	msoAnimationWorkingAtSomething = 23, 
	msoAnimationThinking = 24, 
	msoAnimationSendingMail = 25, 
	msoAnimationListensToComputer = 26, 
	msoAnimationDisappear = 31, 
	msoAnimationAppear = 32, 
	msoAnimationGetArtsy = 100, 
	msoAnimationGetTechy = 101, 
	msoAnimationGetWizardy = 102, 
	msoAnimationCheckingSomething = 103, 
	msoAnimationLookDown = 104, 
	msoAnimationLookDownLeft = 105, 
	msoAnimationLookDownRight = 106, 
	msoAnimationLookLeft = 107, 
	msoAnimationLookRight = 108, 
	msoAnimationLookUp = 109,
	msoAnimationLookUpLeft = 110, 
	msoAnimationLookUpRight = 111, 
	msoAnimationSaving = 112, 
	msoAnimationGestureDown = 113, 
	msoAnimationGestureLeft = 114, 
	msoAnimationGestureUp = 115, 
	msoAnimationEmptyTrash = 116, 
} MsoAnimationType;

// MsoAlertButtonType
typedef enum tagMsoAlertButtonType
{
	msoAlertButtonOK = 0, 
	msoAlertButtonOKCancel = 1, 
	msoAlertButtonAbortRetryIgnore = 2, 
	msoAlertButtonYesNoCancel = 3, 
	msoAlertButtonYesNo = 4, 
	msoAlertButtonRetryCancel = 5, 
	msoAlertButtonYesAllNoCancel = 6, 
} MsoAlertButtonType;

// MsoAlertIconType
typedef enum tagMsoAlertIconType
{
	msoAlertIconNoIcon = 0, 
	msoAlertIconCritical = 1, 
	msoAlertIconQuery = 2,
	msoAlertIconWarning = 3, 
	msoAlertIconInfo = 4, 
} MsoAlertIconType;

// MsoAlertDefaultType
typedef enum tagMsoAlertDefaultType
{
	msoAlertDefaultFirst = 0, 
	msoAlertDefaultSecond = 1, 
	msoAlertDefaultThird = 2, 
	msoAlertDefaultFourth = 3, 
	msoAlertDefaultFifth = 4, 
} MsoAlertDefaultType;

// MsoAlertCancelType
typedef enum tagMsoAlertCancelType
{
	msoAlertCancelDefault = -1, 
	msoAlertCancelFirst = 0, 
	msoAlertCancelSecond = 1, 
	msoAlertCancelThird = 2, 
	msoAlertCancelFourth = 3, 
	msoAlertCancelFifth = 4, 
} MsoAlertCancelType;

// Assistant
// {000C0322-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE Assistant
DECLARE_INTERFACE_(Assistant, _IMsoDispObj)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
	// _IMsoDispObj methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ IDispatch** ppidisp) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* plCreator) PURE; 
#endif
	// Assistant methods:
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** ppidisp) PURE; 
	STDMETHOD_(HRESULT, Move) (THIS_ int xLeft, int yTop) PURE; 
	STDMETHOD_(HRESULT, Set_Top) (THIS_ int pyTop) PURE; 
	STDMETHOD_(HRESULT, Get_Top) (THIS_ int* pyTop) PURE; 
	STDMETHOD_(HRESULT, Set_Left) (THIS_ int pxLeft) PURE; 
	STDMETHOD_(HRESULT, Get_Left) (THIS_ int* pxLeft) PURE; 
	STDMETHOD_(HRESULT, Help) (THIS ) PURE; 
	STDMETHOD_(HRESULT, StartWizard) (THIS_ VARIANT_BOOL On, BSTR Callback, long PrivateX, VARIANT Animation, VARIANT CustomTeaser, VARIANT Top, VARIANT Left, VARIANT Bottom, VARIANT Right, long* plWizID) PURE;
	STDMETHOD_(HRESULT, EndWizard) (THIS_ long WizardID, VARIANT_BOOL varfSuccess, VARIANT Animation) PURE; 
	STDMETHOD_(HRESULT, ActivateWizard) (THIS_ long WizardID, MsoWizardActType act, VARIANT Animation) PURE; 
	STDMETHOD_(HRESULT, ResetTips) (THIS ) PURE; 
	STDMETHOD_(HRESULT, Get_NewBalloon) (THIS_ Balloon** ppibal) PURE; 
	STDMETHOD_(HRESULT, Get_BalloonError) (THIS_ MsoBalloonErrorType* pbne) PURE; 
	STDMETHOD_(HRESULT, Get_Visible) (THIS_ VARIANT_BOOL* pvarfVisible) PURE; 
	STDMETHOD_(HRESULT, Set_Visible) (THIS_ VARIANT_BOOL pvarfVisible) PURE; 
	STDMETHOD_(HRESULT, Get_Animation) (THIS_ MsoAnimationType* pfca) PURE; 
	STDMETHOD_(HRESULT, Set_Animation) (THIS_ MsoAnimationType pfca) PURE; 
	STDMETHOD_(HRESULT, Get_Reduced) (THIS_ VARIANT_BOOL* pvarfReduced) PURE; 
	STDMETHOD_(HRESULT, Set_Reduced) (THIS_ VARIANT_BOOL pvarfReduced) PURE; 
	STDMETHOD_(HRESULT, Set_AssistWithHelp) (THIS_ VARIANT_BOOL pvarfAssistWithHelp) PURE; 
	STDMETHOD_(HRESULT, Get_AssistWithHelp) (THIS_ VARIANT_BOOL* pvarfAssistWithHelp) PURE; 
	STDMETHOD_(HRESULT, Set_AssistWithWizards) (THIS_ VARIANT_BOOL pvarfAssistWithWizards) PURE; 
	STDMETHOD_(HRESULT, Get_AssistWithWizards) (THIS_ VARIANT_BOOL* pvarfAssistWithWizards) PURE; 
	STDMETHOD_(HRESULT, Set_AssistWithAlerts) (THIS_ VARIANT_BOOL pvarfAssistWithAlerts) PURE; 
	STDMETHOD_(HRESULT, Get_AssistWithAlerts) (THIS_ VARIANT_BOOL* pvarfAssistWithAlerts) PURE; 
	STDMETHOD_(HRESULT, Set_MoveWhenInTheWay) (THIS_ VARIANT_BOOL pvarfMove) PURE; 
	STDMETHOD_(HRESULT, Get_MoveWhenInTheWay) (THIS_ VARIANT_BOOL* pvarfMove) PURE; 
	STDMETHOD_(HRESULT, Set_Sounds) (THIS_ VARIANT_BOOL pvarfSounds) PURE; 
	STDMETHOD_(HRESULT, Get_Sounds) (THIS_ VARIANT_BOOL* pvarfSounds) PURE; 
	STDMETHOD_(HRESULT, Set_FeatureTips) (THIS_ VARIANT_BOOL pvarfFeatures) PURE; 
	STDMETHOD_(HRESULT, Get_FeatureTips) (THIS_ VARIANT_BOOL* pvarfFeatures) PURE; 
	STDMETHOD_(HRESULT, Set_MouseTips) (THIS_ VARIANT_BOOL pvarfMouse) PURE; 
	STDMETHOD_(HRESULT, Get_MouseTips) (THIS_ VARIANT_BOOL* pvarfMouse) PURE; 
	STDMETHOD_(HRESULT, Set_KeyboardShortcutTips) (THIS_ VARIANT_BOOL pvarfKeyboardShortcuts) PURE; 
	STDMETHOD_(HRESULT, Get_KeyboardShortcutTips) (THIS_ VARIANT_BOOL* pvarfKeyboardShortcuts) PURE;
	STDMETHOD_(HRESULT, Set_HighPriorityTips) (THIS_ VARIANT_BOOL pvarfHighPriorityTips) PURE; 
	STDMETHOD_(HRESULT, Get_HighPriorityTips) (THIS_ VARIANT_BOOL* pvarfHighPriorityTips) PURE; 
	STDMETHOD_(HRESULT, Set_TipOfDay) (THIS_ VARIANT_BOOL pvarfTipOfDay) PURE; 
	STDMETHOD_(HRESULT, Get_TipOfDay) (THIS_ VARIANT_BOOL* pvarfTipOfDay) PURE; 
	STDMETHOD_(HRESULT, Set_GuessHelp) (THIS_ VARIANT_BOOL pvarfGuessHelp) PURE; 
	STDMETHOD_(HRESULT, Get_GuessHelp) (THIS_ VARIANT_BOOL* pvarfGuessHelp) PURE; 
	STDMETHOD_(HRESULT, Set_SearchWhenProgramming) (THIS_ VARIANT_BOOL pvarfSearchInProgram) PURE; 
	STDMETHOD_(HRESULT, Get_SearchWhenProgramming) (THIS_ VARIANT_BOOL* pvarfSearchInProgram) PURE; 
	STDMETHOD_(HRESULT, Get_Item) (THIS_ BSTR* pbstrName) PURE; 
	STDMETHOD_(HRESULT, Get_FileName) (THIS_ BSTR* pbstr) PURE; 
	STDMETHOD_(HRESULT, Set_FileName) (THIS_ BSTR pbstr) PURE; 
	STDMETHOD_(HRESULT, Get_Name) (THIS_ BSTR* pbstrName) PURE; 
	STDMETHOD_(HRESULT, Get_On) (THIS_ VARIANT_BOOL* pvarfOn) PURE; 
	STDMETHOD_(HRESULT, Set_On) (THIS_ VARIANT_BOOL pvarfOn) PURE; 
	STDMETHOD_(HRESULT, DoAlert) (THIS_ BSTR bstrAlertTitle, BSTR bstrAlertText, MsoAlertButtonType alb, MsoAlertIconType alc, MsoAlertDefaultType ald, MsoAlertCancelType alq, VARIANT_BOOL varfSysAlert, int* pibtn) PURE; 
};
typedef Assistant* LPSSISTANT;
#ifdef __cplusplus
// Assistant  {000C0322-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TAssistantProxy : public __OCF TAutoProxy
{
public:
	TAssistantProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1610743808]
	IDispatch* _Application();

	// Creator:   [dispid 1610743809]
	long Creator();

	// Parent:   [dispid 1610809344]
	IDispatch* Parent();

	// Move:   [dispid 1610809345]
	void Move(int xLeft, int yTop);

	// Top:   [dispid 1610809346]
	void Top(int arg0);

	// Top:   [dispid 1610809346]
	int Top();

	// Left:   [dispid 1610809348]
	void Left(int arg0);

	// Left:   [dispid 1610809348]
	int Left();

	// Help:   [dispid 1610809350]
	void Help();

	// StartWizard:   [dispid 1610809351]
	long StartWizard(/*__OWL*/ TBool On, __OCF TAutoString Callback, long PrivateX, __OCF TAutoVal Animation = __OCF TNoArg(), __OCF TAutoVal CustomTeaser = __OCF TNoArg(), __OCF TAutoVal Top = __OCF TNoArg(), __OCF TAutoVal Left = __OCF TNoArg(), __OCF TAutoVal Bottom = __OCF TNoArg(), __OCF TAutoVal Right = __OCF TNoArg());

	// EndWizard:   [dispid 1610809352]
	void EndWizard(long WizardID, /*__OWL*/ TBool varfSuccess, __OCF TAutoVal Animation = __OCF TNoArg());

	// ActivateWizard:   [dispid 1610809353]
	void ActivateWizard(long WizardID, MsoWizardActType act, __OCF TAutoVal Animation = __OCF TNoArg());

	// ResetTips:   [dispid 1610809354]
	void ResetTips();

	// NewBalloon:   [dispid 1610809355]
	void NewBalloon(TBalloonProxy& Obj);

	// BalloonError:   [dispid 1610809356]
	MsoBalloonErrorType BalloonError();

	// Visible:   [dispid 1610809357]
	/*__OWL*/ TBool Visible();

	// Visible:   [dispid 1610809357]
	void Visible(/*__OWL*/ TBool arg0);

	// Animation:   [dispid 1610809359]
	MsoAnimationType Animation();

	// Animation:   [dispid 1610809359]
	void Animation(MsoAnimationType arg0);

	// Reduced:   [dispid 1610809361]
	/*__OWL*/ TBool Reduced();

	// Reduced:   [dispid 1610809361]
	void Reduced(/*__OWL*/ TBool arg0);

	// AssistWithHelp:   [dispid 1610809363]
	void AssistWithHelp(/*__OWL*/ TBool arg0);

	// AssistWithHelp:   [dispid 1610809363]
	/*__OWL*/ TBool AssistWithHelp();

	// AssistWithWizards:   [dispid 1610809365]
	void AssistWithWizards(/*__OWL*/ TBool arg0);

	// AssistWithWizards:   [dispid 1610809365]
	/*__OWL*/ TBool AssistWithWizards();

	// AssistWithAlerts:   [dispid 1610809367]
	void AssistWithAlerts(/*__OWL*/ TBool arg0);

	// AssistWithAlerts:   [dispid 1610809367]
	/*__OWL*/ TBool AssistWithAlerts();

	// MoveWhenInTheWay:   [dispid 1610809369]
	void MoveWhenInTheWay(/*__OWL*/ TBool arg0);

	// MoveWhenInTheWay:   [dispid 1610809369]
	/*__OWL*/ TBool MoveWhenInTheWay();

	// Sounds:   [dispid 1610809371]
	void Sounds(/*__OWL*/ TBool arg0);

	// Sounds:   [dispid 1610809371]
	/*__OWL*/ TBool Sounds();

	// FeatureTips:   [dispid 1610809373]
	void FeatureTips(/*__OWL*/ TBool arg0);

	// FeatureTips:   [dispid 1610809373]
	/*__OWL*/ TBool FeatureTips();

	// MouseTips:   [dispid 1610809375]
	void MouseTips(/*__OWL*/ TBool arg0);

	// MouseTips:   [dispid 1610809375]
	/*__OWL*/ TBool MouseTips();

	// KeyboardShortcutTips:   [dispid 1610809377]
	void KeyboardShortcutTips(/*__OWL*/ TBool arg0);

	// KeyboardShortcutTips:   [dispid 1610809377]
	/*__OWL*/ TBool KeyboardShortcutTips();

	// HighPriorityTips:   [dispid 1610809379]
	void HighPriorityTips(/*__OWL*/ TBool arg0);

	// HighPriorityTips:   [dispid 1610809379]
	/*__OWL*/ TBool HighPriorityTips();

	// TipOfDay:   [dispid 1610809381]
	void TipOfDay(/*__OWL*/ TBool arg0);

	// TipOfDay:   [dispid 1610809381]
	/*__OWL*/ TBool TipOfDay();

	// GuessHelp:   [dispid 1610809383]
	void GuessHelp(/*__OWL*/ TBool arg0);

	// GuessHelp:   [dispid 1610809383]
	/*__OWL*/ TBool GuessHelp();

	// SearchWhenProgramming:   [dispid 1610809385]
	void SearchWhenProgramming(/*__OWL*/ TBool arg0);

	// SearchWhenProgramming:   [dispid 1610809385]
	/*__OWL*/ TBool SearchWhenProgramming();

	// Item:   [dispid 0]
	__OCF TAutoString Item();

	// FileName:   [dispid 1610809388]
	__OCF TAutoString FileName();

	// FileName:   [dispid 1610809388]
	void FileName(__OCF TAutoString arg0);

	// Name:   [dispid 1610809390]
	__OCF TAutoString Name();

	// On:   [dispid 1610809391]
	/*__OWL*/ TBool On();

	// On:   [dispid 1610809391]
	void On(/*__OWL*/ TBool arg0);

	// DoAlert:   [dispid 1610809393]
	int DoAlert(__OCF TAutoString bstrAlertTitle, __OCF TAutoString bstrAlertText, MsoAlertButtonType alb, MsoAlertIconType alc, MsoAlertDefaultType ald, MsoAlertCancelType alq, /*__OWL*/ TBool varfSysAlert);
};
#endif

// AutoCaptions
// {0002097A-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE AutoCaptions
DECLARE_INTERFACE_(AutoCaptions, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// AutoCaptions methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE;
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get__NewEnum) (THIS_ IUnknown** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Count) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Item) (THIS_ VARIANT* Index, AutoCaption** prop) PURE; 
	STDMETHOD_(HRESULT, CancelAutoInsert) (THIS ) PURE; 
};
typedef AutoCaptions* LPUTOCAPTIONS;
#ifdef __cplusplus
// AutoCaptions  {0002097A-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TAutoCaptionsProxy : public __OCF TAutoProxy
{
public:
	TAutoCaptionsProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// _NewEnum:   [dispid -4]
	void _NewEnum(__OCF TAutoEnumerator<IUnknown*>& Obj);

	// Count:   [dispid 1]
	long Count();

	// Item:   [dispid 0]
	void Item(TAutoCaptionProxy& Obj, __OCF TAutoVal* Index);

	// CancelAutoInsert:   [dispid 100]
	void CancelAutoInsert();
};
#endif

// AutoCorrect
// {00020949-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE AutoCorrect
DECLARE_INTERFACE_(AutoCorrect, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// AutoCorrect methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE;
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get_CorrectDays) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_CorrectDays) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_CorrectInitialCaps) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_CorrectInitialCaps) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_CorrectSentenceCaps) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_CorrectSentenceCaps) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_ReplaceText) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_ReplaceText) (THIS_ VARIANT_BOOL prop) PURE;
	STDMETHOD_(HRESULT, Get_Entries) (THIS_ AutoCorrectEntries** prop) PURE; 
	STDMETHOD_(HRESULT, Get_FirstLetterExceptions) (THIS_ FirstLetterExceptions** prop) PURE; 
	STDMETHOD_(HRESULT, Get_FirstLetterAutoAdd) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_FirstLetterAutoAdd) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_TwoInitialCapsExceptions) (THIS_ TwoInitialCapsExceptions** prop) PURE; 
	STDMETHOD_(HRESULT, Get_TwoInitialCapsAutoAdd) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_TwoInitialCapsAutoAdd) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_CorrectCapsLock) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_CorrectCapsLock) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_CorrectHangulAndAlphabet) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_CorrectHangulAndAlphabet) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_HangulAndAlphabetExceptions) (THIS_ HangulAndAlphabetExceptions** prop) PURE; 
	STDMETHOD_(HRESULT, Get_HangulAndAlphabetAutoAdd) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_HangulAndAlphabetAutoAdd) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_ReplaceTextFromSpellingChecker) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_ReplaceTextFromSpellingChecker) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_OtherCorrectionsAutoAdd) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_OtherCorrectionsAutoAdd) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_OtherCorrectionsExceptions) (THIS_ OtherCorrectionsExceptions** prop) PURE; 
	STDMETHOD_(HRESULT, Get_CorrectKeyboardSetting) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_CorrectKeyboardSetting) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_CorrectTableCells) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_CorrectTableCells) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_DisplayAutoCorrectOptions) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_DisplayAutoCorrectOptions) (THIS_ VARIANT_BOOL prop) PURE; 
};
typedef AutoCorrect* LPUTOCORRECT;
#ifdef __cplusplus
// AutoCorrect  {00020949-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TAutoCorrectProxy : public __OCF TAutoProxy
{
public:
	TAutoCorrectProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// CorrectDays:   [dispid 1]
	/*__OWL*/ TBool CorrectDays();

	// CorrectDays:   [dispid 1]
	void CorrectDays(/*__OWL*/ TBool arg0);

	// CorrectInitialCaps:   [dispid 2]
	/*__OWL*/ TBool CorrectInitialCaps();

	// CorrectInitialCaps:   [dispid 2]
	void CorrectInitialCaps(/*__OWL*/ TBool arg0);

	// CorrectSentenceCaps:   [dispid 3]
	/*__OWL*/ TBool CorrectSentenceCaps();

	// CorrectSentenceCaps:   [dispid 3]
	void CorrectSentenceCaps(/*__OWL*/ TBool arg0);

	// ReplaceText:   [dispid 4]
	/*__OWL*/ TBool ReplaceText();

	// ReplaceText:   [dispid 4]
	void ReplaceText(/*__OWL*/ TBool arg0);

	// Entries:   [dispid 6]
	void Entries(TAutoCorrectEntriesProxy& Obj);

	// _FirstLetterExceptions:   [dispid 7]
	void _FirstLetterExceptions(TFirstLetterExceptionsProxy& Obj);

	// FirstLetterAutoAdd:   [dispid 8]
	/*__OWL*/ TBool FirstLetterAutoAdd();

	// FirstLetterAutoAdd:   [dispid 8]
	void FirstLetterAutoAdd(/*__OWL*/ TBool arg0);

	// _TwoInitialCapsExceptions:   [dispid 9]
	void _TwoInitialCapsExceptions(TTwoInitialCapsExceptionsProxy& Obj);

	// TwoInitialCapsAutoAdd:   [dispid 10]
	/*__OWL*/ TBool TwoInitialCapsAutoAdd();

	// TwoInitialCapsAutoAdd:   [dispid 10]
	void TwoInitialCapsAutoAdd(/*__OWL*/ TBool arg0);

	// CorrectCapsLock:   [dispid 11]
	/*__OWL*/ TBool CorrectCapsLock();

	// CorrectCapsLock:   [dispid 11]
	void CorrectCapsLock(/*__OWL*/ TBool arg0);

	// CorrectHangulAndAlphabet:   [dispid 12]
	/*__OWL*/ TBool CorrectHangulAndAlphabet();

	// CorrectHangulAndAlphabet:   [dispid 12]
	void CorrectHangulAndAlphabet(/*__OWL*/ TBool arg0);

	// _HangulAndAlphabetExceptions:   [dispid 13]
	void _HangulAndAlphabetExceptions(THangulAndAlphabetExceptionsProxy& Obj);

	// HangulAndAlphabetAutoAdd:   [dispid 14]
	/*__OWL*/ TBool HangulAndAlphabetAutoAdd();

	// HangulAndAlphabetAutoAdd:   [dispid 14]
	void HangulAndAlphabetAutoAdd(/*__OWL*/ TBool arg0);

	// ReplaceTextFromSpellingChecker:   [dispid 15]
	/*__OWL*/ TBool ReplaceTextFromSpellingChecker();

	// ReplaceTextFromSpellingChecker:   [dispid 15]
	void ReplaceTextFromSpellingChecker(/*__OWL*/ TBool arg0);

	// OtherCorrectionsAutoAdd:   [dispid 16]
	/*__OWL*/ TBool OtherCorrectionsAutoAdd();

	// OtherCorrectionsAutoAdd:   [dispid 16]
	void OtherCorrectionsAutoAdd(/*__OWL*/ TBool arg0);

	// _OtherCorrectionsExceptions:   [dispid 17]
	void _OtherCorrectionsExceptions(TOtherCorrectionsExceptionsProxy& Obj);

	// CorrectKeyboardSetting:   [dispid 18]
	/*__OWL*/ TBool CorrectKeyboardSetting();

	// CorrectKeyboardSetting:   [dispid 18]
	void CorrectKeyboardSetting(/*__OWL*/ TBool arg0);

	// CorrectTableCells:   [dispid 19]
	/*__OWL*/ TBool CorrectTableCells();

	// CorrectTableCells:   [dispid 19]
	void CorrectTableCells(/*__OWL*/ TBool arg0);

	// DisplayAutoCorrectOptions:   [dispid 20]
	/*__OWL*/ TBool DisplayAutoCorrectOptions();

	// DisplayAutoCorrectOptions:   [dispid 20]
	void DisplayAutoCorrectOptions(/*__OWL*/ TBool arg0);
};
#endif

// MsoBalloonType
typedef enum tagMsoBalloonType
{
	msoBalloonTypeButtons = 0, 
	msoBalloonTypeBullets = 1, 
	msoBalloonTypeNumbers = 2, 
} MsoBalloonType;

// MsoIconType
typedef enum tagMsoIconType
{
	msoIconNone = 0, 
	msoIconAlert = 2, 
	msoIconTip = 3, 
	msoIconAlertInfo = 4, 
	msoIconAlertWarning = 5, 
	msoIconAlertQuery = 6,
	msoIconAlertCritical = 7, 
} MsoIconType;

// MsoModeType
typedef enum tagMsoModeType
{
	msoModeModal = 0, 
	msoModeAutoDown = 1, 
	msoModeModeless = 2, 
} MsoModeType;

// MsoButtonSetType
typedef enum tagMsoButtonSetType
{
	msoButtonSetNone = 0, 
	msoButtonSetOK = 1, 
	msoButtonSetCancel = 2, 
	msoButtonSetOkCancel = 3, 
	msoButtonSetYesNo = 4, 
	msoButtonSetYesNoCancel = 5, 
	msoButtonSetBackClose = 6, 
	msoButtonSetNextClose = 7, 
	msoButtonSetBackNextClose = 8, 
	msoButtonSetRetryCancel = 9, 
	msoButtonSetAbortRetryIgnore = 10, 
	msoButtonSetSearchClose = 11, 
	msoButtonSetBackNextSnooze = 12,
	msoButtonSetTipsOptionsClose = 13, 
	msoButtonSetYesAllNoCancel = 14, 
} MsoButtonSetType;

// MsoBalloonButtonType
typedef enum tagMsoBalloonButtonType
{
	msoBalloonButtonYesToAll = -15, 
	msoBalloonButtonOptions = -14, 
	msoBalloonButtonTips = -13, 
	msoBalloonButtonClose = -12, 
	msoBalloonButtonSnooze = -11, 
	msoBalloonButtonSearch = -10, 
	msoBalloonButtonIgnore = -9, 
	msoBalloonButtonAbort = -8, 
	msoBalloonButtonRetry = -7, 
	msoBalloonButtonNext = -6, 
	msoBalloonButtonBack = -5, 
	msoBalloonButtonNo = -4, 
	msoBalloonButtonYes = -3, 
	msoBalloonButtonCancel = -2, 
	msoBalloonButtonOK = -1, 
	msoBalloonButtonNull = 0, 
} MsoBalloonButtonType;

// Balloon
// {000C0324-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE Balloon
DECLARE_INTERFACE_(Balloon, _IMsoDispObj)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
	// _IMsoDispObj methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ IDispatch** ppidisp) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* plCreator) PURE; 
#endif
	// Balloon methods:
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** ppidisp) PURE; 
	STDMETHOD_(HRESULT, Get_Checkboxes) (THIS_ IDispatch** ppidisp) PURE; 
	STDMETHOD_(HRESULT, Get_Labels) (THIS_ IDispatch** ppidisp) PURE; 
	STDMETHOD_(HRESULT, Set_BalloonType) (THIS_ MsoBalloonType pbty) PURE; 
	STDMETHOD_(HRESULT, Get_BalloonType) (THIS_ MsoBalloonType* pbty) PURE; 
	STDMETHOD_(HRESULT, Set_Icon) (THIS_ MsoIconType picn) PURE; 
	STDMETHOD_(HRESULT, Get_Icon) (THIS_ MsoIconType* picn) PURE; 
	STDMETHOD_(HRESULT, Set_Heading) (THIS_ BSTR pbstr) PURE;
	STDMETHOD_(HRESULT, Get_Heading) (THIS_ BSTR* pbstr) PURE; 
	STDMETHOD_(HRESULT, Set_Text) (THIS_ BSTR pbstr) PURE; 
	STDMETHOD_(HRESULT, Get_Text) (THIS_ BSTR* pbstr) PURE; 
	STDMETHOD_(HRESULT, Set_Mode) (THIS_ MsoModeType pmd) PURE; 
	STDMETHOD_(HRESULT, Get_Mode) (THIS_ MsoModeType* pmd) PURE; 
	STDMETHOD_(HRESULT, Set_Animation) (THIS_ MsoAnimationType pfca) PURE; 
	STDMETHOD_(HRESULT, Get_Animation) (THIS_ MsoAnimationType* pfca) PURE; 
	STDMETHOD_(HRESULT, Set_Button) (THIS_ MsoButtonSetType psbs) PURE; 
	STDMETHOD_(HRESULT, Get_Button) (THIS_ MsoButtonSetType* psbs) PURE; 
	STDMETHOD_(HRESULT, Set_Callback) (THIS_ BSTR pbstr) PURE; 
	STDMETHOD_(HRESULT, Get_Callback) (THIS_ BSTR* pbstr) PURE; 
	STDMETHOD_(HRESULT, Set_Private) (THIS_ long plPrivate) PURE; 
	STDMETHOD_(HRESULT, Get_Private) (THIS_ long* plPrivate) PURE; 
	STDMETHOD_(HRESULT, SetAvoidRectangle) (THIS_ int Left, int Top, int Right, int Bottom) PURE; 
	STDMETHOD_(HRESULT, Get_Name) (THIS_ BSTR* pbstrName) PURE; 
	STDMETHOD_(HRESULT, Show) (THIS_ MsoBalloonButtonType* pibtn) PURE; 
	STDMETHOD_(HRESULT, Close) (THIS ) PURE; 
};
typedef Balloon* LPALLOON;
#ifdef __cplusplus
// Balloon  {000C0324-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TBalloonProxy : public __OCF TAutoProxy
{
public:
	TBalloonProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1610743808]
	IDispatch* _Application();

	// Creator:   [dispid 1610743809]
	long Creator();

	// Parent:   [dispid 1610809344]
	IDispatch* Parent();

	// Checkboxes:   [dispid 1610809345]
	IDispatch* Checkboxes();

	// Labels:   [dispid 1610809346]
	IDispatch* Labels();

	// BalloonType:   [dispid 1610809347]
	void BalloonType(MsoBalloonType arg0);

	// BalloonType:   [dispid 1610809347]
	MsoBalloonType BalloonType();

	// Icon:   [dispid 1610809349]
	void Icon(MsoIconType arg0);

	// Icon:   [dispid 1610809349]
	MsoIconType Icon();

	// Heading:   [dispid 1610809351]
	void Heading(__OCF TAutoString arg0);

	// Heading:   [dispid 1610809351]
	__OCF TAutoString Heading();

	// Text:   [dispid 1610809353]
	void Text(__OCF TAutoString arg0);

	// Text:   [dispid 1610809353]
	__OCF TAutoString Text();

	// Mode:   [dispid 1610809355]
	void Mode(MsoModeType arg0);

	// Mode:   [dispid 1610809355]
	MsoModeType Mode();

	// Animation:   [dispid 1610809357]
	void Animation(MsoAnimationType arg0);

	// Animation:   [dispid 1610809357]
	MsoAnimationType Animation();

	// Button:   [dispid 1610809359]
	void Button(MsoButtonSetType arg0);

	// Button:   [dispid 1610809359]
	MsoButtonSetType Button();

	// Callback:   [dispid 1610809361]
	void Callback(__OCF TAutoString arg0);

	// Callback:   [dispid 1610809361]
	__OCF TAutoString Callback();

	// Private:   [dispid 1610809363]
	void Private(long arg0);

	// Private:   [dispid 1610809363]
	long Private();

	// SetAvoidRectangle:   [dispid 1610809365]
	void SetAvoidRectangle(int Left, int Top, int Right, int Bottom);

	// Name:   [dispid 1610809366]
	__OCF TAutoString Name();

	// Show:   [dispid 1610809367]
	MsoBalloonButtonType Show();

	// Close:   [dispid 1610809368]
	void Close();
};
#endif

// WdBookmarkSortBy
typedef enum tagWdBookmarkSortBy
{
	wdSortByName = 0, 
	wdSortByLocation = 1, 
} WdBookmarkSortBy;

// Bookmarks
// {00020967-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE Bookmarks
DECLARE_INTERFACE_(Bookmarks, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// Bookmarks methods:
	STDMETHOD_(HRESULT, Get__NewEnum) (THIS_ IUnknown** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Count) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_DefaultSorting) (THIS_ WdBookmarkSortBy* prop) PURE; 
	STDMETHOD_(HRESULT, Set_DefaultSorting) (THIS_ WdBookmarkSortBy prop) PURE; 
	STDMETHOD_(HRESULT, Get_ShowHidden) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_ShowHidden) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE;
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE;
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Item) (THIS_ VARIANT* Index, Bookmark** prop) PURE; 
	STDMETHOD_(HRESULT, Add) (THIS_ BSTR Name, VARIANT* , Bookmark** prop) PURE; 
	STDMETHOD_(HRESULT, Exists) (THIS_ BSTR Name, VARIANT_BOOL* prop) PURE; 
};
typedef Bookmarks* LPOOKMARKS;
#ifdef __cplusplus
// Bookmarks  {00020967-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TBookmarksProxy : public __OCF TAutoProxy
{
public:
	TBookmarksProxy() : TAutoProxy(0x0) {}

	// _NewEnum:   [dispid -4]
	void _NewEnum(__OCF TAutoEnumerator<IUnknown*>& Obj);

	// Count:   [dispid 2]
	long Count();

	// DefaultSorting:   [dispid 3]
	WdBookmarkSortBy DefaultSorting();

	// DefaultSorting:   [dispid 3]
	void DefaultSorting(WdBookmarkSortBy arg0);

	// ShowHidden:   [dispid 4]
	/*__OWL*/ TBool ShowHidden();

	// ShowHidden:   [dispid 4]
	void ShowHidden(/*__OWL*/ TBool arg0);

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// Item:   [dispid 0]
	void Item(TBookmarkProxy& Obj, __OCF TAutoVal* Index);

	// Add:   [dispid 5]
	void Add(TBookmarkProxy& Obj, __OCF TAutoString Name, __OCF TAutoVal* arg1 = 0);

	// Exists:   [dispid 6]
	/*__OWL*/ TBool Exists(__OCF TAutoString Name);
};
#endif

// WdLineStyle
typedef enum tagWdLineStyle
{
	wdLineStyleNone = 0, 
	wdLineStyleSingle = 1, 
	wdLineStyleDot = 2, 
	wdLineStyleDashSmallGap = 3, 
	wdLineStyleDashLargeGap = 4, 
	wdLineStyleDashDot = 5, 
	wdLineStyleDashDotDot = 6, 
	wdLineStyleDouble = 7, 
	wdLineStyleTriple = 8, 
	wdLineStyleThinThickSmallGap = 9, 
	wdLineStyleThickThinSmallGap = 10, 
	wdLineStyleThinThickThinSmallGap = 11, 
	wdLineStyleThinThickMedGap = 12, 
	wdLineStyleThickThinMedGap = 13, 
	wdLineStyleThinThickThinMedGap = 14, 
	wdLineStyleThinThickLargeGap = 15, 
	wdLineStyleThickThinLargeGap = 16, 
	wdLineStyleThinThickThinLargeGap = 17,
	wdLineStyleSingleWavy = 18, 
	wdLineStyleDoubleWavy = 19, 
	wdLineStyleDashDotStroked = 20, 
	wdLineStyleEmboss3D = 21, 
	wdLineStyleEngrave3D = 22, 
	wdLineStyleOutset = 23, 
	wdLineStyleInset = 24, 
} WdLineStyle;

// WdLineWidth
typedef enum tagWdLineWidth
{
	wdLineWidth025pt = 2, 
	wdLineWidth050pt = 4, 
	wdLineWidth075pt = 6, 
	wdLineWidth100pt = 8, 
	wdLineWidth150pt = 12, 
	wdLineWidth225pt = 18, 
	wdLineWidth300pt = 24, 
	wdLineWidth450pt = 36, 
	wdLineWidth600pt = 48, 
} WdLineWidth;

// WdBorderDistanceFrom
typedef enum tagWdBorderDistanceFrom
{
	wdBorderDistanceFromText = 0,
	wdBorderDistanceFromPageEdge = 1, 
} WdBorderDistanceFrom;

// WdBorderType
typedef enum tagWdBorderType
{
	wdBorderTop = -1, 
	wdBorderLeft = -2, 
	wdBorderBottom = -3, 
	wdBorderRight = -4, 
	wdBorderHorizontal = -5, 
	wdBorderVertical = -6, 
	wdBorderDiagonalDown = -7, 
	wdBorderDiagonalUp = -8, 
} WdBorderType;

// Borders
// {0002093C-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE Borders
DECLARE_INTERFACE_(Borders, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE;
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// Borders methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE;
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get__NewEnum) (THIS_ IUnknown** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Count) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Enable) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Enable) (THIS_ long prop) PURE; 
	STDMETHOD_(HRESULT, Get_DistanceFromTop) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Set_DistanceFromTop) (THIS_ long prop) PURE; 
	STDMETHOD_(HRESULT, Get_Shadow) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Shadow) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_InsideLineStyle) (THIS_ WdLineStyle* prop) PURE; 
	STDMETHOD_(HRESULT, Set_InsideLineStyle) (THIS_ WdLineStyle prop) PURE; 
	STDMETHOD_(HRESULT, Get_OutsideLineStyle) (THIS_ WdLineStyle* prop) PURE; 
	STDMETHOD_(HRESULT, Set_OutsideLineStyle) (THIS_ WdLineStyle prop) PURE; 
	STDMETHOD_(HRESULT, Get_InsideLineWidth) (THIS_ WdLineWidth* prop) PURE; 
	STDMETHOD_(HRESULT, Set_InsideLineWidth) (THIS_ WdLineWidth prop) PURE; 
	STDMETHOD_(HRESULT, Get_OutsideLineWidth) (THIS_ WdLineWidth* prop) PURE; 
	STDMETHOD_(HRESULT, Set_OutsideLineWidth) (THIS_ WdLineWidth prop) PURE; 
	STDMETHOD_(HRESULT, Get_InsideColorIndex) (THIS_ WdColorIndex* prop) PURE;
	STDMETHOD_(HRESULT, Set_InsideColorIndex) (THIS_ WdColorIndex prop) PURE; 
	STDMETHOD_(HRESULT, Get_OutsideColorIndex) (THIS_ WdColorIndex* prop) PURE; 
	STDMETHOD_(HRESULT, Set_OutsideColorIndex) (THIS_ WdColorIndex prop) PURE; 
	STDMETHOD_(HRESULT, Get_DistanceFromLeft) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Set_DistanceFromLeft) (THIS_ long prop) PURE; 
	STDMETHOD_(HRESULT, Get_DistanceFromBottom) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Set_DistanceFromBottom) (THIS_ long prop) PURE; 
	STDMETHOD_(HRESULT, Get_DistanceFromRight) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Set_DistanceFromRight) (THIS_ long prop) PURE; 
	STDMETHOD_(HRESULT, Get_AlwaysInFront) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_AlwaysInFront) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_SurroundHeader) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_SurroundHeader) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_SurroundFooter) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_SurroundFooter) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_JoinBorders) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_JoinBorders) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_HasHorizontal) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Get_HasVertical) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Get_DistanceFrom) (THIS_ WdBorderDistanceFrom* prop) PURE; 
	STDMETHOD_(HRESULT, Set_DistanceFrom) (THIS_ WdBorderDistanceFrom prop) PURE; 
	STDMETHOD_(HRESULT, Get_EnableFirstPageInSection) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_EnableFirstPageInSection) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_EnableOtherPagesInSection) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_EnableOtherPagesInSection) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Item) (THIS_ WdBorderType Index, Border** prop) PURE; 
	STDMETHOD_(HRESULT, ApplyPageBordersToAllSections) (THIS ) PURE;
	STDMETHOD_(HRESULT, Get_InsideColor) (THIS_ WdColor* prop) PURE; 
	STDMETHOD_(HRESULT, Set_InsideColor) (THIS_ WdColor prop) PURE; 
	STDMETHOD_(HRESULT, Get_OutsideColor) (THIS_ WdColor* prop) PURE; 
	STDMETHOD_(HRESULT, Set_OutsideColor) (THIS_ WdColor prop) PURE; 
};
typedef Borders* LPORDERS;
#ifdef __cplusplus
// Borders  {0002093C-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TBordersProxy : public __OCF TAutoProxy
{
public:
	TBordersProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// _NewEnum:   [dispid -4]
	void _NewEnum(__OCF TAutoEnumerator<IUnknown*>& Obj);

	// Count:   [dispid 1]
	long Count();

	// Enable:   [dispid 2]
	long Enable();

	// Enable:   [dispid 2]
	void Enable(long arg0);

	// DistanceFromTop:   [dispid 4]
	long DistanceFromTop();

	// DistanceFromTop:   [dispid 4]
	void DistanceFromTop(long arg0);

	// Shadow:   [dispid 5]
	/*__OWL*/ TBool Shadow();

	// Shadow:   [dispid 5]
	void Shadow(/*__OWL*/ TBool arg0);

	// InsideLineStyle:   [dispid 6]
	WdLineStyle InsideLineStyle();

	// InsideLineStyle:   [dispid 6]
	void InsideLineStyle(WdLineStyle arg0);

	// OutsideLineStyle:   [dispid 7]
	WdLineStyle OutsideLineStyle();

	// OutsideLineStyle:   [dispid 7]
	void OutsideLineStyle(WdLineStyle arg0);

	// InsideLineWidth:   [dispid 8]
	WdLineWidth InsideLineWidth();

	// InsideLineWidth:   [dispid 8]
	void InsideLineWidth(WdLineWidth arg0);

	// OutsideLineWidth:   [dispid 9]
	WdLineWidth OutsideLineWidth();

	// OutsideLineWidth:   [dispid 9]
	void OutsideLineWidth(WdLineWidth arg0);

	// InsideColorIndex:   [dispid 10]
	WdColorIndex InsideColorIndex();

	// InsideColorIndex:   [dispid 10]
	void InsideColorIndex(WdColorIndex arg0);

	// OutsideColorIndex:   [dispid 11]
	WdColorIndex OutsideColorIndex();

	// OutsideColorIndex:   [dispid 11]
	void OutsideColorIndex(WdColorIndex arg0);

	// DistanceFromLeft:   [dispid 20]
	long DistanceFromLeft();

	// DistanceFromLeft:   [dispid 20]
	void DistanceFromLeft(long arg0);

	// DistanceFromBottom:   [dispid 21]
	long DistanceFromBottom();

	// DistanceFromBottom:   [dispid 21]
	void DistanceFromBottom(long arg0);

	// DistanceFromRight:   [dispid 22]
	long DistanceFromRight();

	// DistanceFromRight:   [dispid 22]
	void DistanceFromRight(long arg0);

	// AlwaysInFront:   [dispid 23]
	/*__OWL*/ TBool AlwaysInFront();

	// AlwaysInFront:   [dispid 23]
	void AlwaysInFront(/*__OWL*/ TBool arg0);

	// SurroundHeader:   [dispid 24]
	/*__OWL*/ TBool SurroundHeader();

	// SurroundHeader:   [dispid 24]
	void SurroundHeader(/*__OWL*/ TBool arg0);

	// SurroundFooter:   [dispid 25]
	/*__OWL*/ TBool SurroundFooter();

	// SurroundFooter:   [dispid 25]
	void SurroundFooter(/*__OWL*/ TBool arg0);

	// JoinBorders:   [dispid 26]
	/*__OWL*/ TBool JoinBorders();

	// JoinBorders:   [dispid 26]
	void JoinBorders(/*__OWL*/ TBool arg0);

	// HasHorizontal:   [dispid 27]
	/*__OWL*/ TBool HasHorizontal();

	// HasVertical:   [dispid 28]
	/*__OWL*/ TBool HasVertical();

	// DistanceFrom:   [dispid 29]
	WdBorderDistanceFrom DistanceFrom();

	// DistanceFrom:   [dispid 29]
	void DistanceFrom(WdBorderDistanceFrom arg0);

	// EnableFirstPageInSection:   [dispid 30]
	/*__OWL*/ TBool EnableFirstPageInSection();

	// EnableFirstPageInSection:   [dispid 30]
	void EnableFirstPageInSection(/*__OWL*/ TBool arg0);

	// EnableOtherPagesInSection:   [dispid 31]
	/*__OWL*/ TBool EnableOtherPagesInSection();

	// EnableOtherPagesInSection:   [dispid 31]
	void EnableOtherPagesInSection(/*__OWL*/ TBool arg0);

	// Item:   [dispid 0]
	void Item(TBorderProxy& Obj, WdBorderType Index);

	// ApplyPageBordersToAllSections:   [dispid 2000]
	void ApplyPageBordersToAllSections();

	// InsideColor:   [dispid 32]
	WdColor InsideColor();

	// InsideColor:   [dispid 32]
	void InsideColor(WdColor arg0);

	// OutsideColor:   [dispid 33]
	WdColor OutsideColor();

	// OutsideColor:   [dispid 33]
	void OutsideColor(WdColor arg0);
};
#endif

// WdBrowseTarget
typedef enum tagWdBrowseTarget
{
	wdBrowsePage = 1, 
	wdBrowseSection = 2, 
	wdBrowseComment = 3, 
	wdBrowseFootnote = 4, 
	wdBrowseEndnote = 5, 
	wdBrowseField = 6, 
	wdBrowseTable = 7, 
	wdBrowseGraphic = 8, 
	wdBrowseHeading = 9, 
	wdBrowseEdit = 10, 
	wdBrowseFind = 11, 
	wdBrowseGoTo = 12, 
} WdBrowseTarget;

// Browser
// {0002092E-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE Browser
DECLARE_INTERFACE_(Browser, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// Browser methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Target) (THIS_ WdBrowseTarget* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Target) (THIS_ WdBrowseTarget prop) PURE; 
	STDMETHOD_(HRESULT, Next) (THIS ) PURE; 
	STDMETHOD_(HRESULT, Previous) (THIS ) PURE; 
};
typedef Browser* LPROWSER;
#ifdef __cplusplus
// Browser  {0002092E-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TBrowserProxy : public __OCF TAutoProxy
{
public:
	TBrowserProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// Target:   [dispid 1]
	WdBrowseTarget Target();

	// Target:   [dispid 1]
	void Target(WdBrowseTarget arg0);

	// Next:   [dispid 101]
	void Next();

	// Previous:   [dispid 102]
	void Previous();
};
#endif

// CaptionLabels
// {00020978-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE CaptionLabels
DECLARE_INTERFACE_(CaptionLabels, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// CaptionLabels methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get__NewEnum) (THIS_ IUnknown** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Count) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Item) (THIS_ VARIANT* Index, CaptionLabel** prop) PURE; 
	STDMETHOD_(HRESULT, Add) (THIS_ BSTR Name, CaptionLabel** prop) PURE; 
};
typedef CaptionLabels* LPAPTIONLABELS;
#ifdef __cplusplus
// CaptionLabels  {00020978-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TCaptionLabelsProxy : public __OCF TAutoProxy
{
public:
	TCaptionLabelsProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// _NewEnum:   [dispid -4]
	void _NewEnum(__OCF TAutoEnumerator<IUnknown*>& Obj);

	// Count:   [dispid 1]
	long Count();

	// Item:   [dispid 0]
	void Item(TCaptionLabelProxy& Obj, __OCF TAutoVal* Index);

	// Add:   [dispid 100]
	void Add(TCaptionLabelProxy& Obj, __OCF TAutoString Name);
};
#endif

// Characters
// {0002095D-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE Characters
DECLARE_INTERFACE_(Characters, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// Characters methods:
	STDMETHOD_(HRESULT, Get__NewEnum) (THIS_ IUnknown** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Count) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_First) (THIS_ WordRange** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Last) (THIS_ WordRange** prop) PURE;
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE;
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE;
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Item) (THIS_ long Index, WordRange** prop) PURE; 
};
typedef Characters* LPHARACTERS;
#ifdef __cplusplus
// Characters  {0002095D-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TCharactersProxy : public __OCF TAutoProxy
{
public:
	TCharactersProxy() : TAutoProxy(0x0) {}

	// _NewEnum:   [dispid -4]
	void _NewEnum(__OCF TAutoEnumerator<IUnknown*>& Obj);

	// Count:   [dispid 2]
	long Count();

	// First:   [dispid 3]
	void First(TRangeProxy& Obj);

	// Last:   [dispid 4]
	void Last(TRangeProxy& Obj);

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// Item:   [dispid 0]
	void Item(TRangeProxy& Obj, long Index);
};
#endif

// COMAddIns
// {000C0339-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE COMAddIns
DECLARE_INTERFACE_(COMAddIns, _IMsoDispObj)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE;
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
	// _IMsoDispObj methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ IDispatch** ppidisp) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* plCreator) PURE; 
#endif
	// COMAddIns methods:
	STDMETHOD_(HRESULT, Item) (THIS_ VARIANT* Index, COMAddIn** RetValue) PURE; 
	STDMETHOD_(HRESULT, Get_Count) (THIS_ long* RetValue) PURE; 
	STDMETHOD_(HRESULT, Get__NewEnum) (THIS_ IUnknown** RetValue) PURE; 
	STDMETHOD_(HRESULT, Update) (THIS ) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** ppidisp) PURE; 
	STDMETHOD_(HRESULT, SetAppModal) (THIS_ VARIANT_BOOL varfModal) PURE; 
};
typedef COMAddIns* LPOMADDINS;
#ifdef __cplusplus
// COMAddIns  {000C0339-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TCOMAddInsProxy : public __OCF TAutoProxy
{
public:
	TCOMAddInsProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1610743808]
	IDispatch* _Application();

	// Creator:   [dispid 1610743809]
	long Creator();

	// Item:   [dispid 0]
	void Item(TCOMAddInProxy& Obj, __OCF TAutoVal* Index);

	// Count:   [dispid 1]
	long Count();

	// _NewEnum:   [dispid -4]
	void _NewEnum(__OCF TAutoEnumerator<IUnknown*>& Obj);

	// Update:   [dispid 2]
	void Update();

	// Parent:   [dispid 3]
	IDispatch* Parent();

	// SetAppModal:   [dispid 4]
	void SetAppModal(/*__OWL*/ TBool varfModal);
};
#endif

// IAccessible
// {618736E0-3C3D-11CF-810C-00AA00389B71}
#undef INTERFACE
#define INTERFACE IAccessible
DECLARE_INTERFACE_(IAccessible, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE;
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE;
	STDMETHOD_(unsigned long, Release) (THIS ) PURE;
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE;
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE;
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE;
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE;
#endif
	// IAccessible methods:
	STDMETHOD_(HRESULT, Get_accParent) (THIS_ IDispatch** ppdispParent) PURE;
	STDMETHOD_(HRESULT, Get_accChildCount) (THIS_ long* pcountChildren) PURE;
	STDMETHOD_(HRESULT, Get_accChild) (THIS_ VARIANT varChild, IDispatch** ppdispChild) PURE;
	STDMETHOD_(HRESULT, Get_accName) (THIS_ VARIANT varChild, BSTR* pszName) PURE;
	STDMETHOD_(HRESULT, Get_accValue) (THIS_ VARIANT varChild, BSTR* pszValue) PURE;
	STDMETHOD_(HRESULT, Get_accDescription) (THIS_ VARIANT varChild, BSTR* pszDescription) PURE;
	STDMETHOD_(HRESULT, Get_accRole) (THIS_ VARIANT varChild, VARIANT* pvarRole) PURE;
	STDMETHOD_(HRESULT, Get_accState) (THIS_ VARIANT varChild, VARIANT* pvarState) PURE;
	STDMETHOD_(HRESULT, Get_accHelp) (THIS_ VARIANT varChild, BSTR* pszHelp) PURE;
	STDMETHOD_(HRESULT, Get_accHelpTopic) (THIS_ BSTR* pszHelpFile, VARIANT varChild, long* pidTopic) PURE;
	STDMETHOD_(HRESULT, Get_accKeyboardShortcut) (THIS_ VARIANT varChild, BSTR* pszKeyboardShortcut) PURE;
	STDMETHOD_(HRESULT, Get_accFocus) (THIS_ VARIANT* pvarChild) PURE;
	STDMETHOD_(HRESULT, Get_accSelection) (THIS_ VARIANT* pvarChildren) PURE;
	STDMETHOD_(HRESULT, Get_accDefaultAction) (THIS_ VARIANT varChild, BSTR* pszDefaultAction) PURE;
	STDMETHOD_(HRESULT, accSelect) (THIS_ long flagsSelect, VARIANT varChild) PURE; 
	STDMETHOD_(HRESULT, accLocation) (THIS_ long* pxLeft, long* pyTop, long* pcxWidth, long* pcyHeight, VARIANT varChild) PURE; 
	STDMETHOD_(HRESULT, accNavigate) (THIS_ long navDir, VARIANT varStart, VARIANT* pvarEndUpAt) PURE; 
	STDMETHOD_(HRESULT, accHitTest) (THIS_ long xLeft, long yTop, VARIANT* pvarChild) PURE; 
	STDMETHOD_(HRESULT, accDoDefaultAction) (THIS_ VARIANT varChild) PURE; 
	STDMETHOD_(HRESULT, Set_accName) (THIS_ VARIANT varChild, BSTR pszName) PURE; 
	STDMETHOD_(HRESULT, Set_accValue) (THIS_ VARIANT varChild, BSTR pszValue) PURE; 
};
typedef IAccessible* LPACCESSIBLE;
// _IMsoOleAccDispObj
// {000C0301-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE _IMsoOleAccDispObj
DECLARE_INTERFACE_(_IMsoOleAccDispObj, IAccessible)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE;
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
	// IAccessible methods:
	STDMETHOD_(HRESULT, Get_accParent) (THIS_ IDispatch** ppdispParent) PURE; 
	STDMETHOD_(HRESULT, Get_accChildCount) (THIS_ long* pcountChildren) PURE; 
	STDMETHOD_(HRESULT, Get_accChild) (THIS_ VARIANT varChild, IDispatch** ppdispChild) PURE; 
	STDMETHOD_(HRESULT, Get_accName) (THIS_ VARIANT varChild, BSTR* pszName) PURE; 
	STDMETHOD_(HRESULT, Get_accValue) (THIS_ VARIANT varChild, BSTR* pszValue) PURE; 
	STDMETHOD_(HRESULT, Get_accDescription) (THIS_ VARIANT varChild, BSTR* pszDescription) PURE; 
	STDMETHOD_(HRESULT, Get_accRole) (THIS_ VARIANT varChild, VARIANT* pvarRole) PURE; 
	STDMETHOD_(HRESULT, Get_accState) (THIS_ VARIANT varChild, VARIANT* pvarState) PURE; 
	STDMETHOD_(HRESULT, Get_accHelp) (THIS_ VARIANT varChild, BSTR* pszHelp) PURE; 
	STDMETHOD_(HRESULT, Get_accHelpTopic) (THIS_ BSTR* pszHelpFile, VARIANT varChild, long* pidTopic) PURE; 
	STDMETHOD_(HRESULT, Get_accKeyboardShortcut) (THIS_ VARIANT varChild, BSTR* pszKeyboardShortcut) PURE; 
	STDMETHOD_(HRESULT, Get_accFocus) (THIS_ VARIANT* pvarChild) PURE; 
	STDMETHOD_(HRESULT, Get_accSelection) (THIS_ VARIANT* pvarChildren) PURE; 
	STDMETHOD_(HRESULT, Get_accDefaultAction) (THIS_ VARIANT varChild, BSTR* pszDefaultAction) PURE; 
	STDMETHOD_(HRESULT, accSelect) (THIS_ long flagsSelect, VARIANT varChild) PURE; 
	STDMETHOD_(HRESULT, accLocation) (THIS_ long* pxLeft, long* pyTop, long* pcxWidth, long* pcyHeight, VARIANT varChild) PURE; 
	STDMETHOD_(HRESULT, accNavigate) (THIS_ long navDir, VARIANT varStart, VARIANT* pvarEndUpAt) PURE; 
	STDMETHOD_(HRESULT, accHitTest) (THIS_ long xLeft, long yTop, VARIANT* pvarChild) PURE; 
	STDMETHOD_(HRESULT, accDoDefaultAction) (THIS_ VARIANT varChild) PURE; 
	STDMETHOD_(HRESULT, Set_accName) (THIS_ VARIANT varChild, BSTR pszName) PURE; 
	STDMETHOD_(HRESULT, Set_accValue) (THIS_ VARIANT varChild, BSTR pszValue) PURE; 
#endif
	// _IMsoOleAccDispObj methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ IDispatch** ppidisp) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* plCreator) PURE; 
};
typedef _IMsoOleAccDispObj* LPIMSOOLEACCDISPOBJ;
// MsoControlOLEUsage
typedef enum tagMsoControlOLEUsage
{
	msoControlOLEUsageNeither = 0, 
	msoControlOLEUsageServer = 1, 
	msoControlOLEUsageClient = 2, 
	msoControlOLEUsageBoth = 3, 
} MsoControlOLEUsage;

// MsoControlType
typedef enum tagMsoControlType
{
	msoControlCustom = 0, 
	msoControlButton = 1, 
	msoControlEdit = 2, 
	msoControlDropdown = 3, 
	msoControlComboBox = 4, 
	msoControlButtonDropdown = 5, 
	msoControlSplitDropdown = 6, 
	msoControlOCXDropdown = 7, 
	msoControlGenericDropdown = 8, 
	msoControlGraphicDropdown = 9, 
	msoControlPopup = 10,
	msoControlGraphicPopup = 11, 
	msoControlButtonPopup = 12, 
	msoControlSplitButtonPopup = 13, 
	msoControlSplitButtonMRUPopup = 14, 
	msoControlLabel = 15, 
	msoControlExpandingGrid = 16, 
	msoControlSplitExpandingGrid = 17, 
	msoControlGrid = 18, 
	msoControlGauge = 19, 
	msoControlGraphicCombo = 20, 
	msoControlPane = 21, 
	msoControlActiveX = 22, 
	msoControlSpinner = 23, 
	msoControlLabelEx = 24, 
	msoControlWorkPane = 25, 
	msoControlAutoCompleteCombo = 26, 
} MsoControlType;

// CommandBarControl
// {000C0308-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE CommandBarControl
DECLARE_INTERFACE_(CommandBarControl, _IMsoOleAccDispObj)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE;
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
	// IAccessible methods:
	STDMETHOD_(HRESULT, Get_accParent) (THIS_ IDispatch** ppdispParent) PURE; 
	STDMETHOD_(HRESULT, Get_accChildCount) (THIS_ long* pcountChildren) PURE; 
	STDMETHOD_(HRESULT, Get_accChild) (THIS_ VARIANT varChild, IDispatch** ppdispChild) PURE; 
	STDMETHOD_(HRESULT, Get_accName) (THIS_ VARIANT varChild, BSTR* pszName) PURE; 
	STDMETHOD_(HRESULT, Get_accValue) (THIS_ VARIANT varChild, BSTR* pszValue) PURE; 
	STDMETHOD_(HRESULT, Get_accDescription) (THIS_ VARIANT varChild, BSTR* pszDescription) PURE; 
	STDMETHOD_(HRESULT, Get_accRole) (THIS_ VARIANT varChild, VARIANT* pvarRole) PURE; 
	STDMETHOD_(HRESULT, Get_accState) (THIS_ VARIANT varChild, VARIANT* pvarState) PURE; 
	STDMETHOD_(HRESULT, Get_accHelp) (THIS_ VARIANT varChild, BSTR* pszHelp) PURE; 
	STDMETHOD_(HRESULT, Get_accHelpTopic) (THIS_ BSTR* pszHelpFile, VARIANT varChild, long* pidTopic) PURE; 
	STDMETHOD_(HRESULT, Get_accKeyboardShortcut) (THIS_ VARIANT varChild, BSTR* pszKeyboardShortcut) PURE; 
	STDMETHOD_(HRESULT, Get_accFocus) (THIS_ VARIANT* pvarChild) PURE; 
	STDMETHOD_(HRESULT, Get_accSelection) (THIS_ VARIANT* pvarChildren) PURE; 
	STDMETHOD_(HRESULT, Get_accDefaultAction) (THIS_ VARIANT varChild, BSTR* pszDefaultAction) PURE; 
	STDMETHOD_(HRESULT, accSelect) (THIS_ long flagsSelect, VARIANT varChild) PURE; 
	STDMETHOD_(HRESULT, accLocation) (THIS_ long* pxLeft, long* pyTop, long* pcxWidth, long* pcyHeight, VARIANT varChild) PURE; 
	STDMETHOD_(HRESULT, accNavigate) (THIS_ long navDir, VARIANT varStart, VARIANT* pvarEndUpAt) PURE; 
	STDMETHOD_(HRESULT, accHitTest) (THIS_ long xLeft, long yTop, VARIANT* pvarChild) PURE; 
	STDMETHOD_(HRESULT, accDoDefaultAction) (THIS_ VARIANT varChild) PURE;
	STDMETHOD_(HRESULT, Set_accName) (THIS_ VARIANT varChild, BSTR pszName) PURE; 
	STDMETHOD_(HRESULT, Set_accValue) (THIS_ VARIANT varChild, BSTR pszValue) PURE; 
	// _IMsoOleAccDispObj methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ IDispatch** ppidisp) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* plCreator) PURE; 
#endif
	// CommandBarControl methods:
	STDMETHOD_(HRESULT, Get_BeginGroup) (THIS_ VARIANT_BOOL* pvarfBeginGroup) PURE; 
	STDMETHOD_(HRESULT, Set_BeginGroup) (THIS_ VARIANT_BOOL pvarfBeginGroup) PURE; 
	STDMETHOD_(HRESULT, Get_BuiltIn) (THIS_ VARIANT_BOOL* pvarfBuiltIn) PURE; 
	STDMETHOD_(HRESULT, Get_Caption) (THIS_ BSTR* pbstrCaption) PURE; 
	STDMETHOD_(HRESULT, Set_Caption) (THIS_ BSTR pbstrCaption) PURE; 
	STDMETHOD_(HRESULT, Get_Control) (THIS_ IDispatch** ppidisp) PURE; 
	STDMETHOD_(HRESULT, Copy) (THIS_ VARIANT Bar, VARIANT Before, CommandBarControl** ppcbc) PURE; 
	STDMETHOD_(HRESULT, Delete) (THIS_ VARIANT Temporary) PURE; 
	STDMETHOD_(HRESULT, Get_DescriptionText) (THIS_ BSTR* pbstrText) PURE; 
	STDMETHOD_(HRESULT, Set_DescriptionText) (THIS_ BSTR pbstrText) PURE; 
	STDMETHOD_(HRESULT, Get_Enabled) (THIS_ VARIANT_BOOL* pvarfEnabled) PURE; 
	STDMETHOD_(HRESULT, Set_Enabled) (THIS_ VARIANT_BOOL pvarfEnabled) PURE; 
	STDMETHOD_(HRESULT, Execute) (THIS ) PURE; 
	STDMETHOD_(HRESULT, Get_Height) (THIS_ int* pdy) PURE; 
	STDMETHOD_(HRESULT, Set_Height) (THIS_ int pdy) PURE; 
	STDMETHOD_(HRESULT, Get_HelpContextId) (THIS_ int* pid) PURE; 
	STDMETHOD_(HRESULT, Set_HelpContextId) (THIS_ int pid) PURE; 
	STDMETHOD_(HRESULT, Get_HelpFile) (THIS_ BSTR* pbstrFilename) PURE; 
	STDMETHOD_(HRESULT, Set_HelpFile) (THIS_ BSTR pbstrFilename) PURE; 
	STDMETHOD_(HRESULT, Get_Id) (THIS_ int* pid) PURE;
	STDMETHOD_(HRESULT, Get_Index) (THIS_ int* pi) PURE; 
	STDMETHOD_(HRESULT, Get_InstanceId) (THIS_ long* pid) PURE; 
	STDMETHOD_(HRESULT, Move) (THIS_ VARIANT Bar, VARIANT Before, CommandBarControl** ppcbc) PURE; 
	STDMETHOD_(HRESULT, Get_Left) (THIS_ int* px) PURE; 
	STDMETHOD_(HRESULT, Get_OLEUsage) (THIS_ MsoControlOLEUsage* pcou) PURE; 
	STDMETHOD_(HRESULT, Set_OLEUsage) (THIS_ MsoControlOLEUsage pcou) PURE; 
	STDMETHOD_(HRESULT, Get_OnAction) (THIS_ BSTR* pbstrOnAction) PURE; 
	STDMETHOD_(HRESULT, Set_OnAction) (THIS_ BSTR pbstrOnAction) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ CommandBar** ppcb) PURE; 
	STDMETHOD_(HRESULT, Get_Parameter) (THIS_ BSTR* pbstrParam) PURE; 
	STDMETHOD_(HRESULT, Set_Parameter) (THIS_ BSTR pbstrParam) PURE; 
	STDMETHOD_(HRESULT, Get_Priority) (THIS_ int* pnPri) PURE; 
	STDMETHOD_(HRESULT, Set_Priority) (THIS_ int pnPri) PURE; 
	STDMETHOD_(HRESULT, Reset) (THIS ) PURE; 
	STDMETHOD_(HRESULT, SetFocus) (THIS ) PURE; 
	STDMETHOD_(HRESULT, Get_Tag) (THIS_ BSTR* pbstrTag) PURE; 
	STDMETHOD_(HRESULT, Set_Tag) (THIS_ BSTR pbstrTag) PURE; 
	STDMETHOD_(HRESULT, Get_TooltipText) (THIS_ BSTR* pbstrTooltip) PURE; 
	STDMETHOD_(HRESULT, Set_TooltipText) (THIS_ BSTR pbstrTooltip) PURE; 
	STDMETHOD_(HRESULT, Get_Top) (THIS_ int* py) PURE; 
	STDMETHOD_(HRESULT, Get_Type) (THIS_ MsoControlType* ptype) PURE; 
	STDMETHOD_(HRESULT, Get_Visible) (THIS_ VARIANT_BOOL* pvarfVisible) PURE; 
	STDMETHOD_(HRESULT, Set_Visible) (THIS_ VARIANT_BOOL pvarfVisible) PURE; 
	STDMETHOD_(HRESULT, Get_Width) (THIS_ int* pdx) PURE; 
	STDMETHOD_(HRESULT, Set_Width) (THIS_ int pdx) PURE; 
	STDMETHOD_(HRESULT, Get_IsPriorityDropped) (THIS_ VARIANT_BOOL* pvarfDropped) PURE; 
	STDMETHOD_(HRESULT, Reserved1) (THIS ) PURE;
	STDMETHOD_(HRESULT, Reserved2) (THIS ) PURE; 
	STDMETHOD_(HRESULT, Reserved3) (THIS ) PURE; 
	STDMETHOD_(HRESULT, Reserved4) (THIS ) PURE; 
	STDMETHOD_(HRESULT, Reserved5) (THIS ) PURE; 
	STDMETHOD_(HRESULT, Reserved6) (THIS ) PURE; 
	STDMETHOD_(HRESULT, Reserved7) (THIS ) PURE; 
};
typedef CommandBarControl* LPOMMANDBARCONTROL;
#ifdef __cplusplus
// CommandBarControl  {000C0308-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TCommandBarControlProxy : public __OCF TAutoProxy
{
public:
	TCommandBarControlProxy() : TAutoProxy(0x0) {}

	// accParent:   [dispid -5000]
	IDispatch* accParent();

	// accChildCount:   [dispid -5001]
	long accChildCount();

	// accChild:   [dispid -5002]
	IDispatch* accChild(__OCF TAutoVal varChild);

	// accName:   [dispid -5003]
	__OCF TAutoString accName(__OCF TAutoVal varChild = __OCF TNoArg());

	// accValue:   [dispid -5004]
	__OCF TAutoString accValue(__OCF TAutoVal varChild = __OCF TNoArg());

	// accDescription:   [dispid -5005]
	__OCF TAutoString accDescription(__OCF TAutoVal varChild = __OCF TNoArg());

	// accRole:   [dispid -5006]
	__OCF TAutoVal accRole(__OCF TAutoVal varChild = __OCF TNoArg());

	// accState:   [dispid -5007]
	__OCF TAutoVal accState(__OCF TAutoVal varChild = __OCF TNoArg());

	// accHelp:   [dispid -5008]
	__OCF TAutoString accHelp(__OCF TAutoVal varChild = __OCF TNoArg());

	// accHelpTopic:   [dispid -5009]
	long accHelpTopic(BSTR* pszHelpFile, __OCF TAutoVal varChild = __OCF TNoArg());

	// accKeyboardShortcut:   [dispid -5010]
	__OCF TAutoString accKeyboardShortcut(__OCF TAutoVal varChild = __OCF TNoArg());

	// accFocus:   [dispid -5011]
	__OCF TAutoVal accFocus();

	// accSelection:   [dispid -5012]
	__OCF TAutoVal accSelection();

	// accDefaultAction:   [dispid -5013]
	__OCF TAutoString accDefaultAction(__OCF TAutoVal varChild = __OCF TNoArg());

	// accSelect:   [dispid -5014]
	void accSelect(long flagsSelect, __OCF TAutoVal varChild = __OCF TNoArg());

	// accLocation:   [dispid -5015]
	void accLocation(long* pxLeft, long* pyTop, long* pcxWidth, long* pcyHeight, __OCF TAutoVal varChild = __OCF TNoArg());

	// accNavigate:   [dispid -5016]
	__OCF TAutoVal accNavigate(long navDir, __OCF TAutoVal varStart = __OCF TNoArg());

	// accHitTest:   [dispid -5017]
	__OCF TAutoVal accHitTest(long xLeft, long yTop);

	// accDoDefaultAction:   [dispid -5018]
	void accDoDefaultAction(__OCF TAutoVal varChild = __OCF TNoArg());

	// accName:   [dispid -5003]
	void accName(__OCF TAutoVal varChild, __OCF TAutoString arg1);

	// accValue:   [dispid -5004]
	void accValue(__OCF TAutoVal varChild, __OCF TAutoString arg1);

	// _Application:   [dispid 1610809344]
	IDispatch* _Application();

	// Creator:   [dispid 1610809345]
	long Creator();

	// BeginGroup:   [dispid 1610874880]
	/*__OWL*/ TBool BeginGroup();

	// BeginGroup:   [dispid 1610874880]
	void BeginGroup(/*__OWL*/ TBool arg0);

	// BuiltIn:   [dispid 1610874882]
	/*__OWL*/ TBool BuiltIn();

	// Caption:   [dispid 1610874883]
	__OCF TAutoString Caption();

	// Caption:   [dispid 1610874883]
	void Caption(__OCF TAutoString arg0);

	// Control:   [dispid 1610874885]
	IDispatch* Control();

	// Copy:   [dispid 1610874886]
	void Copy(TCommandBarControlProxy& Obj, __OCF TAutoVal Bar = __OCF TNoArg(), __OCF TAutoVal Before = __OCF TNoArg());

	// Delete:   [dispid 1610874887]
	void Delete(__OCF TAutoVal Temporary = __OCF TNoArg());

	// DescriptionText:   [dispid 1610874888]
	__OCF TAutoString DescriptionText();

	// DescriptionText:   [dispid 1610874888]
	void DescriptionText(__OCF TAutoString arg0);

	// Enabled:   [dispid 1610874890]
	/*__OWL*/ TBool Enabled();

	// Enabled:   [dispid 1610874890]
	void Enabled(/*__OWL*/ TBool arg0);

	// Execute:   [dispid 1610874892]
	void Execute();

	// Height:   [dispid 1610874893]
	int Height();

	// Height:   [dispid 1610874893]
	void Height(int arg0);

	// HelpContextId:   [dispid 1610874895]
	int HelpContextId();

	// HelpContextId:   [dispid 1610874895]
	void HelpContextId(int arg0);

	// HelpFile:   [dispid 1610874897]
	__OCF TAutoString HelpFile();

	// HelpFile:   [dispid 1610874897]
	void HelpFile(__OCF TAutoString arg0);

	// Id:   [dispid 1610874899]
	int Id();

	// Index:   [dispid 1610874900]
	int Index();

	// InstanceId:   [dispid 1610874901]
	long InstanceId();

	// Move:   [dispid 1610874902]
	void Move(TCommandBarControlProxy& Obj, __OCF TAutoVal Bar = __OCF TNoArg(), __OCF TAutoVal Before = __OCF TNoArg());

	// Left:   [dispid 1610874903]
	int Left();

	// OLEUsage:   [dispid 1610874904]
	MsoControlOLEUsage OLEUsage();

	// OLEUsage:   [dispid 1610874904]
	void OLEUsage(MsoControlOLEUsage arg0);

	// OnAction:   [dispid 1610874906]
	__OCF TAutoString OnAction();

	// OnAction:   [dispid 1610874906]
	void OnAction(__OCF TAutoString arg0);

	// Parent:   [dispid 1610874908]
	void Parent(TCommandBarProxy& Obj);

	// Parameter:   [dispid 1610874909]
	__OCF TAutoString Parameter();

	// Parameter:   [dispid 1610874909]
	void Parameter(__OCF TAutoString arg0);

	// Priority:   [dispid 1610874911]
	int Priority();

	// Priority:   [dispid 1610874911]
	void Priority(int arg0);

	// Reset:   [dispid 1610874913]
	void Reset();

	// SetFocus:   [dispid 1610874914]
	void SetFocus();

	// Tag:   [dispid 1610874915]
	__OCF TAutoString Tag();

	// Tag:   [dispid 1610874915]
	void Tag(__OCF TAutoString arg0);

	// TooltipText:   [dispid 1610874917]
	__OCF TAutoString TooltipText();

	// TooltipText:   [dispid 1610874917]
	void TooltipText(__OCF TAutoString arg0);

	// Top:   [dispid 1610874919]
	int Top();

	// Type:   [dispid 1610874920]
	MsoControlType Type();

	// Visible:   [dispid 1610874921]
	/*__OWL*/ TBool Visible();

	// Visible:   [dispid 1610874921]
	void Visible(/*__OWL*/ TBool arg0);

	// Width:   [dispid 1610874923]
	int Width();

	// Width:   [dispid 1610874923]
	void Width(int arg0);

	// IsPriorityDropped:   [dispid 1610874925]
	/*__OWL*/ TBool IsPriorityDropped();

	// Reserved1:   [dispid 1610874926]
	void Reserved1();

	// Reserved2:   [dispid 1610874927]
	void Reserved2();

	// Reserved3:   [dispid 1610874928]
	void Reserved3();

	// Reserved4:   [dispid 1610874929]
	void Reserved4();

	// Reserved5:   [dispid 1610874930]
	void Reserved5();

	// Reserved6:   [dispid 1610874931]
	void Reserved6();

	// Reserved7:   [dispid 1610874932]
	void Reserved7();
};
#endif

// CommandBarControls
// {000C0306-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE CommandBarControls
DECLARE_INTERFACE_(CommandBarControls, _IMsoDispObj)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
	// _IMsoDispObj methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ IDispatch** ppidisp) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* plCreator) PURE; 
#endif
	// CommandBarControls methods:
	STDMETHOD_(HRESULT, Add) (THIS_ VARIANT Type, VARIANT Id, VARIANT Parameter, VARIANT Before, VARIANT Temporary, CommandBarControl** ppcbc) PURE; 
	STDMETHOD_(HRESULT, Get_Count) (THIS_ int* pcToolbarControls) PURE; 
	STDMETHOD_(HRESULT, Get_Item) (THIS_ VARIANT Index, CommandBarControl** ppcbc) PURE;
	STDMETHOD_(HRESULT, Get__NewEnum) (THIS_ IUnknown** ppienum) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ CommandBar** ppcb) PURE; 
};
typedef CommandBarControls* LPOMMANDBARCONTROLS;
#ifdef __cplusplus
// CommandBarControls  {000C0306-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TCommandBarControlsProxy : public __OCF TAutoProxy
{
public:
	TCommandBarControlsProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1610743808]
	IDispatch* _Application();

	// Creator:   [dispid 1610743809]
	long Creator();

	// Add:   [dispid 1610809344]
	void Add(TCommandBarControlProxy& Obj, __OCF TAutoVal Type = __OCF TNoArg(), __OCF TAutoVal Id = __OCF TNoArg(), __OCF TAutoVal Parameter = __OCF TNoArg(), __OCF TAutoVal Before = __OCF TNoArg(), __OCF TAutoVal Temporary = __OCF TNoArg());

	// Count:   [dispid 1610809345]
	int Count();

	// Item:   [dispid 0]
	void Item(TCommandBarControlProxy& Obj, __OCF TAutoVal Index);

	// _NewEnum:   [dispid -4]
	void _NewEnum(__OCF TAutoEnumerator<IUnknown*>& Obj);

	// Parent:   [dispid 1610809348]
	void Parent(TCommandBarProxy& Obj);
};
#endif

// MsoBarPosition
typedef enum tagMsoBarPosition
{
	msoBarLeft = 0, 
	msoBarTop = 1, 
	msoBarRight = 2, 
	msoBarBottom = 3, 
	msoBarFloating = 4, 
	msoBarPopup = 5, 
	msoBarMenuBar = 6, 
} MsoBarPosition;

// MsoBarProtection
typedef enum tagMsoBarProtection
{
	msoBarNoProtection = 0, 
	msoBarNoCustomize = 1, 
	msoBarNoResize = 2, 
	msoBarNoMove = 4,
	msoBarNoChangeVisible = 8, 
	msoBarNoChangeDock = 16, 
	msoBarNoVerticalDock = 32, 
	msoBarNoHorizontalDock = 64, 
} MsoBarProtection;

// MsoBarType
typedef enum tagMsoBarType
{
	msoBarTypeNormal = 0, 
	msoBarTypeMenuBar = 1, 
	msoBarTypePopup = 2, 
} MsoBarType;

// CommandBar
// {000C0304-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE CommandBar
DECLARE_INTERFACE_(CommandBar, _IMsoOleAccDispObj)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE;
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
	// IAccessible methods:
	STDMETHOD_(HRESULT, Get_accParent) (THIS_ IDispatch** ppdispParent) PURE; 
	STDMETHOD_(HRESULT, Get_accChildCount) (THIS_ long* pcountChildren) PURE; 
	STDMETHOD_(HRESULT, Get_accChild) (THIS_ VARIANT varChild, IDispatch** ppdispChild) PURE; 
	STDMETHOD_(HRESULT, Get_accName) (THIS_ VARIANT varChild, BSTR* pszName) PURE; 
	STDMETHOD_(HRESULT, Get_accValue) (THIS_ VARIANT varChild, BSTR* pszValue) PURE; 
	STDMETHOD_(HRESULT, Get_accDescription) (THIS_ VARIANT varChild, BSTR* pszDescription) PURE; 
	STDMETHOD_(HRESULT, Get_accRole) (THIS_ VARIANT varChild, VARIANT* pvarRole) PURE; 
	STDMETHOD_(HRESULT, Get_accState) (THIS_ VARIANT varChild, VARIANT* pvarState) PURE; 
	STDMETHOD_(HRESULT, Get_accHelp) (THIS_ VARIANT varChild, BSTR* pszHelp) PURE; 
	STDMETHOD_(HRESULT, Get_accHelpTopic) (THIS_ BSTR* pszHelpFile, VARIANT varChild, long* pidTopic) PURE; 
	STDMETHOD_(HRESULT, Get_accKeyboardShortcut) (THIS_ VARIANT varChild, BSTR* pszKeyboardShortcut) PURE; 
	STDMETHOD_(HRESULT, Get_accFocus) (THIS_ VARIANT* pvarChild) PURE; 
	STDMETHOD_(HRESULT, Get_accSelection) (THIS_ VARIANT* pvarChildren) PURE; 
	STDMETHOD_(HRESULT, Get_accDefaultAction) (THIS_ VARIANT varChild, BSTR* pszDefaultAction) PURE; 
	STDMETHOD_(HRESULT, accSelect) (THIS_ long flagsSelect, VARIANT varChild) PURE; 
	STDMETHOD_(HRESULT, accLocation) (THIS_ long* pxLeft, long* pyTop, long* pcxWidth, long* pcyHeight, VARIANT varChild) PURE; 
	STDMETHOD_(HRESULT, accNavigate) (THIS_ long navDir, VARIANT varStart, VARIANT* pvarEndUpAt) PURE; 
	STDMETHOD_(HRESULT, accHitTest) (THIS_ long xLeft, long yTop, VARIANT* pvarChild) PURE; 
	STDMETHOD_(HRESULT, accDoDefaultAction) (THIS_ VARIANT varChild) PURE; 
	STDMETHOD_(HRESULT, Set_accName) (THIS_ VARIANT varChild, BSTR pszName) PURE; 
	STDMETHOD_(HRESULT, Set_accValue) (THIS_ VARIANT varChild, BSTR pszValue) PURE; 
	// _IMsoOleAccDispObj methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ IDispatch** ppidisp) PURE;
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* plCreator) PURE; 
#endif
	// CommandBar methods:
	STDMETHOD_(HRESULT, Get_BuiltIn) (THIS_ VARIANT_BOOL* pvarfBuiltIn) PURE; 
	STDMETHOD_(HRESULT, Get_Context) (THIS_ BSTR* pbstrContext) PURE; 
	STDMETHOD_(HRESULT, Set_Context) (THIS_ BSTR pbstrContext) PURE; 
	STDMETHOD_(HRESULT, Get_Controls) (THIS_ CommandBarControls** ppcbcs) PURE; 
	STDMETHOD_(HRESULT, Delete) (THIS ) PURE; 
	STDMETHOD_(HRESULT, Get_Enabled) (THIS_ VARIANT_BOOL* pvarfEnabled) PURE; 
	STDMETHOD_(HRESULT, Set_Enabled) (THIS_ VARIANT_BOOL pvarfEnabled) PURE; 
	STDMETHOD_(HRESULT, FindControl) (THIS_ VARIANT Type, VARIANT Id, VARIANT Tag, VARIANT Visible, VARIANT Recursive, CommandBarControl** ppcbc) PURE; 
	STDMETHOD_(HRESULT, Get_Height) (THIS_ int* pdy) PURE; 
	STDMETHOD_(HRESULT, Set_Height) (THIS_ int pdy) PURE; 
	STDMETHOD_(HRESULT, Get_Index) (THIS_ int* pi) PURE; 
	STDMETHOD_(HRESULT, Get_InstanceId) (THIS_ long* pid) PURE; 
	STDMETHOD_(HRESULT, Get_Left) (THIS_ int* pxpLeft) PURE; 
	STDMETHOD_(HRESULT, Set_Left) (THIS_ int pxpLeft) PURE; 
	STDMETHOD_(HRESULT, Get_Name) (THIS_ BSTR* pbstrName) PURE; 
	STDMETHOD_(HRESULT, Set_Name) (THIS_ BSTR pbstrName) PURE; 
	STDMETHOD_(HRESULT, Get_NameLocal) (THIS_ BSTR* pbstrNameLocal) PURE; 
	STDMETHOD_(HRESULT, Set_NameLocal) (THIS_ BSTR pbstrNameLocal) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** ppidisp) PURE; 
	STDMETHOD_(HRESULT, Get_Position) (THIS_ MsoBarPosition* ppos) PURE; 
	STDMETHOD_(HRESULT, Set_Position) (THIS_ MsoBarPosition ppos) PURE; 
	STDMETHOD_(HRESULT, Get_RowIndex) (THIS_ int* piRow) PURE; 
	STDMETHOD_(HRESULT, Set_RowIndex) (THIS_ int piRow) PURE; 
	STDMETHOD_(HRESULT, Get_Protection) (THIS_ MsoBarProtection* pprot) PURE;
	STDMETHOD_(HRESULT, Set_Protection) (THIS_ MsoBarProtection pprot) PURE; 
	STDMETHOD_(HRESULT, Reset) (THIS ) PURE; 
	STDMETHOD_(HRESULT, ShowPopup) (THIS_ VARIANT x, VARIANT y) PURE; 
	STDMETHOD_(HRESULT, Get_Top) (THIS_ int* pypTop) PURE; 
	STDMETHOD_(HRESULT, Set_Top) (THIS_ int pypTop) PURE; 
	STDMETHOD_(HRESULT, Get_Type) (THIS_ MsoBarType* ptype) PURE; 
	STDMETHOD_(HRESULT, Get_Visible) (THIS_ VARIANT_BOOL* pvarfVisible) PURE; 
	STDMETHOD_(HRESULT, Set_Visible) (THIS_ VARIANT_BOOL pvarfVisible) PURE; 
	STDMETHOD_(HRESULT, Get_Width) (THIS_ int* pdx) PURE; 
	STDMETHOD_(HRESULT, Set_Width) (THIS_ int pdx) PURE; 
	STDMETHOD_(HRESULT, Get_AdaptiveMenu) (THIS_ VARIANT_BOOL* pvarfAdaptiveMenu) PURE; 
	STDMETHOD_(HRESULT, Set_AdaptiveMenu) (THIS_ VARIANT_BOOL pvarfAdaptiveMenu) PURE; 
	STDMETHOD_(HRESULT, Get_Id) (THIS_ int* pid) PURE; 
};
typedef CommandBar* LPOMMANDBAR;
#ifdef __cplusplus
// CommandBar  {000C0304-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TCommandBarProxy : public __OCF TAutoProxy
{
public:
	TCommandBarProxy() : TAutoProxy(0x0) {}

	// accParent:   [dispid -5000]
	IDispatch* accParent();

	// accChildCount:   [dispid -5001]
	long accChildCount();

	// accChild:   [dispid -5002]
	IDispatch* accChild(__OCF TAutoVal varChild);

	// accName:   [dispid -5003]
	__OCF TAutoString accName(__OCF TAutoVal varChild = __OCF TNoArg());

	// accValue:   [dispid -5004]
	__OCF TAutoString accValue(__OCF TAutoVal varChild = __OCF TNoArg());

	// accDescription:   [dispid -5005]
	__OCF TAutoString accDescription(__OCF TAutoVal varChild = __OCF TNoArg());

	// accRole:   [dispid -5006]
	__OCF TAutoVal accRole(__OCF TAutoVal varChild = __OCF TNoArg());

	// accState:   [dispid -5007]
	__OCF TAutoVal accState(__OCF TAutoVal varChild = __OCF TNoArg());

	// accHelp:   [dispid -5008]
	__OCF TAutoString accHelp(__OCF TAutoVal varChild = __OCF TNoArg());

	// accHelpTopic:   [dispid -5009]
	long accHelpTopic(BSTR* pszHelpFile, __OCF TAutoVal varChild = __OCF TNoArg());

	// accKeyboardShortcut:   [dispid -5010]
	__OCF TAutoString accKeyboardShortcut(__OCF TAutoVal varChild = __OCF TNoArg());

	// accFocus:   [dispid -5011]
	__OCF TAutoVal accFocus();

	// accSelection:   [dispid -5012]
	__OCF TAutoVal accSelection();

	// accDefaultAction:   [dispid -5013]
	__OCF TAutoString accDefaultAction(__OCF TAutoVal varChild = __OCF TNoArg());

	// accSelect:   [dispid -5014]
	void accSelect(long flagsSelect, __OCF TAutoVal varChild = __OCF TNoArg());

	// accLocation:   [dispid -5015]
	void accLocation(long* pxLeft, long* pyTop, long* pcxWidth, long* pcyHeight, __OCF TAutoVal varChild = __OCF TNoArg());

	// accNavigate:   [dispid -5016]
	__OCF TAutoVal accNavigate(long navDir, __OCF TAutoVal varStart = __OCF TNoArg());

	// accHitTest:   [dispid -5017]
	__OCF TAutoVal accHitTest(long xLeft, long yTop);

	// accDoDefaultAction:   [dispid -5018]
	void accDoDefaultAction(__OCF TAutoVal varChild = __OCF TNoArg());

	// accName:   [dispid -5003]
	void accName(__OCF TAutoVal varChild, __OCF TAutoString arg1);

	// accValue:   [dispid -5004]
	void accValue(__OCF TAutoVal varChild, __OCF TAutoString arg1);

	// _Application:   [dispid 1610809344]
	IDispatch* _Application();

	// Creator:   [dispid 1610809345]
	long Creator();

	// BuiltIn:   [dispid 1610874880]
	/*__OWL*/ TBool BuiltIn();

	// Context:   [dispid 1610874881]
	__OCF TAutoString Context();

	// Context:   [dispid 1610874881]
	void Context(__OCF TAutoString arg0);

	// Controls:   [dispid 1610874883]
	void Controls(TCommandBarControlsProxy& Obj);

	// Delete:   [dispid 1610874884]
	void Delete();

	// Enabled:   [dispid 1610874885]
	/*__OWL*/ TBool Enabled();

	// Enabled:   [dispid 1610874885]
	void Enabled(/*__OWL*/ TBool arg0);

	// FindControl:   [dispid 1610874887]
	void FindControl(TCommandBarControlProxy& Obj, __OCF TAutoVal Type = __OCF TNoArg(), __OCF TAutoVal Id = __OCF TNoArg(), __OCF TAutoVal Tag = __OCF TNoArg(), __OCF TAutoVal Visible = __OCF TNoArg(), __OCF TAutoVal Recursive = __OCF TNoArg());

	// Height:   [dispid 1610874888]
	int Height();

	// Height:   [dispid 1610874888]
	void Height(int arg0);

	// Index:   [dispid 1610874890]
	int Index();

	// InstanceId:   [dispid 1610874891]
	long InstanceId();

	// Left:   [dispid 1610874892]
	int Left();

	// Left:   [dispid 1610874892]
	void Left(int arg0);

	// Name:   [dispid 1610874894]
	__OCF TAutoString Name();

	// Name:   [dispid 1610874894]
	void Name(__OCF TAutoString arg0);

	// NameLocal:   [dispid 1610874896]
	__OCF TAutoString NameLocal();

	// NameLocal:   [dispid 1610874896]
	void NameLocal(__OCF TAutoString arg0);

	// Parent:   [dispid 1610874898]
	IDispatch* Parent();

	// Position:   [dispid 1610874899]
	MsoBarPosition Position();

	// Position:   [dispid 1610874899]
	void Position(MsoBarPosition arg0);

	// RowIndex:   [dispid 1610874901]
	int RowIndex();

	// RowIndex:   [dispid 1610874901]
	void RowIndex(int arg0);

	// Protection:   [dispid 1610874903]
	MsoBarProtection Protection();

	// Protection:   [dispid 1610874903]
	void Protection(MsoBarProtection arg0);

	// Reset:   [dispid 1610874905]
	void Reset();

	// ShowPopup:   [dispid 1610874906]
	void ShowPopup(__OCF TAutoVal x = __OCF TNoArg(), __OCF TAutoVal y = __OCF TNoArg());

	// Top:   [dispid 1610874907]
	int Top();

	// Top:   [dispid 1610874907]
	void Top(int arg0);

	// Type:   [dispid 1610874909]
	MsoBarType Type();

	// Visible:   [dispid 1610874910]
	/*__OWL*/ TBool Visible();

	// Visible:   [dispid 1610874910]
	void Visible(/*__OWL*/ TBool arg0);

	// Width:   [dispid 1610874912]
	int Width();

	// Width:   [dispid 1610874912]
	void Width(int arg0);

	// AdaptiveMenu:   [dispid 1610874914]
	/*__OWL*/ TBool AdaptiveMenu();

	// AdaptiveMenu:   [dispid 1610874914]
	void AdaptiveMenu(/*__OWL*/ TBool arg0);

	// Id:   [dispid 1610874916]
	int Id();
};
#endif

// Comments
// {00020940-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE Comments
DECLARE_INTERFACE_(Comments, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE;
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// Comments methods:
	STDMETHOD_(HRESULT, Get__NewEnum) (THIS_ IUnknown** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Count) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get_ShowBy) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Set_ShowBy) (THIS_ BSTR prop) PURE; 
	STDMETHOD_(HRESULT, Item) (THIS_ long Index, Comment** prop) PURE; 
	STDMETHOD_(HRESULT, Add) (THIS_ WordRange* , VARIANT* Text, Comment** prop) PURE; 
};
typedef Comments* LPOMMENTS;
#ifdef __cplusplus
// Comments  {00020940-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TCommentsProxy : public __OCF TAutoProxy
{
public:
	TCommentsProxy() : TAutoProxy(0x0) {}

	// _NewEnum:   [dispid -4]
	void _NewEnum(__OCF TAutoEnumerator<IUnknown*>& Obj);

	// Count:   [dispid 2]
	long Count();

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// ShowBy:   [dispid 1003]
	__OCF TAutoString ShowBy();

	// ShowBy:   [dispid 1003]
	void ShowBy(__OCF TAutoString arg0);

	// Item:   [dispid 0]
	void Item(TCommentProxy& Obj, long Index);

	// Add:   [dispid 4]
	void Add(TCommentProxy& Obj, WordRange* arg0, __OCF TAutoVal* Text = 0);
};
#endif

// WdBrowserLevel
typedef enum tagWdBrowserLevel
{
	wdBrowserLevelV4 = 0, 
	wdBrowserLevelMicrosoftInternetExplorer5 = 1, 
	wdBrowserLevelMicrosoftInternetExplorer6 = 2, 
} WdBrowserLevel;

// MsoScreenSize
typedef enum tagMsoScreenSize
{
	msoScreenSize544x376 = 0, 
	msoScreenSize640x480 = 1, 
	msoScreenSize720x512 = 2, 
	msoScreenSize800x600 = 3, 
	msoScreenSize1024x768 = 4, 
	msoScreenSize1152x882 = 5, 
	msoScreenSize1152x900 = 6, 
	msoScreenSize1280x1024 = 7, 
	msoScreenSize1600x1200 = 8, 
	msoScreenSize1800x1440 = 9, 
	msoScreenSize1920x1200 = 10, 
} MsoScreenSize;

// MsoTargetBrowser
typedef enum tagMsoTargetBrowser
{
	msoTargetBrowserV3 = 0, 
	msoTargetBrowserV4 = 1, 
	msoTargetBrowserIE4 = 2, 
	msoTargetBrowserIE5 = 3, 
	msoTargetBrowserIE6 = 4, 
} MsoTargetBrowser;

// DefaultWebOptions
// {000209E3-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE DefaultWebOptions
DECLARE_INTERFACE_(DefaultWebOptions, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// DefaultWebOptions methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE;
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get_OptimizeForBrowser) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_OptimizeForBrowser) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_BrowserLevel) (THIS_ WdBrowserLevel* prop) PURE; 
	STDMETHOD_(HRESULT, Set_BrowserLevel) (THIS_ WdBrowserLevel prop) PURE; 
	STDMETHOD_(HRESULT, Get_RelyOnCSS) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_RelyOnCSS) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_OrganizeInFolder) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_OrganizeInFolder) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_UpdateLinksOnSave) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_UpdateLinksOnSave) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_UseLongFileNames) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_UseLongFileNames) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_CheckIfOfficeIsHTMLEditor) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_CheckIfOfficeIsHTMLEditor) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_CheckIfWordIsDefaultHTMLEditor) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_CheckIfWordIsDefaultHTMLEditor) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_RelyOnVML) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_RelyOnVML) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_AllowPNG) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_AllowPNG) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_ScreenSize) (THIS_ MsoScreenSize* prop) PURE; 
	STDMETHOD_(HRESULT, Set_ScreenSize) (THIS_ MsoScreenSize prop) PURE; 
	STDMETHOD_(HRESULT, Get_PixelsPerInch) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Set_PixelsPerInch) (THIS_ long prop) PURE; 
	STDMETHOD_(HRESULT, Get_Encoding) (THIS_ MsoEncoding* prop) PURE;
	STDMETHOD_(HRESULT, Set_Encoding) (THIS_ MsoEncoding prop) PURE; 
	STDMETHOD_(HRESULT, Get_AlwaysSaveInDefaultEncoding) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_AlwaysSaveInDefaultEncoding) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_Fonts) (THIS_ WebPageFonts** prop) PURE; 
	STDMETHOD_(HRESULT, Get_FolderSuffix) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Get_TargetBrowser) (THIS_ MsoTargetBrowser* prop) PURE; 
	STDMETHOD_(HRESULT, Set_TargetBrowser) (THIS_ MsoTargetBrowser prop) PURE; 
	STDMETHOD_(HRESULT, Get_SaveNewWebPagesAsWebArchives) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_SaveNewWebPagesAsWebArchives) (THIS_ VARIANT_BOOL prop) PURE; 
};
typedef DefaultWebOptions* LPEFAULTWEBOPTIONS;
#ifdef __cplusplus
// DefaultWebOptions  {000209E3-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TDefaultWebOptionsProxy : public __OCF TAutoProxy
{
public:
	TDefaultWebOptionsProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// OptimizeForBrowser:   [dispid 1]
	/*__OWL*/ TBool OptimizeForBrowser();

	// OptimizeForBrowser:   [dispid 1]
	void OptimizeForBrowser(/*__OWL*/ TBool arg0);

	// BrowserLevel:   [dispid 2]
	WdBrowserLevel BrowserLevel();

	// BrowserLevel:   [dispid 2]
	void BrowserLevel(WdBrowserLevel arg0);

	// RelyOnCSS:   [dispid 3]
	/*__OWL*/ TBool RelyOnCSS();

	// RelyOnCSS:   [dispid 3]
	void RelyOnCSS(/*__OWL*/ TBool arg0);

	// OrganizeInFolder:   [dispid 4]
	/*__OWL*/ TBool OrganizeInFolder();

	// OrganizeInFolder:   [dispid 4]
	void OrganizeInFolder(/*__OWL*/ TBool arg0);

	// UpdateLinksOnSave:   [dispid 5]
	/*__OWL*/ TBool UpdateLinksOnSave();

	// UpdateLinksOnSave:   [dispid 5]
	void UpdateLinksOnSave(/*__OWL*/ TBool arg0);

	// UseLongFileNames:   [dispid 6]
	/*__OWL*/ TBool UseLongFileNames();

	// UseLongFileNames:   [dispid 6]
	void UseLongFileNames(/*__OWL*/ TBool arg0);

	// CheckIfOfficeIsHTMLEditor:   [dispid 7]
	/*__OWL*/ TBool CheckIfOfficeIsHTMLEditor();

	// CheckIfOfficeIsHTMLEditor:   [dispid 7]
	void CheckIfOfficeIsHTMLEditor(/*__OWL*/ TBool arg0);

	// CheckIfWordIsDefaultHTMLEditor:   [dispid 8]
	/*__OWL*/ TBool CheckIfWordIsDefaultHTMLEditor();

	// CheckIfWordIsDefaultHTMLEditor:   [dispid 8]
	void CheckIfWordIsDefaultHTMLEditor(/*__OWL*/ TBool arg0);

	// RelyOnVML:   [dispid 9]
	/*__OWL*/ TBool RelyOnVML();

	// RelyOnVML:   [dispid 9]
	void RelyOnVML(/*__OWL*/ TBool arg0);

	// AllowPNG:   [dispid 10]
	/*__OWL*/ TBool AllowPNG();

	// AllowPNG:   [dispid 10]
	void AllowPNG(/*__OWL*/ TBool arg0);

	// ScreenSize:   [dispid 11]
	MsoScreenSize ScreenSize();

	// ScreenSize:   [dispid 11]
	void ScreenSize(MsoScreenSize arg0);

	// PixelsPerInch:   [dispid 12]
	long PixelsPerInch();

	// PixelsPerInch:   [dispid 12]
	void PixelsPerInch(long arg0);

	// Encoding:   [dispid 13]
	MsoEncoding Encoding();

	// Encoding:   [dispid 13]
	void Encoding(MsoEncoding arg0);

	// AlwaysSaveInDefaultEncoding:   [dispid 14]
	/*__OWL*/ TBool AlwaysSaveInDefaultEncoding();

	// AlwaysSaveInDefaultEncoding:   [dispid 14]
	void AlwaysSaveInDefaultEncoding(/*__OWL*/ TBool arg0);

	// Fonts:   [dispid 15]
	void Fonts(TWebPageFontsProxy& Obj);

	// FolderSuffix:   [dispid 16]
	__OCF TAutoString FolderSuffix();

	// TargetBrowser:   [dispid 17]
	MsoTargetBrowser TargetBrowser();

	// TargetBrowser:   [dispid 17]
	void TargetBrowser(MsoTargetBrowser arg0);

	// SaveNewWebPagesAsWebArchives:   [dispid 18]
	/*__OWL*/ TBool SaveNewWebPagesAsWebArchives();

	// SaveNewWebPagesAsWebArchives:   [dispid 18]
	void SaveNewWebPagesAsWebArchives(/*__OWL*/ TBool arg0);
};
#endif

// WdWordDialog
typedef enum tagWdWordDialog
{
	wdDialogHelpAbout = 9, 
	wdDialogHelpWordPerfectHelp = 10, 
	wdDialogDocumentStatistics = 78, 
	wdDialogFileNew = 79, 
	wdDialogFileOpen = 80, 
	wdDialogMailMergeOpenDataSource = 81, 
	wdDialogMailMergeOpenHeaderSource = 82, 
	wdDialogFileSaveAs = 84, 
	wdDialogFileSummaryInfo = 86, 
	wdDialogToolsTemplates = 87, 
	wdDialogFilePrint = 88, 
	wdDialogFilePrintSetup = 97, 
	wdDialogFileFind = 99, 
	wdDialogFormatAddrFonts = 103, 
	wdDialogEditPasteSpecial = 111, 
	wdDialogEditFind = 112, 
	wdDialogEditReplace = 117, 
	wdDialogEditStyle = 120, 
	wdDialogEditLinks = 124, 
	wdDialogEditObject = 125, 
	wdDialogTableToText = 128, 
	wdDialogTextToTable = 127, 
	wdDialogTableInsertTable = 129, 
	wdDialogTableInsertCells = 130, 
	wdDialogTableInsertRow = 131, 
	wdDialogTableDeleteCells = 133, 
	wdDialogTableSplitCells = 137,
	wdDialogTableRowHeight = 142, 
	wdDialogTableColumnWidth = 143, 
	wdDialogToolsCustomize = 152, 
	wdDialogInsertBreak = 159, 
	wdDialogInsertSymbol = 162, 
	wdDialogInsertPicture = 163, 
	wdDialogInsertFile = 164, 
	wdDialogInsertDateTime = 165, 
	wdDialogInsertField = 166, 
	wdDialogInsertMergeField = 167, 
	wdDialogInsertBookmark = 168, 
	wdDialogMarkIndexEntry = 169, 
	wdDialogInsertIndex = 170, 
	wdDialogInsertTableOfContents = 171, 
	wdDialogInsertObject = 172, 
	wdDialogToolsCreateEnvelope = 173, 
	wdDialogFormatFont = 174, 
	wdDialogFormatParagraph = 175, 
	wdDialogFormatSectionLayout = 176, 
	wdDialogFormatColumns = 177, 
	wdDialogFileDocumentLayout = 178, 
	wdDialogFilePageSetup = 178, 
	wdDialogFormatTabs = 179, 
	wdDialogFormatStyle = 180, 
	wdDialogFormatDefineStyleFont = 181, 
	wdDialogFormatDefineStylePara = 182, 
	wdDialogFormatDefineStyleTabs = 183,
	wdDialogFormatDefineStyleFrame = 184, 
	wdDialogFormatDefineStyleBorders = 185, 
	wdDialogFormatDefineStyleLang = 186, 
	wdDialogFormatPicture = 187, 
	wdDialogToolsLanguage = 188, 
	wdDialogFormatBordersAndShading = 189, 
	wdDialogFormatFrame = 190, 
	wdDialogToolsThesaurus = 194, 
	wdDialogToolsHyphenation = 195, 
	wdDialogToolsBulletsNumbers = 196, 
	wdDialogToolsHighlightChanges = 197, 
	wdDialogToolsRevisions = 197, 
	wdDialogToolsCompareDocuments = 198, 
	wdDialogTableSort = 199, 
	wdDialogToolsOptionsGeneral = 203, 
	wdDialogToolsOptionsView = 204, 
	wdDialogToolsAdvancedSettings = 206, 
	wdDialogToolsOptionsPrint = 208, 
	wdDialogToolsOptionsSave = 209, 
	wdDialogToolsOptionsSpellingAndGrammar = 211, 
	wdDialogToolsOptionsUserInfo = 213, 
	wdDialogToolsMacroRecord = 214, 
	wdDialogToolsMacro = 215, 
	wdDialogWindowActivate = 220, 
	wdDialogFormatRetAddrFonts = 221, 
	wdDialogOrganizer = 222, 
	wdDialogToolsOptionsEdit = 224,
	wdDialogToolsOptionsFileLocations = 225, 
	wdDialogToolsWordCount = 228, 
	wdDialogControlRun = 235, 
	wdDialogInsertPageNumbers = 294, 
	wdDialogFormatPageNumber = 298, 
	wdDialogCopyFile = 300, 
	wdDialogFormatChangeCase = 322, 
	wdDialogUpdateTOC = 331, 
	wdDialogInsertDatabase = 341, 
	wdDialogTableFormula = 348, 
	wdDialogFormFieldOptions = 353, 
	wdDialogInsertCaption = 357, 
	wdDialogInsertCaptionNumbering = 358, 
	wdDialogInsertAutoCaption = 359, 
	wdDialogFormFieldHelp = 361, 
	wdDialogInsertCrossReference = 367, 
	wdDialogInsertFootnote = 370, 
	wdDialogNoteOptions = 373, 
	wdDialogToolsAutoCorrect = 378, 
	wdDialogToolsOptionsTrackChanges = 386, 
	wdDialogConvertObject = 392, 
	wdDialogInsertAddCaption = 402, 
	wdDialogConnect = 420, 
	wdDialogToolsCustomizeKeyboard = 432, 
	wdDialogToolsCustomizeMenus = 433, 
	wdDialogToolsMergeDocuments = 435, 
	wdDialogMarkTableOfContentsEntry = 442,
	wdDialogFileMacPageSetupGX = 444, 
	wdDialogFilePrintOneCopy = 445, 
	wdDialogEditFrame = 458, 
	wdDialogMarkCitation = 463, 
	wdDialogTableOfContentsOptions = 470, 
	wdDialogInsertTableOfAuthorities = 471, 
	wdDialogInsertTableOfFigures = 472, 
	wdDialogInsertIndexAndTables = 473, 
	wdDialogInsertFormField = 483, 
	wdDialogFormatDropCap = 488, 
	wdDialogToolsCreateLabels = 489, 
	wdDialogToolsProtectDocument = 503, 
	wdDialogFormatStyleGallery = 505, 
	wdDialogToolsAcceptRejectChanges = 506, 
	wdDialogHelpWordPerfectHelpOptions = 511, 
	wdDialogToolsUnprotectDocument = 521, 
	wdDialogToolsOptionsCompatibility = 525, 
	wdDialogTableOfCaptionsOptions = 551, 
	wdDialogTableAutoFormat = 563, 
	wdDialogMailMergeFindRecord = 569, 
	wdDialogReviewAfmtRevisions = 570, 
	wdDialogViewZoom = 577, 
	wdDialogToolsProtectSection = 578, 
	wdDialogFontSubstitution = 581, 
	wdDialogInsertSubdocument = 583, 
	wdDialogNewToolbar = 586, 
	wdDialogToolsEnvelopesAndLabels = 607,
	wdDialogFormatCallout = 610, 
	wdDialogTableFormatCell = 612, 
	wdDialogToolsCustomizeMenuBar = 615, 
	wdDialogFileRoutingSlip = 624, 
	wdDialogEditTOACategory = 625, 
	wdDialogToolsManageFields = 631, 
	wdDialogDrawSnapToGrid = 633, 
	wdDialogDrawAlign = 634, 
	wdDialogMailMergeCreateDataSource = 642, 
	wdDialogMailMergeCreateHeaderSource = 643, 
	wdDialogMailMerge = 676, 
	wdDialogMailMergeCheck = 677, 
	wdDialogMailMergeHelper = 680, 
	wdDialogMailMergeQueryOptions = 681, 
	wdDialogFileMacPageSetup = 685, 
	wdDialogListCommands = 723, 
	wdDialogEditCreatePublisher = 732, 
	wdDialogEditSubscribeTo = 733, 
	wdDialogEditPublishOptions = 735, 
	wdDialogEditSubscribeOptions = 736, 
	wdDialogFileMacCustomPageSetupGX = 737, 
	wdDialogToolsOptionsTypography = 739, 
	wdDialogToolsAutoCorrectExceptions = 762, 
	wdDialogToolsOptionsAutoFormatAsYouType = 778, 
	wdDialogMailMergeUseAddressBook = 779, 
	wdDialogToolsHangulHanjaConversion = 784, 
	wdDialogToolsOptionsFuzzy = 790,
	wdDialogEditGoToOld = 811, 
	wdDialogInsertNumber = 812, 
	wdDialogLetterWizard = 821, 
	wdDialogFormatBulletsAndNumbering = 824, 
	wdDialogToolsSpellingAndGrammar = 828, 
	wdDialogToolsCreateDirectory = 833, 
	wdDialogTableWrapping = 854, 
	wdDialogFormatTheme = 855, 
	wdDialogTableProperties = 861, 
	wdDialogEmailOptions = 863, 
	wdDialogCreateAutoText = 872, 
	wdDialogToolsAutoSummarize = 874, 
	wdDialogToolsGrammarSettings = 885, 
	wdDialogEditGoTo = 896, 
	wdDialogWebOptions = 898, 
	wdDialogInsertHyperlink = 925, 
	wdDialogToolsAutoManager = 915, 
	wdDialogFileVersions = 945, 
	wdDialogToolsOptionsAutoFormat = 959, 
	wdDialogFormatDrawingObject = 960, 
	wdDialogToolsOptions = 974, 
	wdDialogFitText = 983, 
	wdDialogEditAutoText = 985, 
	wdDialogPhoneticGuide = 986, 
	wdDialogToolsDictionary = 989, 
	wdDialogFileSaveVersion = 1007, 
	wdDialogToolsOptionsBidi = 1029,
	wdDialogFrameSetProperties = 1074, 
	wdDialogTableTableOptions = 1080, 
	wdDialogTableCellOptions = 1081, 
	wdDialogIMESetDefault = 1094, 
	wdDialogTCSCTranslator = 1156, 
	wdDialogHorizontalInVertical = 1160, 
	wdDialogTwoLinesInOne = 1161, 
	wdDialogFormatEncloseCharacters = 1162, 
	wdDialogConsistencyChecker = 1121, 
	wdDialogToolsOptionsSmartTag = 1395, 
	wdDialogFormatStylesCustom = 1248, 
	wdDialogCSSLinks = 1261, 
	wdDialogInsertWebComponent = 1324, 
	wdDialogToolsOptionsEditCopyPaste = 1356, 
	wdDialogToolsOptionsSecurity = 1361, 
	wdDialogSearch = 1363, 
	wdDialogShowRepairs = 1381, 
	wdDialogMailMergeInsertAsk = 4047, 
	wdDialogMailMergeInsertFillIn = 4048, 
	wdDialogMailMergeInsertIf = 4049, 
	wdDialogMailMergeInsertNextIf = 4053, 
	wdDialogMailMergeInsertSet = 4054, 
	wdDialogMailMergeInsertSkipIf = 4055, 
	wdDialogMailMergeFieldMapping = 1304, 
	wdDialogMailMergeInsertAddressBlock = 1305, 
	wdDialogMailMergeInsertGreetingLine = 1306, 
	wdDialogMailMergeInsertFields = 1307,
	wdDialogMailMergeRecipients = 1308, 
	wdDialogMailMergeFindRecipient = 1326, 
	wdDialogMailMergeSetDocumentType = 1339, 
	wdDialogXMLElementAttributes = 1460, 
	wdDialogSchemaLibrary = 1417, 
	wdDialogPermission = 1469, 
	wdDialogMyPermission = 1437, 
	wdDialogXMLOptions = 1425, 
	wdDialogFormattingRestrictions = 1427, 
} WdWordDialog;

// Dialogs
// {00020910-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE Dialogs
DECLARE_INTERFACE_(Dialogs, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE;
#endif
	// Dialogs methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get__NewEnum) (THIS_ IUnknown** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Count) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Item) (THIS_ WdWordDialog Index, Dialog** prop) PURE; 
};
typedef Dialogs* LPIALOGS;
#ifdef __cplusplus
// Dialogs  {00020910-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TDialogsProxy : public __OCF TAutoProxy
{
public:
	TDialogsProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// _NewEnum:   [dispid -4]
	void _NewEnum(__OCF TAutoEnumerator<IUnknown*>& Obj);

	// Count:   [dispid 1]
	long Count();

	// Item:   [dispid 0]
	void Item(TDialogProxy& Obj, WdWordDialog Index);
};
#endif

// Dictionaries
// {000209AC-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE Dictionaries
DECLARE_INTERFACE_(Dictionaries, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE;
#endif
	// Dictionaries methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get__NewEnum) (THIS_ IUnknown** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Count) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Maximum) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_ActiveCustomDictionary) (THIS_ Dictionary** prop) PURE; 
	STDMETHOD_(HRESULT, Set_ActiveCustomDictionary) (THIS_ Dictionary* prop) PURE; 
	STDMETHOD_(HRESULT, Item) (THIS_ VARIANT* Index, Dictionary** prop) PURE; 
	STDMETHOD_(HRESULT, Add) (THIS_ BSTR FileName, Dictionary** prop) PURE; 
	STDMETHOD_(HRESULT, ClearAll) (THIS ) PURE; 
};
typedef Dictionaries* LPICTIONARIES;
#ifdef __cplusplus
// Dictionaries  {000209AC-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TDictionariesProxy : public __OCF TAutoProxy
{
public:
	TDictionariesProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// _NewEnum:   [dispid -4]
	void _NewEnum(__OCF TAutoEnumerator<IUnknown*>& Obj);

	// Count:   [dispid 1]
	long Count();

	// Maximum:   [dispid 2]
	long Maximum();

	// ActiveCustomDictionary:   [dispid 3]
	void ActiveCustomDictionary(TDictionaryProxy& Obj);

	// ActiveCustomDictionary:   [dispid 3]
	void ActiveCustomDictionary(Dictionary* arg0);

	// Item:   [dispid 0]
	void Item(TDictionaryProxy& Obj, __OCF TAutoVal* Index);

	// Add:   [dispid 101]
	void Add(TDictionaryProxy& Obj, __OCF TAutoString FileName);

	// ClearAll:   [dispid 102]
	void ClearAll();
};
#endif

// WdDictionaryType
typedef enum tagWdDictionaryType
{
	wdSpelling = 0,
	wdGrammar = 1,
	wdThesaurus = 2,
	wdHyphenation = 3,
	wdSpellingComplete = 4,
	wdSpellingCustom = 5,
	wdSpellingLegal = 6,
	wdSpellingMedical = 7,
	wdHangulHanjaConversion = 8,
	wdHangulHanjaConversionCustom = 9,
} WdDictionaryType;

// Dictionary
// {000209AD-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE Dictionary
DECLARE_INTERFACE_(Dictionary, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE;
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// Dictionary methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Name) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Path) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Get_LanguageID) (THIS_ WdLanguageID* prop) PURE; 
	STDMETHOD_(HRESULT, Set_LanguageID) (THIS_ WdLanguageID prop) PURE; 
	STDMETHOD_(HRESULT, Get_ReadOnly) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Type) (THIS_ WdDictionaryType* prop) PURE; 
	STDMETHOD_(HRESULT, Get_LanguageSpecific) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_LanguageSpecific) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Delete) (THIS ) PURE; 
};
typedef Dictionary* LPICTIONARY;
#ifdef __cplusplus
// Dictionary  {000209AD-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TDictionaryProxy : public __OCF TAutoProxy
{
public:
	TDictionaryProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// Name:   [dispid 0]
	__OCF TAutoString Name();

	// Path:   [dispid 1]
	__OCF TAutoString Path();

	// LanguageID:   [dispid 2]
	WdLanguageID LanguageID();

	// LanguageID:   [dispid 2]
	void LanguageID(WdLanguageID arg0);

	// ReadOnly:   [dispid 3]
	/*__OWL*/ TBool ReadOnly();

	// Type:   [dispid 4]
	WdDictionaryType Type();

	// LanguageSpecific:   [dispid 5]
	/*__OWL*/ TBool LanguageSpecific();

	// LanguageSpecific:   [dispid 5]
	void LanguageSpecific(/*__OWL*/ TBool arg0);

	// Delete:   [dispid 101]
	void Delete();
};
#endif

// DocumentLibraryVersions
// {000C0388-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE DocumentLibraryVersions
DECLARE_INTERFACE_(DocumentLibraryVersions, _IMsoDispObj)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
	// _IMsoDispObj methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ IDispatch** ppidisp) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* plCreator) PURE; 
#endif
	// DocumentLibraryVersions methods:
	STDMETHOD_(HRESULT, Get_Item) (THIS_ long lIndex, DocumentLibraryVersion** ppidisp) PURE; 
	STDMETHOD_(HRESULT, Get_Count) (THIS_ long* lCount) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** ppidisp) PURE; 
	STDMETHOD_(HRESULT, Get_IsVersioningEnabled) (THIS_ VARIANT_BOOL* pvarfVersioningOn) PURE; 
	STDMETHOD_(HRESULT, Get__NewEnum) (THIS_ IUnknown** ppienum) PURE; 
};
typedef DocumentLibraryVersions* LPOCUMENTLIBRARYVERSIONS;
#ifdef __cplusplus
// DocumentLibraryVersions  {000C0388-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TDocumentLibraryVersionsProxy : public __OCF TAutoProxy
{
public:
	TDocumentLibraryVersionsProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1610743808]
	IDispatch* _Application();

	// Creator:   [dispid 1610743809]
	long Creator();

	// Item:   [dispid 0]
	void Item(TDocumentLibraryVersionProxy& Obj, long lIndex);

	// Count:   [dispid 1]
	long Count();

	// Parent:   [dispid 2]
	IDispatch* Parent();

	// IsVersioningEnabled:   [dispid 3]
	/*__OWL*/ TBool IsVersioningEnabled();

	// _NewEnum:   [dispid -4]
	void _NewEnum(__OCF TAutoEnumerator<IUnknown*>& Obj);
};
#endif

// WdEmailHTMLFidelity
typedef enum tagWdEmailHTMLFidelity
{
	wdEmailHTMLFidelityLow = 1, 
	wdEmailHTMLFidelityMedium = 2, 
	wdEmailHTMLFidelityHigh = 3, 
} WdEmailHTMLFidelity;

// EmailOptions
// {000209DB-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE EmailOptions
DECLARE_INTERFACE_(EmailOptions, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// EmailOptions methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get_UseThemeStyle) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_UseThemeStyle) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_MarkCommentsWith) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Set_MarkCommentsWith) (THIS_ BSTR prop) PURE; 
	STDMETHOD_(HRESULT, Get_MarkComments) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_MarkComments) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_EmailSignature) (THIS_ EmailSignature** prop) PURE; 
	STDMETHOD_(HRESULT, Get_ComposeStyle) (THIS_ Style** prop) PURE; 
	STDMETHOD_(HRESULT, Get_ReplyStyle) (THIS_ Style** prop) PURE; 
	STDMETHOD_(HRESULT, Get_ThemeName) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Set_ThemeName) (THIS_ BSTR prop) PURE; 
	STDMETHOD_(HRESULT, Get_Dummy1) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Dummy2) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Dummy3) (THIS ) PURE; 
	STDMETHOD_(HRESULT, Get_NewColorOnReply) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_NewColorOnReply) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_PlainTextStyle) (THIS_ Style** prop) PURE; 
	STDMETHOD_(HRESULT, Get_UseThemeStyleOnReply) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_UseThemeStyleOnReply) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_AutoFormatAsYouTypeApplyHeadings) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_AutoFormatAsYouTypeApplyHeadings) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_AutoFormatAsYouTypeApplyBorders) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_AutoFormatAsYouTypeApplyBorders) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_AutoFormatAsYouTypeApplyBulletedLists) (THIS_ VARIANT_BOOL* prop) PURE;
	STDMETHOD_(HRESULT, Set_AutoFormatAsYouTypeApplyBulletedLists) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_AutoFormatAsYouTypeApplyNumberedLists) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_AutoFormatAsYouTypeApplyNumberedLists) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_AutoFormatAsYouTypeReplaceQuotes) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_AutoFormatAsYouTypeReplaceQuotes) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_AutoFormatAsYouTypeReplaceSymbols) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_AutoFormatAsYouTypeReplaceSymbols) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_AutoFormatAsYouTypeReplaceOrdinals) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_AutoFormatAsYouTypeReplaceOrdinals) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_AutoFormatAsYouTypeReplaceFractions) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_AutoFormatAsYouTypeReplaceFractions) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_AutoFormatAsYouTypeReplacePlainTextEmphasis) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_AutoFormatAsYouTypeReplacePlainTextEmphasis) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_AutoFormatAsYouTypeFormatListItemBeginning) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_AutoFormatAsYouTypeFormatListItemBeginning) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_AutoFormatAsYouTypeDefineStyles) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_AutoFormatAsYouTypeDefineStyles) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_AutoFormatAsYouTypeReplaceHyperlinks) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_AutoFormatAsYouTypeReplaceHyperlinks) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_AutoFormatAsYouTypeApplyTables) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_AutoFormatAsYouTypeApplyTables) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_AutoFormatAsYouTypeApplyFirstIndents) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_AutoFormatAsYouTypeApplyFirstIndents) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_AutoFormatAsYouTypeApplyDates) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_AutoFormatAsYouTypeApplyDates) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_AutoFormatAsYouTypeApplyClosings) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_AutoFormatAsYouTypeApplyClosings) (THIS_ VARIANT_BOOL prop) PURE;
	STDMETHOD_(HRESULT, Get_AutoFormatAsYouTypeMatchParentheses) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_AutoFormatAsYouTypeMatchParentheses) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_AutoFormatAsYouTypeReplaceFarEastDashes) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_AutoFormatAsYouTypeReplaceFarEastDashes) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_AutoFormatAsYouTypeDeleteAutoSpaces) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_AutoFormatAsYouTypeDeleteAutoSpaces) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_AutoFormatAsYouTypeInsertClosings) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_AutoFormatAsYouTypeInsertClosings) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_AutoFormatAsYouTypeAutoLetterWizard) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_AutoFormatAsYouTypeAutoLetterWizard) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_AutoFormatAsYouTypeInsertOvers) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_AutoFormatAsYouTypeInsertOvers) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_RelyOnCSS) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_RelyOnCSS) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_HTMLFidelity) (THIS_ WdEmailHTMLFidelity* prop) PURE; 
	STDMETHOD_(HRESULT, Set_HTMLFidelity) (THIS_ WdEmailHTMLFidelity prop) PURE; 
	STDMETHOD_(HRESULT, Get_EmbedSmartTag) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_EmbedSmartTag) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_TabIndentKey) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_TabIndentKey) (THIS_ VARIANT_BOOL prop) PURE; 
};
typedef EmailOptions* LPMAILOPTIONS;
#ifdef __cplusplus
// EmailOptions  {000209DB-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TEmailOptionsProxy : public __OCF TAutoProxy
{
public:
	TEmailOptionsProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 100]
	WordApplication* _Application();

	// Creator:   [dispid 101]
	long Creator();

	// Parent:   [dispid 102]
	IDispatch* Parent();

	// UseThemeStyle:   [dispid 103]
	/*__OWL*/ TBool UseThemeStyle();

	// UseThemeStyle:   [dispid 103]
	void UseThemeStyle(/*__OWL*/ TBool arg0);

	// MarkCommentsWith:   [dispid 106]
	__OCF TAutoString MarkCommentsWith();

	// MarkCommentsWith:   [dispid 106]
	void MarkCommentsWith(__OCF TAutoString arg0);

	// MarkComments:   [dispid 107]
	/*__OWL*/ TBool MarkComments();

	// MarkComments:   [dispid 107]
	void MarkComments(/*__OWL*/ TBool arg0);

	// _EmailSignature:   [dispid 108]
	void _EmailSignature(TEmailSignatureProxy& Obj);

	// ComposeStyle:   [dispid 109]
	void ComposeStyle(TStyleProxy& Obj);

	// ReplyStyle:   [dispid 110]
	void ReplyStyle(TStyleProxy& Obj);

	// ThemeName:   [dispid 114]
	__OCF TAutoString ThemeName();

	// ThemeName:   [dispid 114]
	void ThemeName(__OCF TAutoString arg0);

	// Dummy1:   [dispid 111]
	/*__OWL*/ TBool Dummy1();

	// Dummy2:   [dispid 112]
	/*__OWL*/ TBool Dummy2();

	// Dummy3:   [dispid 113]
	void Dummy3();

	// NewColorOnReply:   [dispid 116]
	/*__OWL*/ TBool NewColorOnReply();

	// NewColorOnReply:   [dispid 116]
	void NewColorOnReply(/*__OWL*/ TBool arg0);

	// PlainTextStyle:   [dispid 117]
	void PlainTextStyle(TStyleProxy& Obj);

	// UseThemeStyleOnReply:   [dispid 118]
	/*__OWL*/ TBool UseThemeStyleOnReply();

	// UseThemeStyleOnReply:   [dispid 118]
	void UseThemeStyleOnReply(/*__OWL*/ TBool arg0);

	// AutoFormatAsYouTypeApplyHeadings:   [dispid 260]
	/*__OWL*/ TBool AutoFormatAsYouTypeApplyHeadings();

	// AutoFormatAsYouTypeApplyHeadings:   [dispid 260]
	void AutoFormatAsYouTypeApplyHeadings(/*__OWL*/ TBool arg0);

	// AutoFormatAsYouTypeApplyBorders:   [dispid 261]
	/*__OWL*/ TBool AutoFormatAsYouTypeApplyBorders();

	// AutoFormatAsYouTypeApplyBorders:   [dispid 261]
	void AutoFormatAsYouTypeApplyBorders(/*__OWL*/ TBool arg0);

	// AutoFormatAsYouTypeApplyBulletedLists:   [dispid 262]
	/*__OWL*/ TBool AutoFormatAsYouTypeApplyBulletedLists();

	// AutoFormatAsYouTypeApplyBulletedLists:   [dispid 262]
	void AutoFormatAsYouTypeApplyBulletedLists(/*__OWL*/ TBool arg0);

	// AutoFormatAsYouTypeApplyNumberedLists:   [dispid 263]
	/*__OWL*/ TBool AutoFormatAsYouTypeApplyNumberedLists();

	// AutoFormatAsYouTypeApplyNumberedLists:   [dispid 263]
	void AutoFormatAsYouTypeApplyNumberedLists(/*__OWL*/ TBool arg0);

	// AutoFormatAsYouTypeReplaceQuotes:   [dispid 264]
	/*__OWL*/ TBool AutoFormatAsYouTypeReplaceQuotes();

	// AutoFormatAsYouTypeReplaceQuotes:   [dispid 264]
	void AutoFormatAsYouTypeReplaceQuotes(/*__OWL*/ TBool arg0);

	// AutoFormatAsYouTypeReplaceSymbols:   [dispid 265]
	/*__OWL*/ TBool AutoFormatAsYouTypeReplaceSymbols();

	// AutoFormatAsYouTypeReplaceSymbols:   [dispid 265]
	void AutoFormatAsYouTypeReplaceSymbols(/*__OWL*/ TBool arg0);

	// AutoFormatAsYouTypeReplaceOrdinals:   [dispid 266]
	/*__OWL*/ TBool AutoFormatAsYouTypeReplaceOrdinals();

	// AutoFormatAsYouTypeReplaceOrdinals:   [dispid 266]
	void AutoFormatAsYouTypeReplaceOrdinals(/*__OWL*/ TBool arg0);

	// AutoFormatAsYouTypeReplaceFractions:   [dispid 267]
	/*__OWL*/ TBool AutoFormatAsYouTypeReplaceFractions();

	// AutoFormatAsYouTypeReplaceFractions:   [dispid 267]
	void AutoFormatAsYouTypeReplaceFractions(/*__OWL*/ TBool arg0);

	// AutoFormatAsYouTypeReplacePlainTextEmphasis:   [dispid 268]
	/*__OWL*/ TBool AutoFormatAsYouTypeReplacePlainTextEmphasis();

	// AutoFormatAsYouTypeReplacePlainTextEmphasis:   [dispid 268]
	void AutoFormatAsYouTypeReplacePlainTextEmphasis(/*__OWL*/ TBool arg0);

	// AutoFormatAsYouTypeFormatListItemBeginning:   [dispid 269]
	/*__OWL*/ TBool AutoFormatAsYouTypeFormatListItemBeginning();

	// AutoFormatAsYouTypeFormatListItemBeginning:   [dispid 269]
	void AutoFormatAsYouTypeFormatListItemBeginning(/*__OWL*/ TBool arg0);

	// AutoFormatAsYouTypeDefineStyles:   [dispid 270]
	/*__OWL*/ TBool AutoFormatAsYouTypeDefineStyles();

	// AutoFormatAsYouTypeDefineStyles:   [dispid 270]
	void AutoFormatAsYouTypeDefineStyles(/*__OWL*/ TBool arg0);

	// AutoFormatAsYouTypeReplaceHyperlinks:   [dispid 272]
	/*__OWL*/ TBool AutoFormatAsYouTypeReplaceHyperlinks();

	// AutoFormatAsYouTypeReplaceHyperlinks:   [dispid 272]
	void AutoFormatAsYouTypeReplaceHyperlinks(/*__OWL*/ TBool arg0);

	// AutoFormatAsYouTypeApplyTables:   [dispid 290]
	/*__OWL*/ TBool AutoFormatAsYouTypeApplyTables();

	// AutoFormatAsYouTypeApplyTables:   [dispid 290]
	void AutoFormatAsYouTypeApplyTables(/*__OWL*/ TBool arg0);

	// AutoFormatAsYouTypeApplyFirstIndents:   [dispid 297]
	/*__OWL*/ TBool AutoFormatAsYouTypeApplyFirstIndents();

	// AutoFormatAsYouTypeApplyFirstIndents:   [dispid 297]
	void AutoFormatAsYouTypeApplyFirstIndents(/*__OWL*/ TBool arg0);

	// AutoFormatAsYouTypeApplyDates:   [dispid 298]
	/*__OWL*/ TBool AutoFormatAsYouTypeApplyDates();

	// AutoFormatAsYouTypeApplyDates:   [dispid 298]
	void AutoFormatAsYouTypeApplyDates(/*__OWL*/ TBool arg0);

	// AutoFormatAsYouTypeApplyClosings:   [dispid 299]
	/*__OWL*/ TBool AutoFormatAsYouTypeApplyClosings();

	// AutoFormatAsYouTypeApplyClosings:   [dispid 299]
	void AutoFormatAsYouTypeApplyClosings(/*__OWL*/ TBool arg0);

	// AutoFormatAsYouTypeMatchParentheses:   [dispid 300]
	/*__OWL*/ TBool AutoFormatAsYouTypeMatchParentheses();

	// AutoFormatAsYouTypeMatchParentheses:   [dispid 300]
	void AutoFormatAsYouTypeMatchParentheses(/*__OWL*/ TBool arg0);

	// AutoFormatAsYouTypeReplaceFarEastDashes:   [dispid 301]
	/*__OWL*/ TBool AutoFormatAsYouTypeReplaceFarEastDashes();

	// AutoFormatAsYouTypeReplaceFarEastDashes:   [dispid 301]
	void AutoFormatAsYouTypeReplaceFarEastDashes(/*__OWL*/ TBool arg0);

	// AutoFormatAsYouTypeDeleteAutoSpaces:   [dispid 302]
	/*__OWL*/ TBool AutoFormatAsYouTypeDeleteAutoSpaces();

	// AutoFormatAsYouTypeDeleteAutoSpaces:   [dispid 302]
	void AutoFormatAsYouTypeDeleteAutoSpaces(/*__OWL*/ TBool arg0);

	// AutoFormatAsYouTypeInsertClosings:   [dispid 303]
	/*__OWL*/ TBool AutoFormatAsYouTypeInsertClosings();

	// AutoFormatAsYouTypeInsertClosings:   [dispid 303]
	void AutoFormatAsYouTypeInsertClosings(/*__OWL*/ TBool arg0);

	// AutoFormatAsYouTypeAutoLetterWizard:   [dispid 304]
	/*__OWL*/ TBool AutoFormatAsYouTypeAutoLetterWizard();

	// AutoFormatAsYouTypeAutoLetterWizard:   [dispid 304]
	void AutoFormatAsYouTypeAutoLetterWizard(/*__OWL*/ TBool arg0);

	// AutoFormatAsYouTypeInsertOvers:   [dispid 305]
	/*__OWL*/ TBool AutoFormatAsYouTypeInsertOvers();

	// AutoFormatAsYouTypeInsertOvers:   [dispid 305]
	void AutoFormatAsYouTypeInsertOvers(/*__OWL*/ TBool arg0);

	// RelyOnCSS:   [dispid 306]
	/*__OWL*/ TBool RelyOnCSS();

	// RelyOnCSS:   [dispid 306]
	void RelyOnCSS(/*__OWL*/ TBool arg0);

	// HTMLFidelity:   [dispid 307]
	WdEmailHTMLFidelity HTMLFidelity();

	// HTMLFidelity:   [dispid 307]
	void HTMLFidelity(WdEmailHTMLFidelity arg0);

	// EmbedSmartTag:   [dispid 308]
	/*__OWL*/ TBool EmbedSmartTag();

	// EmbedSmartTag:   [dispid 308]
	void EmbedSmartTag(/*__OWL*/ TBool arg0);

	// TabIndentKey:   [dispid 309]
	/*__OWL*/ TBool TabIndentKey();

	// TabIndentKey:   [dispid 309]
	void TabIndentKey(/*__OWL*/ TBool arg0);
};
#endif

// Email
// {000209DD-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE Email
DECLARE_INTERFACE_(Email, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE;
#endif
	// Email methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get_CurrentEmailAuthor) (THIS_ EmailAuthor** prop) PURE; 
};
typedef Email* LPMAIL;
#ifdef __cplusplus
// Email  {000209DD-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TEmailProxy : public __OCF TAutoProxy
{
public:
	TEmailProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 100]
	WordApplication* _Application();

	// Creator:   [dispid 101]
	long Creator();

	// Parent:   [dispid 102]
	IDispatch* Parent();

	// CurrentEmailAuthor:   [dispid 105]
	void CurrentEmailAuthor(TEmailAuthorProxy& Obj);
};
#endif

// EmailSignature
// {000209DC-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE EmailSignature
DECLARE_INTERFACE_(EmailSignature, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// EmailSignature methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get_NewMessageSignature) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Set_NewMessageSignature) (THIS_ BSTR prop) PURE; 
	STDMETHOD_(HRESULT, Get_ReplyMessageSignature) (THIS_ BSTR* prop) PURE;
	STDMETHOD_(HRESULT, Set_ReplyMessageSignature) (THIS_ BSTR prop) PURE; 
	STDMETHOD_(HRESULT, Get_EmailSignatureEntries) (THIS_ EmailSignatureEntries** prop) PURE; 
};
typedef EmailSignature* LPMAILSIGNATURE;
#ifdef __cplusplus
// EmailSignature  {000209DC-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TEmailSignatureProxy : public __OCF TAutoProxy
{
public:
	TEmailSignatureProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 100]
	WordApplication* _Application();

	// Creator:   [dispid 101]
	long Creator();

	// Parent:   [dispid 102]
	IDispatch* Parent();

	// NewMessageSignature:   [dispid 103]
	__OCF TAutoString NewMessageSignature();

	// NewMessageSignature:   [dispid 103]
	void NewMessageSignature(__OCF TAutoString arg0);

	// ReplyMessageSignature:   [dispid 104]
	__OCF TAutoString ReplyMessageSignature();

	// ReplyMessageSignature:   [dispid 104]
	void ReplyMessageSignature(__OCF TAutoString arg0);

	// _EmailSignatureEntries:   [dispid 105]
	void _EmailSignatureEntries(TEmailSignatureEntriesProxy& Obj);
};
#endif

// WdEndnoteLocation
typedef enum tagWdEndnoteLocation
{
	wdEndOfSection = 0, 
	wdEndOfDocument = 1, 
} WdEndnoteLocation;

// WdNoteNumberStyle
typedef enum tagWdNoteNumberStyle
{
	wdNoteNumberStyleArabic = 0, 
	wdNoteNumberStyleUppercaseRoman = 1, 
	wdNoteNumberStyleLowercaseRoman = 2, 
	wdNoteNumberStyleUppercaseLetter = 3, 
	wdNoteNumberStyleLowercaseLetter = 4, 
	wdNoteNumberStyleSymbol = 9,
	wdNoteNumberStyleArabicFullWidth = 14, 
	wdNoteNumberStyleKanji = 10, 
	wdNoteNumberStyleKanjiDigit = 11, 
	wdNoteNumberStyleKanjiTraditional = 16, 
	wdNoteNumberStyleNumberInCircle = 18, 
	wdNoteNumberStyleHanjaRead = 41, 
	wdNoteNumberStyleHanjaReadDigit = 42, 
	wdNoteNumberStyleTradChinNum1 = 33, 
	wdNoteNumberStyleTradChinNum2 = 34, 
	wdNoteNumberStyleSimpChinNum1 = 37, 
	wdNoteNumberStyleSimpChinNum2 = 38, 
	wdNoteNumberStyleHebrewLetter1 = 45, 
	wdNoteNumberStyleArabicLetter1 = 46, 
	wdNoteNumberStyleHebrewLetter2 = 47, 
	wdNoteNumberStyleArabicLetter2 = 48, 
	wdNoteNumberStyleHindiLetter1 = 49, 
	wdNoteNumberStyleHindiLetter2 = 50, 
	wdNoteNumberStyleHindiArabic = 51, 
	wdNoteNumberStyleHindiCardinalText = 52, 
	wdNoteNumberStyleThaiLetter = 53, 
	wdNoteNumberStyleThaiArabic = 54, 
	wdNoteNumberStyleThaiCardinalText = 55, 
	wdNoteNumberStyleVietCardinalText = 56, 
} WdNoteNumberStyle;

// WdNumberingRule
typedef enum tagWdNumberingRule
{
	wdRestartContinuous = 0, 
	wdRestartSection = 1, 
	wdRestartPage = 2, 
} WdNumberingRule;

// Endnotes
// {00020941-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE Endnotes
DECLARE_INTERFACE_(Endnotes, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// Endnotes methods:
	STDMETHOD_(HRESULT, Get__NewEnum) (THIS_ IUnknown** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Count) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE;
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Location) (THIS_ WdEndnoteLocation* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Location) (THIS_ WdEndnoteLocation prop) PURE; 
	STDMETHOD_(HRESULT, Get_NumberStyle) (THIS_ WdNoteNumberStyle* prop) PURE; 
	STDMETHOD_(HRESULT, Set_NumberStyle) (THIS_ WdNoteNumberStyle prop) PURE; 
	STDMETHOD_(HRESULT, Get_StartingNumber) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Set_StartingNumber) (THIS_ long prop) PURE; 
	STDMETHOD_(HRESULT, Get_NumberingRule) (THIS_ WdNumberingRule* prop) PURE; 
	STDMETHOD_(HRESULT, Set_NumberingRule) (THIS_ WdNumberingRule prop) PURE; 
	STDMETHOD_(HRESULT, Get_Separator) (THIS_ WordRange** prop) PURE; 
	STDMETHOD_(HRESULT, Get_ContinuationSeparator) (THIS_ WordRange** prop) PURE; 
	STDMETHOD_(HRESULT, Get_ContinuationNotice) (THIS_ WordRange** prop) PURE; 
	STDMETHOD_(HRESULT, Item) (THIS_ long Index, Endnote** prop) PURE; 
	STDMETHOD_(HRESULT, Add) (THIS_ WordRange* , VARIANT* Reference, VARIANT* Text, Endnote** prop) PURE; 
	STDMETHOD_(HRESULT, Convert) (THIS ) PURE; 
	STDMETHOD_(HRESULT, SwapWithFootnotes) (THIS ) PURE; 
	STDMETHOD_(HRESULT, ResetSeparator) (THIS ) PURE; 
	STDMETHOD_(HRESULT, ResetContinuationSeparator) (THIS ) PURE; 
	STDMETHOD_(HRESULT, ResetContinuationNotice) (THIS ) PURE; 
};
typedef Endnotes* LPNDNOTES;
#ifdef __cplusplus
// Endnotes  {00020941-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TEndnotesProxy : public __OCF TAutoProxy
{
public:
	TEndnotesProxy() : TAutoProxy(0x0) {}

	// _NewEnum:   [dispid -4]
	void _NewEnum(__OCF TAutoEnumerator<IUnknown*>& Obj);

	// Count:   [dispid 2]
	long Count();

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// Location:   [dispid 100]
	WdEndnoteLocation Location();

	// Location:   [dispid 100]
	void Location(WdEndnoteLocation arg0);

	// NumberStyle:   [dispid 101]
	WdNoteNumberStyle NumberStyle();

	// NumberStyle:   [dispid 101]
	void NumberStyle(WdNoteNumberStyle arg0);

	// StartingNumber:   [dispid 102]
	long StartingNumber();

	// StartingNumber:   [dispid 102]
	void StartingNumber(long arg0);

	// NumberingRule:   [dispid 103]
	WdNumberingRule NumberingRule();

	// NumberingRule:   [dispid 103]
	void NumberingRule(WdNumberingRule arg0);

	// Separator:   [dispid 104]
	void Separator(TRangeProxy& Obj);

	// ContinuationSeparator:   [dispid 105]
	void ContinuationSeparator(TRangeProxy& Obj);

	// ContinuationNotice:   [dispid 106]
	void ContinuationNotice(TRangeProxy& Obj);

	// Item:   [dispid 0]
	void Item(TEndnoteProxy& Obj, long Index);

	// Add:   [dispid 4]
	void Add(TEndnoteProxy& Obj, WordRange* arg0, __OCF TAutoVal* Reference = 0, __OCF TAutoVal* Text = 0);

	// Convert:   [dispid 5]
	void Convert();

	// SwapWithFootnotes:   [dispid 6]
	void SwapWithFootnotes();

	// ResetSeparator:   [dispid 7]
	void ResetSeparator();

	// ResetContinuationSeparator:   [dispid 8]
	void ResetContinuationSeparator();

	// ResetContinuationNotice:   [dispid 9]
	void ResetContinuationNotice();
};
#endif

// WdPaperTray
typedef enum tagWdPaperTray
{
	wdPrinterDefaultBin = 0, 
	wdPrinterUpperBin = 1, 
	wdPrinterOnlyBin = 1, 
	wdPrinterLowerBin = 2,
	wdPrinterMiddleBin = 3, 
	wdPrinterManualFeed = 4, 
	wdPrinterEnvelopeFeed = 5, 
	wdPrinterManualEnvelopeFeed = 6, 
	wdPrinterAutomaticSheetFeed = 7, 
	wdPrinterTractorFeed = 8, 
	wdPrinterSmallFormatBin = 9, 
	wdPrinterLargeFormatBin = 10, 
	wdPrinterLargeCapacityBin = 11, 
	wdPrinterPaperCassette = 14, 
	wdPrinterFormSource = 15, 
} WdPaperTray;

// WdEnvelopeOrientation
typedef enum tagWdEnvelopeOrientation
{
	wdLeftPortrait = 0, 
	wdCenterPortrait = 1, 
	wdRightPortrait = 2, 
	wdLeftLandscape = 3, 
	wdCenterLandscape = 4, 
	wdRightLandscape = 5, 
	wdLeftClockwise = 6, 
	wdCenterClockwise = 7, 
	wdRightClockwise = 8, 
} WdEnvelopeOrientation;

// Envelope
// {00020918-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE Envelope
DECLARE_INTERFACE_(Envelope, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// Envelope methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Address) (THIS_ WordRange** prop) PURE; 
	STDMETHOD_(HRESULT, Get_ReturnAddress) (THIS_ WordRange** prop) PURE; 
	STDMETHOD_(HRESULT, Get_DefaultPrintBarCode) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_DefaultPrintBarCode) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_DefaultPrintFIMA) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_DefaultPrintFIMA) (THIS_ VARIANT_BOOL prop) PURE;
	STDMETHOD_(HRESULT, Get_DefaultHeight) (THIS_ float* prop) PURE; 
	STDMETHOD_(HRESULT, Set_DefaultHeight) (THIS_ float prop) PURE; 
	STDMETHOD_(HRESULT, Get_DefaultWidth) (THIS_ float* prop) PURE; 
	STDMETHOD_(HRESULT, Set_DefaultWidth) (THIS_ float prop) PURE; 
	STDMETHOD_(HRESULT, Get_DefaultSize) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Set_DefaultSize) (THIS_ BSTR prop) PURE; 
	STDMETHOD_(HRESULT, Get_DefaultOmitReturnAddress) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_DefaultOmitReturnAddress) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_FeedSource) (THIS_ WdPaperTray* prop) PURE; 
	STDMETHOD_(HRESULT, Set_FeedSource) (THIS_ WdPaperTray prop) PURE; 
	STDMETHOD_(HRESULT, Get_AddressFromLeft) (THIS_ float* prop) PURE; 
	STDMETHOD_(HRESULT, Set_AddressFromLeft) (THIS_ float prop) PURE; 
	STDMETHOD_(HRESULT, Get_AddressFromTop) (THIS_ float* prop) PURE; 
	STDMETHOD_(HRESULT, Set_AddressFromTop) (THIS_ float prop) PURE; 
	STDMETHOD_(HRESULT, Get_ReturnAddressFromLeft) (THIS_ float* prop) PURE; 
	STDMETHOD_(HRESULT, Set_ReturnAddressFromLeft) (THIS_ float prop) PURE; 
	STDMETHOD_(HRESULT, Get_ReturnAddressFromTop) (THIS_ float* prop) PURE; 
	STDMETHOD_(HRESULT, Set_ReturnAddressFromTop) (THIS_ float prop) PURE; 
	STDMETHOD_(HRESULT, Get_AddressStyle) (THIS_ Style** prop) PURE; 
	STDMETHOD_(HRESULT, Get_ReturnAddressStyle) (THIS_ Style** prop) PURE; 
	STDMETHOD_(HRESULT, Get_DefaultOrientation) (THIS_ WdEnvelopeOrientation* prop) PURE; 
	STDMETHOD_(HRESULT, Set_DefaultOrientation) (THIS_ WdEnvelopeOrientation prop) PURE; 
	STDMETHOD_(HRESULT, Get_DefaultFaceUp) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_DefaultFaceUp) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Insert2000) (THIS_ VARIANT* ExtractAddress, VARIANT* Address, VARIANT* AutoText, VARIANT* OmitReturnAddress, VARIANT* ReturnAddress, VARIANT* ReturnAutoText, VARIANT* PrintBarCode, VARIANT* PrintFIMA, VARIANT* Size, VARIANT* Height, VARIANT* Width, VARIANT* FeedSource, VARIANT* AddressFromLeft, VARIANT* AddressFromTop, VARIANT* ReturnAddressFromLeft, VARIANT* ReturnAddressFromTop, VARIANT* DefaultFaceUp, VARIANT* DefaultOrientation) PURE; 
	STDMETHOD_(HRESULT, PrintOut2000) (THIS_ VARIANT* ExtractAddress, VARIANT* Address, VARIANT* AutoText, VARIANT* OmitReturnAddress, VARIANT* ReturnAddress, VARIANT* ReturnAutoText, VARIANT* PrintBarCode, VARIANT* PrintFIMA, VARIANT* Size, VARIANT* Height, VARIANT* Width, VARIANT* FeedSource, VARIANT* AddressFromLeft, VARIANT* AddressFromTop, VARIANT* ReturnAddressFromLeft, VARIANT* ReturnAddressFromTop, VARIANT* DefaultFaceUp, VARIANT* DefaultOrientation) PURE; 
	STDMETHOD_(HRESULT, UpdateDocument) (THIS ) PURE;
	STDMETHOD_(HRESULT, Options) (THIS ) PURE; 
	STDMETHOD_(HRESULT, Get_Vertical) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Vertical) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_RecipientNamefromLeft) (THIS_ float* prop) PURE; 
	STDMETHOD_(HRESULT, Set_RecipientNamefromLeft) (THIS_ float prop) PURE; 
	STDMETHOD_(HRESULT, Get_RecipientNamefromTop) (THIS_ float* prop) PURE; 
	STDMETHOD_(HRESULT, Set_RecipientNamefromTop) (THIS_ float prop) PURE; 
	STDMETHOD_(HRESULT, Get_RecipientPostalfromLeft) (THIS_ float* prop) PURE; 
	STDMETHOD_(HRESULT, Set_RecipientPostalfromLeft) (THIS_ float prop) PURE; 
	STDMETHOD_(HRESULT, Get_RecipientPostalfromTop) (THIS_ float* prop) PURE; 
	STDMETHOD_(HRESULT, Set_RecipientPostalfromTop) (THIS_ float prop) PURE; 
	STDMETHOD_(HRESULT, Get_SenderNamefromLeft) (THIS_ float* prop) PURE; 
	STDMETHOD_(HRESULT, Set_SenderNamefromLeft) (THIS_ float prop) PURE; 
	STDMETHOD_(HRESULT, Get_SenderNamefromTop) (THIS_ float* prop) PURE; 
	STDMETHOD_(HRESULT, Set_SenderNamefromTop) (THIS_ float prop) PURE; 
	STDMETHOD_(HRESULT, Get_SenderPostalfromLeft) (THIS_ float* prop) PURE; 
	STDMETHOD_(HRESULT, Set_SenderPostalfromLeft) (THIS_ float prop) PURE; 
	STDMETHOD_(HRESULT, Get_SenderPostalfromTop) (THIS_ float* prop) PURE; 
	STDMETHOD_(HRESULT, Set_SenderPostalfromTop) (THIS_ float prop) PURE; 
	STDMETHOD_(HRESULT, Insert) (THIS_ VARIANT* ExtractAddress, VARIANT* Address, VARIANT* AutoText, VARIANT* OmitReturnAddress, VARIANT* ReturnAddress, VARIANT* ReturnAutoText, VARIANT* PrintBarCode, VARIANT* PrintFIMA, VARIANT* Size, VARIANT* Height, VARIANT* Width, VARIANT* FeedSource, VARIANT* AddressFromLeft, VARIANT* AddressFromTop, VARIANT* ReturnAddressFromLeft, VARIANT* ReturnAddressFromTop, VARIANT* DefaultFaceUp, VARIANT* DefaultOrientation, VARIANT* PrintEPostage, VARIANT* Vertical, VARIANT* RecipientNamefromLeft, VARIANT* RecipientNamefromTop, VARIANT* RecipientPostalfromLeft, VARIANT* RecipientPostalfromTop, VARIANT* SenderNamefromLeft, VARIANT* SenderNamefromTop, VARIANT* SenderPostalfromLeft, VARIANT* SenderPostalfromTop) PURE; 
	STDMETHOD_(HRESULT, PrintOut) (THIS_ VARIANT* ExtractAddress, VARIANT* Address, VARIANT* AutoText, VARIANT* OmitReturnAddress, VARIANT* ReturnAddress, VARIANT* ReturnAutoText, VARIANT* PrintBarCode, VARIANT* PrintFIMA, VARIANT* Size, VARIANT* Height, VARIANT* Width, VARIANT* FeedSource, VARIANT* AddressFromLeft, VARIANT* AddressFromTop, VARIANT* ReturnAddressFromLeft, VARIANT* ReturnAddressFromTop, VARIANT* DefaultFaceUp, VARIANT* DefaultOrientation, VARIANT* PrintEPostage, VARIANT* Vertical, VARIANT* RecipientNamefromLeft, VARIANT* RecipientNamefromTop, VARIANT* RecipientPostalfromLeft, VARIANT* RecipientPostalfromTop, VARIANT* SenderNamefromLeft, VARIANT* SenderNamefromTop, VARIANT* SenderPostalfromLeft, VARIANT* SenderPostalfromTop) PURE; 
};
typedef Envelope* LPNVELOPE;
#ifdef __cplusplus
// Envelope  {00020918-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TEnvelopeProxy : public __OCF TAutoProxy
{
public:
	TEnvelopeProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// Address:   [dispid 1]
	void Address(TRangeProxy& Obj);

	// ReturnAddress:   [dispid 2]
	void ReturnAddress(TRangeProxy& Obj);

	// DefaultPrintBarCode:   [dispid 4]
	/*__OWL*/ TBool DefaultPrintBarCode();

	// DefaultPrintBarCode:   [dispid 4]
	void DefaultPrintBarCode(/*__OWL*/ TBool arg0);

	// DefaultPrintFIMA:   [dispid 5]
	/*__OWL*/ TBool DefaultPrintFIMA();

	// DefaultPrintFIMA:   [dispid 5]
	void DefaultPrintFIMA(/*__OWL*/ TBool arg0);

	// DefaultHeight:   [dispid 6]
	float DefaultHeight();

	// DefaultHeight:   [dispid 6]
	void DefaultHeight(float arg0);

	// DefaultWidth:   [dispid 7]
	float DefaultWidth();

	// DefaultWidth:   [dispid 7]
	void DefaultWidth(float arg0);

	// DefaultSize:   [dispid 0]
	__OCF TAutoString DefaultSize();

	// DefaultSize:   [dispid 0]
	void DefaultSize(__OCF TAutoString arg0);

	// DefaultOmitReturnAddress:   [dispid 9]
	/*__OWL*/ TBool DefaultOmitReturnAddress();

	// DefaultOmitReturnAddress:   [dispid 9]
	void DefaultOmitReturnAddress(/*__OWL*/ TBool arg0);

	// FeedSource:   [dispid 12]
	WdPaperTray FeedSource();

	// FeedSource:   [dispid 12]
	void FeedSource(WdPaperTray arg0);

	// AddressFromLeft:   [dispid 13]
	float AddressFromLeft();

	// AddressFromLeft:   [dispid 13]
	void AddressFromLeft(float arg0);

	// AddressFromTop:   [dispid 14]
	float AddressFromTop();

	// AddressFromTop:   [dispid 14]
	void AddressFromTop(float arg0);

	// ReturnAddressFromLeft:   [dispid 15]
	float ReturnAddressFromLeft();

	// ReturnAddressFromLeft:   [dispid 15]
	void ReturnAddressFromLeft(float arg0);

	// ReturnAddressFromTop:   [dispid 16]
	float ReturnAddressFromTop();

	// ReturnAddressFromTop:   [dispid 16]
	void ReturnAddressFromTop(float arg0);

	// AddressStyle:   [dispid 17]
	void AddressStyle(TStyleProxy& Obj);

	// ReturnAddressStyle:   [dispid 18]
	void ReturnAddressStyle(TStyleProxy& Obj);

	// DefaultOrientation:   [dispid 19]
	WdEnvelopeOrientation DefaultOrientation();

	// DefaultOrientation:   [dispid 19]
	void DefaultOrientation(WdEnvelopeOrientation arg0);

	// DefaultFaceUp:   [dispid 20]
	/*__OWL*/ TBool DefaultFaceUp();

	// DefaultFaceUp:   [dispid 20]
	void DefaultFaceUp(/*__OWL*/ TBool arg0);

	// Insert2000:   [dispid 101]
	void Insert2000(__OCF TAutoVal* ExtractAddress = 0, __OCF TAutoVal* Address = 0, __OCF TAutoVal* AutoText = 0, __OCF TAutoVal* OmitReturnAddress = 0, __OCF TAutoVal* ReturnAddress = 0, __OCF TAutoVal* ReturnAutoText = 0, __OCF TAutoVal* PrintBarCode = 0, __OCF TAutoVal* PrintFIMA = 0, __OCF TAutoVal* Size = 0, __OCF TAutoVal* Height = 0, __OCF TAutoVal* Width = 0, __OCF TAutoVal* FeedSource = 0, __OCF TAutoVal* AddressFromLeft = 0, __OCF TAutoVal* AddressFromTop = 0, __OCF TAutoVal* ReturnAddressFromLeft = 0, __OCF TAutoVal* ReturnAddressFromTop = 0, __OCF TAutoVal* DefaultFaceUp = 0, __OCF TAutoVal* DefaultOrientation = 0);

	// PrintOut2000:   [dispid 102]
	void PrintOut2000(__OCF TAutoVal* ExtractAddress = 0, __OCF TAutoVal* Address = 0, __OCF TAutoVal* AutoText = 0, __OCF TAutoVal* OmitReturnAddress = 0, __OCF TAutoVal* ReturnAddress = 0, __OCF TAutoVal* ReturnAutoText = 0, __OCF TAutoVal* PrintBarCode = 0, __OCF TAutoVal* PrintFIMA = 0, __OCF TAutoVal* Size = 0, __OCF TAutoVal* Height = 0, __OCF TAutoVal* Width = 0, __OCF TAutoVal* FeedSource = 0, __OCF TAutoVal* AddressFromLeft = 0, __OCF TAutoVal* AddressFromTop = 0, __OCF TAutoVal* ReturnAddressFromLeft = 0, __OCF TAutoVal* ReturnAddressFromTop = 0, __OCF TAutoVal* DefaultFaceUp = 0, __OCF TAutoVal* DefaultOrientation = 0);

	// UpdateDocument:   [dispid 103]
	void UpdateDocument();

	// _Options:   [dispid 104]
	void _Options();

	// Vertical:   [dispid 22]
	/*__OWL*/ TBool Vertical();

	// Vertical:   [dispid 22]
	void Vertical(/*__OWL*/ TBool arg0);

	// RecipientNamefromLeft:   [dispid 23]
	float RecipientNamefromLeft();

	// RecipientNamefromLeft:   [dispid 23]
	void RecipientNamefromLeft(float arg0);

	// RecipientNamefromTop:   [dispid 24]
	float RecipientNamefromTop();

	// RecipientNamefromTop:   [dispid 24]
	void RecipientNamefromTop(float arg0);

	// RecipientPostalfromLeft:   [dispid 25]
	float RecipientPostalfromLeft();

	// RecipientPostalfromLeft:   [dispid 25]
	void RecipientPostalfromLeft(float arg0);

	// RecipientPostalfromTop:   [dispid 26]
	float RecipientPostalfromTop();

	// RecipientPostalfromTop:   [dispid 26]
	void RecipientPostalfromTop(float arg0);

	// SenderNamefromLeft:   [dispid 27]
	float SenderNamefromLeft();

	// SenderNamefromLeft:   [dispid 27]
	void SenderNamefromLeft(float arg0);

	// SenderNamefromTop:   [dispid 28]
	float SenderNamefromTop();

	// SenderNamefromTop:   [dispid 28]
	void SenderNamefromTop(float arg0);

	// SenderPostalfromLeft:   [dispid 29]
	float SenderPostalfromLeft();

	// SenderPostalfromLeft:   [dispid 29]
	void SenderPostalfromLeft(float arg0);

	// SenderPostalfromTop:   [dispid 30]
	float SenderPostalfromTop();

	// SenderPostalfromTop:   [dispid 30]
	void SenderPostalfromTop(float arg0);

	// Insert:   [dispid 105]
	void Insert(__OCF TAutoVal* ExtractAddress = 0, __OCF TAutoVal* Address = 0, __OCF TAutoVal* AutoText = 0, __OCF TAutoVal* OmitReturnAddress = 0,
              __OCF TAutoVal* ReturnAddress = 0, __OCF TAutoVal* ReturnAutoText = 0, __OCF TAutoVal* PrintBarCode = 0, __OCF TAutoVal* PrintFIMA = 0,
              __OCF TAutoVal* Size = 0, __OCF TAutoVal* Height = 0, __OCF TAutoVal* Width = 0, __OCF TAutoVal* FeedSource = 0,
              __OCF TAutoVal* AddressFromLeft = 0, __OCF TAutoVal* AddressFromTop = 0, __OCF TAutoVal* ReturnAddressFromLeft = 0,
              __OCF TAutoVal* ReturnAddressFromTop = 0, __OCF TAutoVal* DefaultFaceUp = 0, __OCF TAutoVal* DefaultOrientation = 0,
              __OCF TAutoVal* PrintEPostage = 0, __OCF TAutoVal* Vertical = 0, __OCF TAutoVal* RecipientNamefromLeft = 0,
              __OCF TAutoVal* RecipientNamefromTop = 0, __OCF TAutoVal* RecipientPostalfromLeft = 0, __OCF TAutoVal* RecipientPostalfromTop = 0,
              __OCF TAutoVal* SenderNamefromLeft = 0, __OCF TAutoVal* SenderNamefromTop = 0, __OCF TAutoVal* SenderPostalfromLeft = 0,
              __OCF TAutoVal* SenderPostalfromTop = 0);

	// PrintOut:   [dispid 106]
	void PrintOut(__OCF TAutoVal* ExtractAddress = 0, __OCF TAutoVal* Address = 0, __OCF TAutoVal* AutoText = 0, __OCF TAutoVal* OmitReturnAddress = 0,
                __OCF TAutoVal* ReturnAddress = 0, __OCF TAutoVal* ReturnAutoText = 0, __OCF TAutoVal* PrintBarCode = 0, __OCF TAutoVal* PrintFIMA = 0,
                __OCF TAutoVal* Size = 0, __OCF TAutoVal* Height = 0, __OCF TAutoVal* Width = 0, __OCF TAutoVal* FeedSource = 0,
                __OCF TAutoVal* AddressFromLeft = 0, __OCF TAutoVal* AddressFromTop = 0, __OCF TAutoVal* ReturnAddressFromLeft = 0,
                __OCF TAutoVal* ReturnAddressFromTop = 0, __OCF TAutoVal* DefaultFaceUp = 0, __OCF TAutoVal* DefaultOrientation = 0,
                __OCF TAutoVal* PrintEPostage = 0, __OCF TAutoVal* Vertical = 0, __OCF TAutoVal* RecipientNamefromLeft = 0,
                __OCF TAutoVal* RecipientNamefromTop = 0, __OCF TAutoVal* RecipientPostalfromLeft = 0, __OCF TAutoVal* RecipientPostalfromTop = 0,
                __OCF TAutoVal* SenderNamefromLeft = 0, __OCF TAutoVal* SenderNamefromTop = 0, __OCF TAutoVal* SenderPostalfromLeft = 0,
                __OCF TAutoVal* SenderPostalfromTop = 0);
};
#endif

// Fields
// {00020930-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE Fields
DECLARE_INTERFACE_(Fields, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// Fields methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Count) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Locked) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Locked) (THIS_ long prop) PURE; 
	STDMETHOD_(HRESULT, Get__NewEnum) (THIS_ IUnknown** prop) PURE; 
	STDMETHOD_(HRESULT, Item) (THIS_ long Index, Field** prop) PURE; 
	STDMETHOD_(HRESULT, ToggleShowCodes) (THIS ) PURE; 
	STDMETHOD_(HRESULT, Update) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Unlink) (THIS ) PURE; 
	STDMETHOD_(HRESULT, UpdateSource) (THIS ) PURE; 
	STDMETHOD_(HRESULT, Add) (THIS_ WordRange* , VARIANT* Type, VARIANT* Text, VARIANT* PreserveFormatting, Field** prop) PURE; 
};
typedef Fields* LPIELDS;
#ifdef __cplusplus
// Fields  {00020930-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TFieldsProxy : public __OCF TAutoProxy
{
public:
	TFieldsProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// Count:   [dispid 1]
	long Count();

	// Locked:   [dispid 2]
	long Locked();

	// Locked:   [dispid 2]
	void Locked(long arg0);

	// _NewEnum:   [dispid -4]
	void _NewEnum(__OCF TAutoEnumerator<IUnknown*>& Obj);

	// Item:   [dispid 0]
	void Item(TFieldProxy& Obj, long Index);

	// ToggleShowCodes:   [dispid 100]
	void ToggleShowCodes();

	// Update:   [dispid 101]
	long Update();

	// Unlink:   [dispid 102]
	void Unlink();

	// UpdateSource:   [dispid 104]
	void UpdateSource();

	// Add:   [dispid 105]
	void Add(TFieldProxy& Obj, WordRange* arg0, __OCF TAutoVal* Type = 0, __OCF TAutoVal* Text = 0, __OCF TAutoVal* PreserveFormatting = 0);
};
#endif

// WdChevronConvertRule
typedef enum tagWdChevronConvertRule
{
	wdNeverConvert = 0, 
	wdAlwaysConvert = 1, 
	wdAskToNotConvert = 2, 
	wdAskToConvert = 3, 
} WdChevronConvertRule;

// FileConverters
// {0002099A-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE FileConverters
DECLARE_INTERFACE_(FileConverters, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// FileConverters methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE;
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Count) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get__NewEnum) (THIS_ IUnknown** prop) PURE; 
	STDMETHOD_(HRESULT, Get_ConvertMacWordChevrons) (THIS_ WdChevronConvertRule* prop) PURE; 
	STDMETHOD_(HRESULT, Set_ConvertMacWordChevrons) (THIS_ WdChevronConvertRule prop) PURE; 
	STDMETHOD_(HRESULT, Item) (THIS_ VARIANT* Index, FileConverter** prop) PURE; 
};
typedef FileConverters* LPILECONVERTERS;
#ifdef __cplusplus
// FileConverters  {0002099A-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TFileConvertersProxy : public __OCF TAutoProxy
{
public:
	TFileConvertersProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// Count:   [dispid 1]
	long Count();

	// _NewEnum:   [dispid -4]
	void _NewEnum(__OCF TAutoEnumerator<IUnknown*>& Obj);

	// ConvertMacWordChevrons:   [dispid 2]
	WdChevronConvertRule ConvertMacWordChevrons();

	// ConvertMacWordChevrons:   [dispid 2]
	void ConvertMacWordChevrons(WdChevronConvertRule arg0);

	// Item:   [dispid 0]
	void Item(TFileConverterProxy& Obj, __OCF TAutoVal* Index);
};
#endif

// MsoFileDialogView
typedef enum tagMsoFileDialogView
{
	msoFileDialogViewList = 1, 
	msoFileDialogViewDetails = 2, 
	msoFileDialogViewProperties = 3, 
	msoFileDialogViewPreview = 4, 
	msoFileDialogViewThumbnail = 5, 
	msoFileDialogViewLargeIcons = 6, 
	msoFileDialogViewSmallIcons = 7, 
	msoFileDialogViewWebView = 8, 
	msoFileDialogViewTiles = 9, 
} MsoFileDialogView;

// FileDialog
// {000C0362-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE FileDialog
DECLARE_INTERFACE_(FileDialog, _IMsoDispObj)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
	// _IMsoDispObj methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ IDispatch** ppidisp) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* plCreator) PURE; 
#endif
	// FileDialog methods:
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** Parent) PURE; 
	STDMETHOD_(HRESULT, Get_Filters) (THIS_ FileDialogFilters** Filters) PURE; 
	STDMETHOD_(HRESULT, Get_FilterIndex) (THIS_ int* FilterIndex) PURE; 
	STDMETHOD_(HRESULT, Set_FilterIndex) (THIS_ int FilterIndex) PURE; 
	STDMETHOD_(HRESULT, Get_Title) (THIS_ BSTR* Title) PURE; 
	STDMETHOD_(HRESULT, Set_Title) (THIS_ BSTR Title) PURE; 
	STDMETHOD_(HRESULT, Get_ButtonName) (THIS_ BSTR* ButtonName) PURE; 
	STDMETHOD_(HRESULT, Set_ButtonName) (THIS_ BSTR ButtonName) PURE; 
	STDMETHOD_(HRESULT, Get_AllowMultiSelect) (THIS_ VARIANT_BOOL* pvarfAllowMultiSelect) PURE; 
	STDMETHOD_(HRESULT, Set_AllowMultiSelect) (THIS_ VARIANT_BOOL pvarfAllowMultiSelect) PURE; 
	STDMETHOD_(HRESULT, Get_InitialView) (THIS_ MsoFileDialogView* pinitialview) PURE; 
	STDMETHOD_(HRESULT, Set_InitialView) (THIS_ MsoFileDialogView pinitialview) PURE; 
	STDMETHOD_(HRESULT, Get_InitialFileName) (THIS_ BSTR* InitialFileName) PURE;
	STDMETHOD_(HRESULT, Set_InitialFileName) (THIS_ BSTR InitialFileName) PURE; 
	STDMETHOD_(HRESULT, Get_SelectedItems) (THIS_ FileDialogSelectedItems** Files) PURE; 
	STDMETHOD_(HRESULT, Get_DialogType) (THIS_ MsoFileDialogType* pdialogtype) PURE; 
	STDMETHOD_(HRESULT, Get_Item) (THIS_ BSTR* Name) PURE; 
	STDMETHOD_(HRESULT, Show) (THIS_ int* rval) PURE; 
	STDMETHOD_(HRESULT, Execute) (THIS ) PURE; 
};
typedef FileDialog* LPILEDIALOG;
#ifdef __cplusplus
// FileDialog  {000C0362-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TFileDialogProxy : public __OCF TAutoProxy
{
public:
	TFileDialogProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1610743808]
	IDispatch* _Application();

	// Creator:   [dispid 1610743809]
	long Creator();

	// Parent:   [dispid 1610809344]
	IDispatch* Parent();

	// Filters:   [dispid 1610809345]
	void Filters(TFileDialogFiltersProxy& Obj);

	// FilterIndex:   [dispid 1610809346]
	int FilterIndex();

	// FilterIndex:   [dispid 1610809346]
	void FilterIndex(int arg0);

	// Title:   [dispid 1610809348]
	__OCF TAutoString Title();

	// Title:   [dispid 1610809348]
	void Title(__OCF TAutoString arg0);

	// ButtonName:   [dispid 1610809350]
	__OCF TAutoString ButtonName();

	// ButtonName:   [dispid 1610809350]
	void ButtonName(__OCF TAutoString arg0);

	// AllowMultiSelect:   [dispid 1610809352]
	/*__OWL*/ TBool AllowMultiSelect();

	// AllowMultiSelect:   [dispid 1610809352]
	void AllowMultiSelect(/*__OWL*/ TBool arg0);

	// InitialView:   [dispid 1610809354]
	MsoFileDialogView InitialView();

	// InitialView:   [dispid 1610809354]
	void InitialView(MsoFileDialogView arg0);

	// InitialFileName:   [dispid 1610809356]
	__OCF TAutoString InitialFileName();

	// InitialFileName:   [dispid 1610809356]
	void InitialFileName(__OCF TAutoString arg0);

	// SelectedItems:   [dispid 1610809358]
	void SelectedItems(TFileDialogSelectedItemsProxy& Obj);

	// DialogType:   [dispid 1610809359]
	MsoFileDialogType DialogType();

	// Item:   [dispid 0]
	__OCF TAutoString Item();

	// Show:   [dispid 1610809361]
	int Show();

	// Execute:   [dispid 1610809362]
	void Execute();
};
#endif

// FileDialogSelectedItems
// {000C0363-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE FileDialogSelectedItems
DECLARE_INTERFACE_(FileDialogSelectedItems, _IMsoDispObj)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
	// _IMsoDispObj methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ IDispatch** ppidisp) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* plCreator) PURE; 
#endif
	// FileDialogSelectedItems methods:
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** Parent) PURE; 
	STDMETHOD_(HRESULT, Get__NewEnum) (THIS_ IUnknown** ppienum) PURE; 
	STDMETHOD_(HRESULT, Get_Count) (THIS_ long* pcFiles) PURE; 
	STDMETHOD_(HRESULT, Item) (THIS_ int Index, BSTR* Item) PURE; 
};
typedef FileDialogSelectedItems* LPILEDIALOGSELECTEDITEMS;
#ifdef __cplusplus
// FileDialogSelectedItems  {000C0363-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TFileDialogSelectedItemsProxy : public __OCF TAutoProxy
{
public:
	TFileDialogSelectedItemsProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1610743808]
	IDispatch* _Application();

	// Creator:   [dispid 1610743809]
	long Creator();

	// Parent:   [dispid 1610809344]
	IDispatch* Parent();

	// _NewEnum:   [dispid -4]
	void _NewEnum(__OCF TAutoEnumerator<IUnknown*>& Obj);

	// Count:   [dispid 1610809346]
	long Count();

	// Item:   [dispid 0]
	__OCF TAutoString Item(int Index);
};
#endif

// MsoFileType
typedef enum tagMsoFileType
{
	msoFileTypeAllFiles = 1, 
	msoFileTypeOfficeFiles = 2, 
	msoFileTypeWordDocuments = 3, 
	msoFileTypeExcelWorkbooks = 4, 
	msoFileTypePowerPointPresentations = 5, 
	msoFileTypeBinders = 6, 
	msoFileTypeDatabases = 7, 
	msoFileTypeTemplates = 8, 
	msoFileTypeOutlookItems = 9, 
	msoFileTypeMailItem = 10, 
	msoFileTypeCalendarItem = 11, 
	msoFileTypeContactItem = 12, 
	msoFileTypeNoteItem = 13, 
	msoFileTypeJournalItem = 14, 
	msoFileTypeTaskItem = 15, 
	msoFileTypePhotoDrawFiles = 16, 
	msoFileTypeDataConnectionFiles = 17, 
	msoFileTypePublisherFiles = 18, 
	msoFileTypeProjectFiles = 19, 
	msoFileTypeDocumentImagingFiles = 20, 
	msoFileTypeVisioFiles = 21, 
	msoFileTypeDesignerFiles = 22, 
	msoFileTypeWebPages = 23,
} MsoFileType;

// MsoLastModified
typedef enum tagMsoLastModified
{
	msoLastModifiedYesterday = 1, 
	msoLastModifiedToday = 2, 
	msoLastModifiedLastWeek = 3, 
	msoLastModifiedThisWeek = 4, 
	msoLastModifiedLastMonth = 5, 
	msoLastModifiedThisMonth = 6, 
	msoLastModifiedAnyTime = 7, 
} MsoLastModified;

// MsoSortBy
typedef enum tagMsoSortBy
{
	msoSortByFileName = 1, 
	msoSortBySize = 2, 
	msoSortByFileType = 3, 
	msoSortByLastModified = 4, 
	msoSortByNone = 5, 
} MsoSortBy;

// MsoSortOrder
typedef enum tagMsoSortOrder
{
	msoSortOrderAscending = 1, 
	msoSortOrderDescending = 2, 
} MsoSortOrder;

// FileSearch
// {000C0332-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE WordFileSearch
DECLARE_INTERFACE_(WordFileSearch, _IMsoDispObj)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
	// _IMsoDispObj methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ IDispatch** ppidisp) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* plCreator) PURE; 
#endif
	// FileSearch methods:
	STDMETHOD_(HRESULT, Get_SearchSubFolders) (THIS_ VARIANT_BOOL* SearchSubFoldersRetVal) PURE; 
	STDMETHOD_(HRESULT, Set_SearchSubFolders) (THIS_ VARIANT_BOOL SearchSubFoldersRetVal) PURE;
	STDMETHOD_(HRESULT, Get_MatchTextExactly) (THIS_ VARIANT_BOOL* MatchTextRetVal) PURE; 
	STDMETHOD_(HRESULT, Set_MatchTextExactly) (THIS_ VARIANT_BOOL MatchTextRetVal) PURE; 
	STDMETHOD_(HRESULT, Get_MatchAllWordForms) (THIS_ VARIANT_BOOL* MatchAllWordFormsRetVal) PURE; 
	STDMETHOD_(HRESULT, Set_MatchAllWordForms) (THIS_ VARIANT_BOOL MatchAllWordFormsRetVal) PURE; 
	STDMETHOD_(HRESULT, Get_FileName) (THIS_ BSTR* FileNameRetVal) PURE; 
	STDMETHOD_(HRESULT, Set_FileName) (THIS_ BSTR FileNameRetVal) PURE; 
	STDMETHOD_(HRESULT, Get_FileType) (THIS_ MsoFileType* FileTypeRetVal) PURE; 
	STDMETHOD_(HRESULT, Set_FileType) (THIS_ MsoFileType FileTypeRetVal) PURE; 
	STDMETHOD_(HRESULT, Get_LastModified) (THIS_ MsoLastModified* LastModifiedRetVal) PURE; 
	STDMETHOD_(HRESULT, Set_LastModified) (THIS_ MsoLastModified LastModifiedRetVal) PURE; 
	STDMETHOD_(HRESULT, Get_TextOrProperty) (THIS_ BSTR* TextOrProperty) PURE; 
	STDMETHOD_(HRESULT, Set_TextOrProperty) (THIS_ BSTR TextOrProperty) PURE; 
	STDMETHOD_(HRESULT, Get_LookIn) (THIS_ BSTR* LookInRetVal) PURE; 
	STDMETHOD_(HRESULT, Set_LookIn) (THIS_ BSTR LookInRetVal) PURE; 
	STDMETHOD_(HRESULT, Execute) (THIS_ MsoSortBy SortBy, MsoSortOrder SortOrder, VARIANT_BOOL AlwaysAccurate, int* pRet) PURE; 
	STDMETHOD_(HRESULT, NewSearch) (THIS ) PURE; 
	STDMETHOD_(HRESULT, Get_FoundFiles) (THIS_ FoundFiles** FoundFilesRet) PURE; 
	STDMETHOD_(HRESULT, Get_PropertyTests) (THIS_ PropertyTests** PropTestsRet) PURE; 
	STDMETHOD_(HRESULT, Get_SearchScopes) (THIS_ SearchScopes** SearchScopesRet) PURE; 
	STDMETHOD_(HRESULT, Get_SearchFolders) (THIS_ SearchFolders** SearchFoldersRet) PURE; 
	STDMETHOD_(HRESULT, Get_FileTypes) (THIS_ FileTypes** FileTypesRet) PURE; 
	STDMETHOD_(HRESULT, RefreshScopes) (THIS ) PURE; 
};
typedef WordFileSearch* LPILESEARCH;
#ifdef __cplusplus
// FileSearch  {000C0332-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TFileSearchProxy : public __OCF TAutoProxy
{
public:
	TFileSearchProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1610743808]
	IDispatch* _Application();

	// Creator:   [dispid 1610743809]
	long Creator();

	// SearchSubFolders:   [dispid 1]
	/*__OWL*/ TBool SearchSubFolders();

	// SearchSubFolders:   [dispid 1]
	void SearchSubFolders(/*__OWL*/ TBool arg0);

	// MatchTextExactly:   [dispid 2]
	/*__OWL*/ TBool MatchTextExactly();

	// MatchTextExactly:   [dispid 2]
	void MatchTextExactly(/*__OWL*/ TBool arg0);

	// MatchAllWordForms:   [dispid 3]
	/*__OWL*/ TBool MatchAllWordForms();

	// MatchAllWordForms:   [dispid 3]
	void MatchAllWordForms(/*__OWL*/ TBool arg0);

	// FileName:   [dispid 4]
	__OCF TAutoString FileName();

	// FileName:   [dispid 4]
	void FileName(__OCF TAutoString arg0);

	// FileType:   [dispid 5]
	MsoFileType FileType();

	// FileType:   [dispid 5]
	void FileType(MsoFileType arg0);

	// LastModified:   [dispid 6]
	MsoLastModified LastModified();

	// LastModified:   [dispid 6]
	void LastModified(MsoLastModified arg0);

	// TextOrProperty:   [dispid 7]
	__OCF TAutoString TextOrProperty();

	// TextOrProperty:   [dispid 7]
	void TextOrProperty(__OCF TAutoString arg0);

	// LookIn:   [dispid 8]
	__OCF TAutoString LookIn();

	// LookIn:   [dispid 8]
	void LookIn(__OCF TAutoString arg0);

	// Execute:   [dispid 9]
	int Execute(MsoSortBy SortBy, MsoSortOrder SortOrder, /*__OWL*/ TBool AlwaysAccurate);

	// NewSearch:   [dispid 10]
	void NewSearch();

	// _FoundFiles:   [dispid 11]
	void _FoundFiles(TFoundFilesProxy& Obj);

	// _PropertyTests:   [dispid 12]
	void _PropertyTests(TPropertyTestsProxy& Obj);

	// _SearchScopes:   [dispid 13]
	void _SearchScopes(TSearchScopesProxy& Obj);

	// _SearchFolders:   [dispid 14]
	void _SearchFolders(TSearchFoldersProxy& Obj);

	// _FileTypes:   [dispid 16]
	void _FileTypes(TFileTypesProxy& Obj);

	// RefreshScopes:   [dispid 17]
	void RefreshScopes();
};
#endif

// FileTypes
// {000C036C-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE FileTypes
DECLARE_INTERFACE_(FileTypes, _IMsoDispObj)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
	// _IMsoDispObj methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ IDispatch** ppidisp) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* plCreator) PURE; 
#endif
	// FileTypes methods:
	STDMETHOD_(HRESULT, Get_Item) (THIS_ int Index, MsoFileType* MsoFileTypeRet) PURE; 
	STDMETHOD_(HRESULT, Get_Count) (THIS_ int* iCountRetVal) PURE;
	STDMETHOD_(HRESULT, Add) (THIS_ MsoFileType FileType) PURE; 
	STDMETHOD_(HRESULT, Remove) (THIS_ int Index) PURE; 
	STDMETHOD_(HRESULT, Get__NewEnum) (THIS_ IUnknown** ppunkEnum) PURE; 
};
typedef FileTypes* LPILETYPES;
#ifdef __cplusplus
// FileTypes  {000C036C-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TFileTypesProxy : public __OCF TAutoProxy
{
public:
	TFileTypesProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1610743808]
	IDispatch* _Application();

	// Creator:   [dispid 1610743809]
	long Creator();

	// Item:   [dispid 0]
	MsoFileType Item(int Index);

	// Count:   [dispid 2]
	int Count();

	// Add:   [dispid 3]
	void Add(MsoFileType FileType);

	// Remove:   [dispid 4]
	void Remove(int Index);

	// _NewEnum:   [dispid -4]
	void _NewEnum(__OCF TAutoEnumerator<IUnknown*>& Obj);
};
#endif

// FirstLetterExceptions
// {00020946-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE FirstLetterExceptions
DECLARE_INTERFACE_(FirstLetterExceptions, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// FirstLetterExceptions methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE;
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE;
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get__NewEnum) (THIS_ IUnknown** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Count) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Item) (THIS_ VARIANT* Index, FirstLetterException** prop) PURE; 
	STDMETHOD_(HRESULT, Add) (THIS_ BSTR Name, FirstLetterException** prop) PURE; 
};
typedef FirstLetterExceptions* LPIRSTLETTEREXCEPTIONS;
#ifdef __cplusplus
// FirstLetterExceptions  {00020946-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TFirstLetterExceptionsProxy : public __OCF TAutoProxy
{
public:
	TFirstLetterExceptionsProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// _NewEnum:   [dispid -4]
	void _NewEnum(__OCF TAutoEnumerator<IUnknown*>& Obj);

	// Count:   [dispid 1]
	long Count();

	// Item:   [dispid 0]
	void Item(TFirstLetterExceptionProxy& Obj, __OCF TAutoVal* Index);

	// Add:   [dispid 101]
	void Add(TFirstLetterExceptionProxy& Obj, __OCF TAutoString Name);
};
#endif

// FontNames
// {0002096F-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE FontNames
DECLARE_INTERFACE_(FontNames, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE;
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// FontNames methods:
	STDMETHOD_(HRESULT, Get__NewEnum) (THIS_ IUnknown** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Count) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE;
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Item) (THIS_ long Index, BSTR* prop) PURE; 
};
typedef FontNames* LPONTNAMES;
#ifdef __cplusplus
// FontNames  {0002096F-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TFontNamesProxy : public __OCF TAutoProxy
{
public:
	TFontNamesProxy() : TAutoProxy(0x0) {}

	// _NewEnum:   [dispid -4]
	void _NewEnum(__OCF TAutoEnumerator<IUnknown*>& Obj);

	// Count:   [dispid 2]
	long Count();

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// Item:   [dispid 0]
	__OCF TAutoString Item(long Index);
};
#endif

// WdFootnoteLocation
typedef enum tagWdFootnoteLocation
{
	wdBottomOfPage = 0, 
	wdBeneathText = 1, 
} WdFootnoteLocation;

// Footnotes
// {00020942-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE Footnotes
DECLARE_INTERFACE_(Footnotes, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// Footnotes methods:
	STDMETHOD_(HRESULT, Get__NewEnum) (THIS_ IUnknown** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Count) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE;
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Location) (THIS_ WdFootnoteLocation* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Location) (THIS_ WdFootnoteLocation prop) PURE; 
	STDMETHOD_(HRESULT, Get_NumberStyle) (THIS_ WdNoteNumberStyle* prop) PURE; 
	STDMETHOD_(HRESULT, Set_NumberStyle) (THIS_ WdNoteNumberStyle prop) PURE; 
	STDMETHOD_(HRESULT, Get_StartingNumber) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Set_StartingNumber) (THIS_ long prop) PURE; 
	STDMETHOD_(HRESULT, Get_NumberingRule) (THIS_ WdNumberingRule* prop) PURE; 
	STDMETHOD_(HRESULT, Set_NumberingRule) (THIS_ WdNumberingRule prop) PURE; 
	STDMETHOD_(HRESULT, Get_Separator) (THIS_ WordRange** prop) PURE; 
	STDMETHOD_(HRESULT, Get_ContinuationSeparator) (THIS_ WordRange** prop) PURE; 
	STDMETHOD_(HRESULT, Get_ContinuationNotice) (THIS_ WordRange** prop) PURE;
	STDMETHOD_(HRESULT, Item) (THIS_ long Index, Footnote** prop) PURE; 
	STDMETHOD_(HRESULT, Add) (THIS_ WordRange* , VARIANT* Reference, VARIANT* Text, Footnote** prop) PURE; 
	STDMETHOD_(HRESULT, Convert) (THIS ) PURE; 
	STDMETHOD_(HRESULT, SwapWithEndnotes) (THIS ) PURE; 
	STDMETHOD_(HRESULT, ResetSeparator) (THIS ) PURE; 
	STDMETHOD_(HRESULT, ResetContinuationSeparator) (THIS ) PURE; 
	STDMETHOD_(HRESULT, ResetContinuationNotice) (THIS ) PURE; 
};
typedef Footnotes* LPOOTNOTES;
#ifdef __cplusplus
// Footnotes  {00020942-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TFootnotesProxy : public __OCF TAutoProxy
{
public:
	TFootnotesProxy() : TAutoProxy(0x0) {}

	// _NewEnum:   [dispid -4]
	void _NewEnum(__OCF TAutoEnumerator<IUnknown*>& Obj);

	// Count:   [dispid 2]
	long Count();

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// Location:   [dispid 100]
	WdFootnoteLocation Location();

	// Location:   [dispid 100]
	void Location(WdFootnoteLocation arg0);

	// NumberStyle:   [dispid 101]
	WdNoteNumberStyle NumberStyle();

	// NumberStyle:   [dispid 101]
	void NumberStyle(WdNoteNumberStyle arg0);

	// StartingNumber:   [dispid 102]
	long StartingNumber();

	// StartingNumber:   [dispid 102]
	void StartingNumber(long arg0);

	// NumberingRule:   [dispid 103]
	WdNumberingRule NumberingRule();

	// NumberingRule:   [dispid 103]
	void NumberingRule(WdNumberingRule arg0);

	// Separator:   [dispid 104]
	void Separator(TRangeProxy& Obj);

	// ContinuationSeparator:   [dispid 105]
	void ContinuationSeparator(TRangeProxy& Obj);

	// ContinuationNotice:   [dispid 106]
	void ContinuationNotice(TRangeProxy& Obj);

	// Item:   [dispid 0]
	void Item(TFootnoteProxy& Obj, long Index);

	// Add:   [dispid 4]
	void Add(TFootnoteProxy& Obj, WordRange* arg0, __OCF TAutoVal* Reference = 0, __OCF TAutoVal* Text = 0);

	// Convert:   [dispid 5]
	void Convert();

	// SwapWithEndnotes:   [dispid 6]
	void SwapWithEndnotes();

	// ResetSeparator:   [dispid 7]
	void ResetSeparator();

	// ResetContinuationSeparator:   [dispid 8]
	void ResetContinuationSeparator();

	// ResetContinuationNotice:   [dispid 9]
	void ResetContinuationNotice();
};
#endif

// WdFieldType
typedef enum tagWdFieldType
{
	wdFieldEmpty = -1, 
	wdFieldRef = 3, 
	wdFieldIndexEntry = 4, 
	wdFieldFootnoteRef = 5, 
	wdFieldSet = 6, 
	wdFieldIf = 7, 
	wdFieldIndex = 8, 
	wdFieldTOCEntry = 9, 
	wdFieldStyleRef = 10, 
	wdFieldRefDoc = 11, 
	wdFieldSequence = 12, 
	wdFieldTOC = 13, 
	wdFieldInfo = 14, 
	wdFieldTitle = 15, 
	wdFieldSubject = 16, 
	wdFieldAuthor = 17, 
	wdFieldKeyWord = 18,
	wdFieldComments = 19, 
	wdFieldLastSavedBy = 20, 
	wdFieldCreateDate = 21, 
	wdFieldSaveDate = 22, 
	wdFieldPrintDate = 23, 
	wdFieldRevisionNum = 24, 
	wdFieldEditTime = 25, 
	wdFieldNumPages = 26, 
	wdFieldNumWords = 27, 
	wdFieldNumChars = 28, 
	wdFieldFileName = 29, 
	wdFieldTemplate = 30, 
	wdFieldDate = 31, 
	wdFieldTime = 32, 
	wdFieldPage = 33, 
	wdFieldExpression = 34, 
	wdFieldQuote = 35, 
	wdFieldInclude = 36, 
	wdFieldPageRef = 37, 
	wdFieldAsk = 38, 
	wdFieldFillIn = 39, 
	wdFieldData = 40, 
	wdFieldNext = 41, 
	wdFieldNextIf = 42, 
	wdFieldSkipIf = 43, 
	wdFieldMergeRec = 44, 
	wdFieldDDE = 45,
	wdFieldDDEAuto = 46, 
	wdFieldGlossary = 47, 
	wdFieldPrint = 48, 
	wdFieldFormula = 49, 
	wdFieldGoToButton = 50, 
	wdFieldMacroButton = 51, 
	wdFieldAutoNumOutline = 52, 
	wdFieldAutoNumLegal = 53, 
	wdFieldAutoNum = 54, 
	wdFieldImport = 55, 
	wdFieldLink = 56, 
	wdFieldSymbol = 57, 
	wdFieldEmbed = 58, 
	wdFieldMergeField = 59, 
	wdFieldUserName = 60, 
	wdFieldUserInitials = 61, 
	wdFieldUserAddress = 62, 
	wdFieldBarCode = 63, 
	wdFieldDocVariable = 64, 
	wdFieldSection = 65, 
	wdFieldSectionPages = 66, 
	wdFieldIncludePicture = 67, 
	wdFieldIncludeText = 68, 
	wdFieldFileSize = 69, 
	wdFieldFormTextInput = 70, 
	wdFieldFormCheckBox = 71, 
	wdFieldNoteRef = 72,
	wdFieldTOA = 73, 
	wdFieldTOAEntry = 74, 
	wdFieldMergeSeq = 75, 
	wdFieldPrivate = 77, 
	wdFieldDatabase = 78, 
	wdFieldAutoText = 79, 
	wdFieldCompare = 80, 
	wdFieldAddin = 81, 
	wdFieldSubscriber = 82, 
	wdFieldFormDropDown = 83, 
	wdFieldAdvance = 84, 
	wdFieldDocProperty = 85, 
	wdFieldOCX = 87, 
	wdFieldHyperlink = 88, 
	wdFieldAutoTextList = 89, 
	wdFieldListNum = 90, 
	wdFieldHTMLActiveX = 91, 
	wdFieldBidiOutline = 92, 
	wdFieldAddressBlock = 93, 
	wdFieldGreetingLine = 94, 
	wdFieldShape = 95, 
} WdFieldType;

// FormFields
// {00020929-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE FormFields
DECLARE_INTERFACE_(FormFields, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// FormFields methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE;
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Count) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Shaded) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Shaded) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get__NewEnum) (THIS_ IUnknown** prop) PURE; 
	STDMETHOD_(HRESULT, Item) (THIS_ VARIANT* Index, FormField** prop) PURE; 
	STDMETHOD_(HRESULT, Add) (THIS_ WordRange* , WdFieldType Type, FormField** prop) PURE; 
};
typedef FormFields* LPORMFIELDS;
#ifdef __cplusplus
// FormFields  {00020929-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TFormFieldsProxy : public __OCF TAutoProxy
{
public:
	TFormFieldsProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// Count:   [dispid 1]
	long Count();

	// Shaded:   [dispid 2]
	/*__OWL*/ TBool Shaded();

	// Shaded:   [dispid 2]
	void Shaded(/*__OWL*/ TBool arg0);

	// _NewEnum:   [dispid -4]
	void _NewEnum(__OCF TAutoEnumerator<IUnknown*>& Obj);

	// Item:   [dispid 0]
	void Item(TFormFieldProxy& Obj, __OCF TAutoVal* Index);

	// Add:   [dispid 101]
	void Add(TFormFieldProxy& Obj, WordRange* arg0, WdFieldType Type);
};
#endif

// FoundFiles
// {000C0331-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE FoundFiles
DECLARE_INTERFACE_(FoundFiles, _IMsoDispObj)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
	// _IMsoDispObj methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ IDispatch** ppidisp) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* plCreator) PURE;
#endif
	// FoundFiles methods:
	STDMETHOD_(HRESULT, Get_Item) (THIS_ int Index, long lcid, BSTR* pbstrFile) PURE; 
	STDMETHOD_(HRESULT, Get_Count) (THIS_ long* pc) PURE; 
	STDMETHOD_(HRESULT, Get__NewEnum) (THIS_ IUnknown** ppunkEnum) PURE; 
};
typedef FoundFiles* LPOUNDFILES;
#ifdef __cplusplus
// FoundFiles  {000C0331-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TFoundFilesProxy : public __OCF TAutoProxy
{
public:
	TFoundFilesProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1610743808]
	IDispatch* _Application();

	// Creator:   [dispid 1610743809]
	long Creator();

	// Item:   [dispid 0]
	__OCF TAutoString Item(int Index);

	// Count:   [dispid 4]
	long Count();

	// _NewEnum:   [dispid -4]
	void _NewEnum(__OCF TAutoEnumerator<IUnknown*>& Obj);
};
#endif

// WdFramesetType
typedef enum tagWdFramesetType
{
	wdFramesetTypeFrameset = 0, 
	wdFramesetTypeFrame = 1, 
} WdFramesetType;

// WdFramesetSizeType
typedef enum tagWdFramesetSizeType
{
	wdFramesetSizeTypePercent = 0, 
	wdFramesetSizeTypeFixed = 1, 
	wdFramesetSizeTypeRelative = 2, 
} WdFramesetSizeType;

// WdScrollbarType
typedef enum tagWdScrollbarType
{
	wdScrollbarTypeAuto = 0, 
	wdScrollbarTypeYes = 1, 
	wdScrollbarTypeNo = 2, 
} WdScrollbarType;

// WdFramesetNewFrameLocation
typedef enum tagWdFramesetNewFrameLocation
{
	wdFramesetNewFrameAbove = 0, 
	wdFramesetNewFrameBelow = 1, 
	wdFramesetNewFrameRight = 2, 
	wdFramesetNewFrameLeft = 3, 
} WdFramesetNewFrameLocation;

// Frameset
// {000209E2-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE Frameset
DECLARE_INTERFACE_(Frameset, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// Frameset methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get__NewEnum) (THIS_ IUnknown** prop) PURE; 
	STDMETHOD_(HRESULT, Get_ParentFrameset) (THIS_ Frameset** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Type) (THIS_ WdFramesetType* prop) PURE; 
	STDMETHOD_(HRESULT, Get_WidthType) (THIS_ WdFramesetSizeType* prop) PURE; 
	STDMETHOD_(HRESULT, Set_WidthType) (THIS_ WdFramesetSizeType prop) PURE; 
	STDMETHOD_(HRESULT, Get_HeightType) (THIS_ WdFramesetSizeType* prop) PURE; 
	STDMETHOD_(HRESULT, Set_HeightType) (THIS_ WdFramesetSizeType prop) PURE; 
	STDMETHOD_(HRESULT, Get_Width) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Width) (THIS_ long prop) PURE; 
	STDMETHOD_(HRESULT, Get_Height) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Height) (THIS_ long prop) PURE; 
	STDMETHOD_(HRESULT, Get_ChildFramesetCount) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_ChildFramesetItem) (THIS_ long Index, Frameset** prop) PURE; 
	STDMETHOD_(HRESULT, Get_FramesetBorderWidth) (THIS_ float* prop) PURE; 
	STDMETHOD_(HRESULT, Set_FramesetBorderWidth) (THIS_ float prop) PURE; 
	STDMETHOD_(HRESULT, Get_FramesetBorderColor) (THIS_ WdColor* prop) PURE; 
	STDMETHOD_(HRESULT, Set_FramesetBorderColor) (THIS_ WdColor prop) PURE; 
	STDMETHOD_(HRESULT, Get_FrameScrollbarType) (THIS_ WdScrollbarType* prop) PURE; 
	STDMETHOD_(HRESULT, Set_FrameScrollbarType) (THIS_ WdScrollbarType prop) PURE; 
	STDMETHOD_(HRESULT, Get_FrameResizable) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_FrameResizable) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_FrameName) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Set_FrameName) (THIS_ BSTR prop) PURE;
	STDMETHOD_(HRESULT, Get_FrameDisplayBorders) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_FrameDisplayBorders) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_FrameDefaultURL) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Set_FrameDefaultURL) (THIS_ BSTR prop) PURE; 
	STDMETHOD_(HRESULT, Get_FrameLinkToFile) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_FrameLinkToFile) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, AddNewFrame) (THIS_ WdFramesetNewFrameLocation Where, Frameset** prop) PURE; 
	STDMETHOD_(HRESULT, Delete) (THIS ) PURE; 
};
typedef Frameset* LPRAMESET;
#ifdef __cplusplus
// Frameset  {000209E2-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TFramesetProxy : public __OCF TAutoProxy
{
public:
	TFramesetProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// _NewEnum:   [dispid -4]
	void _NewEnum(__OCF TAutoEnumerator<IUnknown*>& Obj);

	// ParentFrameset:   [dispid 1003]
	void ParentFrameset(TFramesetProxy& Obj);

	// Type:   [dispid 0]
	WdFramesetType Type();

	// WidthType:   [dispid 1]
	WdFramesetSizeType WidthType();

	// WidthType:   [dispid 1]
	void WidthType(WdFramesetSizeType arg0);

	// HeightType:   [dispid 2]
	WdFramesetSizeType HeightType();

	// HeightType:   [dispid 2]
	void HeightType(WdFramesetSizeType arg0);

	// Width:   [dispid 3]
	long Width();

	// Width:   [dispid 3]
	void Width(long arg0);

	// Height:   [dispid 4]
	long Height();

	// Height:   [dispid 4]
	void Height(long arg0);

	// ChildFramesetCount:   [dispid 5]
	long ChildFramesetCount();

	// ChildFramesetItem:   [dispid 6]
	void ChildFramesetItem(TFramesetProxy& Obj, long Index);

	// FramesetBorderWidth:   [dispid 20]
	float FramesetBorderWidth();

	// FramesetBorderWidth:   [dispid 20]
	void FramesetBorderWidth(float arg0);

	// FramesetBorderColor:   [dispid 21]
	WdColor FramesetBorderColor();

	// FramesetBorderColor:   [dispid 21]
	void FramesetBorderColor(WdColor arg0);

	// FrameScrollbarType:   [dispid 30]
	WdScrollbarType FrameScrollbarType();

	// FrameScrollbarType:   [dispid 30]
	void FrameScrollbarType(WdScrollbarType arg0);

	// FrameResizable:   [dispid 31]
	/*__OWL*/ TBool FrameResizable();

	// FrameResizable:   [dispid 31]
	void FrameResizable(/*__OWL*/ TBool arg0);

	// FrameName:   [dispid 34]
	__OCF TAutoString FrameName();

	// FrameName:   [dispid 34]
	void FrameName(__OCF TAutoString arg0);

	// FrameDisplayBorders:   [dispid 35]
	/*__OWL*/ TBool FrameDisplayBorders();

	// FrameDisplayBorders:   [dispid 35]
	void FrameDisplayBorders(/*__OWL*/ TBool arg0);

	// FrameDefaultURL:   [dispid 36]
	__OCF TAutoString FrameDefaultURL();

	// FrameDefaultURL:   [dispid 36]
	void FrameDefaultURL(__OCF TAutoString arg0);

	// FrameLinkToFile:   [dispid 37]
	/*__OWL*/ TBool FrameLinkToFile();

	// FrameLinkToFile:   [dispid 37]
	void FrameLinkToFile(/*__OWL*/ TBool arg0);

	// AddNewFrame:   [dispid 50]
	void AddNewFrame(TFramesetProxy& Obj, WdFramesetNewFrameLocation Where);

	// Delete:   [dispid 51]
	void Delete();
};
#endif

// Frames
// {0002092B-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE Frames
DECLARE_INTERFACE_(Frames, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE;
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// Frames methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get__NewEnum) (THIS_ IUnknown** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Count) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Item) (THIS_ long Index, Frame** prop) PURE; 
	STDMETHOD_(HRESULT, Add) (THIS_ WordRange* , Frame** prop) PURE; 
	STDMETHOD_(HRESULT, Delete) (THIS ) PURE; 
};
typedef Frames* LPRAMES;
#ifdef __cplusplus
// Frames  {0002092B-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TFramesProxy : public __OCF TAutoProxy
{
public:
	TFramesProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// _NewEnum:   [dispid -4]
	void _NewEnum(__OCF TAutoEnumerator<IUnknown*>& Obj);

	// Count:   [dispid 1]
	long Count();

	// Item:   [dispid 0]
	void Item(TFrameProxy& Obj, long Index);

	// Add:   [dispid 100]
	void Add(TFrameProxy& Obj, WordRange* arg0);

	// Delete:   [dispid 101]
	void Delete();
};
#endif

// HangulAndAlphabetExceptions
// {000209D1-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE HangulAndAlphabetExceptions
DECLARE_INTERFACE_(HangulAndAlphabetExceptions, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// HangulAndAlphabetExceptions methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get__NewEnum) (THIS_ IUnknown** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Count) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Item) (THIS_ VARIANT* Index, HangulAndAlphabetException** prop) PURE; 
	STDMETHOD_(HRESULT, Add) (THIS_ BSTR Name, HangulAndAlphabetException** prop) PURE; 
};
typedef HangulAndAlphabetExceptions* LPANGULANDALPHABETEXCEPTIONS;
#ifdef __cplusplus
// HangulAndAlphabetExceptions  {000209D1-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS THangulAndAlphabetExceptionsProxy : public __OCF TAutoProxy
{
public:
	THangulAndAlphabetExceptionsProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// _NewEnum:   [dispid -4]
	void _NewEnum(__OCF TAutoEnumerator<IUnknown*>& Obj);

	// Count:   [dispid 1]
	long Count();

	// Item:   [dispid 0]
	void Item(THangulAndAlphabetExceptionProxy& Obj, __OCF TAutoVal* Index);

	// Add:   [dispid 101]
	void Add(THangulAndAlphabetExceptionProxy& Obj, __OCF TAutoString Name);
};
#endif

// HangulHanjaConversionDictionaries
// {000209E0-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE HangulHanjaConversionDictionaries
DECLARE_INTERFACE_(HangulHanjaConversionDictionaries, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// HangulHanjaConversionDictionaries methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get__NewEnum) (THIS_ IUnknown** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Count) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Maximum) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_ActiveCustomDictionary) (THIS_ Dictionary** prop) PURE; 
	STDMETHOD_(HRESULT, Set_ActiveCustomDictionary) (THIS_ Dictionary* prop) PURE; 
	STDMETHOD_(HRESULT, Get_BuiltinDictionary) (THIS_ Dictionary** prop) PURE; 
	STDMETHOD_(HRESULT, Item) (THIS_ VARIANT* Index, Dictionary** prop) PURE;
	STDMETHOD_(HRESULT, Add) (THIS_ BSTR FileName, Dictionary** prop) PURE; 
	STDMETHOD_(HRESULT, ClearAll) (THIS ) PURE; 
};
typedef HangulHanjaConversionDictionaries* LPANGULHANJACONVERSIONDICTIONARIES;
#ifdef __cplusplus
// HangulHanjaConversionDictionaries  {000209E0-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS THangulHanjaConversionDictionariesProxy : public __OCF TAutoProxy
{
public:
	THangulHanjaConversionDictionariesProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// _NewEnum:   [dispid -4]
	void _NewEnum(__OCF TAutoEnumerator<IUnknown*>& Obj);

	// Count:   [dispid 1]
	long Count();

	// Maximum:   [dispid 2]
	long Maximum();

	// ActiveCustomDictionary:   [dispid 3]
	void ActiveCustomDictionary(TDictionaryProxy& Obj);

	// ActiveCustomDictionary:   [dispid 3]
	void ActiveCustomDictionary(Dictionary* arg0);

	// BuiltinDictionary:   [dispid 4]
	void BuiltinDictionary(TDictionaryProxy& Obj);

	// Item:   [dispid 0]
	void Item(TDictionaryProxy& Obj, __OCF TAutoVal* Index);

	// Add:   [dispid 101]
	void Add(TDictionaryProxy& Obj, __OCF TAutoString FileName);

	// ClearAll:   [dispid 102]
	void ClearAll();
};
#endif

// HTMLDivisions
// {000209E8-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE HTMLDivisions
DECLARE_INTERFACE_(HTMLDivisions, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// HTMLDivisions methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get__NewEnum) (THIS_ IUnknown** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Count) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_NestingLevel) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Add) (THIS_ VARIANT* , HTMLDivision** prop) PURE; 
	STDMETHOD_(HRESULT, Item) (THIS_ long Index, HTMLDivision** prop) PURE; 
};
typedef HTMLDivisions* LPTMLDIVISIONS;
#ifdef __cplusplus
// HTMLDivisions  {000209E8-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS THTMLDivisionsProxy : public __OCF TAutoProxy
{
public:
	THTMLDivisionsProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// _NewEnum:   [dispid -4]
	void _NewEnum(__OCF TAutoEnumerator<IUnknown*>& Obj);

	// Count:   [dispid 1]
	long Count();

	// NestingLevel:   [dispid 2]
	long NestingLevel();

	// Add:   [dispid 101]
	void Add(THTMLDivisionProxy& Obj, __OCF TAutoVal* arg0 = 0);

	// Item:   [dispid 0]
	void Item(THTMLDivisionProxy& Obj, long Index);
};
#endif

// MsoHTMLProjectState
typedef enum tagMsoHTMLProjectState
{
	msoHTMLProjectStateDocumentLocked = 1, 
	msoHTMLProjectStateProjectLocked = 2, 
	msoHTMLProjectStateDocumentProjectUnlocked = 3, 
} MsoHTMLProjectState;

// MsoHTMLProjectOpen
typedef enum tagMsoHTMLProjectOpen
{
	msoHTMLProjectOpenSourceView = 1, 
	msoHTMLProjectOpenTextView = 2, 
} MsoHTMLProjectOpen;

// HTMLProject
// {000C0356-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE HTMLProject
DECLARE_INTERFACE_(HTMLProject, _IMsoDispObj)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
	// _IMsoDispObj methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ IDispatch** ppidisp) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* plCreator) PURE; 
#endif
	// HTMLProject methods:
	STDMETHOD_(HRESULT, Get_State) (THIS_ MsoHTMLProjectState* State) PURE; 
	STDMETHOD_(HRESULT, RefreshProject) (THIS_ VARIANT_BOOL Refresh) PURE; 
	STDMETHOD_(HRESULT, RefreshDocument) (THIS_ VARIANT_BOOL Refresh) PURE; 
	STDMETHOD_(HRESULT, Get_HTMLProjectItems) (THIS_ HTMLProjectItems** ) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** ppidisp) PURE; 
	STDMETHOD_(HRESULT, Open) (THIS_ MsoHTMLProjectOpen OpenKind) PURE; 
};
typedef HTMLProject* LPTMLPROJECT;
#ifdef __cplusplus
// HTMLProject  {000C0356-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS THTMLProjectProxy : public __OCF TAutoProxy
{
public:
	THTMLProjectProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1610743808]
	IDispatch* _Application();

	// Creator:   [dispid 1610743809]
	long Creator();

	// State:   [dispid 0]
	MsoHTMLProjectState State();

	// RefreshProject:   [dispid 1]
	void RefreshProject(/*__OWL*/ TBool Refresh);

	// RefreshDocument:   [dispid 2]
	void RefreshDocument(/*__OWL*/ TBool Refresh);

	// _HTMLProjectItems:   [dispid 3]
	void _HTMLProjectItems(THTMLProjectItemsProxy& Obj);

	// Parent:   [dispid 4]
	IDispatch* Parent();

	// Open:   [dispid 5]
	void Open(MsoHTMLProjectOpen OpenKind);
};
#endif

// Hyperlinks
// {0002099C-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE Hyperlinks
DECLARE_INTERFACE_(Hyperlinks, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// Hyperlinks methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Count) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get__NewEnum) (THIS_ IUnknown** prop) PURE; 
	STDMETHOD_(HRESULT, Item) (THIS_ VARIANT* Index, Hyperlink** prop) PURE; 
	STDMETHOD_(HRESULT, _Add) (THIS_ IDispatch* Anchor, VARIANT* Address, VARIANT* SubAddress, Hyperlink** prop) PURE; 
	STDMETHOD_(HRESULT, Add) (THIS_ IDispatch* Anchor, VARIANT* Address, VARIANT* SubAddress, VARIANT* ScreenTip, VARIANT* TextToDisplay, VARIANT* Target, Hyperlink** prop) PURE;
};
typedef Hyperlinks* LPYPERLINKS;
#ifdef __cplusplus
// Hyperlinks  {0002099C-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS THyperlinksProxy : public __OCF TAutoProxy
{
public:
	THyperlinksProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// Count:   [dispid 1]
	long Count();

	// _NewEnum:   [dispid -4]
	void _NewEnum(__OCF TAutoEnumerator<IUnknown*>& Obj);

	// Item:   [dispid 0]
	void Item(THyperlinkProxy& Obj, __OCF TAutoVal* Index);

	// _Add:   [dispid 100]
	void _Add(THyperlinkProxy& Obj, IDispatch* Anchor, __OCF TAutoVal* Address = 0, __OCF TAutoVal* SubAddress = 0);

	// Add:   [dispid 101]
	void Add(THyperlinkProxy& Obj, IDispatch* Anchor, __OCF TAutoVal* Address = 0, __OCF TAutoVal* SubAddress = 0, __OCF TAutoVal* ScreenTip = 0, __OCF TAutoVal* TextToDisplay = 0, __OCF TAutoVal* Target = 0);
};
#endif

// WdIndexFormat
typedef enum tagWdIndexFormat
{
	wdIndexTemplate = 0, 
	wdIndexClassic = 1, 
	wdIndexFancy = 2, 
	wdIndexModern = 3, 
	wdIndexBulleted = 4, 
	wdIndexFormal = 5, 
	wdIndexSimple = 6, 
} WdIndexFormat;

// Indexes
// {0002097C-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE Indexes
DECLARE_INTERFACE_(Indexes, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// Indexes methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get__NewEnum) (THIS_ IUnknown** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Count) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Format) (THIS_ WdIndexFormat* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Format) (THIS_ WdIndexFormat prop) PURE; 
	STDMETHOD_(HRESULT, Item) (THIS_ long , Index** prop) PURE; 
	STDMETHOD_(HRESULT, AddOld) (THIS_ WordRange* , VARIANT* HeadingSeparator, VARIANT* RightAlignPageNumbers, VARIANT* Type, VARIANT* NumberOfColumns, VARIANT* AccentedLetters, Index** prop) PURE; 
	STDMETHOD_(HRESULT, MarkEntry) (THIS_ WordRange* , VARIANT* Entry, VARIANT* EntryAutoText, VARIANT* CrossReference, VARIANT* CrossReferenceAutoText, VARIANT* BookmarkName, VARIANT* Bold, VARIANT* Italic, VARIANT* Reading, Field** prop) PURE; 
	STDMETHOD_(HRESULT, MarkAllEntries) (THIS_ WordRange* , VARIANT* Entry, VARIANT* EntryAutoText, VARIANT* CrossReference, VARIANT* CrossReferenceAutoText, VARIANT* BookmarkName, VARIANT* Bold, VARIANT* Italic) PURE;
	STDMETHOD_(HRESULT, AutoMarkEntries) (THIS_ BSTR ConcordanceFileName) PURE; 
	STDMETHOD_(HRESULT, Add) (THIS_ WordRange* , VARIANT* HeadingSeparator, VARIANT* RightAlignPageNumbers, VARIANT* Type, VARIANT* NumberOfColumns, VARIANT* AccentedLetters, VARIANT* SortBy, VARIANT* IndexLanguage, Index** prop) PURE; 
};
typedef Indexes* LPNDEXES;
#ifdef __cplusplus
// Indexes  {0002097C-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TIndexesProxy : public __OCF TAutoProxy
{
public:
	TIndexesProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// _NewEnum:   [dispid -4]
	void _NewEnum(__OCF TAutoEnumerator<IUnknown*>& Obj);

	// Count:   [dispid 1]
	long Count();

	// Format:   [dispid 2]
	WdIndexFormat Format();

	// Format:   [dispid 2]
	void Format(WdIndexFormat arg0);

	// Item:   [dispid 0]
	void Item(TIndexProxy& Obj, long arg0);

	// AddOld:   [dispid 100]
	void AddOld(TIndexProxy& Obj, WordRange* arg0, __OCF TAutoVal* HeadingSeparator = 0, __OCF TAutoVal* RightAlignPageNumbers = 0, __OCF TAutoVal* Type = 0, __OCF TAutoVal* NumberOfColumns = 0, __OCF TAutoVal* AccentedLetters = 0);

	// MarkEntry:   [dispid 101]
	void MarkEntry(TFieldProxy& Obj, WordRange* arg0, __OCF TAutoVal* Entry = 0, __OCF TAutoVal* EntryAutoText = 0, __OCF TAutoVal* CrossReference = 0, __OCF TAutoVal* CrossReferenceAutoText = 0, __OCF TAutoVal* BookmarkName = 0, __OCF TAutoVal* Bold = 0, __OCF TAutoVal* Italic = 0, __OCF TAutoVal* Reading = 0);

	// MarkAllEntries:   [dispid 102]
	void MarkAllEntries(WordRange* arg0, __OCF TAutoVal* Entry = 0, __OCF TAutoVal* EntryAutoText = 0, __OCF TAutoVal* CrossReference = 0, __OCF TAutoVal* CrossReferenceAutoText = 0, __OCF TAutoVal* BookmarkName = 0, __OCF TAutoVal* Bold = 0, __OCF TAutoVal* Italic = 0);

	// AutoMarkEntries:   [dispid 103]
	void AutoMarkEntries(__OCF TAutoString ConcordanceFileName);

	// Add:   [dispid 104]
	void Add(TIndexProxy& Obj, WordRange* arg0, __OCF TAutoVal* HeadingSeparator = 0, __OCF TAutoVal* RightAlignPageNumbers = 0, __OCF TAutoVal* Type = 0, __OCF TAutoVal* NumberOfColumns = 0, __OCF TAutoVal* AccentedLetters = 0, __OCF TAutoVal* SortBy = 0, __OCF TAutoVal* IndexLanguage = 0);
};
#endif

// WdHeadingSeparator
typedef enum tagWdHeadingSeparator
{
	wdHeadingSeparatorNone = 0, 
	wdHeadingSeparatorBlankLine = 1, 
	wdHeadingSeparatorLetter = 2, 
	wdHeadingSeparatorLetterLow = 3, 
	wdHeadingSeparatorLetterFull = 4, 
} WdHeadingSeparator;

// WdIndexType
typedef enum tagWdIndexType
{
	wdIndexIndent = 0, 
	wdIndexRunin = 1, 
} WdIndexType;

// WdTabLeader
typedef enum tagWdTabLeader
{
	wdTabLeaderSpaces = 0, 
	wdTabLeaderDots = 1, 
	wdTabLeaderDashes = 2, 
	wdTabLeaderLines = 3, 
	wdTabLeaderHeavy = 4, 
	wdTabLeaderMiddleDot = 5, 
} WdTabLeader;

// WdIndexSortBy
typedef enum tagWdIndexSortBy
{
	wdIndexSortByStroke = 0, 
	wdIndexSortBySyllable = 1, 
} WdIndexSortBy;

// WdIndexFilter
typedef enum tagWdIndexFilter
{
	wdIndexFilterNone = 0, 
	wdIndexFilterAiueo = 1, 
	wdIndexFilterAkasatana = 2, 
	wdIndexFilterChosung = 3, 
	wdIndexFilterLow = 4, 
	wdIndexFilterMedium = 5, 
	wdIndexFilterFull = 6, 
} WdIndexFilter;

// Index
// {0002097D-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE Index
DECLARE_INTERFACE_(Index, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// Index methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get_HeadingSeparator) (THIS_ WdHeadingSeparator* prop) PURE; 
	STDMETHOD_(HRESULT, Set_HeadingSeparator) (THIS_ WdHeadingSeparator prop) PURE; 
	STDMETHOD_(HRESULT, Get_RightAlignPageNumbers) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_RightAlignPageNumbers) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_Type) (THIS_ WdIndexType* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Type) (THIS_ WdIndexType prop) PURE; 
	STDMETHOD_(HRESULT, Get_NumberOfColumns) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Set_NumberOfColumns) (THIS_ long prop) PURE; 
	STDMETHOD_(HRESULT, Get_Range) (THIS_ WordRange** prop) PURE; 
	STDMETHOD_(HRESULT, Get_TabLeader) (THIS_ WdTabLeader* prop) PURE; 
	STDMETHOD_(HRESULT, Set_TabLeader) (THIS_ WdTabLeader prop) PURE; 
	STDMETHOD_(HRESULT, Get_AccentedLetters) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_AccentedLetters) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_SortBy) (THIS_ WdIndexSortBy* prop) PURE;
	STDMETHOD_(HRESULT, Set_SortBy) (THIS_ WdIndexSortBy prop) PURE; 
	STDMETHOD_(HRESULT, Get_Filter) (THIS_ WdIndexFilter* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Filter) (THIS_ WdIndexFilter prop) PURE; 
	STDMETHOD_(HRESULT, Delete) (THIS ) PURE; 
	STDMETHOD_(HRESULT, Update) (THIS ) PURE; 
	STDMETHOD_(HRESULT, Get_IndexLanguage) (THIS_ WdLanguageID* prop) PURE; 
	STDMETHOD_(HRESULT, Set_IndexLanguage) (THIS_ WdLanguageID prop) PURE; 
};
typedef Index* LPNDEX;
#ifdef __cplusplus
// Index  {0002097D-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TIndexProxy : public __OCF TAutoProxy
{
public:
	TIndexProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// HeadingSeparator:   [dispid 1]
	WdHeadingSeparator HeadingSeparator();

	// HeadingSeparator:   [dispid 1]
	void HeadingSeparator(WdHeadingSeparator arg0);

	// RightAlignPageNumbers:   [dispid 2]
	/*__OWL*/ TBool RightAlignPageNumbers();

	// RightAlignPageNumbers:   [dispid 2]
	void RightAlignPageNumbers(/*__OWL*/ TBool arg0);

	// Type:   [dispid 3]
	WdIndexType Type();

	// Type:   [dispid 3]
	void Type(WdIndexType arg0);

	// NumberOfColumns:   [dispid 4]
	long NumberOfColumns();

	// NumberOfColumns:   [dispid 4]
	void NumberOfColumns(long arg0);

	// _Range:   [dispid 5]
	void _Range(TRangeProxy& Obj);

	// TabLeader:   [dispid 6]
	WdTabLeader TabLeader();

	// TabLeader:   [dispid 6]
	void TabLeader(WdTabLeader arg0);

	// AccentedLetters:   [dispid 7]
	/*__OWL*/ TBool AccentedLetters();

	// AccentedLetters:   [dispid 7]
	void AccentedLetters(/*__OWL*/ TBool arg0);

	// SortBy:   [dispid 8]
	WdIndexSortBy SortBy();

	// SortBy:   [dispid 8]
	void SortBy(WdIndexSortBy arg0);

	// Filter:   [dispid 9]
	WdIndexFilter Filter();

	// Filter:   [dispid 9]
	void Filter(WdIndexFilter arg0);

	// Delete:   [dispid 100]
	void Delete();

	// Update:   [dispid 102]
	void Update();

	// IndexLanguage:   [dispid 10]
	WdLanguageID IndexLanguage();

	// IndexLanguage:   [dispid 10]
	void IndexLanguage(WdLanguageID arg0);
};
#endif

// InlineShapes
// {000209A9-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE InlineShapes
DECLARE_INTERFACE_(InlineShapes, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// InlineShapes methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Count) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get__NewEnum) (THIS_ IUnknown** prop) PURE; 
	STDMETHOD_(HRESULT, Item) (THIS_ long , InlineShape** prop) PURE; 
	STDMETHOD_(HRESULT, AddPicture) (THIS_ BSTR FileName, VARIANT* LinkToFile, VARIANT* SaveWithDocument, VARIANT* , InlineShape** prop) PURE; 
	STDMETHOD_(HRESULT, AddOLEObject) (THIS_ VARIANT* ClassType, VARIANT* FileName, VARIANT* LinkToFile, VARIANT* DisplayAsIcon, VARIANT* IconFileName, VARIANT* IconIndex, VARIANT* IconLabel, VARIANT* , InlineShape** prop) PURE; 
	STDMETHOD_(HRESULT, AddOLEControl) (THIS_ VARIANT* ClassType, VARIANT* , InlineShape** prop) PURE; 
	STDMETHOD_(HRESULT, New) (THIS_ WordRange* , InlineShape** prop) PURE; 
	STDMETHOD_(HRESULT, AddHorizontalLine) (THIS_ BSTR FileName, VARIANT* , InlineShape** prop) PURE; 
	STDMETHOD_(HRESULT, AddHorizontalLineStandard) (THIS_ VARIANT* , InlineShape** prop) PURE; 
	STDMETHOD_(HRESULT, AddPictureBullet) (THIS_ BSTR FileName, VARIANT* , InlineShape** prop) PURE; 
};
typedef InlineShapes* LPNLINESHAPES;
#ifdef __cplusplus
// InlineShapes  {000209A9-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TInlineShapesProxy : public __OCF TAutoProxy
{
public:
	TInlineShapesProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// Count:   [dispid 1]
	long Count();

	// _NewEnum:   [dispid -4]
	void _NewEnum(__OCF TAutoEnumerator<IUnknown*>& Obj);

	// Item:   [dispid 0]
	void Item(TInlineShapeProxy& Obj, long arg0);

	// AddPicture:   [dispid 100]
	void AddPicture(TInlineShapeProxy& Obj, __OCF TAutoString FileName, __OCF TAutoVal* LinkToFile = 0, __OCF TAutoVal* SaveWithDocument = 0, __OCF TAutoVal* arg3 = 0);

	// AddOLEObject:   [dispid 24]
	void AddOLEObject(TInlineShapeProxy& Obj, __OCF TAutoVal* ClassType = 0, __OCF TAutoVal* FileName = 0, __OCF TAutoVal* LinkToFile = 0, __OCF TAutoVal* DisplayAsIcon = 0, __OCF TAutoVal* IconFileName = 0, __OCF TAutoVal* IconIndex = 0, __OCF TAutoVal* IconLabel = 0, __OCF TAutoVal* arg7 = 0);

	// AddOLEControl:   [dispid 102]
	void AddOLEControl(TInlineShapeProxy& Obj, __OCF TAutoVal* ClassType = 0, __OCF TAutoVal* arg1 = 0);

	// New:   [dispid 200]
	void New(TInlineShapeProxy& Obj, WordRange* arg0);

	// AddHorizontalLine:   [dispid 104]
	void AddHorizontalLine(TInlineShapeProxy& Obj, __OCF TAutoString FileName, __OCF TAutoVal* arg1 = 0);

	// AddHorizontalLineStandard:   [dispid 105]
	void AddHorizontalLineStandard(TInlineShapeProxy& Obj, __OCF TAutoVal* arg0 = 0);

	// AddPictureBullet:   [dispid 106]
	void AddPictureBullet(TInlineShapeProxy& Obj, __OCF TAutoString FileName, __OCF TAutoVal* arg1 = 0);
};
#endif

// KeyBinding
// {00020998-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE KeyBinding
DECLARE_INTERFACE_(KeyBinding, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE;
#endif
	// KeyBinding methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Command) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Get_KeyString) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Protected) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Get_KeyCategory) (THIS_ WdKeyCategory* prop) PURE; 
	STDMETHOD_(HRESULT, Get_KeyCode) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_KeyCode2) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_CommandParameter) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Context) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Clear) (THIS ) PURE; 
	STDMETHOD_(HRESULT, Disable) (THIS ) PURE; 
	STDMETHOD_(HRESULT, Execute) (THIS ) PURE; 
	STDMETHOD_(HRESULT, Rebind) (THIS_ WdKeyCategory KeyCategory, BSTR Command, VARIANT* CommandParameter) PURE; 
};
typedef KeyBinding* LPEYBINDING;
#ifdef __cplusplus
// KeyBinding  {00020998-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TKeyBindingProxy : public __OCF TAutoProxy
{
public:
	TKeyBindingProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// Command:   [dispid 1]
	__OCF TAutoString Command();

	// KeyString:   [dispid 2]
	__OCF TAutoString KeyString();

	// Protected:   [dispid 3]
	/*__OWL*/ TBool Protected();

	// KeyCategory:   [dispid 4]
	WdKeyCategory KeyCategory();

	// KeyCode:   [dispid 6]
	long KeyCode();

	// KeyCode2:   [dispid 7]
	long KeyCode2();

	// CommandParameter:   [dispid 8]
	__OCF TAutoString CommandParameter();

	// Context:   [dispid 10]
	IDispatch* Context();

	// Clear:   [dispid 101]
	void Clear();

	// Disable:   [dispid 102]
	void Disable();

	// Execute:   [dispid 103]
	void Execute();

	// Rebind:   [dispid 104]
	void Rebind(WdKeyCategory KeyCategory, __OCF TAutoString Command, __OCF TAutoVal* CommandParameter = 0);
};
#endif

// KeyBindings
// {00020996-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE KeyBindings
DECLARE_INTERFACE_(KeyBindings, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// KeyBindings methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get__NewEnum) (THIS_ IUnknown** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Count) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Context) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Item) (THIS_ long , KeyBinding** prop) PURE; 
	STDMETHOD_(HRESULT, Add) (THIS_ WdKeyCategory KeyCategory, BSTR Command, long KeyCode, VARIANT* KeyCode2, VARIANT* CommandParameter, KeyBinding** prop) PURE; 
	STDMETHOD_(HRESULT, ClearAll) (THIS ) PURE; 
	STDMETHOD_(HRESULT, Key) (THIS_ long KeyCode, VARIANT* KeyCode2, KeyBinding** prop) PURE; 
};
typedef KeyBindings* LPEYBINDINGS;
#ifdef __cplusplus
// KeyBindings  {00020996-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TKeyBindingsProxy : public __OCF TAutoProxy
{
public:
	TKeyBindingsProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// _NewEnum:   [dispid -4]
	void _NewEnum(__OCF TAutoEnumerator<IUnknown*>& Obj);

	// Count:   [dispid 2]
	long Count();

	// Context:   [dispid 10]
	IDispatch* Context();

	// Item:   [dispid 0]
	void Item(TKeyBindingProxy& Obj, long arg0);

	// Add:   [dispid 101]
	void Add(TKeyBindingProxy& Obj, WdKeyCategory KeyCategory, __OCF TAutoString Command, long KeyCode, __OCF TAutoVal* KeyCode2 = 0, __OCF TAutoVal* CommandParameter = 0);

	// ClearAll:   [dispid 102]
	void ClearAll();

	// Key:   [dispid 110]
	void Key(TKeyBindingProxy& Obj, long KeyCode, __OCF TAutoVal* KeyCode2 = 0);
};
#endif

// KeysBoundTo
// {00020997-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE KeysBoundTo
DECLARE_INTERFACE_(KeysBoundTo, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// KeysBoundTo methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get__NewEnum) (THIS_ IUnknown** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Count) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_KeyCategory) (THIS_ WdKeyCategory* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Command) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Get_CommandParameter) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Context) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Item) (THIS_ long , KeyBinding** prop) PURE; 
	STDMETHOD_(HRESULT, Key) (THIS_ long KeyCode, VARIANT* KeyCode2, KeyBinding** prop) PURE; 
};
typedef KeysBoundTo* LPEYSBOUNDTO;
#ifdef __cplusplus
// KeysBoundTo  {00020997-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TKeysBoundToProxy : public __OCF TAutoProxy
{
public:
	TKeysBoundToProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// _NewEnum:   [dispid -4]
	void _NewEnum(__OCF TAutoEnumerator<IUnknown*>& Obj);

	// Count:   [dispid 2]
	long Count();

	// KeyCategory:   [dispid 3]
	WdKeyCategory KeyCategory();

	// Command:   [dispid 4]
	__OCF TAutoString Command();

	// CommandParameter:   [dispid 5]
	__OCF TAutoString CommandParameter();

	// Context:   [dispid 10]
	IDispatch* Context();

	// Item:   [dispid 0]
	void Item(TKeyBindingProxy& Obj, long arg0);

	// Key:   [dispid 1]
	void Key(TKeyBindingProxy& Obj, long KeyCode, __OCF TAutoVal* KeyCode2 = 0);
};
#endif

// MsoAppLanguageID
typedef enum tagMsoAppLanguageID
{
	msoLanguageIDInstall = 1, 
	msoLanguageIDUI = 2, 
	msoLanguageIDHelp = 3, 
	msoLanguageIDExeMode = 4, 
	msoLanguageIDUIPrevious = 5, 
} MsoAppLanguageID;

// LanguageSettings
// {000C0353-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE LanguageSettings
DECLARE_INTERFACE_(LanguageSettings, _IMsoDispObj)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE;
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
	// _IMsoDispObj methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ IDispatch** ppidisp) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* plCreator) PURE; 
#endif
	// LanguageSettings methods:
	STDMETHOD_(HRESULT, Get_LanguageID) (THIS_ MsoAppLanguageID Id, int* plid) PURE; 
	STDMETHOD_(HRESULT, Get_LanguagePreferredForEditing) (THIS_ MsoLanguageID lid, VARIANT_BOOL* pf) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** ppidisp) PURE; 
};
typedef LanguageSettings* LPANGUAGESETTINGS;
#ifdef __cplusplus
// LanguageSettings  {000C0353-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TLanguageSettingsProxy : public __OCF TAutoProxy
{
public:
	TLanguageSettingsProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1610743808]
	IDispatch* _Application();

	// Creator:   [dispid 1610743809]
	long Creator();

	// LanguageID:   [dispid 1]
	int LanguageID(MsoAppLanguageID Id);

	// LanguagePreferredForEditing:   [dispid 2]
	/*__OWL*/ TBool LanguagePreferredForEditing(MsoLanguageID lid);

	// Parent:   [dispid 3]
	IDispatch* Parent();
};
#endif

// Languages
// {0002096E-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE Languages
DECLARE_INTERFACE_(Languages, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// Languages methods:
	STDMETHOD_(HRESULT, Get__NewEnum) (THIS_ IUnknown** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Count) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Item) (THIS_ VARIANT* , Language** prop) PURE; 
};
typedef Languages* LPANGUAGES;
#ifdef __cplusplus
// Languages  {0002096E-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TLanguagesProxy : public __OCF TAutoProxy
{
public:
	TLanguagesProxy() : TAutoProxy(0x0) {}

	// _NewEnum:   [dispid -4]
	void _NewEnum(__OCF TAutoEnumerator<IUnknown*>& Obj);

	// Count:   [dispid 2]
	long Count();

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// Item:   [dispid 0]
	void Item(TLanguageProxy& Obj, __OCF TAutoVal* arg0);
};
#endif

// WdListGalleryType
typedef enum tagWdListGalleryType
{
	wdBulletGallery = 1, 
	wdNumberGallery = 2, 
	wdOutlineNumberGallery = 3, 
} WdListGalleryType;

// ListGalleries
// {00020995-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE ListGalleries
DECLARE_INTERFACE_(ListGalleries, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE;
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// ListGalleries methods:
	STDMETHOD_(HRESULT, Get__NewEnum) (THIS_ IUnknown** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Count) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Item) (THIS_ WdListGalleryType , ListGallery** prop) PURE; 
};
typedef ListGalleries* LPISTGALLERIES;
#ifdef __cplusplus
// ListGalleries  {00020995-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TListGalleriesProxy : public __OCF TAutoProxy
{
public:
	TListGalleriesProxy() : TAutoProxy(0x0) {}

	// _NewEnum:   [dispid -4]
	void _NewEnum(__OCF TAutoEnumerator<IUnknown*>& Obj);

	// Count:   [dispid 2]
	long Count();

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// Item:   [dispid 0]
	void Item(TListGalleryProxy& Obj, WdListGalleryType arg0);
};
#endif

// ListGallery
// {00020994-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE ListGallery
DECLARE_INTERFACE_(ListGallery, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE;
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// ListGallery methods:
	STDMETHOD_(HRESULT, Get_ListTemplates) (THIS_ ListTemplates** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Modified) (THIS_ long , VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Reset) (THIS_ long ) PURE; 
};
typedef ListGallery* LPISTGALLERY;
#ifdef __cplusplus
// ListGallery  {00020994-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TListGalleryProxy : public __OCF TAutoProxy
{
public:
	TListGalleryProxy() : TAutoProxy(0x0) {}

	// _ListTemplates:   [dispid 1]
	void _ListTemplates(TListTemplatesProxy& Obj);

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// Modified:   [dispid 101]
	/*__OWL*/ TBool Modified(long arg0);

	// Reset:   [dispid 100]
	void Reset(long arg0);
};
#endif

// ListParagraphs
// {00020991-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE ListParagraphs
DECLARE_INTERFACE_(ListParagraphs, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE;
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// ListParagraphs methods:
	STDMETHOD_(HRESULT, Get__NewEnum) (THIS_ IUnknown** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Count) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Item) (THIS_ long , Paragraph** prop) PURE; 
};
typedef ListParagraphs* LPISTPARAGRAPHS;
#ifdef __cplusplus
// ListParagraphs  {00020991-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TListParagraphsProxy : public __OCF TAutoProxy
{
public:
	TListParagraphsProxy() : TAutoProxy(0x0) {}

	// _NewEnum:   [dispid -4]
	void _NewEnum(__OCF TAutoEnumerator<IUnknown*>& Obj);

	// Count:   [dispid 2]
	long Count();

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// Item:   [dispid 0]
	void Item(TParagraphProxy& Obj, long arg0);
};
#endif

// Lists
// {00020993-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE Lists
DECLARE_INTERFACE_(Lists, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE;
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// Lists methods:
	STDMETHOD_(HRESULT, Get__NewEnum) (THIS_ IUnknown** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Count) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Item) (THIS_ long , List** prop) PURE; 
};
typedef Lists* LPISTS;
#ifdef __cplusplus
// Lists  {00020993-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TListsProxy : public __OCF TAutoProxy
{
public:
	TListsProxy() : TAutoProxy(0x0) {}

	// _NewEnum:   [dispid -4]
	void _NewEnum(__OCF TAutoEnumerator<IUnknown*>& Obj);

	// Count:   [dispid 2]
	long Count();

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// Item:   [dispid 0]
	void Item(TListProxy& Obj, long arg0);
};
#endif

// ListTemplates
// {00020990-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE ListTemplates
DECLARE_INTERFACE_(ListTemplates, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE;
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// ListTemplates methods:
	STDMETHOD_(HRESULT, Get__NewEnum) (THIS_ IUnknown** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Count) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Item) (THIS_ VARIANT* , ListTemplate** prop) PURE; 
	STDMETHOD_(HRESULT, Add) (THIS_ VARIANT* OutlineNumbered, VARIANT* Name, ListTemplate** prop) PURE; 
};
typedef ListTemplates* LPISTTEMPLATES;
#ifdef __cplusplus
// ListTemplates  {00020990-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TListTemplatesProxy : public __OCF TAutoProxy
{
public:
	TListTemplatesProxy() : TAutoProxy(0x0) {}

	// _NewEnum:   [dispid -4]
	void _NewEnum(__OCF TAutoEnumerator<IUnknown*>& Obj);

	// Count:   [dispid 2]
	long Count();

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// Item:   [dispid 0]
	void Item(TListTemplateProxy& Obj, __OCF TAutoVal* arg0);

	// Add:   [dispid 100]
	void Add(TListTemplateProxy& Obj, __OCF TAutoVal* OutlineNumbered = 0, __OCF TAutoVal* Name = 0);
};
#endif

// Mailer
// {000209BD-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE Mailer
DECLARE_INTERFACE_(Mailer, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// Mailer methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get_BCCRecipients) (THIS_ VARIANT* prop) PURE; 
	STDMETHOD_(HRESULT, Set_BCCRecipients) (THIS_ VARIANT* prop) PURE; 
	STDMETHOD_(HRESULT, Get_CCRecipients) (THIS_ VARIANT* prop) PURE; 
	STDMETHOD_(HRESULT, Set_CCRecipients) (THIS_ VARIANT* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Recipients) (THIS_ VARIANT* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Recipients) (THIS_ VARIANT* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Enclosures) (THIS_ VARIANT* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Enclosures) (THIS_ VARIANT* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Sender) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Get_SendDateTime) (THIS_ DATE* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Received) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Subject) (THIS_ BSTR* prop) PURE;
	STDMETHOD_(HRESULT, Set_Subject) (THIS_ BSTR prop) PURE; 
};
typedef Mailer* LPAILER;
#ifdef __cplusplus
// Mailer  {000209BD-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TMailerProxy : public __OCF TAutoProxy
{
public:
	TMailerProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// BCCRecipients:   [dispid 100]
	__OCF TAutoVal BCCRecipients();

	// BCCRecipients:   [dispid 100]
	void BCCRecipients(__OCF TAutoVal* arg0);

	// CCRecipients:   [dispid 101]
	__OCF TAutoVal CCRecipients();

	// CCRecipients:   [dispid 101]
	void CCRecipients(__OCF TAutoVal* arg0);

	// Recipients:   [dispid 102]
	__OCF TAutoVal Recipients();

	// Recipients:   [dispid 102]
	void Recipients(__OCF TAutoVal* arg0);

	// Enclosures:   [dispid 103]
	__OCF TAutoVal Enclosures();

	// Enclosures:   [dispid 103]
	void Enclosures(__OCF TAutoVal* arg0);

	// Sender:   [dispid 104]
	__OCF TAutoString Sender();

	// SendDateTime:   [dispid 105]
	__OCF TAutoDate SendDateTime();

	// Received:   [dispid 106]
	/*__OWL*/ TBool Received();

	// Subject:   [dispid 107]
	__OCF TAutoString Subject();

	// Subject:   [dispid 107]
	void Subject(__OCF TAutoString arg0);
};
#endif

// MailingLabel
// {00020917-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE MailingLabel
DECLARE_INTERFACE_(MailingLabel, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// MailingLabel methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE;
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get_DefaultPrintBarCode) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_DefaultPrintBarCode) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_DefaultLaserTray) (THIS_ WdPaperTray* prop) PURE; 
	STDMETHOD_(HRESULT, Set_DefaultLaserTray) (THIS_ WdPaperTray prop) PURE; 
	STDMETHOD_(HRESULT, Get_CustomLabels) (THIS_ CustomLabels** prop) PURE; 
	STDMETHOD_(HRESULT, Get_DefaultLabelName) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Set_DefaultLabelName) (THIS_ BSTR prop) PURE; 
	STDMETHOD_(HRESULT, CreateNewDocument2000) (THIS_ VARIANT* Name, VARIANT* Address, VARIANT* AutoText, VARIANT* ExtractAddress, VARIANT* LaserTray, Document** prop) PURE; 
	STDMETHOD_(HRESULT, PrintOut2000) (THIS_ VARIANT* Name, VARIANT* Address, VARIANT* ExtractAddress, VARIANT* LaserTray, VARIANT* SingleLabel, VARIANT* Row, VARIANT* Column) PURE; 
	STDMETHOD_(HRESULT, LabelOptions) (THIS ) PURE; 
	STDMETHOD_(HRESULT, CreateNewDocument) (THIS_ VARIANT* Name, VARIANT* Address, VARIANT* AutoText, VARIANT* ExtractAddress, VARIANT* LaserTray, VARIANT* PrintEPostageLabel, VARIANT* Vertical, Document** prop) PURE; 
	STDMETHOD_(HRESULT, PrintOut) (THIS_ VARIANT* Name, VARIANT* Address, VARIANT* ExtractAddress, VARIANT* LaserTray, VARIANT* SingleLabel, VARIANT* Row, VARIANT* Column, VARIANT* PrintEPostageLabel, VARIANT* Vertical) PURE; 
	STDMETHOD_(HRESULT, Get_Vertical) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Vertical) (THIS_ VARIANT_BOOL prop) PURE; 
};
typedef MailingLabel* LPAILINGLABEL;
#ifdef __cplusplus
// MailingLabel  {00020917-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TMailingLabelProxy : public __OCF TAutoProxy
{
public:
	TMailingLabelProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// DefaultPrintBarCode:   [dispid 2]
	/*__OWL*/ TBool DefaultPrintBarCode();

	// DefaultPrintBarCode:   [dispid 2]
	void DefaultPrintBarCode(/*__OWL*/ TBool arg0);

	// DefaultLaserTray:   [dispid 4]
	WdPaperTray DefaultLaserTray();

	// DefaultLaserTray:   [dispid 4]
	void DefaultLaserTray(WdPaperTray arg0);

	// _CustomLabels:   [dispid 8]
	void _CustomLabels(TCustomLabelsProxy& Obj);

	// DefaultLabelName:   [dispid 9]
	__OCF TAutoString DefaultLabelName();

	// DefaultLabelName:   [dispid 9]
	void DefaultLabelName(__OCF TAutoString arg0);

	// CreateNewDocument2000:   [dispid 101]
	Document* CreateNewDocument2000(__OCF TAutoVal* Name = 0, __OCF TAutoVal* Address = 0, __OCF TAutoVal* AutoText = 0, __OCF TAutoVal* ExtractAddress = 0, __OCF TAutoVal* LaserTray = 0);

	// PrintOut2000:   [dispid 102]
	void PrintOut2000(__OCF TAutoVal* Name = 0, __OCF TAutoVal* Address = 0, __OCF TAutoVal* ExtractAddress = 0, __OCF TAutoVal* LaserTray = 0, __OCF TAutoVal* SingleLabel = 0, __OCF TAutoVal* Row = 0, __OCF TAutoVal* Column = 0);

	// LabelOptions:   [dispid 103]
	void LabelOptions();

	// CreateNewDocument:   [dispid 104]
	Document* CreateNewDocument(__OCF TAutoVal* Name = 0, __OCF TAutoVal* Address = 0, __OCF TAutoVal* AutoText = 0, __OCF TAutoVal* ExtractAddress = 0, __OCF TAutoVal* LaserTray = 0, __OCF TAutoVal* PrintEPostageLabel = 0, __OCF TAutoVal* Vertical = 0);

	// PrintOut:   [dispid 105]
	void PrintOut(__OCF TAutoVal* Name = 0, __OCF TAutoVal* Address = 0, __OCF TAutoVal* ExtractAddress = 0, __OCF TAutoVal* LaserTray = 0, __OCF TAutoVal* SingleLabel = 0, __OCF TAutoVal* Row = 0, __OCF TAutoVal* Column = 0, __OCF TAutoVal* PrintEPostageLabel = 0, __OCF TAutoVal* Vertical = 0);

	// Vertical:   [dispid 10]
	/*__OWL*/ TBool Vertical();

	// Vertical:   [dispid 10]
	void Vertical(/*__OWL*/ TBool arg0);
};
#endif

// WdMailMergeMainDocType
typedef enum tagWdMailMergeMainDocType
{
	wdNotAMergeDocument = -1, 
	wdFormLetters = 0, 
	wdMailingLabels = 1, 
	wdEnvelopes = 2, 
	wdCatalog = 3, 
	wdEMail = 4, 
	wdFax = 5, 
	wdDirectory = 3, 
} WdMailMergeMainDocType;

// WdMailMergeState
typedef enum tagWdMailMergeState
{
	wdNormalDocument = 0, 
	wdMainDocumentOnly = 1, 
	wdMainAndDataSource = 2, 
	wdMainAndHeader = 3, 
	wdMainAndSourceAndHeader = 4, 
	wdDataSource = 5, 
} WdMailMergeState;

// WdMailMergeDestination
typedef enum tagWdMailMergeDestination
{
	wdSendToNewDocument = 0, 
	wdSendToPrinter = 1, 
	wdSendToEmail = 2,
	wdSendToFax = 3, 
} WdMailMergeDestination;

// WdMailMergeMailFormat
typedef enum tagWdMailMergeMailFormat
{
	wdMailFormatPlainText = 0, 
	wdMailFormatHTML = 1, 
} WdMailMergeMailFormat;

// MailMerge
// {00020920-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE MailMerge
DECLARE_INTERFACE_(MailMerge, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// MailMerge methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get_MainDocumentType) (THIS_ WdMailMergeMainDocType* prop) PURE; 
	STDMETHOD_(HRESULT, Set_MainDocumentType) (THIS_ WdMailMergeMainDocType prop) PURE; 
	STDMETHOD_(HRESULT, Get_State) (THIS_ WdMailMergeState* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Destination) (THIS_ WdMailMergeDestination* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Destination) (THIS_ WdMailMergeDestination prop) PURE; 
	STDMETHOD_(HRESULT, Get_DataSource) (THIS_ MailMergeDataSource** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Fields) (THIS_ MailMergeFields** prop) PURE; 
	STDMETHOD_(HRESULT, Get_ViewMailMergeFieldCodes) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Set_ViewMailMergeFieldCodes) (THIS_ long prop) PURE; 
	STDMETHOD_(HRESULT, Get_SuppressBlankLines) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_SuppressBlankLines) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_MailAsAttachment) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_MailAsAttachment) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_MailAddressFieldName) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Set_MailAddressFieldName) (THIS_ BSTR prop) PURE; 
	STDMETHOD_(HRESULT, Get_MailSubject) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Set_MailSubject) (THIS_ BSTR prop) PURE; 
	STDMETHOD_(HRESULT, CreateDataSource) (THIS_ VARIANT* Name, VARIANT* PasswordDocument, VARIANT* WritePasswordDocument, VARIANT* HeaderRecord, VARIANT* MSQuery, VARIANT* SQLStatement, VARIANT* SQLStatement1, VARIANT* Connection, VARIANT* LinkToSource) PURE; 
	STDMETHOD_(HRESULT, CreateHeaderSource) (THIS_ BSTR Name, VARIANT* PasswordDocument, VARIANT* WritePasswordDocument, VARIANT* HeaderRecord) PURE; 
	STDMETHOD_(HRESULT, OpenDataSource2000) (THIS_ BSTR Name, VARIANT* Format, VARIANT* ConfirmConversions, VARIANT* ReadOnly, VARIANT* LinkToSource, VARIANT* AddToRecentFiles, VARIANT* PasswordDocument, VARIANT* PasswordTemplate, VARIANT* Revert, VARIANT* WritePasswordDocument, VARIANT* WritePasswordTemplate, VARIANT* Connection, VARIANT* SQLStatement, VARIANT* SQLStatement1) PURE; 
	STDMETHOD_(HRESULT, OpenHeaderSource2000) (THIS_ BSTR Name, VARIANT* Format, VARIANT* ConfirmConversions, VARIANT* ReadOnly, VARIANT* AddToRecentFiles, VARIANT* PasswordDocument, VARIANT* PasswordTemplate, VARIANT* Revert, VARIANT* WritePasswordDocument, VARIANT* WritePasswordTemplate) PURE; 
	STDMETHOD_(HRESULT, Execute) (THIS_ VARIANT* Pause) PURE; 
	STDMETHOD_(HRESULT, Check) (THIS ) PURE;
	STDMETHOD_(HRESULT, EditDataSource) (THIS ) PURE; 
	STDMETHOD_(HRESULT, EditHeaderSource) (THIS ) PURE; 
	STDMETHOD_(HRESULT, EditMainDocument) (THIS ) PURE; 
	STDMETHOD_(HRESULT, UseAddressBook) (THIS_ BSTR Type) PURE; 
	STDMETHOD_(HRESULT, Get_HighlightMergeFields) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_HighlightMergeFields) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_MailFormat) (THIS_ WdMailMergeMailFormat* prop) PURE; 
	STDMETHOD_(HRESULT, Set_MailFormat) (THIS_ WdMailMergeMailFormat prop) PURE; 
	STDMETHOD_(HRESULT, Get_ShowSendToCustom) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Set_ShowSendToCustom) (THIS_ BSTR prop) PURE; 
	STDMETHOD_(HRESULT, Get_WizardState) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Set_WizardState) (THIS_ long prop) PURE; 
	STDMETHOD_(HRESULT, OpenDataSource) (THIS_ BSTR Name, VARIANT* Format, VARIANT* ConfirmConversions, VARIANT* ReadOnly, VARIANT* LinkToSource, VARIANT* AddToRecentFiles, VARIANT* PasswordDocument, VARIANT* PasswordTemplate, VARIANT* Revert, VARIANT* WritePasswordDocument, VARIANT* WritePasswordTemplate, VARIANT* Connection, VARIANT* SQLStatement, VARIANT* SQLStatement1, VARIANT* OpenExclusive, VARIANT* SubType) PURE; 
	STDMETHOD_(HRESULT, OpenHeaderSource) (THIS_ BSTR Name, VARIANT* Format, VARIANT* ConfirmConversions, VARIANT* ReadOnly, VARIANT* AddToRecentFiles, VARIANT* PasswordDocument, VARIANT* PasswordTemplate, VARIANT* Revert, VARIANT* WritePasswordDocument, VARIANT* WritePasswordTemplate, VARIANT* OpenExclusive) PURE; 
	STDMETHOD_(HRESULT, ShowWizard) (THIS_ VARIANT* InitialState, VARIANT* ShowDocumentStep, VARIANT* ShowTemplateStep, VARIANT* ShowDataStep, VARIANT* ShowWriteStep, VARIANT* ShowPreviewStep, VARIANT* ShowMergeStep) PURE; 
};
typedef MailMerge* LPAILMERGE;
#ifdef __cplusplus
// MailMerge  {00020920-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TMailMergeProxy : public __OCF TAutoProxy
{
public:
	TMailMergeProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// MainDocumentType:   [dispid 1]
	WdMailMergeMainDocType MainDocumentType();

	// MainDocumentType:   [dispid 1]
	void MainDocumentType(WdMailMergeMainDocType arg0);

	// State:   [dispid 2]
	WdMailMergeState State();

	// Destination:   [dispid 3]
	WdMailMergeDestination Destination();

	// Destination:   [dispid 3]
	void Destination(WdMailMergeDestination arg0);

	// DataSource:   [dispid 4]
	void DataSource(TMailMergeDataSourceProxy& Obj);

	// _Fields:   [dispid 5]
	void _Fields(TMailMergeFieldsProxy& Obj);

	// ViewMailMergeFieldCodes:   [dispid 6]
	long ViewMailMergeFieldCodes();

	// ViewMailMergeFieldCodes:   [dispid 6]
	void ViewMailMergeFieldCodes(long arg0);

	// SuppressBlankLines:   [dispid 7]
	/*__OWL*/ TBool SuppressBlankLines();

	// SuppressBlankLines:   [dispid 7]
	void SuppressBlankLines(/*__OWL*/ TBool arg0);

	// MailAsAttachment:   [dispid 8]
	/*__OWL*/ TBool MailAsAttachment();

	// MailAsAttachment:   [dispid 8]
	void MailAsAttachment(/*__OWL*/ TBool arg0);

	// MailAddressFieldName:   [dispid 9]
	__OCF TAutoString MailAddressFieldName();

	// MailAddressFieldName:   [dispid 9]
	void MailAddressFieldName(__OCF TAutoString arg0);

	// MailSubject:   [dispid 10]
	__OCF TAutoString MailSubject();

	// MailSubject:   [dispid 10]
	void MailSubject(__OCF TAutoString arg0);

	// CreateDataSource:   [dispid 101]
	void CreateDataSource(__OCF TAutoVal* Name = 0, __OCF TAutoVal* PasswordDocument = 0, __OCF TAutoVal* WritePasswordDocument = 0, __OCF TAutoVal* HeaderRecord = 0, __OCF TAutoVal* MSQuery = 0, __OCF TAutoVal* SQLStatement = 0, __OCF TAutoVal* SQLStatement1 = 0, __OCF TAutoVal* Connection = 0, __OCF TAutoVal* LinkToSource = 0);

	// CreateHeaderSource:   [dispid 102]
	void CreateHeaderSource(__OCF TAutoString Name, __OCF TAutoVal* PasswordDocument = 0, __OCF TAutoVal* WritePasswordDocument = 0, __OCF TAutoVal* HeaderRecord = 0);

	// OpenDataSource2000:   [dispid 103]
	void OpenDataSource2000(__OCF TAutoString Name, __OCF TAutoVal* Format = 0, __OCF TAutoVal* ConfirmConversions = 0, __OCF TAutoVal* ReadOnly = 0, __OCF TAutoVal* LinkToSource = 0, __OCF TAutoVal* AddToRecentFiles = 0, __OCF TAutoVal* PasswordDocument = 0, __OCF TAutoVal* PasswordTemplate = 0, __OCF TAutoVal* Revert = 0, __OCF TAutoVal* WritePasswordDocument = 0, __OCF TAutoVal* WritePasswordTemplate = 0, __OCF TAutoVal* Connection = 0, __OCF TAutoVal* SQLStatement = 0, __OCF TAutoVal* SQLStatement1 = 0);

	// OpenHeaderSource2000:   [dispid 104]
	void OpenHeaderSource2000(__OCF TAutoString Name, __OCF TAutoVal* Format = 0, __OCF TAutoVal* ConfirmConversions = 0, __OCF TAutoVal* ReadOnly = 0, __OCF TAutoVal* AddToRecentFiles = 0, __OCF TAutoVal* PasswordDocument = 0, __OCF TAutoVal* PasswordTemplate = 0, __OCF TAutoVal* Revert = 0, __OCF TAutoVal* WritePasswordDocument = 0, __OCF TAutoVal* WritePasswordTemplate = 0);

	// Execute:   [dispid 105]
	void Execute(__OCF TAutoVal* Pause = 0);

	// Check:   [dispid 106]
	void Check();

	// EditDataSource:   [dispid 107]
	void EditDataSource();

	// EditHeaderSource:   [dispid 108]
	void EditHeaderSource();

	// EditMainDocument:   [dispid 109]
	void EditMainDocument();

	// UseAddressBook:   [dispid 111]
	void UseAddressBook(__OCF TAutoString Type);

	// HighlightMergeFields:   [dispid 11]
	/*__OWL*/ TBool HighlightMergeFields();

	// HighlightMergeFields:   [dispid 11]
	void HighlightMergeFields(/*__OWL*/ TBool arg0);

	// MailFormat:   [dispid 12]
	WdMailMergeMailFormat MailFormat();

	// MailFormat:   [dispid 12]
	void MailFormat(WdMailMergeMailFormat arg0);

	// ShowSendToCustom:   [dispid 13]
	__OCF TAutoString ShowSendToCustom();

	// ShowSendToCustom:   [dispid 13]
	void ShowSendToCustom(__OCF TAutoString arg0);

	// WizardState:   [dispid 14]
	long WizardState();

	// WizardState:   [dispid 14]
	void WizardState(long arg0);

	// OpenDataSource:   [dispid 112]
	void OpenDataSource(__OCF TAutoString Name, __OCF TAutoVal* Format = 0, __OCF TAutoVal* ConfirmConversions = 0, __OCF TAutoVal* ReadOnly = 0, __OCF TAutoVal* LinkToSource = 0, __OCF TAutoVal* AddToRecentFiles = 0, __OCF TAutoVal* PasswordDocument = 0, __OCF TAutoVal* PasswordTemplate = 0, __OCF TAutoVal* Revert = 0, __OCF TAutoVal* WritePasswordDocument = 0, __OCF TAutoVal* WritePasswordTemplate = 0, __OCF TAutoVal* Connection = 0, __OCF TAutoVal* SQLStatement = 0, __OCF TAutoVal* SQLStatement1 = 0, __OCF TAutoVal* OpenExclusive = 0, __OCF TAutoVal* SubType = 0);

	// OpenHeaderSource:   [dispid 113]
	void OpenHeaderSource(__OCF TAutoString Name, __OCF TAutoVal* Format = 0, __OCF TAutoVal* ConfirmConversions = 0, __OCF TAutoVal* ReadOnly = 0, __OCF TAutoVal* AddToRecentFiles = 0, __OCF TAutoVal* PasswordDocument = 0, __OCF TAutoVal* PasswordTemplate = 0, __OCF TAutoVal* Revert = 0, __OCF TAutoVal* WritePasswordDocument = 0, __OCF TAutoVal* WritePasswordTemplate = 0, __OCF TAutoVal* OpenExclusive = 0);

	// ShowWizard:   [dispid 114]
	void ShowWizard(__OCF TAutoVal* InitialState, __OCF TAutoVal* ShowDocumentStep = 0, __OCF TAutoVal* ShowTemplateStep = 0, __OCF TAutoVal* ShowDataStep = 0, __OCF TAutoVal* ShowWriteStep = 0, __OCF TAutoVal* ShowPreviewStep = 0, __OCF TAutoVal* ShowMergeStep = 0);
};
#endif

// MailMessage
// {000209BA-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE MailMessage
DECLARE_INTERFACE_(MailMessage, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// MailMessage methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE;
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, CheckName) (THIS ) PURE; 
	STDMETHOD_(HRESULT, Delete) (THIS ) PURE; 
	STDMETHOD_(HRESULT, DisplayMoveDialog) (THIS ) PURE; 
	STDMETHOD_(HRESULT, DisplayProperties) (THIS ) PURE; 
	STDMETHOD_(HRESULT, DisplaySelectNamesDialog) (THIS ) PURE; 
	STDMETHOD_(HRESULT, Forward) (THIS ) PURE; 
	STDMETHOD_(HRESULT, GoToNext) (THIS ) PURE; 
	STDMETHOD_(HRESULT, GoToPrevious) (THIS ) PURE; 
	STDMETHOD_(HRESULT, Reply) (THIS ) PURE; 
	STDMETHOD_(HRESULT, ReplyAll) (THIS ) PURE; 
	STDMETHOD_(HRESULT, ToggleHeader) (THIS ) PURE; 
};
typedef MailMessage* LPAILMESSAGE;
#ifdef __cplusplus
// MailMessage  {000209BA-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TMailMessageProxy : public __OCF TAutoProxy
{
public:
	TMailMessageProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// CheckName:   [dispid 334]
	void CheckName();

	// Delete:   [dispid 335]
	void Delete();

	// DisplayMoveDialog:   [dispid 336]
	void DisplayMoveDialog();

	// DisplayProperties:   [dispid 337]
	void DisplayProperties();

	// DisplaySelectNamesDialog:   [dispid 338]
	void DisplaySelectNamesDialog();

	// Forward:   [dispid 339]
	void Forward();

	// GoToNext:   [dispid 340]
	void GoToNext();

	// GoToPrevious:   [dispid 341]
	void GoToPrevious();

	// Reply:   [dispid 342]
	void Reply();

	// ReplyAll:   [dispid 343]
	void ReplyAll();

	// ToggleHeader:   [dispid 344]
	void ToggleHeader();
};
#endif

// NewFile
// {000C0936-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE NewFile
DECLARE_INTERFACE_(NewFile, _IMsoDispObj)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
	// _IMsoDispObj methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ IDispatch** ppidisp) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* plCreator) PURE; 
#endif
	// NewFile methods:
	STDMETHOD_(HRESULT, Add) (THIS_ BSTR FileName, VARIANT Section, VARIANT DisplayName, VARIANT Action, VARIANT_BOOL* pvarf) PURE; 
	STDMETHOD_(HRESULT, Remove) (THIS_ BSTR FileName, VARIANT Section, VARIANT DisplayName, VARIANT Action, VARIANT_BOOL* pvarf) PURE; 
};
typedef NewFile* LPEWFILE;
#ifdef __cplusplus
// NewFile  {000C0936-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TNewFileProxy : public __OCF TAutoProxy
{
public:
	TNewFileProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1610743808]
	IDispatch* _Application();

	// Creator:   [dispid 1610743809]
	long Creator();

	// Add:   [dispid 1]
	/*__OWL*/ TBool Add(__OCF TAutoString FileName, __OCF TAutoVal Section = __OCF TNoArg(), __OCF TAutoVal DisplayName = __OCF TNoArg(), __OCF TAutoVal Action = __OCF TNoArg());

	// Remove:   [dispid 2]
	/*__OWL*/ TBool Remove(__OCF TAutoString FileName, __OCF TAutoVal Section = __OCF TNoArg(), __OCF TAutoVal DisplayName = __OCF TNoArg(), __OCF TAutoVal Action = __OCF TNoArg());
};
#endif

// WdMeasurementUnits
typedef enum tagWdMeasurementUnits
{
	wdInches = 0, 
	wdCentimeters = 1, 
	wdMillimeters = 2, 
	wdPoints = 3, 
	wdPicas = 4, 
} WdMeasurementUnits;

// WdInsertedTextMark
typedef enum tagWdInsertedTextMark
{
	wdInsertedTextMarkNone = 0,
	wdInsertedTextMarkBold = 1, 
	wdInsertedTextMarkItalic = 2, 
	wdInsertedTextMarkUnderline = 3, 
	wdInsertedTextMarkDoubleUnderline = 4, 
	wdInsertedTextMarkColorOnly = 5, 
	wdInsertedTextMarkStrikeThrough = 6, 
} WdInsertedTextMark;

// WdDeletedTextMark
typedef enum tagWdDeletedTextMark
{
	wdDeletedTextMarkHidden = 0, 
	wdDeletedTextMarkStrikeThrough = 1, 
	wdDeletedTextMarkCaret = 2, 
	wdDeletedTextMarkPound = 3, 
	wdDeletedTextMarkNone = 4, 
	wdDeletedTextMarkBold = 5, 
	wdDeletedTextMarkItalic = 6, 
	wdDeletedTextMarkUnderline = 7, 
	wdDeletedTextMarkDoubleUnderline = 8, 
	wdDeletedTextMarkColorOnly = 9, 
} WdDeletedTextMark;

// WdRevisedLinesMark
typedef enum tagWdRevisedLinesMark
{
	wdRevisedLinesMarkNone = 0,
	wdRevisedLinesMarkLeftBorder = 1, 
	wdRevisedLinesMarkRightBorder = 2, 
	wdRevisedLinesMarkOutsideBorder = 3, 
} WdRevisedLinesMark;

// WdDefaultFilePath
typedef enum tagWdDefaultFilePath
{
	wdDocumentsPath = 0, 
	wdPicturesPath = 1, 
	wdUserTemplatesPath = 2, 
	wdWorkgroupTemplatesPath = 3, 
	wdUserOptionsPath = 4, 
	wdAutoRecoverPath = 5, 
	wdToolsPath = 6, 
	wdTutorialPath = 7, 
	wdStartupPath = 8, 
	wdProgramPath = 9, 
	wdGraphicsFiltersPath = 10, 
	wdTextConvertersPath = 11, 
	wdProofingToolsPath = 12, 
	wdTempFilePath = 13, 
	wdCurrentFolderPath = 14, 
	wdStyleGalleryPath = 15, 
	wdBorderArtPath = 19, 
} WdDefaultFilePath;

// WdRevisedPropertiesMark
typedef enum tagWdRevisedPropertiesMark
{
	wdRevisedPropertiesMarkNone = 0, 
	wdRevisedPropertiesMarkBold = 1, 
	wdRevisedPropertiesMarkItalic = 2, 
	wdRevisedPropertiesMarkUnderline = 3, 
	wdRevisedPropertiesMarkDoubleUnderline = 4, 
	wdRevisedPropertiesMarkColorOnly = 5, 
	wdRevisedPropertiesMarkStrikeThrough = 6, 
} WdRevisedPropertiesMark;

// WdOpenFormat
typedef enum tagWdOpenFormat
{
	wdOpenFormatAuto = 0, 
	wdOpenFormatDocument = 1, 
	wdOpenFormatTemplate = 2, 
	wdOpenFormatRTF = 3, 
	wdOpenFormatText = 4, 
	wdOpenFormatUnicodeText = 5, 
	wdOpenFormatEncodedText = 5, 
	wdOpenFormatAllWord = 6, 
	wdOpenFormatWebPages = 7, 
	wdOpenFormatXML = 8, 
} WdOpenFormat;

// WdMultipleWordConversionsMode
typedef enum tagWdMultipleWordConversionsMode
{
	wdHangulToHanja = 0, 
	wdHanjaToHangul = 1, 
} WdMultipleWordConversionsMode;

// WdDocumentViewDirection
typedef enum tagWdDocumentViewDirection
{
	wdDocumentViewRtl = 0, 
	wdDocumentViewLtr = 1, 
} WdDocumentViewDirection;

// WdArabicNumeral
typedef enum tagWdArabicNumeral
{
	wdNumeralArabic = 0, 
	wdNumeralHindi = 1, 
	wdNumeralContext = 2, 
	wdNumeralSystem = 3, 
} WdArabicNumeral;

// WdMonthNames
typedef enum tagWdMonthNames
{
	wdMonthNamesArabic = 0,
	wdMonthNamesEnglish = 1, 
	wdMonthNamesFrench = 2, 
} WdMonthNames;

// WdCursorMovement
typedef enum tagWdCursorMovement
{
	wdCursorMovementLogical = 0, 
	wdCursorMovementVisual = 1, 
} WdCursorMovement;

// WdVisualSelection
typedef enum tagWdVisualSelection
{
	wdVisualSelectionBlock = 0, 
	wdVisualSelectionContinuous = 1, 
} WdVisualSelection;

// WdHebSpellStart
typedef enum tagWdHebSpellStart
{
	wdFullScript = 0, 
	wdPartialScript = 1, 
	wdMixedScript = 2, 
	wdMixedAuthorizedScript = 3, 
} WdHebSpellStart;

// WdAraSpeller
typedef enum tagWdAraSpeller
{
	wdNone = 0, 
	wdInitialAlef = 1, 
	wdFinalYaa = 2, 
	wdBoth = 3, 
} WdAraSpeller;

// WdHighAnsiText
typedef enum tagWdHighAnsiText
{
	wdHighAnsiIsFarEast = 0, 
	wdHighAnsiIsHighAnsi = 1, 
	wdAutoDetectHighAnsiFarEast = 2, 
} WdHighAnsiText;

// WdWrapTypeMerged
typedef enum tagWdWrapTypeMerged
{
	wdWrapMergeInline = 0, 
	wdWrapMergeSquare = 1, 
	wdWrapMergeTight = 2, 
	wdWrapMergeBehind = 3, 
	wdWrapMergeFront = 4, 
	wdWrapMergeThrough = 5, 
	wdWrapMergeTopBottom = 6,
} WdWrapTypeMerged;

// WdRevisionsBalloonPrintOrientation
typedef enum tagWdRevisionsBalloonPrintOrientation
{
	wdBalloonPrintOrientationAuto = 0, 
	wdBalloonPrintOrientationPreserve = 1, 
	wdBalloonPrintOrientationForceLandscape = 2, 
} WdRevisionsBalloonPrintOrientation;

// Options
// {000209B7-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE Options
DECLARE_INTERFACE_(Options, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// Options methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get_AllowAccentedUppercase) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_AllowAccentedUppercase) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_WPHelp) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_WPHelp) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_WPDocNavKeys) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_WPDocNavKeys) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_Pagination) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Pagination) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_BlueScreen) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_BlueScreen) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_EnableSound) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_EnableSound) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_ConfirmConversions) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_ConfirmConversions) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_UpdateLinksAtOpen) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_UpdateLinksAtOpen) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_SendMailAttach) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_SendMailAttach) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_MeasurementUnit) (THIS_ WdMeasurementUnits* prop) PURE; 
	STDMETHOD_(HRESULT, Set_MeasurementUnit) (THIS_ WdMeasurementUnits prop) PURE; 
	STDMETHOD_(HRESULT, Get_ButtonFieldClicks) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Set_ButtonFieldClicks) (THIS_ long prop) PURE; 
	STDMETHOD_(HRESULT, Get_ShortMenuNames) (THIS_ VARIANT_BOOL* prop) PURE;
	STDMETHOD_(HRESULT, Set_ShortMenuNames) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_RTFInClipboard) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_RTFInClipboard) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_UpdateFieldsAtPrint) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_UpdateFieldsAtPrint) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_PrintProperties) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_PrintProperties) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_PrintFieldCodes) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_PrintFieldCodes) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_PrintComments) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_PrintComments) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_PrintHiddenText) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_PrintHiddenText) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_EnvelopeFeederInstalled) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Get_UpdateLinksAtPrint) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_UpdateLinksAtPrint) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_PrintBackground) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_PrintBackground) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_PrintDrawingObjects) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_PrintDrawingObjects) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_DefaultTray) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Set_DefaultTray) (THIS_ BSTR prop) PURE; 
	STDMETHOD_(HRESULT, Get_DefaultTrayID) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Set_DefaultTrayID) (THIS_ long prop) PURE; 
	STDMETHOD_(HRESULT, Get_CreateBackup) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_CreateBackup) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_AllowFastSave) (THIS_ VARIANT_BOOL* prop) PURE;
	STDMETHOD_(HRESULT, Set_AllowFastSave) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_SavePropertiesPrompt) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_SavePropertiesPrompt) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_SaveNormalPrompt) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_SaveNormalPrompt) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_SaveInterval) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Set_SaveInterval) (THIS_ long prop) PURE; 
	STDMETHOD_(HRESULT, Get_BackgroundSave) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_BackgroundSave) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_InsertedTextMark) (THIS_ WdInsertedTextMark* prop) PURE; 
	STDMETHOD_(HRESULT, Set_InsertedTextMark) (THIS_ WdInsertedTextMark prop) PURE; 
	STDMETHOD_(HRESULT, Get_DeletedTextMark) (THIS_ WdDeletedTextMark* prop) PURE; 
	STDMETHOD_(HRESULT, Set_DeletedTextMark) (THIS_ WdDeletedTextMark prop) PURE; 
	STDMETHOD_(HRESULT, Get_RevisedLinesMark) (THIS_ WdRevisedLinesMark* prop) PURE; 
	STDMETHOD_(HRESULT, Set_RevisedLinesMark) (THIS_ WdRevisedLinesMark prop) PURE; 
	STDMETHOD_(HRESULT, Get_InsertedTextColor) (THIS_ WdColorIndex* prop) PURE; 
	STDMETHOD_(HRESULT, Set_InsertedTextColor) (THIS_ WdColorIndex prop) PURE; 
	STDMETHOD_(HRESULT, Get_DeletedTextColor) (THIS_ WdColorIndex* prop) PURE; 
	STDMETHOD_(HRESULT, Set_DeletedTextColor) (THIS_ WdColorIndex prop) PURE; 
	STDMETHOD_(HRESULT, Get_RevisedLinesColor) (THIS_ WdColorIndex* prop) PURE; 
	STDMETHOD_(HRESULT, Set_RevisedLinesColor) (THIS_ WdColorIndex prop) PURE; 
	STDMETHOD_(HRESULT, Get_DefaultFilePath) (THIS_ WdDefaultFilePath Path, BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Set_DefaultFilePath) (THIS_ WdDefaultFilePath Path, BSTR prop) PURE; 
	STDMETHOD_(HRESULT, Get_Overtype) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Overtype) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_ReplaceSelection) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_ReplaceSelection) (THIS_ VARIANT_BOOL prop) PURE;
	STDMETHOD_(HRESULT, Get_AllowDragAndDrop) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_AllowDragAndDrop) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_AutoWordSelection) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_AutoWordSelection) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_INSKeyForPaste) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_INSKeyForPaste) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_SmartCutPaste) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_SmartCutPaste) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_TabIndentKey) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_TabIndentKey) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_PictureEditor) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Set_PictureEditor) (THIS_ BSTR prop) PURE; 
	STDMETHOD_(HRESULT, Get_AnimateScreenMovements) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_AnimateScreenMovements) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_VirusProtection) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_VirusProtection) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_RevisedPropertiesMark) (THIS_ WdRevisedPropertiesMark* prop) PURE; 
	STDMETHOD_(HRESULT, Set_RevisedPropertiesMark) (THIS_ WdRevisedPropertiesMark prop) PURE; 
	STDMETHOD_(HRESULT, Get_RevisedPropertiesColor) (THIS_ WdColorIndex* prop) PURE; 
	STDMETHOD_(HRESULT, Set_RevisedPropertiesColor) (THIS_ WdColorIndex prop) PURE; 
	STDMETHOD_(HRESULT, Get_SnapToGrid) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_SnapToGrid) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_SnapToShapes) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_SnapToShapes) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_GridDistanceHorizontal) (THIS_ float* prop) PURE; 
	STDMETHOD_(HRESULT, Set_GridDistanceHorizontal) (THIS_ float prop) PURE; 
	STDMETHOD_(HRESULT, Get_GridDistanceVertical) (THIS_ float* prop) PURE;
	STDMETHOD_(HRESULT, Set_GridDistanceVertical) (THIS_ float prop) PURE; 
	STDMETHOD_(HRESULT, Get_GridOriginHorizontal) (THIS_ float* prop) PURE; 
	STDMETHOD_(HRESULT, Set_GridOriginHorizontal) (THIS_ float prop) PURE; 
	STDMETHOD_(HRESULT, Get_GridOriginVertical) (THIS_ float* prop) PURE; 
	STDMETHOD_(HRESULT, Set_GridOriginVertical) (THIS_ float prop) PURE; 
	STDMETHOD_(HRESULT, Get_InlineConversion) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_InlineConversion) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_IMEAutomaticControl) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_IMEAutomaticControl) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_AutoFormatApplyHeadings) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_AutoFormatApplyHeadings) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_AutoFormatApplyLists) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_AutoFormatApplyLists) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_AutoFormatApplyBulletedLists) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_AutoFormatApplyBulletedLists) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_AutoFormatApplyOtherParas) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_AutoFormatApplyOtherParas) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_AutoFormatReplaceQuotes) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_AutoFormatReplaceQuotes) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_AutoFormatReplaceSymbols) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_AutoFormatReplaceSymbols) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_AutoFormatReplaceOrdinals) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_AutoFormatReplaceOrdinals) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_AutoFormatReplaceFractions) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_AutoFormatReplaceFractions) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_AutoFormatReplacePlainTextEmphasis) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_AutoFormatReplacePlainTextEmphasis) (THIS_ VARIANT_BOOL prop) PURE;
	STDMETHOD_(HRESULT, Get_AutoFormatPreserveStyles) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_AutoFormatPreserveStyles) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_AutoFormatAsYouTypeApplyHeadings) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_AutoFormatAsYouTypeApplyHeadings) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_AutoFormatAsYouTypeApplyBorders) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_AutoFormatAsYouTypeApplyBorders) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_AutoFormatAsYouTypeApplyBulletedLists) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_AutoFormatAsYouTypeApplyBulletedLists) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_AutoFormatAsYouTypeApplyNumberedLists) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_AutoFormatAsYouTypeApplyNumberedLists) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_AutoFormatAsYouTypeReplaceQuotes) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_AutoFormatAsYouTypeReplaceQuotes) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_AutoFormatAsYouTypeReplaceSymbols) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_AutoFormatAsYouTypeReplaceSymbols) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_AutoFormatAsYouTypeReplaceOrdinals) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_AutoFormatAsYouTypeReplaceOrdinals) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_AutoFormatAsYouTypeReplaceFractions) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_AutoFormatAsYouTypeReplaceFractions) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_AutoFormatAsYouTypeReplacePlainTextEmphasis) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_AutoFormatAsYouTypeReplacePlainTextEmphasis) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_AutoFormatAsYouTypeFormatListItemBeginning) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_AutoFormatAsYouTypeFormatListItemBeginning) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_AutoFormatAsYouTypeDefineStyles) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_AutoFormatAsYouTypeDefineStyles) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_AutoFormatPlainTextWordMail) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_AutoFormatPlainTextWordMail) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_AutoFormatAsYouTypeReplaceHyperlinks) (THIS_ VARIANT_BOOL* prop) PURE;
	STDMETHOD_(HRESULT, Set_AutoFormatAsYouTypeReplaceHyperlinks) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_AutoFormatReplaceHyperlinks) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_AutoFormatReplaceHyperlinks) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_DefaultHighlightColorIndex) (THIS_ WdColorIndex* prop) PURE; 
	STDMETHOD_(HRESULT, Set_DefaultHighlightColorIndex) (THIS_ WdColorIndex prop) PURE; 
	STDMETHOD_(HRESULT, Get_DefaultBorderLineStyle) (THIS_ WdLineStyle* prop) PURE; 
	STDMETHOD_(HRESULT, Set_DefaultBorderLineStyle) (THIS_ WdLineStyle prop) PURE; 
	STDMETHOD_(HRESULT, Get_CheckSpellingAsYouType) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_CheckSpellingAsYouType) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_CheckGrammarAsYouType) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_CheckGrammarAsYouType) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_IgnoreInternetAndFileAddresses) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_IgnoreInternetAndFileAddresses) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_ShowReadabilityStatistics) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_ShowReadabilityStatistics) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_IgnoreUppercase) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_IgnoreUppercase) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_IgnoreMixedDigits) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_IgnoreMixedDigits) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_SuggestFromMainDictionaryOnly) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_SuggestFromMainDictionaryOnly) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_SuggestSpellingCorrections) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_SuggestSpellingCorrections) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_DefaultBorderLineWidth) (THIS_ WdLineWidth* prop) PURE; 
	STDMETHOD_(HRESULT, Set_DefaultBorderLineWidth) (THIS_ WdLineWidth prop) PURE; 
	STDMETHOD_(HRESULT, Get_CheckGrammarWithSpelling) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_CheckGrammarWithSpelling) (THIS_ VARIANT_BOOL prop) PURE;
	STDMETHOD_(HRESULT, Get_DefaultOpenFormat) (THIS_ WdOpenFormat* prop) PURE; 
	STDMETHOD_(HRESULT, Set_DefaultOpenFormat) (THIS_ WdOpenFormat prop) PURE; 
	STDMETHOD_(HRESULT, Get_PrintDraft) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_PrintDraft) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_PrintReverse) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_PrintReverse) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_MapPaperSize) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_MapPaperSize) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_AutoFormatAsYouTypeApplyTables) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_AutoFormatAsYouTypeApplyTables) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_AutoFormatApplyFirstIndents) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_AutoFormatApplyFirstIndents) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_AutoFormatMatchParentheses) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_AutoFormatMatchParentheses) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_AutoFormatReplaceFarEastDashes) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_AutoFormatReplaceFarEastDashes) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_AutoFormatDeleteAutoSpaces) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_AutoFormatDeleteAutoSpaces) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_AutoFormatAsYouTypeApplyFirstIndents) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_AutoFormatAsYouTypeApplyFirstIndents) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_AutoFormatAsYouTypeApplyDates) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_AutoFormatAsYouTypeApplyDates) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_AutoFormatAsYouTypeApplyClosings) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_AutoFormatAsYouTypeApplyClosings) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_AutoFormatAsYouTypeMatchParentheses) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_AutoFormatAsYouTypeMatchParentheses) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_AutoFormatAsYouTypeReplaceFarEastDashes) (THIS_ VARIANT_BOOL* prop) PURE;
	STDMETHOD_(HRESULT, Set_AutoFormatAsYouTypeReplaceFarEastDashes) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_AutoFormatAsYouTypeDeleteAutoSpaces) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_AutoFormatAsYouTypeDeleteAutoSpaces) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_AutoFormatAsYouTypeInsertClosings) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_AutoFormatAsYouTypeInsertClosings) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_AutoFormatAsYouTypeAutoLetterWizard) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_AutoFormatAsYouTypeAutoLetterWizard) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_AutoFormatAsYouTypeInsertOvers) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_AutoFormatAsYouTypeInsertOvers) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_DisplayGridLines) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_DisplayGridLines) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_MatchFuzzyCase) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_MatchFuzzyCase) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_MatchFuzzyByte) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_MatchFuzzyByte) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_MatchFuzzyHiragana) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_MatchFuzzyHiragana) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_MatchFuzzySmallKana) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_MatchFuzzySmallKana) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_MatchFuzzyDash) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_MatchFuzzyDash) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_MatchFuzzyIterationMark) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_MatchFuzzyIterationMark) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_MatchFuzzyKanji) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_MatchFuzzyKanji) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_MatchFuzzyOldKana) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_MatchFuzzyOldKana) (THIS_ VARIANT_BOOL prop) PURE;
	STDMETHOD_(HRESULT, Get_MatchFuzzyProlongedSoundMark) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_MatchFuzzyProlongedSoundMark) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_MatchFuzzyDZ) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_MatchFuzzyDZ) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_MatchFuzzyBV) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_MatchFuzzyBV) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_MatchFuzzyTC) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_MatchFuzzyTC) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_MatchFuzzyHF) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_MatchFuzzyHF) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_MatchFuzzyZJ) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_MatchFuzzyZJ) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_MatchFuzzyAY) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_MatchFuzzyAY) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_MatchFuzzyKiKu) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_MatchFuzzyKiKu) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_MatchFuzzyPunctuation) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_MatchFuzzyPunctuation) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_MatchFuzzySpace) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_MatchFuzzySpace) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_ApplyFarEastFontsToAscii) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_ApplyFarEastFontsToAscii) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_ConvertHighAnsiToFarEast) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_ConvertHighAnsiToFarEast) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_PrintOddPagesInAscendingOrder) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_PrintOddPagesInAscendingOrder) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_PrintEvenPagesInAscendingOrder) (THIS_ VARIANT_BOOL* prop) PURE;
	STDMETHOD_(HRESULT, Set_PrintEvenPagesInAscendingOrder) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_DefaultBorderColorIndex) (THIS_ WdColorIndex* prop) PURE; 
	STDMETHOD_(HRESULT, Set_DefaultBorderColorIndex) (THIS_ WdColorIndex prop) PURE; 
	STDMETHOD_(HRESULT, Get_EnableMisusedWordsDictionary) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_EnableMisusedWordsDictionary) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_AllowCombinedAuxiliaryForms) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_AllowCombinedAuxiliaryForms) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_HangulHanjaFastConversion) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_HangulHanjaFastConversion) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_CheckHangulEndings) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_CheckHangulEndings) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_EnableHangulHanjaRecentOrdering) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_EnableHangulHanjaRecentOrdering) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_MultipleWordConversionsMode) (THIS_ WdMultipleWordConversionsMode* prop) PURE; 
	STDMETHOD_(HRESULT, Set_MultipleWordConversionsMode) (THIS_ WdMultipleWordConversionsMode prop) PURE; 
	STDMETHOD_(HRESULT, SetWPHelpOptions) (THIS_ VARIANT* CommandKeyHelp, VARIANT* DocNavigationKeys, VARIANT* MouseSimulation, VARIANT* DemoGuidance, VARIANT* DemoSpeed, VARIANT* HelpType) PURE; 
	STDMETHOD_(HRESULT, Get_DefaultBorderColor) (THIS_ WdColor* prop) PURE; 
	STDMETHOD_(HRESULT, Set_DefaultBorderColor) (THIS_ WdColor prop) PURE; 
	STDMETHOD_(HRESULT, Get_AllowPixelUnits) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_AllowPixelUnits) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_UseCharacterUnit) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_UseCharacterUnit) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_AllowCompoundNounProcessing) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_AllowCompoundNounProcessing) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_AutoKeyboardSwitching) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_AutoKeyboardSwitching) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_DocumentViewDirection) (THIS_ WdDocumentViewDirection* prop) PURE;
	STDMETHOD_(HRESULT, Set_DocumentViewDirection) (THIS_ WdDocumentViewDirection prop) PURE; 
	STDMETHOD_(HRESULT, Get_ArabicNumeral) (THIS_ WdArabicNumeral* prop) PURE; 
	STDMETHOD_(HRESULT, Set_ArabicNumeral) (THIS_ WdArabicNumeral prop) PURE; 
	STDMETHOD_(HRESULT, Get_MonthNames) (THIS_ WdMonthNames* prop) PURE; 
	STDMETHOD_(HRESULT, Set_MonthNames) (THIS_ WdMonthNames prop) PURE; 
	STDMETHOD_(HRESULT, Get_CursorMovement) (THIS_ WdCursorMovement* prop) PURE; 
	STDMETHOD_(HRESULT, Set_CursorMovement) (THIS_ WdCursorMovement prop) PURE; 
	STDMETHOD_(HRESULT, Get_VisualSelection) (THIS_ WdVisualSelection* prop) PURE; 
	STDMETHOD_(HRESULT, Set_VisualSelection) (THIS_ WdVisualSelection prop) PURE; 
	STDMETHOD_(HRESULT, Get_ShowDiacritics) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_ShowDiacritics) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_ShowControlCharacters) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_ShowControlCharacters) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_AddControlCharacters) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_AddControlCharacters) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_AddBiDirectionalMarksWhenSavingTextFile) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_AddBiDirectionalMarksWhenSavingTextFile) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_StrictInitialAlefHamza) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_StrictInitialAlefHamza) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_StrictFinalYaa) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_StrictFinalYaa) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_HebrewMode) (THIS_ WdHebSpellStart* prop) PURE; 
	STDMETHOD_(HRESULT, Set_HebrewMode) (THIS_ WdHebSpellStart prop) PURE; 
	STDMETHOD_(HRESULT, Get_ArabicMode) (THIS_ WdAraSpeller* prop) PURE; 
	STDMETHOD_(HRESULT, Set_ArabicMode) (THIS_ WdAraSpeller prop) PURE; 
	STDMETHOD_(HRESULT, Get_AllowClickAndTypeMouse) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_AllowClickAndTypeMouse) (THIS_ VARIANT_BOOL prop) PURE;
	STDMETHOD_(HRESULT, Get_UseGermanSpellingReform) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_UseGermanSpellingReform) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_InterpretHighAnsi) (THIS_ WdHighAnsiText* prop) PURE; 
	STDMETHOD_(HRESULT, Set_InterpretHighAnsi) (THIS_ WdHighAnsiText prop) PURE; 
	STDMETHOD_(HRESULT, Get_AddHebDoubleQuote) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_AddHebDoubleQuote) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_UseDiffDiacColor) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_UseDiffDiacColor) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_DiacriticColorVal) (THIS_ WdColor* prop) PURE; 
	STDMETHOD_(HRESULT, Set_DiacriticColorVal) (THIS_ WdColor prop) PURE; 
	STDMETHOD_(HRESULT, Get_OptimizeForWord97byDefault) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_OptimizeForWord97byDefault) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_LocalNetworkFile) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_LocalNetworkFile) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_TypeNReplace) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_TypeNReplace) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_SequenceCheck) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_SequenceCheck) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_BackgroundOpen) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_BackgroundOpen) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_DisableFeaturesbyDefault) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_DisableFeaturesbyDefault) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_PasteAdjustWordSpacing) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_PasteAdjustWordSpacing) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_PasteAdjustParagraphSpacing) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_PasteAdjustParagraphSpacing) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_PasteAdjustTableFormatting) (THIS_ VARIANT_BOOL* prop) PURE;
	STDMETHOD_(HRESULT, Set_PasteAdjustTableFormatting) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_PasteSmartStyleBehavior) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_PasteSmartStyleBehavior) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_PasteMergeFromPPT) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_PasteMergeFromPPT) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_PasteMergeFromXL) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_PasteMergeFromXL) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_CtrlClickHyperlinkToOpen) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_CtrlClickHyperlinkToOpen) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_PictureWrapType) (THIS_ WdWrapTypeMerged* prop) PURE; 
	STDMETHOD_(HRESULT, Set_PictureWrapType) (THIS_ WdWrapTypeMerged prop) PURE; 
	STDMETHOD_(HRESULT, Get_DisableFeaturesIntroducedAfterbyDefault) (THIS_ WdDisableFeaturesIntroducedAfter* prop) PURE; 
	STDMETHOD_(HRESULT, Set_DisableFeaturesIntroducedAfterbyDefault) (THIS_ WdDisableFeaturesIntroducedAfter prop) PURE; 
	STDMETHOD_(HRESULT, Get_PasteSmartCutPaste) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_PasteSmartCutPaste) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_DisplayPasteOptions) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_DisplayPasteOptions) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_PromptUpdateStyle) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_PromptUpdateStyle) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_DefaultEPostageApp) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Set_DefaultEPostageApp) (THIS_ BSTR prop) PURE; 
	STDMETHOD_(HRESULT, Get_DefaultTextEncoding) (THIS_ MsoEncoding* prop) PURE; 
	STDMETHOD_(HRESULT, Set_DefaultTextEncoding) (THIS_ MsoEncoding prop) PURE; 
	STDMETHOD_(HRESULT, Get_LabelSmartTags) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_LabelSmartTags) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_DisplaySmartTagButtons) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_DisplaySmartTagButtons) (THIS_ VARIANT_BOOL prop) PURE;
	STDMETHOD_(HRESULT, Get_WarnBeforeSavingPrintingSendingMarkup) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_WarnBeforeSavingPrintingSendingMarkup) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_StoreRSIDOnSave) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_StoreRSIDOnSave) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_ShowFormatError) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_ShowFormatError) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_FormatScanning) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_FormatScanning) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_PasteMergeLists) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_PasteMergeLists) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_AutoCreateNewDrawings) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_AutoCreateNewDrawings) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_SmartParaSelection) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_SmartParaSelection) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_RevisionsBalloonPrintOrientation) (THIS_ WdRevisionsBalloonPrintOrientation* prop) PURE; 
	STDMETHOD_(HRESULT, Set_RevisionsBalloonPrintOrientation) (THIS_ WdRevisionsBalloonPrintOrientation prop) PURE; 
	STDMETHOD_(HRESULT, Get_CommentsColor) (THIS_ WdColorIndex* prop) PURE; 
	STDMETHOD_(HRESULT, Set_CommentsColor) (THIS_ WdColorIndex prop) PURE; 
	STDMETHOD_(HRESULT, Get_PrintXMLTag) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_PrintXMLTag) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_PrintBackgrounds) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_PrintBackgrounds) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_AllowReadingMode) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_AllowReadingMode) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_ShowMarkupOpenSave) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_ShowMarkupOpenSave) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_SmartCursoring) (THIS_ VARIANT_BOOL* prop) PURE;
	STDMETHOD_(HRESULT, Set_SmartCursoring) (THIS_ VARIANT_BOOL prop) PURE; 
};
typedef Options* LPPTIONS;
#ifdef __cplusplus
// Options  {000209B7-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TOptionsProxy : public __OCF TAutoProxy
{
public:
	TOptionsProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// AllowAccentedUppercase:   [dispid 1]
	/*__OWL*/ TBool AllowAccentedUppercase();

	// AllowAccentedUppercase:   [dispid 1]
	void AllowAccentedUppercase(/*__OWL*/ TBool arg0);

	// WPHelp:   [dispid 17]
	/*__OWL*/ TBool WPHelp();

	// WPHelp:   [dispid 17]
	void WPHelp(/*__OWL*/ TBool arg0);

	// WPDocNavKeys:   [dispid 18]
	/*__OWL*/ TBool WPDocNavKeys();

	// WPDocNavKeys:   [dispid 18]
	void WPDocNavKeys(/*__OWL*/ TBool arg0);

	// Pagination:   [dispid 19]
	/*__OWL*/ TBool Pagination();

	// Pagination:   [dispid 19]
	void Pagination(/*__OWL*/ TBool arg0);

	// BlueScreen:   [dispid 20]
	/*__OWL*/ TBool BlueScreen();

	// BlueScreen:   [dispid 20]
	void BlueScreen(/*__OWL*/ TBool arg0);

	// EnableSound:   [dispid 21]
	/*__OWL*/ TBool EnableSound();

	// EnableSound:   [dispid 21]
	void EnableSound(/*__OWL*/ TBool arg0);

	// ConfirmConversions:   [dispid 22]
	/*__OWL*/ TBool ConfirmConversions();

	// ConfirmConversions:   [dispid 22]
	void ConfirmConversions(/*__OWL*/ TBool arg0);

	// UpdateLinksAtOpen:   [dispid 23]
	/*__OWL*/ TBool UpdateLinksAtOpen();

	// UpdateLinksAtOpen:   [dispid 23]
	void UpdateLinksAtOpen(/*__OWL*/ TBool arg0);

	// SendMailAttach:   [dispid 24]
	/*__OWL*/ TBool SendMailAttach();

	// SendMailAttach:   [dispid 24]
	void SendMailAttach(/*__OWL*/ TBool arg0);

	// MeasurementUnit:   [dispid 26]
	WdMeasurementUnits MeasurementUnit();

	// MeasurementUnit:   [dispid 26]
	void MeasurementUnit(WdMeasurementUnits arg0);

	// ButtonFieldClicks:   [dispid 27]
	long ButtonFieldClicks();

	// ButtonFieldClicks:   [dispid 27]
	void ButtonFieldClicks(long arg0);

	// ShortMenuNames:   [dispid 28]
	/*__OWL*/ TBool ShortMenuNames();

	// ShortMenuNames:   [dispid 28]
	void ShortMenuNames(/*__OWL*/ TBool arg0);

	// RTFInClipboard:   [dispid 29]
	/*__OWL*/ TBool RTFInClipboard();

	// RTFInClipboard:   [dispid 29]
	void RTFInClipboard(/*__OWL*/ TBool arg0);

	// UpdateFieldsAtPrint:   [dispid 30]
	/*__OWL*/ TBool UpdateFieldsAtPrint();

	// UpdateFieldsAtPrint:   [dispid 30]
	void UpdateFieldsAtPrint(/*__OWL*/ TBool arg0);

	// PrintProperties:   [dispid 31]
	/*__OWL*/ TBool PrintProperties();

	// PrintProperties:   [dispid 31]
	void PrintProperties(/*__OWL*/ TBool arg0);

	// PrintFieldCodes:   [dispid 32]
	/*__OWL*/ TBool PrintFieldCodes();

	// PrintFieldCodes:   [dispid 32]
	void PrintFieldCodes(/*__OWL*/ TBool arg0);

	// PrintComments:   [dispid 33]
	/*__OWL*/ TBool PrintComments();

	// PrintComments:   [dispid 33]
	void PrintComments(/*__OWL*/ TBool arg0);

	// PrintHiddenText:   [dispid 34]
	/*__OWL*/ TBool PrintHiddenText();

	// PrintHiddenText:   [dispid 34]
	void PrintHiddenText(/*__OWL*/ TBool arg0);

	// EnvelopeFeederInstalled:   [dispid 35]
	/*__OWL*/ TBool EnvelopeFeederInstalled();

	// UpdateLinksAtPrint:   [dispid 36]
	/*__OWL*/ TBool UpdateLinksAtPrint();

	// UpdateLinksAtPrint:   [dispid 36]
	void UpdateLinksAtPrint(/*__OWL*/ TBool arg0);

	// PrintBackground:   [dispid 37]
	/*__OWL*/ TBool PrintBackground();

	// PrintBackground:   [dispid 37]
	void PrintBackground(/*__OWL*/ TBool arg0);

	// PrintDrawingObjects:   [dispid 38]
	/*__OWL*/ TBool PrintDrawingObjects();

	// PrintDrawingObjects:   [dispid 38]
	void PrintDrawingObjects(/*__OWL*/ TBool arg0);

	// DefaultTray:   [dispid 39]
	__OCF TAutoString DefaultTray();

	// DefaultTray:   [dispid 39]
	void DefaultTray(__OCF TAutoString arg0);

	// DefaultTrayID:   [dispid 40]
	long DefaultTrayID();

	// DefaultTrayID:   [dispid 40]
	void DefaultTrayID(long arg0);

	// CreateBackup:   [dispid 41]
	/*__OWL*/ TBool CreateBackup();

	// CreateBackup:   [dispid 41]
	void CreateBackup(/*__OWL*/ TBool arg0);

	// AllowFastSave:   [dispid 42]
	/*__OWL*/ TBool AllowFastSave();

	// AllowFastSave:   [dispid 42]
	void AllowFastSave(/*__OWL*/ TBool arg0);

	// SavePropertiesPrompt:   [dispid 43]
	/*__OWL*/ TBool SavePropertiesPrompt();

	// SavePropertiesPrompt:   [dispid 43]
	void SavePropertiesPrompt(/*__OWL*/ TBool arg0);

	// SaveNormalPrompt:   [dispid 44]
	/*__OWL*/ TBool SaveNormalPrompt();

	// SaveNormalPrompt:   [dispid 44]
	void SaveNormalPrompt(/*__OWL*/ TBool arg0);

	// SaveInterval:   [dispid 45]
	long SaveInterval();

	// SaveInterval:   [dispid 45]
	void SaveInterval(long arg0);

	// BackgroundSave:   [dispid 46]
	/*__OWL*/ TBool BackgroundSave();

	// BackgroundSave:   [dispid 46]
	void BackgroundSave(/*__OWL*/ TBool arg0);

	// InsertedTextMark:   [dispid 57]
	WdInsertedTextMark InsertedTextMark();

	// InsertedTextMark:   [dispid 57]
	void InsertedTextMark(WdInsertedTextMark arg0);

	// DeletedTextMark:   [dispid 58]
	WdDeletedTextMark DeletedTextMark();

	// DeletedTextMark:   [dispid 58]
	void DeletedTextMark(WdDeletedTextMark arg0);

	// RevisedLinesMark:   [dispid 59]
	WdRevisedLinesMark RevisedLinesMark();

	// RevisedLinesMark:   [dispid 59]
	void RevisedLinesMark(WdRevisedLinesMark arg0);

	// InsertedTextColor:   [dispid 60]
	WdColorIndex InsertedTextColor();

	// InsertedTextColor:   [dispid 60]
	void InsertedTextColor(WdColorIndex arg0);

	// DeletedTextColor:   [dispid 61]
	WdColorIndex DeletedTextColor();

	// DeletedTextColor:   [dispid 61]
	void DeletedTextColor(WdColorIndex arg0);

	// RevisedLinesColor:   [dispid 62]
	WdColorIndex RevisedLinesColor();

	// RevisedLinesColor:   [dispid 62]
	void RevisedLinesColor(WdColorIndex arg0);

	// DefaultFilePath:   [dispid 65]
	__OCF TAutoString DefaultFilePath(WdDefaultFilePath Path);

	// DefaultFilePath:   [dispid 65]
	void DefaultFilePath(WdDefaultFilePath Path, __OCF TAutoString arg1);

	// Overtype:   [dispid 66]
	/*__OWL*/ TBool Overtype();

	// Overtype:   [dispid 66]
	void Overtype(/*__OWL*/ TBool arg0);

	// ReplaceSelection:   [dispid 67]
	/*__OWL*/ TBool ReplaceSelection();

	// ReplaceSelection:   [dispid 67]
	void ReplaceSelection(/*__OWL*/ TBool arg0);

	// AllowDragAndDrop:   [dispid 68]
	/*__OWL*/ TBool AllowDragAndDrop();

	// AllowDragAndDrop:   [dispid 68]
	void AllowDragAndDrop(/*__OWL*/ TBool arg0);

	// AutoWordSelection:   [dispid 69]
	/*__OWL*/ TBool AutoWordSelection();

	// AutoWordSelection:   [dispid 69]
	void AutoWordSelection(/*__OWL*/ TBool arg0);

	// INSKeyForPaste:   [dispid 70]
	/*__OWL*/ TBool INSKeyForPaste();

	// INSKeyForPaste:   [dispid 70]
	void INSKeyForPaste(/*__OWL*/ TBool arg0);

	// SmartCutPaste:   [dispid 71]
	/*__OWL*/ TBool SmartCutPaste();

	// SmartCutPaste:   [dispid 71]
	void SmartCutPaste(/*__OWL*/ TBool arg0);

	// TabIndentKey:   [dispid 72]
	/*__OWL*/ TBool TabIndentKey();

	// TabIndentKey:   [dispid 72]
	void TabIndentKey(/*__OWL*/ TBool arg0);

	// PictureEditor:   [dispid 73]
	__OCF TAutoString PictureEditor();

	// PictureEditor:   [dispid 73]
	void PictureEditor(__OCF TAutoString arg0);

	// AnimateScreenMovements:   [dispid 74]
	/*__OWL*/ TBool AnimateScreenMovements();

	// AnimateScreenMovements:   [dispid 74]
	void AnimateScreenMovements(/*__OWL*/ TBool arg0);

	// VirusProtection:   [dispid 75]
	/*__OWL*/ TBool VirusProtection();

	// VirusProtection:   [dispid 75]
	void VirusProtection(/*__OWL*/ TBool arg0);

	// RevisedPropertiesMark:   [dispid 76]
	WdRevisedPropertiesMark RevisedPropertiesMark();

	// RevisedPropertiesMark:   [dispid 76]
	void RevisedPropertiesMark(WdRevisedPropertiesMark arg0);

	// RevisedPropertiesColor:   [dispid 77]
	WdColorIndex RevisedPropertiesColor();

	// RevisedPropertiesColor:   [dispid 77]
	void RevisedPropertiesColor(WdColorIndex arg0);

	// SnapToGrid:   [dispid 79]
	/*__OWL*/ TBool SnapToGrid();

	// SnapToGrid:   [dispid 79]
	void SnapToGrid(/*__OWL*/ TBool arg0);

	// SnapToShapes:   [dispid 80]
	/*__OWL*/ TBool SnapToShapes();

	// SnapToShapes:   [dispid 80]
	void SnapToShapes(/*__OWL*/ TBool arg0);

	// GridDistanceHorizontal:   [dispid 81]
	float GridDistanceHorizontal();

	// GridDistanceHorizontal:   [dispid 81]
	void GridDistanceHorizontal(float arg0);

	// GridDistanceVertical:   [dispid 82]
	float GridDistanceVertical();

	// GridDistanceVertical:   [dispid 82]
	void GridDistanceVertical(float arg0);

	// GridOriginHorizontal:   [dispid 83]
	float GridOriginHorizontal();

	// GridOriginHorizontal:   [dispid 83]
	void GridOriginHorizontal(float arg0);

	// GridOriginVertical:   [dispid 84]
	float GridOriginVertical();

	// GridOriginVertical:   [dispid 84]
	void GridOriginVertical(float arg0);

	// InlineConversion:   [dispid 86]
	/*__OWL*/ TBool InlineConversion();

	// InlineConversion:   [dispid 86]
	void InlineConversion(/*__OWL*/ TBool arg0);

	// IMEAutomaticControl:   [dispid 87]
	/*__OWL*/ TBool IMEAutomaticControl();

	// IMEAutomaticControl:   [dispid 87]
	void IMEAutomaticControl(/*__OWL*/ TBool arg0);

	// AutoFormatApplyHeadings:   [dispid 250]
	/*__OWL*/ TBool AutoFormatApplyHeadings();

	// AutoFormatApplyHeadings:   [dispid 250]
	void AutoFormatApplyHeadings(/*__OWL*/ TBool arg0);

	// AutoFormatApplyLists:   [dispid 251]
	/*__OWL*/ TBool AutoFormatApplyLists();

	// AutoFormatApplyLists:   [dispid 251]
	void AutoFormatApplyLists(/*__OWL*/ TBool arg0);

	// AutoFormatApplyBulletedLists:   [dispid 252]
	/*__OWL*/ TBool AutoFormatApplyBulletedLists();

	// AutoFormatApplyBulletedLists:   [dispid 252]
	void AutoFormatApplyBulletedLists(/*__OWL*/ TBool arg0);

	// AutoFormatApplyOtherParas:   [dispid 253]
	/*__OWL*/ TBool AutoFormatApplyOtherParas();

	// AutoFormatApplyOtherParas:   [dispid 253]
	void AutoFormatApplyOtherParas(/*__OWL*/ TBool arg0);

	// AutoFormatReplaceQuotes:   [dispid 254]
	/*__OWL*/ TBool AutoFormatReplaceQuotes();

	// AutoFormatReplaceQuotes:   [dispid 254]
	void AutoFormatReplaceQuotes(/*__OWL*/ TBool arg0);

	// AutoFormatReplaceSymbols:   [dispid 255]
	/*__OWL*/ TBool AutoFormatReplaceSymbols();

	// AutoFormatReplaceSymbols:   [dispid 255]
	void AutoFormatReplaceSymbols(/*__OWL*/ TBool arg0);

	// AutoFormatReplaceOrdinals:   [dispid 256]
	/*__OWL*/ TBool AutoFormatReplaceOrdinals();

	// AutoFormatReplaceOrdinals:   [dispid 256]
	void AutoFormatReplaceOrdinals(/*__OWL*/ TBool arg0);

	// AutoFormatReplaceFractions:   [dispid 257]
	/*__OWL*/ TBool AutoFormatReplaceFractions();

	// AutoFormatReplaceFractions:   [dispid 257]
	void AutoFormatReplaceFractions(/*__OWL*/ TBool arg0);

	// AutoFormatReplacePlainTextEmphasis:   [dispid 258]
	/*__OWL*/ TBool AutoFormatReplacePlainTextEmphasis();

	// AutoFormatReplacePlainTextEmphasis:   [dispid 258]
	void AutoFormatReplacePlainTextEmphasis(/*__OWL*/ TBool arg0);

	// AutoFormatPreserveStyles:   [dispid 259]
	/*__OWL*/ TBool AutoFormatPreserveStyles();

	// AutoFormatPreserveStyles:   [dispid 259]
	void AutoFormatPreserveStyles(/*__OWL*/ TBool arg0);

	// AutoFormatAsYouTypeApplyHeadings:   [dispid 260]
	/*__OWL*/ TBool AutoFormatAsYouTypeApplyHeadings();

	// AutoFormatAsYouTypeApplyHeadings:   [dispid 260]
	void AutoFormatAsYouTypeApplyHeadings(/*__OWL*/ TBool arg0);

	// AutoFormatAsYouTypeApplyBorders:   [dispid 261]
	/*__OWL*/ TBool AutoFormatAsYouTypeApplyBorders();

	// AutoFormatAsYouTypeApplyBorders:   [dispid 261]
	void AutoFormatAsYouTypeApplyBorders(/*__OWL*/ TBool arg0);

	// AutoFormatAsYouTypeApplyBulletedLists:   [dispid 262]
	/*__OWL*/ TBool AutoFormatAsYouTypeApplyBulletedLists();

	// AutoFormatAsYouTypeApplyBulletedLists:   [dispid 262]
	void AutoFormatAsYouTypeApplyBulletedLists(/*__OWL*/ TBool arg0);

	// AutoFormatAsYouTypeApplyNumberedLists:   [dispid 263]
	/*__OWL*/ TBool AutoFormatAsYouTypeApplyNumberedLists();

	// AutoFormatAsYouTypeApplyNumberedLists:   [dispid 263]
	void AutoFormatAsYouTypeApplyNumberedLists(/*__OWL*/ TBool arg0);

	// AutoFormatAsYouTypeReplaceQuotes:   [dispid 264]
	/*__OWL*/ TBool AutoFormatAsYouTypeReplaceQuotes();

	// AutoFormatAsYouTypeReplaceQuotes:   [dispid 264]
	void AutoFormatAsYouTypeReplaceQuotes(/*__OWL*/ TBool arg0);

	// AutoFormatAsYouTypeReplaceSymbols:   [dispid 265]
	/*__OWL*/ TBool AutoFormatAsYouTypeReplaceSymbols();

	// AutoFormatAsYouTypeReplaceSymbols:   [dispid 265]
	void AutoFormatAsYouTypeReplaceSymbols(/*__OWL*/ TBool arg0);

	// AutoFormatAsYouTypeReplaceOrdinals:   [dispid 266]
	/*__OWL*/ TBool AutoFormatAsYouTypeReplaceOrdinals();

	// AutoFormatAsYouTypeReplaceOrdinals:   [dispid 266]
	void AutoFormatAsYouTypeReplaceOrdinals(/*__OWL*/ TBool arg0);

	// AutoFormatAsYouTypeReplaceFractions:   [dispid 267]
	/*__OWL*/ TBool AutoFormatAsYouTypeReplaceFractions();

	// AutoFormatAsYouTypeReplaceFractions:   [dispid 267]
	void AutoFormatAsYouTypeReplaceFractions(/*__OWL*/ TBool arg0);

	// AutoFormatAsYouTypeReplacePlainTextEmphasis:   [dispid 268]
	/*__OWL*/ TBool AutoFormatAsYouTypeReplacePlainTextEmphasis();

	// AutoFormatAsYouTypeReplacePlainTextEmphasis:   [dispid 268]
	void AutoFormatAsYouTypeReplacePlainTextEmphasis(/*__OWL*/ TBool arg0);

	// AutoFormatAsYouTypeFormatListItemBeginning:   [dispid 269]
	/*__OWL*/ TBool AutoFormatAsYouTypeFormatListItemBeginning();

	// AutoFormatAsYouTypeFormatListItemBeginning:   [dispid 269]
	void AutoFormatAsYouTypeFormatListItemBeginning(/*__OWL*/ TBool arg0);

	// AutoFormatAsYouTypeDefineStyles:   [dispid 270]
	/*__OWL*/ TBool AutoFormatAsYouTypeDefineStyles();

	// AutoFormatAsYouTypeDefineStyles:   [dispid 270]
	void AutoFormatAsYouTypeDefineStyles(/*__OWL*/ TBool arg0);

	// AutoFormatPlainTextWordMail:   [dispid 271]
	/*__OWL*/ TBool AutoFormatPlainTextWordMail();

	// AutoFormatPlainTextWordMail:   [dispid 271]
	void AutoFormatPlainTextWordMail(/*__OWL*/ TBool arg0);

	// AutoFormatAsYouTypeReplaceHyperlinks:   [dispid 272]
	/*__OWL*/ TBool AutoFormatAsYouTypeReplaceHyperlinks();

	// AutoFormatAsYouTypeReplaceHyperlinks:   [dispid 272]
	void AutoFormatAsYouTypeReplaceHyperlinks(/*__OWL*/ TBool arg0);

	// AutoFormatReplaceHyperlinks:   [dispid 273]
	/*__OWL*/ TBool AutoFormatReplaceHyperlinks();

	// AutoFormatReplaceHyperlinks:   [dispid 273]
	void AutoFormatReplaceHyperlinks(/*__OWL*/ TBool arg0);

	// DefaultHighlightColorIndex:   [dispid 274]
	WdColorIndex DefaultHighlightColorIndex();

	// DefaultHighlightColorIndex:   [dispid 274]
	void DefaultHighlightColorIndex(WdColorIndex arg0);

	// DefaultBorderLineStyle:   [dispid 275]
	WdLineStyle DefaultBorderLineStyle();

	// DefaultBorderLineStyle:   [dispid 275]
	void DefaultBorderLineStyle(WdLineStyle arg0);

	// CheckSpellingAsYouType:   [dispid 276]
	/*__OWL*/ TBool CheckSpellingAsYouType();

	// CheckSpellingAsYouType:   [dispid 276]
	void CheckSpellingAsYouType(/*__OWL*/ TBool arg0);

	// CheckGrammarAsYouType:   [dispid 277]
	/*__OWL*/ TBool CheckGrammarAsYouType();

	// CheckGrammarAsYouType:   [dispid 277]
	void CheckGrammarAsYouType(/*__OWL*/ TBool arg0);

	// IgnoreInternetAndFileAddresses:   [dispid 278]
	/*__OWL*/ TBool IgnoreInternetAndFileAddresses();

	// IgnoreInternetAndFileAddresses:   [dispid 278]
	void IgnoreInternetAndFileAddresses(/*__OWL*/ TBool arg0);

	// ShowReadabilityStatistics:   [dispid 279]
	/*__OWL*/ TBool ShowReadabilityStatistics();

	// ShowReadabilityStatistics:   [dispid 279]
	void ShowReadabilityStatistics(/*__OWL*/ TBool arg0);

	// IgnoreUppercase:   [dispid 280]
	/*__OWL*/ TBool IgnoreUppercase();

	// IgnoreUppercase:   [dispid 280]
	void IgnoreUppercase(/*__OWL*/ TBool arg0);

	// IgnoreMixedDigits:   [dispid 281]
	/*__OWL*/ TBool IgnoreMixedDigits();

	// IgnoreMixedDigits:   [dispid 281]
	void IgnoreMixedDigits(/*__OWL*/ TBool arg0);

	// SuggestFromMainDictionaryOnly:   [dispid 282]
	/*__OWL*/ TBool SuggestFromMainDictionaryOnly();

	// SuggestFromMainDictionaryOnly:   [dispid 282]
	void SuggestFromMainDictionaryOnly(/*__OWL*/ TBool arg0);

	// SuggestSpellingCorrections:   [dispid 283]
	/*__OWL*/ TBool SuggestSpellingCorrections();

	// SuggestSpellingCorrections:   [dispid 283]
	void SuggestSpellingCorrections(/*__OWL*/ TBool arg0);

	// DefaultBorderLineWidth:   [dispid 284]
	WdLineWidth DefaultBorderLineWidth();

	// DefaultBorderLineWidth:   [dispid 284]
	void DefaultBorderLineWidth(WdLineWidth arg0);

	// CheckGrammarWithSpelling:   [dispid 285]
	/*__OWL*/ TBool CheckGrammarWithSpelling();

	// CheckGrammarWithSpelling:   [dispid 285]
	void CheckGrammarWithSpelling(/*__OWL*/ TBool arg0);

	// DefaultOpenFormat:   [dispid 286]
	WdOpenFormat DefaultOpenFormat();

	// DefaultOpenFormat:   [dispid 286]
	void DefaultOpenFormat(WdOpenFormat arg0);

	// PrintDraft:   [dispid 287]
	/*__OWL*/ TBool PrintDraft();

	// PrintDraft:   [dispid 287]
	void PrintDraft(/*__OWL*/ TBool arg0);

	// PrintReverse:   [dispid 288]
	/*__OWL*/ TBool PrintReverse();

	// PrintReverse:   [dispid 288]
	void PrintReverse(/*__OWL*/ TBool arg0);

	// MapPaperSize:   [dispid 289]
	/*__OWL*/ TBool MapPaperSize();

	// MapPaperSize:   [dispid 289]
	void MapPaperSize(/*__OWL*/ TBool arg0);

	// AutoFormatAsYouTypeApplyTables:   [dispid 290]
	/*__OWL*/ TBool AutoFormatAsYouTypeApplyTables();

	// AutoFormatAsYouTypeApplyTables:   [dispid 290]
	void AutoFormatAsYouTypeApplyTables(/*__OWL*/ TBool arg0);

	// AutoFormatApplyFirstIndents:   [dispid 291]
	/*__OWL*/ TBool AutoFormatApplyFirstIndents();

	// AutoFormatApplyFirstIndents:   [dispid 291]
	void AutoFormatApplyFirstIndents(/*__OWL*/ TBool arg0);

	// AutoFormatMatchParentheses:   [dispid 294]
	/*__OWL*/ TBool AutoFormatMatchParentheses();

	// AutoFormatMatchParentheses:   [dispid 294]
	void AutoFormatMatchParentheses(/*__OWL*/ TBool arg0);

	// AutoFormatReplaceFarEastDashes:   [dispid 295]
	/*__OWL*/ TBool AutoFormatReplaceFarEastDashes();

	// AutoFormatReplaceFarEastDashes:   [dispid 295]
	void AutoFormatReplaceFarEastDashes(/*__OWL*/ TBool arg0);

	// AutoFormatDeleteAutoSpaces:   [dispid 296]
	/*__OWL*/ TBool AutoFormatDeleteAutoSpaces();

	// AutoFormatDeleteAutoSpaces:   [dispid 296]
	void AutoFormatDeleteAutoSpaces(/*__OWL*/ TBool arg0);

	// AutoFormatAsYouTypeApplyFirstIndents:   [dispid 297]
	/*__OWL*/ TBool AutoFormatAsYouTypeApplyFirstIndents();

	// AutoFormatAsYouTypeApplyFirstIndents:   [dispid 297]
	void AutoFormatAsYouTypeApplyFirstIndents(/*__OWL*/ TBool arg0);

	// AutoFormatAsYouTypeApplyDates:   [dispid 298]
	/*__OWL*/ TBool AutoFormatAsYouTypeApplyDates();

	// AutoFormatAsYouTypeApplyDates:   [dispid 298]
	void AutoFormatAsYouTypeApplyDates(/*__OWL*/ TBool arg0);

	// AutoFormatAsYouTypeApplyClosings:   [dispid 299]
	/*__OWL*/ TBool AutoFormatAsYouTypeApplyClosings();

	// AutoFormatAsYouTypeApplyClosings:   [dispid 299]
	void AutoFormatAsYouTypeApplyClosings(/*__OWL*/ TBool arg0);

	// AutoFormatAsYouTypeMatchParentheses:   [dispid 300]
	/*__OWL*/ TBool AutoFormatAsYouTypeMatchParentheses();

	// AutoFormatAsYouTypeMatchParentheses:   [dispid 300]
	void AutoFormatAsYouTypeMatchParentheses(/*__OWL*/ TBool arg0);

	// AutoFormatAsYouTypeReplaceFarEastDashes:   [dispid 301]
	/*__OWL*/ TBool AutoFormatAsYouTypeReplaceFarEastDashes();

	// AutoFormatAsYouTypeReplaceFarEastDashes:   [dispid 301]
	void AutoFormatAsYouTypeReplaceFarEastDashes(/*__OWL*/ TBool arg0);

	// AutoFormatAsYouTypeDeleteAutoSpaces:   [dispid 302]
	/*__OWL*/ TBool AutoFormatAsYouTypeDeleteAutoSpaces();

	// AutoFormatAsYouTypeDeleteAutoSpaces:   [dispid 302]
	void AutoFormatAsYouTypeDeleteAutoSpaces(/*__OWL*/ TBool arg0);

	// AutoFormatAsYouTypeInsertClosings:   [dispid 303]
	/*__OWL*/ TBool AutoFormatAsYouTypeInsertClosings();

	// AutoFormatAsYouTypeInsertClosings:   [dispid 303]
	void AutoFormatAsYouTypeInsertClosings(/*__OWL*/ TBool arg0);

	// AutoFormatAsYouTypeAutoLetterWizard:   [dispid 304]
	/*__OWL*/ TBool AutoFormatAsYouTypeAutoLetterWizard();

	// AutoFormatAsYouTypeAutoLetterWizard:   [dispid 304]
	void AutoFormatAsYouTypeAutoLetterWizard(/*__OWL*/ TBool arg0);

	// AutoFormatAsYouTypeInsertOvers:   [dispid 305]
	/*__OWL*/ TBool AutoFormatAsYouTypeInsertOvers();

	// AutoFormatAsYouTypeInsertOvers:   [dispid 305]
	void AutoFormatAsYouTypeInsertOvers(/*__OWL*/ TBool arg0);

	// DisplayGridLines:   [dispid 306]
	/*__OWL*/ TBool DisplayGridLines();

	// DisplayGridLines:   [dispid 306]
	void DisplayGridLines(/*__OWL*/ TBool arg0);

	// MatchFuzzyCase:   [dispid 309]
	/*__OWL*/ TBool MatchFuzzyCase();

	// MatchFuzzyCase:   [dispid 309]
	void MatchFuzzyCase(/*__OWL*/ TBool arg0);

	// MatchFuzzyByte:   [dispid 310]
	/*__OWL*/ TBool MatchFuzzyByte();

	// MatchFuzzyByte:   [dispid 310]
	void MatchFuzzyByte(/*__OWL*/ TBool arg0);

	// MatchFuzzyHiragana:   [dispid 311]
	/*__OWL*/ TBool MatchFuzzyHiragana();

	// MatchFuzzyHiragana:   [dispid 311]
	void MatchFuzzyHiragana(/*__OWL*/ TBool arg0);

	// MatchFuzzySmallKana:   [dispid 312]
	/*__OWL*/ TBool MatchFuzzySmallKana();

	// MatchFuzzySmallKana:   [dispid 312]
	void MatchFuzzySmallKana(/*__OWL*/ TBool arg0);

	// MatchFuzzyDash:   [dispid 313]
	/*__OWL*/ TBool MatchFuzzyDash();

	// MatchFuzzyDash:   [dispid 313]
	void MatchFuzzyDash(/*__OWL*/ TBool arg0);

	// MatchFuzzyIterationMark:   [dispid 314]
	/*__OWL*/ TBool MatchFuzzyIterationMark();

	// MatchFuzzyIterationMark:   [dispid 314]
	void MatchFuzzyIterationMark(/*__OWL*/ TBool arg0);

	// MatchFuzzyKanji:   [dispid 315]
	/*__OWL*/ TBool MatchFuzzyKanji();

	// MatchFuzzyKanji:   [dispid 315]
	void MatchFuzzyKanji(/*__OWL*/ TBool arg0);

	// MatchFuzzyOldKana:   [dispid 316]
	/*__OWL*/ TBool MatchFuzzyOldKana();

	// MatchFuzzyOldKana:   [dispid 316]
	void MatchFuzzyOldKana(/*__OWL*/ TBool arg0);

	// MatchFuzzyProlongedSoundMark:   [dispid 317]
	/*__OWL*/ TBool MatchFuzzyProlongedSoundMark();

	// MatchFuzzyProlongedSoundMark:   [dispid 317]
	void MatchFuzzyProlongedSoundMark(/*__OWL*/ TBool arg0);

	// MatchFuzzyDZ:   [dispid 318]
	/*__OWL*/ TBool MatchFuzzyDZ();

	// MatchFuzzyDZ:   [dispid 318]
	void MatchFuzzyDZ(/*__OWL*/ TBool arg0);

	// MatchFuzzyBV:   [dispid 319]
	/*__OWL*/ TBool MatchFuzzyBV();

	// MatchFuzzyBV:   [dispid 319]
	void MatchFuzzyBV(/*__OWL*/ TBool arg0);

	// MatchFuzzyTC:   [dispid 320]
	/*__OWL*/ TBool MatchFuzzyTC();

	// MatchFuzzyTC:   [dispid 320]
	void MatchFuzzyTC(/*__OWL*/ TBool arg0);

	// MatchFuzzyHF:   [dispid 321]
	/*__OWL*/ TBool MatchFuzzyHF();

	// MatchFuzzyHF:   [dispid 321]
	void MatchFuzzyHF(/*__OWL*/ TBool arg0);

	// MatchFuzzyZJ:   [dispid 322]
	/*__OWL*/ TBool MatchFuzzyZJ();

	// MatchFuzzyZJ:   [dispid 322]
	void MatchFuzzyZJ(/*__OWL*/ TBool arg0);

	// MatchFuzzyAY:   [dispid 323]
	/*__OWL*/ TBool MatchFuzzyAY();

	// MatchFuzzyAY:   [dispid 323]
	void MatchFuzzyAY(/*__OWL*/ TBool arg0);

	// MatchFuzzyKiKu:   [dispid 324]
	/*__OWL*/ TBool MatchFuzzyKiKu();

	// MatchFuzzyKiKu:   [dispid 324]
	void MatchFuzzyKiKu(/*__OWL*/ TBool arg0);

	// MatchFuzzyPunctuation:   [dispid 325]
	/*__OWL*/ TBool MatchFuzzyPunctuation();

	// MatchFuzzyPunctuation:   [dispid 325]
	void MatchFuzzyPunctuation(/*__OWL*/ TBool arg0);

	// MatchFuzzySpace:   [dispid 326]
	/*__OWL*/ TBool MatchFuzzySpace();

	// MatchFuzzySpace:   [dispid 326]
	void MatchFuzzySpace(/*__OWL*/ TBool arg0);

	// ApplyFarEastFontsToAscii:   [dispid 327]
	/*__OWL*/ TBool ApplyFarEastFontsToAscii();

	// ApplyFarEastFontsToAscii:   [dispid 327]
	void ApplyFarEastFontsToAscii(/*__OWL*/ TBool arg0);

	// ConvertHighAnsiToFarEast:   [dispid 328]
	/*__OWL*/ TBool ConvertHighAnsiToFarEast();

	// ConvertHighAnsiToFarEast:   [dispid 328]
	void ConvertHighAnsiToFarEast(/*__OWL*/ TBool arg0);

	// PrintOddPagesInAscendingOrder:   [dispid 330]
	/*__OWL*/ TBool PrintOddPagesInAscendingOrder();

	// PrintOddPagesInAscendingOrder:   [dispid 330]
	void PrintOddPagesInAscendingOrder(/*__OWL*/ TBool arg0);

	// PrintEvenPagesInAscendingOrder:   [dispid 331]
	/*__OWL*/ TBool PrintEvenPagesInAscendingOrder();

	// PrintEvenPagesInAscendingOrder:   [dispid 331]
	void PrintEvenPagesInAscendingOrder(/*__OWL*/ TBool arg0);

	// DefaultBorderColorIndex:   [dispid 337]
	WdColorIndex DefaultBorderColorIndex();

	// DefaultBorderColorIndex:   [dispid 337]
	void DefaultBorderColorIndex(WdColorIndex arg0);

	// EnableMisusedWordsDictionary:   [dispid 338]
	/*__OWL*/ TBool EnableMisusedWordsDictionary();

	// EnableMisusedWordsDictionary:   [dispid 338]
	void EnableMisusedWordsDictionary(/*__OWL*/ TBool arg0);

	// AllowCombinedAuxiliaryForms:   [dispid 339]
	/*__OWL*/ TBool AllowCombinedAuxiliaryForms();

	// AllowCombinedAuxiliaryForms:   [dispid 339]
	void AllowCombinedAuxiliaryForms(/*__OWL*/ TBool arg0);

	// HangulHanjaFastConversion:   [dispid 340]
	/*__OWL*/ TBool HangulHanjaFastConversion();

	// HangulHanjaFastConversion:   [dispid 340]
	void HangulHanjaFastConversion(/*__OWL*/ TBool arg0);

	// CheckHangulEndings:   [dispid 341]
	/*__OWL*/ TBool CheckHangulEndings();

	// CheckHangulEndings:   [dispid 341]
	void CheckHangulEndings(/*__OWL*/ TBool arg0);

	// EnableHangulHanjaRecentOrdering:   [dispid 342]
	/*__OWL*/ TBool EnableHangulHanjaRecentOrdering();

	// EnableHangulHanjaRecentOrdering:   [dispid 342]
	void EnableHangulHanjaRecentOrdering(/*__OWL*/ TBool arg0);

	// MultipleWordConversionsMode:   [dispid 343]
	WdMultipleWordConversionsMode MultipleWordConversionsMode();

	// MultipleWordConversionsMode:   [dispid 343]
	void MultipleWordConversionsMode(WdMultipleWordConversionsMode arg0);

	// SetWPHelpOptions:   [dispid 333]
	void SetWPHelpOptions(__OCF TAutoVal* CommandKeyHelp = 0, __OCF TAutoVal* DocNavigationKeys = 0, __OCF TAutoVal* MouseSimulation = 0, __OCF TAutoVal* DemoGuidance = 0, __OCF TAutoVal* DemoSpeed = 0, __OCF TAutoVal* HelpType = 0);

	// DefaultBorderColor:   [dispid 344]
	WdColor DefaultBorderColor();

	// DefaultBorderColor:   [dispid 344]
	void DefaultBorderColor(WdColor arg0);

	// AllowPixelUnits:   [dispid 345]
	/*__OWL*/ TBool AllowPixelUnits();

	// AllowPixelUnits:   [dispid 345]
	void AllowPixelUnits(/*__OWL*/ TBool arg0);

	// UseCharacterUnit:   [dispid 346]
	/*__OWL*/ TBool UseCharacterUnit();

	// UseCharacterUnit:   [dispid 346]
	void UseCharacterUnit(/*__OWL*/ TBool arg0);

	// AllowCompoundNounProcessing:   [dispid 347]
	/*__OWL*/ TBool AllowCompoundNounProcessing();

	// AllowCompoundNounProcessing:   [dispid 347]
	void AllowCompoundNounProcessing(/*__OWL*/ TBool arg0);

	// AutoKeyboardSwitching:   [dispid 399]
	/*__OWL*/ TBool AutoKeyboardSwitching();

	// AutoKeyboardSwitching:   [dispid 399]
	void AutoKeyboardSwitching(/*__OWL*/ TBool arg0);

	// DocumentViewDirection:   [dispid 400]
	WdDocumentViewDirection DocumentViewDirection();

	// DocumentViewDirection:   [dispid 400]
	void DocumentViewDirection(WdDocumentViewDirection arg0);

	// ArabicNumeral:   [dispid 401]
	WdArabicNumeral ArabicNumeral();

	// ArabicNumeral:   [dispid 401]
	void ArabicNumeral(WdArabicNumeral arg0);

	// MonthNames:   [dispid 402]
	WdMonthNames MonthNames();

	// MonthNames:   [dispid 402]
	void MonthNames(WdMonthNames arg0);

	// CursorMovement:   [dispid 403]
	WdCursorMovement CursorMovement();

	// CursorMovement:   [dispid 403]
	void CursorMovement(WdCursorMovement arg0);

	// VisualSelection:   [dispid 404]
	WdVisualSelection VisualSelection();

	// VisualSelection:   [dispid 404]
	void VisualSelection(WdVisualSelection arg0);

	// ShowDiacritics:   [dispid 405]
	/*__OWL*/ TBool ShowDiacritics();

	// ShowDiacritics:   [dispid 405]
	void ShowDiacritics(/*__OWL*/ TBool arg0);

	// ShowControlCharacters:   [dispid 406]
	/*__OWL*/ TBool ShowControlCharacters();

	// ShowControlCharacters:   [dispid 406]
	void ShowControlCharacters(/*__OWL*/ TBool arg0);

	// AddControlCharacters:   [dispid 407]
	/*__OWL*/ TBool AddControlCharacters();

	// AddControlCharacters:   [dispid 407]
	void AddControlCharacters(/*__OWL*/ TBool arg0);

	// AddBiDirectionalMarksWhenSavingTextFile:   [dispid 408]
	/*__OWL*/ TBool AddBiDirectionalMarksWhenSavingTextFile();

	// AddBiDirectionalMarksWhenSavingTextFile:   [dispid 408]
	void AddBiDirectionalMarksWhenSavingTextFile(/*__OWL*/ TBool arg0);

	// StrictInitialAlefHamza:   [dispid 409]
	/*__OWL*/ TBool StrictInitialAlefHamza();

	// StrictInitialAlefHamza:   [dispid 409]
	void StrictInitialAlefHamza(/*__OWL*/ TBool arg0);

	// StrictFinalYaa:   [dispid 410]
	/*__OWL*/ TBool StrictFinalYaa();

	// StrictFinalYaa:   [dispid 410]
	void StrictFinalYaa(/*__OWL*/ TBool arg0);

	// HebrewMode:   [dispid 411]
	WdHebSpellStart HebrewMode();

	// HebrewMode:   [dispid 411]
	void HebrewMode(WdHebSpellStart arg0);

	// ArabicMode:   [dispid 412]
	WdAraSpeller ArabicMode();

	// ArabicMode:   [dispid 412]
	void ArabicMode(WdAraSpeller arg0);

	// AllowClickAndTypeMouse:   [dispid 413]
	/*__OWL*/ TBool AllowClickAndTypeMouse();

	// AllowClickAndTypeMouse:   [dispid 413]
	void AllowClickAndTypeMouse(/*__OWL*/ TBool arg0);

	// UseGermanSpellingReform:   [dispid 415]
	/*__OWL*/ TBool UseGermanSpellingReform();

	// UseGermanSpellingReform:   [dispid 415]
	void UseGermanSpellingReform(/*__OWL*/ TBool arg0);

	// InterpretHighAnsi:   [dispid 418]
	WdHighAnsiText InterpretHighAnsi();

	// InterpretHighAnsi:   [dispid 418]
	void InterpretHighAnsi(WdHighAnsiText arg0);

	// AddHebDoubleQuote:   [dispid 419]
	/*__OWL*/ TBool AddHebDoubleQuote();

	// AddHebDoubleQuote:   [dispid 419]
	void AddHebDoubleQuote(/*__OWL*/ TBool arg0);

	// UseDiffDiacColor:   [dispid 420]
	/*__OWL*/ TBool UseDiffDiacColor();

	// UseDiffDiacColor:   [dispid 420]
	void UseDiffDiacColor(/*__OWL*/ TBool arg0);

	// DiacriticColorVal:   [dispid 421]
	WdColor DiacriticColorVal();

	// DiacriticColorVal:   [dispid 421]
	void DiacriticColorVal(WdColor arg0);

	// OptimizeForWord97byDefault:   [dispid 423]
	/*__OWL*/ TBool OptimizeForWord97byDefault();

	// OptimizeForWord97byDefault:   [dispid 423]
	void OptimizeForWord97byDefault(/*__OWL*/ TBool arg0);

	// LocalNetworkFile:   [dispid 424]
	/*__OWL*/ TBool LocalNetworkFile();

	// LocalNetworkFile:   [dispid 424]
	void LocalNetworkFile(/*__OWL*/ TBool arg0);

	// TypeNReplace:   [dispid 425]
	/*__OWL*/ TBool TypeNReplace();

	// TypeNReplace:   [dispid 425]
	void TypeNReplace(/*__OWL*/ TBool arg0);

	// SequenceCheck:   [dispid 426]
	/*__OWL*/ TBool SequenceCheck();

	// SequenceCheck:   [dispid 426]
	void SequenceCheck(/*__OWL*/ TBool arg0);

	// BackgroundOpen:   [dispid 427]
	/*__OWL*/ TBool BackgroundOpen();

	// BackgroundOpen:   [dispid 427]
	void BackgroundOpen(/*__OWL*/ TBool arg0);

	// DisableFeaturesbyDefault:   [dispid 428]
	/*__OWL*/ TBool DisableFeaturesbyDefault();

	// DisableFeaturesbyDefault:   [dispid 428]
	void DisableFeaturesbyDefault(/*__OWL*/ TBool arg0);

	// PasteAdjustWordSpacing:   [dispid 429]
	/*__OWL*/ TBool PasteAdjustWordSpacing();

	// PasteAdjustWordSpacing:   [dispid 429]
	void PasteAdjustWordSpacing(/*__OWL*/ TBool arg0);

	// PasteAdjustParagraphSpacing:   [dispid 430]
	/*__OWL*/ TBool PasteAdjustParagraphSpacing();

	// PasteAdjustParagraphSpacing:   [dispid 430]
	void PasteAdjustParagraphSpacing(/*__OWL*/ TBool arg0);

	// PasteAdjustTableFormatting:   [dispid 431]
	/*__OWL*/ TBool PasteAdjustTableFormatting();

	// PasteAdjustTableFormatting:   [dispid 431]
	void PasteAdjustTableFormatting(/*__OWL*/ TBool arg0);

	// PasteSmartStyleBehavior:   [dispid 432]
	/*__OWL*/ TBool PasteSmartStyleBehavior();

	// PasteSmartStyleBehavior:   [dispid 432]
	void PasteSmartStyleBehavior(/*__OWL*/ TBool arg0);

	// PasteMergeFromPPT:   [dispid 433]
	/*__OWL*/ TBool PasteMergeFromPPT();

	// PasteMergeFromPPT:   [dispid 433]
	void PasteMergeFromPPT(/*__OWL*/ TBool arg0);

	// PasteMergeFromXL:   [dispid 434]
	/*__OWL*/ TBool PasteMergeFromXL();

	// PasteMergeFromXL:   [dispid 434]
	void PasteMergeFromXL(/*__OWL*/ TBool arg0);

	// CtrlClickHyperlinkToOpen:   [dispid 435]
	/*__OWL*/ TBool CtrlClickHyperlinkToOpen();

	// CtrlClickHyperlinkToOpen:   [dispid 435]
	void CtrlClickHyperlinkToOpen(/*__OWL*/ TBool arg0);

	// PictureWrapType:   [dispid 436]
	WdWrapTypeMerged PictureWrapType();

	// PictureWrapType:   [dispid 436]
	void PictureWrapType(WdWrapTypeMerged arg0);

	// DisableFeaturesIntroducedAfterbyDefault:   [dispid 437]
	WdDisableFeaturesIntroducedAfter DisableFeaturesIntroducedAfterbyDefault();

	// DisableFeaturesIntroducedAfterbyDefault:   [dispid 437]
	void DisableFeaturesIntroducedAfterbyDefault(WdDisableFeaturesIntroducedAfter arg0);

	// PasteSmartCutPaste:   [dispid 438]
	/*__OWL*/ TBool PasteSmartCutPaste();

	// PasteSmartCutPaste:   [dispid 438]
	void PasteSmartCutPaste(/*__OWL*/ TBool arg0);

	// DisplayPasteOptions:   [dispid 439]
	/*__OWL*/ TBool DisplayPasteOptions();

	// DisplayPasteOptions:   [dispid 439]
	void DisplayPasteOptions(/*__OWL*/ TBool arg0);

	// PromptUpdateStyle:   [dispid 441]
	/*__OWL*/ TBool PromptUpdateStyle();

	// PromptUpdateStyle:   [dispid 441]
	void PromptUpdateStyle(/*__OWL*/ TBool arg0);

	// DefaultEPostageApp:   [dispid 442]
	__OCF TAutoString DefaultEPostageApp();

	// DefaultEPostageApp:   [dispid 442]
	void DefaultEPostageApp(__OCF TAutoString arg0);

	// DefaultTextEncoding:   [dispid 443]
	MsoEncoding DefaultTextEncoding();

	// DefaultTextEncoding:   [dispid 443]
	void DefaultTextEncoding(MsoEncoding arg0);

	// LabelSmartTags:   [dispid 444]
	/*__OWL*/ TBool LabelSmartTags();

	// LabelSmartTags:   [dispid 444]
	void LabelSmartTags(/*__OWL*/ TBool arg0);

	// DisplaySmartTagButtons:   [dispid 445]
	/*__OWL*/ TBool DisplaySmartTagButtons();

	// DisplaySmartTagButtons:   [dispid 445]
	void DisplaySmartTagButtons(/*__OWL*/ TBool arg0);

	// WarnBeforeSavingPrintingSendingMarkup:   [dispid 446]
	/*__OWL*/ TBool WarnBeforeSavingPrintingSendingMarkup();

	// WarnBeforeSavingPrintingSendingMarkup:   [dispid 446]
	void WarnBeforeSavingPrintingSendingMarkup(/*__OWL*/ TBool arg0);

	// StoreRSIDOnSave:   [dispid 447]
	/*__OWL*/ TBool StoreRSIDOnSave();

	// StoreRSIDOnSave:   [dispid 447]
	void StoreRSIDOnSave(/*__OWL*/ TBool arg0);

	// ShowFormatError:   [dispid 448]
	/*__OWL*/ TBool ShowFormatError();

	// ShowFormatError:   [dispid 448]
	void ShowFormatError(/*__OWL*/ TBool arg0);

	// FormatScanning:   [dispid 449]
	/*__OWL*/ TBool FormatScanning();

	// FormatScanning:   [dispid 449]
	void FormatScanning(/*__OWL*/ TBool arg0);

	// PasteMergeLists:   [dispid 450]
	/*__OWL*/ TBool PasteMergeLists();

	// PasteMergeLists:   [dispid 450]
	void PasteMergeLists(/*__OWL*/ TBool arg0);

	// AutoCreateNewDrawings:   [dispid 451]
	/*__OWL*/ TBool AutoCreateNewDrawings();

	// AutoCreateNewDrawings:   [dispid 451]
	void AutoCreateNewDrawings(/*__OWL*/ TBool arg0);

	// SmartParaSelection:   [dispid 452]
	/*__OWL*/ TBool SmartParaSelection();

	// SmartParaSelection:   [dispid 452]
	void SmartParaSelection(/*__OWL*/ TBool arg0);

	// RevisionsBalloonPrintOrientation:   [dispid 453]
	WdRevisionsBalloonPrintOrientation RevisionsBalloonPrintOrientation();

	// RevisionsBalloonPrintOrientation:   [dispid 453]
	void RevisionsBalloonPrintOrientation(WdRevisionsBalloonPrintOrientation arg0);

	// CommentsColor:   [dispid 454]
	WdColorIndex CommentsColor();

	// CommentsColor:   [dispid 454]
	void CommentsColor(WdColorIndex arg0);

	// PrintXMLTag:   [dispid 455]
	/*__OWL*/ TBool PrintXMLTag();

	// PrintXMLTag:   [dispid 455]
	void PrintXMLTag(/*__OWL*/ TBool arg0);

	// PrintBackgrounds:   [dispid 456]
	/*__OWL*/ TBool PrintBackgrounds();

	// PrintBackgrounds:   [dispid 456]
	void PrintBackgrounds(/*__OWL*/ TBool arg0);

	// AllowReadingMode:   [dispid 457]
	/*__OWL*/ TBool AllowReadingMode();

	// AllowReadingMode:   [dispid 457]
	void AllowReadingMode(/*__OWL*/ TBool arg0);

	// ShowMarkupOpenSave:   [dispid 458]
	/*__OWL*/ TBool ShowMarkupOpenSave();

	// ShowMarkupOpenSave:   [dispid 458]
	void ShowMarkupOpenSave(/*__OWL*/ TBool arg0);

	// SmartCursoring:   [dispid 459]
	/*__OWL*/ TBool SmartCursoring();

	// SmartCursoring:   [dispid 459]
	void SmartCursoring(/*__OWL*/ TBool arg0);
};
#endif

// OtherCorrectionsExceptions
// {000209DF-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE OtherCorrectionsExceptions
DECLARE_INTERFACE_(OtherCorrectionsExceptions, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE;
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// OtherCorrectionsExceptions methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get__NewEnum) (THIS_ IUnknown** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Count) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Item) (THIS_ VARIANT* , OtherCorrectionsException** prop) PURE; 
	STDMETHOD_(HRESULT, Add) (THIS_ BSTR Name, OtherCorrectionsException** prop) PURE; 
};
typedef OtherCorrectionsExceptions* LPTHERCORRECTIONSEXCEPTIONS;
#ifdef __cplusplus
// OtherCorrectionsExceptions  {000209DF-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TOtherCorrectionsExceptionsProxy : public __OCF TAutoProxy
{
public:
	TOtherCorrectionsExceptionsProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// _NewEnum:   [dispid -4]
	void _NewEnum(__OCF TAutoEnumerator<IUnknown*>& Obj);

	// Count:   [dispid 1]
	long Count();

	// Item:   [dispid 0]
	void Item(TOtherCorrectionsExceptionProxy& Obj, __OCF TAutoVal* arg0);

	// Add:   [dispid 101]
	void Add(TOtherCorrectionsExceptionProxy& Obj, __OCF TAutoString Name);
};
#endif

// WdOrientation
typedef enum tagWdOrientation
{
	wdOrientPortrait = 0, 
	wdOrientLandscape = 1, 
} WdOrientation;

// WdVerticalAlignment
typedef enum tagWdVerticalAlignment
{
	wdAlignVerticalTop = 0, 
	wdAlignVerticalCenter = 1, 
	wdAlignVerticalJustify = 2, 
	wdAlignVerticalBottom = 3, 
} WdVerticalAlignment;

// WdSectionStart
typedef enum tagWdSectionStart
{
	wdSectionContinuous = 0, 
	wdSectionNewColumn = 1, 
	wdSectionNewPage = 2, 
	wdSectionEvenPage = 3, 
	wdSectionOddPage = 4, 
} WdSectionStart;

// WdPaperSize
typedef enum tagWdPaperSize
{
	wdPaper10x14 = 0, 
	wdPaper11x17 = 1, 
	wdPaperLetter = 2, 
	wdPaperLetterSmall = 3, 
	wdPaperLegal = 4, 
	wdPaperExecutive = 5, 
	wdPaperA3 = 6, 
	wdPaperA4 = 7,
	wdPaperA4Small = 8, 
	wdPaperA5 = 9, 
	wdPaperB4 = 10, 
	wdPaperB5 = 11, 
	wdPaperCSheet = 12, 
	wdPaperDSheet = 13, 
	wdPaperESheet = 14, 
	wdPaperFanfoldLegalGerman = 15, 
	wdPaperFanfoldStdGerman = 16, 
	wdPaperFanfoldUS = 17, 
	wdPaperFolio = 18, 
	wdPaperLedger = 19, 
	wdPaperNote = 20, 
	wdPaperQuarto = 21, 
	wdPaperStatement = 22, 
	wdPaperTabloid = 23, 
	wdPaperEnvelope9 = 24, 
	wdPaperEnvelope10 = 25, 
	wdPaperEnvelope11 = 26, 
	wdPaperEnvelope12 = 27, 
	wdPaperEnvelope14 = 28, 
	wdPaperEnvelopeB4 = 29, 
	wdPaperEnvelopeB5 = 30, 
	wdPaperEnvelopeB6 = 31, 
	wdPaperEnvelopeC3 = 32, 
	wdPaperEnvelopeC4 = 33, 
	wdPaperEnvelopeC5 = 34,
	wdPaperEnvelopeC6 = 35, 
	wdPaperEnvelopeC65 = 36, 
	wdPaperEnvelopeDL = 37, 
	wdPaperEnvelopeItaly = 38, 
	wdPaperEnvelopeMonarch = 39, 
	wdPaperEnvelopePersonal = 40, 
	wdPaperCustom = 41, 
} WdPaperSize;

// WdGutterStyleOld
typedef enum tagWdGutterStyleOld
{
	wdGutterStyleLatin = -10, 
	wdGutterStyleBidi = 2, 
} WdGutterStyleOld;

// WdSectionDirection
typedef enum tagWdSectionDirection
{
	wdSectionDirectionRtl = 0, 
	wdSectionDirectionLtr = 1, 
} WdSectionDirection;

// WdLayoutMode
typedef enum tagWdLayoutMode
{
	wdLayoutModeDefault = 0,
	wdLayoutModeGrid = 1, 
	wdLayoutModeLineGrid = 2, 
	wdLayoutModeGenko = 3, 
} WdLayoutMode;

// WdGutterStyle
typedef enum tagWdGutterStyle
{
	wdGutterPosLeft = 0, 
	wdGutterPosTop = 1, 
	wdGutterPosRight = 2, 
} WdGutterStyle;

// PageSetup
// {00020971-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE PageSetup
DECLARE_INTERFACE_(PageSetup, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE;
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// PageSetup methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get_TopMargin) (THIS_ float* prop) PURE; 
	STDMETHOD_(HRESULT, Set_TopMargin) (THIS_ float prop) PURE; 
	STDMETHOD_(HRESULT, Get_BottomMargin) (THIS_ float* prop) PURE; 
	STDMETHOD_(HRESULT, Set_BottomMargin) (THIS_ float prop) PURE; 
	STDMETHOD_(HRESULT, Get_LeftMargin) (THIS_ float* prop) PURE; 
	STDMETHOD_(HRESULT, Set_LeftMargin) (THIS_ float prop) PURE; 
	STDMETHOD_(HRESULT, Get_RightMargin) (THIS_ float* prop) PURE; 
	STDMETHOD_(HRESULT, Set_RightMargin) (THIS_ float prop) PURE; 
	STDMETHOD_(HRESULT, Get_Gutter) (THIS_ float* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Gutter) (THIS_ float prop) PURE; 
	STDMETHOD_(HRESULT, Get_PageWidth) (THIS_ float* prop) PURE; 
	STDMETHOD_(HRESULT, Set_PageWidth) (THIS_ float prop) PURE; 
	STDMETHOD_(HRESULT, Get_PageHeight) (THIS_ float* prop) PURE; 
	STDMETHOD_(HRESULT, Set_PageHeight) (THIS_ float prop) PURE; 
	STDMETHOD_(HRESULT, Get_Orientation) (THIS_ WdOrientation* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Orientation) (THIS_ WdOrientation prop) PURE; 
	STDMETHOD_(HRESULT, Get_FirstPageTray) (THIS_ WdPaperTray* prop) PURE; 
	STDMETHOD_(HRESULT, Set_FirstPageTray) (THIS_ WdPaperTray prop) PURE; 
	STDMETHOD_(HRESULT, Get_OtherPagesTray) (THIS_ WdPaperTray* prop) PURE; 
	STDMETHOD_(HRESULT, Set_OtherPagesTray) (THIS_ WdPaperTray prop) PURE;
	STDMETHOD_(HRESULT, Get_VerticalAlignment) (THIS_ WdVerticalAlignment* prop) PURE; 
	STDMETHOD_(HRESULT, Set_VerticalAlignment) (THIS_ WdVerticalAlignment prop) PURE; 
	STDMETHOD_(HRESULT, Get_MirrorMargins) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Set_MirrorMargins) (THIS_ long prop) PURE; 
	STDMETHOD_(HRESULT, Get_HeaderDistance) (THIS_ float* prop) PURE; 
	STDMETHOD_(HRESULT, Set_HeaderDistance) (THIS_ float prop) PURE; 
	STDMETHOD_(HRESULT, Get_FooterDistance) (THIS_ float* prop) PURE; 
	STDMETHOD_(HRESULT, Set_FooterDistance) (THIS_ float prop) PURE; 
	STDMETHOD_(HRESULT, Get_SectionStart) (THIS_ WdSectionStart* prop) PURE; 
	STDMETHOD_(HRESULT, Set_SectionStart) (THIS_ WdSectionStart prop) PURE; 
	STDMETHOD_(HRESULT, Get_OddAndEvenPagesHeaderFooter) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Set_OddAndEvenPagesHeaderFooter) (THIS_ long prop) PURE; 
	STDMETHOD_(HRESULT, Get_DifferentFirstPageHeaderFooter) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Set_DifferentFirstPageHeaderFooter) (THIS_ long prop) PURE; 
	STDMETHOD_(HRESULT, Get_SuppressEndnotes) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Set_SuppressEndnotes) (THIS_ long prop) PURE; 
	STDMETHOD_(HRESULT, Get_LineNumbering) (THIS_ LineNumbering** prop) PURE; 
	STDMETHOD_(HRESULT, Set_LineNumbering) (THIS_ LineNumbering* prop) PURE; 
	STDMETHOD_(HRESULT, Get_TextColumns) (THIS_ TextColumns** prop) PURE; 
	STDMETHOD_(HRESULT, Set_TextColumns) (THIS_ TextColumns* prop) PURE; 
	STDMETHOD_(HRESULT, Get_PaperSize) (THIS_ WdPaperSize* prop) PURE; 
	STDMETHOD_(HRESULT, Set_PaperSize) (THIS_ WdPaperSize prop) PURE; 
	STDMETHOD_(HRESULT, Get_TwoPagesOnOne) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_TwoPagesOnOne) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_GutterOnTop) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_GutterOnTop) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_CharsLine) (THIS_ float* prop) PURE;
	STDMETHOD_(HRESULT, Set_CharsLine) (THIS_ float prop) PURE; 
	STDMETHOD_(HRESULT, Get_LinesPage) (THIS_ float* prop) PURE; 
	STDMETHOD_(HRESULT, Set_LinesPage) (THIS_ float prop) PURE; 
	STDMETHOD_(HRESULT, Get_ShowGrid) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_ShowGrid) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, TogglePortrait) (THIS ) PURE; 
	STDMETHOD_(HRESULT, SetAsTemplateDefault) (THIS ) PURE; 
	STDMETHOD_(HRESULT, Get_GutterStyle) (THIS_ WdGutterStyleOld* prop) PURE; 
	STDMETHOD_(HRESULT, Set_GutterStyle) (THIS_ WdGutterStyleOld prop) PURE; 
	STDMETHOD_(HRESULT, Get_SectionDirection) (THIS_ WdSectionDirection* prop) PURE; 
	STDMETHOD_(HRESULT, Set_SectionDirection) (THIS_ WdSectionDirection prop) PURE; 
	STDMETHOD_(HRESULT, Get_LayoutMode) (THIS_ WdLayoutMode* prop) PURE; 
	STDMETHOD_(HRESULT, Set_LayoutMode) (THIS_ WdLayoutMode prop) PURE; 
	STDMETHOD_(HRESULT, Get_GutterPos) (THIS_ WdGutterStyle* prop) PURE; 
	STDMETHOD_(HRESULT, Set_GutterPos) (THIS_ WdGutterStyle prop) PURE; 
	STDMETHOD_(HRESULT, Get_BookFoldPrinting) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_BookFoldPrinting) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_BookFoldRevPrinting) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_BookFoldRevPrinting) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_BookFoldPrintingSheets) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Set_BookFoldPrintingSheets) (THIS_ long prop) PURE; 
};
typedef PageSetup* LPAGESETUP;
#ifdef __cplusplus
// PageSetup  {00020971-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TPageSetupProxy : public __OCF TAutoProxy
{
public:
	TPageSetupProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// TopMargin:   [dispid 100]
	float TopMargin();

	// TopMargin:   [dispid 100]
	void TopMargin(float arg0);

	// BottomMargin:   [dispid 101]
	float BottomMargin();

	// BottomMargin:   [dispid 101]
	void BottomMargin(float arg0);

	// LeftMargin:   [dispid 102]
	float LeftMargin();

	// LeftMargin:   [dispid 102]
	void LeftMargin(float arg0);

	// RightMargin:   [dispid 103]
	float RightMargin();

	// RightMargin:   [dispid 103]
	void RightMargin(float arg0);

	// Gutter:   [dispid 104]
	float Gutter();

	// Gutter:   [dispid 104]
	void Gutter(float arg0);

	// PageWidth:   [dispid 105]
	float PageWidth();

	// PageWidth:   [dispid 105]
	void PageWidth(float arg0);

	// PageHeight:   [dispid 106]
	float PageHeight();

	// PageHeight:   [dispid 106]
	void PageHeight(float arg0);

	// Orientation:   [dispid 107]
	WdOrientation Orientation();

	// Orientation:   [dispid 107]
	void Orientation(WdOrientation arg0);

	// FirstPageTray:   [dispid 108]
	WdPaperTray FirstPageTray();

	// FirstPageTray:   [dispid 108]
	void FirstPageTray(WdPaperTray arg0);

	// OtherPagesTray:   [dispid 109]
	WdPaperTray OtherPagesTray();

	// OtherPagesTray:   [dispid 109]
	void OtherPagesTray(WdPaperTray arg0);

	// VerticalAlignment:   [dispid 110]
	WdVerticalAlignment VerticalAlignment();

	// VerticalAlignment:   [dispid 110]
	void VerticalAlignment(WdVerticalAlignment arg0);

	// MirrorMargins:   [dispid 111]
	long MirrorMargins();

	// MirrorMargins:   [dispid 111]
	void MirrorMargins(long arg0);

	// HeaderDistance:   [dispid 112]
	float HeaderDistance();

	// HeaderDistance:   [dispid 112]
	void HeaderDistance(float arg0);

	// FooterDistance:   [dispid 113]
	float FooterDistance();

	// FooterDistance:   [dispid 113]
	void FooterDistance(float arg0);

	// SectionStart:   [dispid 114]
	WdSectionStart SectionStart();

	// SectionStart:   [dispid 114]
	void SectionStart(WdSectionStart arg0);

	// OddAndEvenPagesHeaderFooter:   [dispid 115]
	long OddAndEvenPagesHeaderFooter();

	// OddAndEvenPagesHeaderFooter:   [dispid 115]
	void OddAndEvenPagesHeaderFooter(long arg0);

	// DifferentFirstPageHeaderFooter:   [dispid 116]
	long DifferentFirstPageHeaderFooter();

	// DifferentFirstPageHeaderFooter:   [dispid 116]
	void DifferentFirstPageHeaderFooter(long arg0);

	// SuppressEndnotes:   [dispid 117]
	long SuppressEndnotes();

	// SuppressEndnotes:   [dispid 117]
	void SuppressEndnotes(long arg0);

	// _LineNumbering:   [dispid 118]
	void _LineNumbering(TLineNumberingProxy& Obj);

	// _LineNumbering:   [dispid 118]
	void _LineNumbering(LineNumbering* arg0);

	// _TextColumns:   [dispid 119]
	void _TextColumns(TTextColumnsProxy& Obj);

	// _TextColumns:   [dispid 119]
	void _TextColumns(TextColumns* arg0);

	// PaperSize:   [dispid 120]
	WdPaperSize PaperSize();

	// PaperSize:   [dispid 120]
	void PaperSize(WdPaperSize arg0);

	// TwoPagesOnOne:   [dispid 121]
	/*__OWL*/ TBool TwoPagesOnOne();

	// TwoPagesOnOne:   [dispid 121]
	void TwoPagesOnOne(/*__OWL*/ TBool arg0);

	// GutterOnTop:   [dispid 122]
	/*__OWL*/ TBool GutterOnTop();

	// GutterOnTop:   [dispid 122]
	void GutterOnTop(/*__OWL*/ TBool arg0);

	// CharsLine:   [dispid 123]
	float CharsLine();

	// CharsLine:   [dispid 123]
	void CharsLine(float arg0);

	// LinesPage:   [dispid 124]
	float LinesPage();

	// LinesPage:   [dispid 124]
	void LinesPage(float arg0);

	// ShowGrid:   [dispid 128]
	/*__OWL*/ TBool ShowGrid();

	// ShowGrid:   [dispid 128]
	void ShowGrid(/*__OWL*/ TBool arg0);

	// TogglePortrait:   [dispid 201]
	void TogglePortrait();

	// SetAsTemplateDefault:   [dispid 202]
	void SetAsTemplateDefault();

	// GutterStyle:   [dispid 129]
	WdGutterStyleOld GutterStyle();

	// GutterStyle:   [dispid 129]
	void GutterStyle(WdGutterStyleOld arg0);

	// SectionDirection:   [dispid 130]
	WdSectionDirection SectionDirection();

	// SectionDirection:   [dispid 130]
	void SectionDirection(WdSectionDirection arg0);

	// LayoutMode:   [dispid 131]
	WdLayoutMode LayoutMode();

	// LayoutMode:   [dispid 131]
	void LayoutMode(WdLayoutMode arg0);

	// GutterPos:   [dispid 1222]
	WdGutterStyle GutterPos();

	// GutterPos:   [dispid 1222]
	void GutterPos(WdGutterStyle arg0);

	// BookFoldPrinting:   [dispid 1223]
	/*__OWL*/ TBool BookFoldPrinting();

	// BookFoldPrinting:   [dispid 1223]
	void BookFoldPrinting(/*__OWL*/ TBool arg0);

	// BookFoldRevPrinting:   [dispid 1224]
	/*__OWL*/ TBool BookFoldRevPrinting();

	// BookFoldRevPrinting:   [dispid 1224]
	void BookFoldRevPrinting(/*__OWL*/ TBool arg0);

	// BookFoldPrintingSheets:   [dispid 1225]
	long BookFoldPrintingSheets();

	// BookFoldPrintingSheets:   [dispid 1225]
	void BookFoldPrintingSheets(long arg0);
};
#endif

// Paragraph
// {00020957-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE Paragraph
DECLARE_INTERFACE_(Paragraph, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// Paragraph methods:
	STDMETHOD_(HRESULT, Get_Range) (THIS_ WordRange** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Format) (THIS_ ParagraphFormat** prop) PURE; 
	STDMETHOD_(HRESULT, Set_Format) (THIS_ ParagraphFormat* prop) PURE;
	STDMETHOD_(HRESULT, Get_TabStops) (THIS_ TabStops** prop) PURE; 
	STDMETHOD_(HRESULT, Set_TabStops) (THIS_ TabStops* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Borders) (THIS_ Borders** prop) PURE; 
	STDMETHOD_(HRESULT, Set_Borders) (THIS_ Borders* prop) PURE; 
	STDMETHOD_(HRESULT, Get_DropCap) (THIS_ DropCap** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Style) (THIS_ VARIANT* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Style) (THIS_ VARIANT* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Alignment) (THIS_ WdParagraphAlignment* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Alignment) (THIS_ WdParagraphAlignment prop) PURE; 
	STDMETHOD_(HRESULT, Get_KeepTogether) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Set_KeepTogether) (THIS_ long prop) PURE; 
	STDMETHOD_(HRESULT, Get_KeepWithNext) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Set_KeepWithNext) (THIS_ long prop) PURE; 
	STDMETHOD_(HRESULT, Get_PageBreakBefore) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Set_PageBreakBefore) (THIS_ long prop) PURE; 
	STDMETHOD_(HRESULT, Get_NoLineNumber) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Set_NoLineNumber) (THIS_ long prop) PURE; 
	STDMETHOD_(HRESULT, Get_RightIndent) (THIS_ float* prop) PURE; 
	STDMETHOD_(HRESULT, Set_RightIndent) (THIS_ float prop) PURE; 
	STDMETHOD_(HRESULT, Get_LeftIndent) (THIS_ float* prop) PURE; 
	STDMETHOD_(HRESULT, Set_LeftIndent) (THIS_ float prop) PURE; 
	STDMETHOD_(HRESULT, Get_FirstLineIndent) (THIS_ float* prop) PURE; 
	STDMETHOD_(HRESULT, Set_FirstLineIndent) (THIS_ float prop) PURE; 
	STDMETHOD_(HRESULT, Get_LineSpacing) (THIS_ float* prop) PURE; 
	STDMETHOD_(HRESULT, Set_LineSpacing) (THIS_ float prop) PURE; 
	STDMETHOD_(HRESULT, Get_LineSpacingRule) (THIS_ WdLineSpacing* prop) PURE; 
	STDMETHOD_(HRESULT, Set_LineSpacingRule) (THIS_ WdLineSpacing prop) PURE;
	STDMETHOD_(HRESULT, Get_SpaceBefore) (THIS_ float* prop) PURE; 
	STDMETHOD_(HRESULT, Set_SpaceBefore) (THIS_ float prop) PURE; 
	STDMETHOD_(HRESULT, Get_SpaceAfter) (THIS_ float* prop) PURE; 
	STDMETHOD_(HRESULT, Set_SpaceAfter) (THIS_ float prop) PURE; 
	STDMETHOD_(HRESULT, Get_Hyphenation) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Hyphenation) (THIS_ long prop) PURE; 
	STDMETHOD_(HRESULT, Get_WidowControl) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Set_WidowControl) (THIS_ long prop) PURE; 
	STDMETHOD_(HRESULT, Get_Shading) (THIS_ Shading** prop) PURE; 
	STDMETHOD_(HRESULT, Get_FarEastLineBreakControl) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Set_FarEastLineBreakControl) (THIS_ long prop) PURE; 
	STDMETHOD_(HRESULT, Get_WordWrap) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Set_WordWrap) (THIS_ long prop) PURE; 
	STDMETHOD_(HRESULT, Get_HangingPunctuation) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Set_HangingPunctuation) (THIS_ long prop) PURE; 
	STDMETHOD_(HRESULT, Get_HalfWidthPunctuationOnTopOfLine) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Set_HalfWidthPunctuationOnTopOfLine) (THIS_ long prop) PURE; 
	STDMETHOD_(HRESULT, Get_AddSpaceBetweenFarEastAndAlpha) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Set_AddSpaceBetweenFarEastAndAlpha) (THIS_ long prop) PURE; 
	STDMETHOD_(HRESULT, Get_AddSpaceBetweenFarEastAndDigit) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Set_AddSpaceBetweenFarEastAndDigit) (THIS_ long prop) PURE; 
	STDMETHOD_(HRESULT, Get_BaseLineAlignment) (THIS_ WdBaselineAlignment* prop) PURE; 
	STDMETHOD_(HRESULT, Set_BaseLineAlignment) (THIS_ WdBaselineAlignment prop) PURE; 
	STDMETHOD_(HRESULT, Get_AutoAdjustRightIndent) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Set_AutoAdjustRightIndent) (THIS_ long prop) PURE; 
	STDMETHOD_(HRESULT, Get_DisableLineHeightGrid) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Set_DisableLineHeightGrid) (THIS_ long prop) PURE;
	STDMETHOD_(HRESULT, Get_OutlineLevel) (THIS_ WdOutlineLevel* prop) PURE; 
	STDMETHOD_(HRESULT, Set_OutlineLevel) (THIS_ WdOutlineLevel prop) PURE; 
	STDMETHOD_(HRESULT, CloseUp) (THIS ) PURE; 
	STDMETHOD_(HRESULT, OpenUp) (THIS ) PURE; 
	STDMETHOD_(HRESULT, OpenOrCloseUp) (THIS ) PURE; 
	STDMETHOD_(HRESULT, TabHangingIndent) (THIS_ short Count) PURE; 
	STDMETHOD_(HRESULT, TabIndent) (THIS_ short Count) PURE; 
	STDMETHOD_(HRESULT, Reset) (THIS ) PURE; 
	STDMETHOD_(HRESULT, Space1) (THIS ) PURE; 
	STDMETHOD_(HRESULT, Space15) (THIS ) PURE; 
	STDMETHOD_(HRESULT, Space2) (THIS ) PURE; 
	STDMETHOD_(HRESULT, IndentCharWidth) (THIS_ short Count) PURE; 
	STDMETHOD_(HRESULT, IndentFirstLineCharWidth) (THIS_ short Count) PURE; 
	STDMETHOD_(HRESULT, Next) (THIS_ VARIANT* Count, Paragraph** prop) PURE; 
	STDMETHOD_(HRESULT, Previous) (THIS_ VARIANT* Count, Paragraph** prop) PURE; 
	STDMETHOD_(HRESULT, OutlinePromote) (THIS ) PURE; 
	STDMETHOD_(HRESULT, OutlineDemote) (THIS ) PURE; 
	STDMETHOD_(HRESULT, OutlineDemoteToBody) (THIS ) PURE; 
	STDMETHOD_(HRESULT, Indent) (THIS ) PURE; 
	STDMETHOD_(HRESULT, Outdent) (THIS ) PURE; 
	STDMETHOD_(HRESULT, Get_CharacterUnitRightIndent) (THIS_ float* prop) PURE; 
	STDMETHOD_(HRESULT, Set_CharacterUnitRightIndent) (THIS_ float prop) PURE; 
	STDMETHOD_(HRESULT, Get_CharacterUnitLeftIndent) (THIS_ float* prop) PURE; 
	STDMETHOD_(HRESULT, Set_CharacterUnitLeftIndent) (THIS_ float prop) PURE; 
	STDMETHOD_(HRESULT, Get_CharacterUnitFirstLineIndent) (THIS_ float* prop) PURE; 
	STDMETHOD_(HRESULT, Set_CharacterUnitFirstLineIndent) (THIS_ float prop) PURE; 
	STDMETHOD_(HRESULT, Get_LineUnitBefore) (THIS_ float* prop) PURE;
	STDMETHOD_(HRESULT, Set_LineUnitBefore) (THIS_ float prop) PURE; 
	STDMETHOD_(HRESULT, Get_LineUnitAfter) (THIS_ float* prop) PURE; 
	STDMETHOD_(HRESULT, Set_LineUnitAfter) (THIS_ float prop) PURE; 
	STDMETHOD_(HRESULT, Get_ReadingOrder) (THIS_ WdReadingOrder* prop) PURE; 
	STDMETHOD_(HRESULT, Set_ReadingOrder) (THIS_ WdReadingOrder prop) PURE; 
	STDMETHOD_(HRESULT, Get_ID) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Set_ID) (THIS_ BSTR prop) PURE; 
	STDMETHOD_(HRESULT, Get_SpaceBeforeAuto) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Set_SpaceBeforeAuto) (THIS_ long prop) PURE; 
	STDMETHOD_(HRESULT, Get_SpaceAfterAuto) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Set_SpaceAfterAuto) (THIS_ long prop) PURE; 
	STDMETHOD_(HRESULT, Get_IsStyleSeparator) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, SelectNumber) (THIS ) PURE; 
};
typedef Paragraph* LPARAGRAPH;
#ifdef __cplusplus
// Paragraph  {00020957-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TParagraphProxy : public __OCF TAutoProxy
{
public:
	TParagraphProxy() : TAutoProxy(0x0) {}

	// _Range:   [dispid 0]
	void _Range(TRangeProxy& Obj);

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// Format:   [dispid 1102]
	ParagraphFormat* Format();

	// Format:   [dispid 1102]
	void Format(ParagraphFormat* arg0);

	// _TabStops:   [dispid 1103]
	void _TabStops(TTabStopsProxy& Obj);

	// _TabStops:   [dispid 1103]
	void _TabStops(TabStops* arg0);

	// _Borders:   [dispid 1100]
	void _Borders(TBordersProxy& Obj);

	// _Borders:   [dispid 1100]
	void _Borders(Borders* arg0);

	// _DropCap:   [dispid 13]
	void _DropCap(TDropCapProxy& Obj);

	// _Style:   [dispid 100]
	__OCF TAutoVal _Style();

	// _Style:   [dispid 100]
	void _Style(__OCF TAutoVal* arg0);

	// Alignment:   [dispid 101]
	WdParagraphAlignment Alignment();

	// Alignment:   [dispid 101]
	void Alignment(WdParagraphAlignment arg0);

	// KeepTogether:   [dispid 102]
	long KeepTogether();

	// KeepTogether:   [dispid 102]
	void KeepTogether(long arg0);

	// KeepWithNext:   [dispid 103]
	long KeepWithNext();

	// KeepWithNext:   [dispid 103]
	void KeepWithNext(long arg0);

	// PageBreakBefore:   [dispid 104]
	long PageBreakBefore();

	// PageBreakBefore:   [dispid 104]
	void PageBreakBefore(long arg0);

	// NoLineNumber:   [dispid 105]
	long NoLineNumber();

	// NoLineNumber:   [dispid 105]
	void NoLineNumber(long arg0);

	// RightIndent:   [dispid 106]
	float RightIndent();

	// RightIndent:   [dispid 106]
	void RightIndent(float arg0);

	// LeftIndent:   [dispid 107]
	float LeftIndent();

	// LeftIndent:   [dispid 107]
	void LeftIndent(float arg0);

	// FirstLineIndent:   [dispid 108]
	float FirstLineIndent();

	// FirstLineIndent:   [dispid 108]
	void FirstLineIndent(float arg0);

	// LineSpacing:   [dispid 109]
	float LineSpacing();

	// LineSpacing:   [dispid 109]
	void LineSpacing(float arg0);

	// LineSpacingRule:   [dispid 110]
	WdLineSpacing LineSpacingRule();

	// LineSpacingRule:   [dispid 110]
	void LineSpacingRule(WdLineSpacing arg0);

	// SpaceBefore:   [dispid 111]
	float SpaceBefore();

	// SpaceBefore:   [dispid 111]
	void SpaceBefore(float arg0);

	// SpaceAfter:   [dispid 112]
	float SpaceAfter();

	// SpaceAfter:   [dispid 112]
	void SpaceAfter(float arg0);

	// Hyphenation:   [dispid 113]
	long Hyphenation();

	// Hyphenation:   [dispid 113]
	void Hyphenation(long arg0);

	// WidowControl:   [dispid 114]
	long WidowControl();

	// WidowControl:   [dispid 114]
	void WidowControl(long arg0);

	// _Shading:   [dispid 116]
	void _Shading(TShadingProxy& Obj);

	// FarEastLineBreakControl:   [dispid 117]
	long FarEastLineBreakControl();

	// FarEastLineBreakControl:   [dispid 117]
	void FarEastLineBreakControl(long arg0);

	// WordWrap:   [dispid 118]
	long WordWrap();

	// WordWrap:   [dispid 118]
	void WordWrap(long arg0);

	// HangingPunctuation:   [dispid 119]
	long HangingPunctuation();

	// HangingPunctuation:   [dispid 119]
	void HangingPunctuation(long arg0);

	// HalfWidthPunctuationOnTopOfLine:   [dispid 120]
	long HalfWidthPunctuationOnTopOfLine();

	// HalfWidthPunctuationOnTopOfLine:   [dispid 120]
	void HalfWidthPunctuationOnTopOfLine(long arg0);

	// AddSpaceBetweenFarEastAndAlpha:   [dispid 121]
	long AddSpaceBetweenFarEastAndAlpha();

	// AddSpaceBetweenFarEastAndAlpha:   [dispid 121]
	void AddSpaceBetweenFarEastAndAlpha(long arg0);

	// AddSpaceBetweenFarEastAndDigit:   [dispid 122]
	long AddSpaceBetweenFarEastAndDigit();

	// AddSpaceBetweenFarEastAndDigit:   [dispid 122]
	void AddSpaceBetweenFarEastAndDigit(long arg0);

	// BaseLineAlignment:   [dispid 123]
	WdBaselineAlignment BaseLineAlignment();

	// BaseLineAlignment:   [dispid 123]
	void BaseLineAlignment(WdBaselineAlignment arg0);

	// AutoAdjustRightIndent:   [dispid 124]
	long AutoAdjustRightIndent();

	// AutoAdjustRightIndent:   [dispid 124]
	void AutoAdjustRightIndent(long arg0);

	// DisableLineHeightGrid:   [dispid 125]
	long DisableLineHeightGrid();

	// DisableLineHeightGrid:   [dispid 125]
	void DisableLineHeightGrid(long arg0);

	// OutlineLevel:   [dispid 202]
	WdOutlineLevel OutlineLevel();

	// OutlineLevel:   [dispid 202]
	void OutlineLevel(WdOutlineLevel arg0);

	// CloseUp:   [dispid 301]
	void CloseUp();

	// OpenUp:   [dispid 302]
	void OpenUp();

	// OpenOrCloseUp:   [dispid 303]
	void OpenOrCloseUp();

	// TabHangingIndent:   [dispid 304]
	void TabHangingIndent(short Count);

	// TabIndent:   [dispid 306]
	void TabIndent(short Count);

	// Reset:   [dispid 312]
	void Reset();

	// Space1:   [dispid 313]
	void Space1();

	// Space15:   [dispid 314]
	void Space15();

	// Space2:   [dispid 315]
	void Space2();

	// IndentCharWidth:   [dispid 320]
	void IndentCharWidth(short Count);

	// IndentFirstLineCharWidth:   [dispid 322]
	void IndentFirstLineCharWidth(short Count);

	// Next:   [dispid 324]
	void Next(TParagraphProxy& Obj, __OCF TAutoVal* Count = 0);

	// Previous:   [dispid 325]
	void Previous(TParagraphProxy& Obj, __OCF TAutoVal* Count = 0);

	// OutlinePromote:   [dispid 326]
	void OutlinePromote();

	// OutlineDemote:   [dispid 327]
	void OutlineDemote();

	// OutlineDemoteToBody:   [dispid 328]
	void OutlineDemoteToBody();

	// Indent:   [dispid 333]
	void Indent();

	// Outdent:   [dispid 334]
	void Outdent();

	// CharacterUnitRightIndent:   [dispid 126]
	float CharacterUnitRightIndent();

	// CharacterUnitRightIndent:   [dispid 126]
	void CharacterUnitRightIndent(float arg0);

	// CharacterUnitLeftIndent:   [dispid 127]
	float CharacterUnitLeftIndent();

	// CharacterUnitLeftIndent:   [dispid 127]
	void CharacterUnitLeftIndent(float arg0);

	// CharacterUnitFirstLineIndent:   [dispid 128]
	float CharacterUnitFirstLineIndent();

	// CharacterUnitFirstLineIndent:   [dispid 128]
	void CharacterUnitFirstLineIndent(float arg0);

	// LineUnitBefore:   [dispid 129]
	float LineUnitBefore();

	// LineUnitBefore:   [dispid 129]
	void LineUnitBefore(float arg0);

	// LineUnitAfter:   [dispid 130]
	float LineUnitAfter();

	// LineUnitAfter:   [dispid 130]
	void LineUnitAfter(float arg0);

	// ReadingOrder:   [dispid 203]
	WdReadingOrder ReadingOrder();

	// ReadingOrder:   [dispid 203]
	void ReadingOrder(WdReadingOrder arg0);

	// ID:   [dispid 204]
	__OCF TAutoString ID();

	// ID:   [dispid 204]
	void ID(__OCF TAutoString arg0);

	// SpaceBeforeAuto:   [dispid 132]
	long SpaceBeforeAuto();

	// SpaceBeforeAuto:   [dispid 132]
	void SpaceBeforeAuto(long arg0);

	// SpaceAfterAuto:   [dispid 133]
	long SpaceAfterAuto();

	// SpaceAfterAuto:   [dispid 133]
	void SpaceAfterAuto(long arg0);

	// IsStyleSeparator:   [dispid 134]
	/*__OWL*/ TBool IsStyleSeparator();

	// SelectNumber:   [dispid 335]
	void SelectNumber();
};
#endif

// Paragraphs
// {00020958-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE Paragraphs
DECLARE_INTERFACE_(Paragraphs, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// Paragraphs methods:
	STDMETHOD_(HRESULT, Get__NewEnum) (THIS_ IUnknown** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Count) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_First) (THIS_ Paragraph** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Last) (THIS_ Paragraph** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Format) (THIS_ ParagraphFormat** prop) PURE;
	STDMETHOD_(HRESULT, Set_Format) (THIS_ ParagraphFormat* prop) PURE; 
	STDMETHOD_(HRESULT, Get_TabStops) (THIS_ TabStops** prop) PURE; 
	STDMETHOD_(HRESULT, Set_TabStops) (THIS_ TabStops* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Borders) (THIS_ Borders** prop) PURE; 
	STDMETHOD_(HRESULT, Set_Borders) (THIS_ Borders* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Style) (THIS_ VARIANT* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Style) (THIS_ VARIANT* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Alignment) (THIS_ WdParagraphAlignment* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Alignment) (THIS_ WdParagraphAlignment prop) PURE; 
	STDMETHOD_(HRESULT, Get_KeepTogether) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Set_KeepTogether) (THIS_ long prop) PURE; 
	STDMETHOD_(HRESULT, Get_KeepWithNext) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Set_KeepWithNext) (THIS_ long prop) PURE; 
	STDMETHOD_(HRESULT, Get_PageBreakBefore) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Set_PageBreakBefore) (THIS_ long prop) PURE; 
	STDMETHOD_(HRESULT, Get_NoLineNumber) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Set_NoLineNumber) (THIS_ long prop) PURE; 
	STDMETHOD_(HRESULT, Get_RightIndent) (THIS_ float* prop) PURE; 
	STDMETHOD_(HRESULT, Set_RightIndent) (THIS_ float prop) PURE; 
	STDMETHOD_(HRESULT, Get_LeftIndent) (THIS_ float* prop) PURE; 
	STDMETHOD_(HRESULT, Set_LeftIndent) (THIS_ float prop) PURE; 
	STDMETHOD_(HRESULT, Get_FirstLineIndent) (THIS_ float* prop) PURE; 
	STDMETHOD_(HRESULT, Set_FirstLineIndent) (THIS_ float prop) PURE; 
	STDMETHOD_(HRESULT, Get_LineSpacing) (THIS_ float* prop) PURE; 
	STDMETHOD_(HRESULT, Set_LineSpacing) (THIS_ float prop) PURE; 
	STDMETHOD_(HRESULT, Get_LineSpacingRule) (THIS_ WdLineSpacing* prop) PURE; 
	STDMETHOD_(HRESULT, Set_LineSpacingRule) (THIS_ WdLineSpacing prop) PURE;
	STDMETHOD_(HRESULT, Get_SpaceBefore) (THIS_ float* prop) PURE; 
	STDMETHOD_(HRESULT, Set_SpaceBefore) (THIS_ float prop) PURE; 
	STDMETHOD_(HRESULT, Get_SpaceAfter) (THIS_ float* prop) PURE; 
	STDMETHOD_(HRESULT, Set_SpaceAfter) (THIS_ float prop) PURE; 
	STDMETHOD_(HRESULT, Get_Hyphenation) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Hyphenation) (THIS_ long prop) PURE; 
	STDMETHOD_(HRESULT, Get_WidowControl) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Set_WidowControl) (THIS_ long prop) PURE; 
	STDMETHOD_(HRESULT, Get_Shading) (THIS_ Shading** prop) PURE; 
	STDMETHOD_(HRESULT, Get_FarEastLineBreakControl) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Set_FarEastLineBreakControl) (THIS_ long prop) PURE; 
	STDMETHOD_(HRESULT, Get_WordWrap) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Set_WordWrap) (THIS_ long prop) PURE; 
	STDMETHOD_(HRESULT, Get_HangingPunctuation) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Set_HangingPunctuation) (THIS_ long prop) PURE; 
	STDMETHOD_(HRESULT, Get_HalfWidthPunctuationOnTopOfLine) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Set_HalfWidthPunctuationOnTopOfLine) (THIS_ long prop) PURE; 
	STDMETHOD_(HRESULT, Get_AddSpaceBetweenFarEastAndAlpha) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Set_AddSpaceBetweenFarEastAndAlpha) (THIS_ long prop) PURE; 
	STDMETHOD_(HRESULT, Get_AddSpaceBetweenFarEastAndDigit) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Set_AddSpaceBetweenFarEastAndDigit) (THIS_ long prop) PURE; 
	STDMETHOD_(HRESULT, Get_BaseLineAlignment) (THIS_ WdBaselineAlignment* prop) PURE; 
	STDMETHOD_(HRESULT, Set_BaseLineAlignment) (THIS_ WdBaselineAlignment prop) PURE; 
	STDMETHOD_(HRESULT, Get_AutoAdjustRightIndent) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Set_AutoAdjustRightIndent) (THIS_ long prop) PURE; 
	STDMETHOD_(HRESULT, Get_DisableLineHeightGrid) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Set_DisableLineHeightGrid) (THIS_ long prop) PURE;
	STDMETHOD_(HRESULT, Get_OutlineLevel) (THIS_ WdOutlineLevel* prop) PURE; 
	STDMETHOD_(HRESULT, Set_OutlineLevel) (THIS_ WdOutlineLevel prop) PURE; 
	STDMETHOD_(HRESULT, Item) (THIS_ long , Paragraph** prop) PURE; 
	STDMETHOD_(HRESULT, Add) (THIS_ VARIANT* , Paragraph** prop) PURE; 
	STDMETHOD_(HRESULT, CloseUp) (THIS ) PURE; 
	STDMETHOD_(HRESULT, OpenUp) (THIS ) PURE; 
	STDMETHOD_(HRESULT, OpenOrCloseUp) (THIS ) PURE; 
	STDMETHOD_(HRESULT, TabHangingIndent) (THIS_ short Count) PURE; 
	STDMETHOD_(HRESULT, TabIndent) (THIS_ short Count) PURE; 
	STDMETHOD_(HRESULT, Reset) (THIS ) PURE; 
	STDMETHOD_(HRESULT, Space1) (THIS ) PURE; 
	STDMETHOD_(HRESULT, Space15) (THIS ) PURE; 
	STDMETHOD_(HRESULT, Space2) (THIS ) PURE; 
	STDMETHOD_(HRESULT, IndentCharWidth) (THIS_ short Count) PURE; 
	STDMETHOD_(HRESULT, IndentFirstLineCharWidth) (THIS_ short Count) PURE; 
	STDMETHOD_(HRESULT, OutlinePromote) (THIS ) PURE; 
	STDMETHOD_(HRESULT, OutlineDemote) (THIS ) PURE; 
	STDMETHOD_(HRESULT, OutlineDemoteToBody) (THIS ) PURE; 
	STDMETHOD_(HRESULT, Indent) (THIS ) PURE; 
	STDMETHOD_(HRESULT, Outdent) (THIS ) PURE; 
	STDMETHOD_(HRESULT, Get_CharacterUnitRightIndent) (THIS_ float* prop) PURE; 
	STDMETHOD_(HRESULT, Set_CharacterUnitRightIndent) (THIS_ float prop) PURE; 
	STDMETHOD_(HRESULT, Get_CharacterUnitLeftIndent) (THIS_ float* prop) PURE; 
	STDMETHOD_(HRESULT, Set_CharacterUnitLeftIndent) (THIS_ float prop) PURE; 
	STDMETHOD_(HRESULT, Get_CharacterUnitFirstLineIndent) (THIS_ float* prop) PURE; 
	STDMETHOD_(HRESULT, Set_CharacterUnitFirstLineIndent) (THIS_ float prop) PURE; 
	STDMETHOD_(HRESULT, Get_LineUnitBefore) (THIS_ float* prop) PURE;
	STDMETHOD_(HRESULT, Set_LineUnitBefore) (THIS_ float prop) PURE; 
	STDMETHOD_(HRESULT, Get_LineUnitAfter) (THIS_ float* prop) PURE; 
	STDMETHOD_(HRESULT, Set_LineUnitAfter) (THIS_ float prop) PURE; 
	STDMETHOD_(HRESULT, Get_ReadingOrder) (THIS_ WdReadingOrder* prop) PURE; 
	STDMETHOD_(HRESULT, Set_ReadingOrder) (THIS_ WdReadingOrder prop) PURE; 
	STDMETHOD_(HRESULT, Get_SpaceBeforeAuto) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Set_SpaceBeforeAuto) (THIS_ long prop) PURE; 
	STDMETHOD_(HRESULT, Get_SpaceAfterAuto) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Set_SpaceAfterAuto) (THIS_ long prop) PURE; 
	STDMETHOD_(HRESULT, IncreaseSpacing) (THIS ) PURE; 
	STDMETHOD_(HRESULT, DecreaseSpacing) (THIS ) PURE; 
};
typedef Paragraphs* LPARAGRAPHS;
#ifdef __cplusplus
// Paragraphs  {00020958-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TParagraphsProxy : public __OCF TAutoProxy
{
public:
	TParagraphsProxy() : TAutoProxy(0x0) {}

	// _NewEnum:   [dispid -4]
	void _NewEnum(__OCF TAutoEnumerator<IUnknown*>& Obj);

	// Count:   [dispid 2]
	long Count();

	// First:   [dispid 3]
	void First(TParagraphProxy& Obj);

	// Last:   [dispid 4]
	void Last(TParagraphProxy& Obj);

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// Format:   [dispid 1102]
	ParagraphFormat* Format();

	// Format:   [dispid 1102]
	void Format(ParagraphFormat* arg0);

	// _TabStops:   [dispid 1103]
	void _TabStops(TTabStopsProxy& Obj);

	// _TabStops:   [dispid 1103]
	void _TabStops(TabStops* arg0);

	// _Borders:   [dispid 1100]
	void _Borders(TBordersProxy& Obj);

	// _Borders:   [dispid 1100]
	void _Borders(Borders* arg0);

	// _Style:   [dispid 100]
	__OCF TAutoVal _Style();

	// _Style:   [dispid 100]
	void _Style(__OCF TAutoVal* arg0);

	// Alignment:   [dispid 101]
	WdParagraphAlignment Alignment();

	// Alignment:   [dispid 101]
	void Alignment(WdParagraphAlignment arg0);

	// KeepTogether:   [dispid 102]
	long KeepTogether();

	// KeepTogether:   [dispid 102]
	void KeepTogether(long arg0);

	// KeepWithNext:   [dispid 103]
	long KeepWithNext();

	// KeepWithNext:   [dispid 103]
	void KeepWithNext(long arg0);

	// PageBreakBefore:   [dispid 104]
	long PageBreakBefore();

	// PageBreakBefore:   [dispid 104]
	void PageBreakBefore(long arg0);

	// NoLineNumber:   [dispid 105]
	long NoLineNumber();

	// NoLineNumber:   [dispid 105]
	void NoLineNumber(long arg0);

	// RightIndent:   [dispid 106]
	float RightIndent();

	// RightIndent:   [dispid 106]
	void RightIndent(float arg0);

	// LeftIndent:   [dispid 107]
	float LeftIndent();

	// LeftIndent:   [dispid 107]
	void LeftIndent(float arg0);

	// FirstLineIndent:   [dispid 108]
	float FirstLineIndent();

	// FirstLineIndent:   [dispid 108]
	void FirstLineIndent(float arg0);

	// LineSpacing:   [dispid 109]
	float LineSpacing();

	// LineSpacing:   [dispid 109]
	void LineSpacing(float arg0);

	// LineSpacingRule:   [dispid 110]
	WdLineSpacing LineSpacingRule();

	// LineSpacingRule:   [dispid 110]
	void LineSpacingRule(WdLineSpacing arg0);

	// SpaceBefore:   [dispid 111]
	float SpaceBefore();

	// SpaceBefore:   [dispid 111]
	void SpaceBefore(float arg0);

	// SpaceAfter:   [dispid 112]
	float SpaceAfter();

	// SpaceAfter:   [dispid 112]
	void SpaceAfter(float arg0);

	// Hyphenation:   [dispid 113]
	long Hyphenation();

	// Hyphenation:   [dispid 113]
	void Hyphenation(long arg0);

	// WidowControl:   [dispid 114]
	long WidowControl();

	// WidowControl:   [dispid 114]
	void WidowControl(long arg0);

	// _Shading:   [dispid 116]
	void _Shading(TShadingProxy& Obj);

	// FarEastLineBreakControl:   [dispid 117]
	long FarEastLineBreakControl();

	// FarEastLineBreakControl:   [dispid 117]
	void FarEastLineBreakControl(long arg0);

	// WordWrap:   [dispid 118]
	long WordWrap();

	// WordWrap:   [dispid 118]
	void WordWrap(long arg0);

	// HangingPunctuation:   [dispid 119]
	long HangingPunctuation();

	// HangingPunctuation:   [dispid 119]
	void HangingPunctuation(long arg0);

	// HalfWidthPunctuationOnTopOfLine:   [dispid 120]
	long HalfWidthPunctuationOnTopOfLine();

	// HalfWidthPunctuationOnTopOfLine:   [dispid 120]
	void HalfWidthPunctuationOnTopOfLine(long arg0);

	// AddSpaceBetweenFarEastAndAlpha:   [dispid 121]
	long AddSpaceBetweenFarEastAndAlpha();

	// AddSpaceBetweenFarEastAndAlpha:   [dispid 121]
	void AddSpaceBetweenFarEastAndAlpha(long arg0);

	// AddSpaceBetweenFarEastAndDigit:   [dispid 122]
	long AddSpaceBetweenFarEastAndDigit();

	// AddSpaceBetweenFarEastAndDigit:   [dispid 122]
	void AddSpaceBetweenFarEastAndDigit(long arg0);

	// BaseLineAlignment:   [dispid 123]
	WdBaselineAlignment BaseLineAlignment();

	// BaseLineAlignment:   [dispid 123]
	void BaseLineAlignment(WdBaselineAlignment arg0);

	// AutoAdjustRightIndent:   [dispid 124]
	long AutoAdjustRightIndent();

	// AutoAdjustRightIndent:   [dispid 124]
	void AutoAdjustRightIndent(long arg0);

	// DisableLineHeightGrid:   [dispid 125]
	long DisableLineHeightGrid();

	// DisableLineHeightGrid:   [dispid 125]
	void DisableLineHeightGrid(long arg0);

	// OutlineLevel:   [dispid 202]
	WdOutlineLevel OutlineLevel();

	// OutlineLevel:   [dispid 202]
	void OutlineLevel(WdOutlineLevel arg0);

	// Item:   [dispid 0]
	void Item(TParagraphProxy& Obj, long arg0);

	// Add:   [dispid 5]
	void Add(TParagraphProxy& Obj, __OCF TAutoVal* arg0 = 0);

	// CloseUp:   [dispid 301]
	void CloseUp();

	// OpenUp:   [dispid 302]
	void OpenUp();

	// OpenOrCloseUp:   [dispid 303]
	void OpenOrCloseUp();

	// TabHangingIndent:   [dispid 304]
	void TabHangingIndent(short Count);

	// TabIndent:   [dispid 306]
	void TabIndent(short Count);

	// Reset:   [dispid 312]
	void Reset();

	// Space1:   [dispid 313]
	void Space1();

	// Space15:   [dispid 314]
	void Space15();

	// Space2:   [dispid 315]
	void Space2();

	// IndentCharWidth:   [dispid 320]
	void IndentCharWidth(short Count);

	// IndentFirstLineCharWidth:   [dispid 322]
	void IndentFirstLineCharWidth(short Count);

	// OutlinePromote:   [dispid 324]
	void OutlinePromote();

	// OutlineDemote:   [dispid 325]
	void OutlineDemote();

	// OutlineDemoteToBody:   [dispid 326]
	void OutlineDemoteToBody();

	// Indent:   [dispid 333]
	void Indent();

	// Outdent:   [dispid 334]
	void Outdent();

	// CharacterUnitRightIndent:   [dispid 126]
	float CharacterUnitRightIndent();

	// CharacterUnitRightIndent:   [dispid 126]
	void CharacterUnitRightIndent(float arg0);

	// CharacterUnitLeftIndent:   [dispid 127]
	float CharacterUnitLeftIndent();

	// CharacterUnitLeftIndent:   [dispid 127]
	void CharacterUnitLeftIndent(float arg0);

	// CharacterUnitFirstLineIndent:   [dispid 128]
	float CharacterUnitFirstLineIndent();

	// CharacterUnitFirstLineIndent:   [dispid 128]
	void CharacterUnitFirstLineIndent(float arg0);

	// LineUnitBefore:   [dispid 129]
	float LineUnitBefore();

	// LineUnitBefore:   [dispid 129]
	void LineUnitBefore(float arg0);

	// LineUnitAfter:   [dispid 130]
	float LineUnitAfter();

	// LineUnitAfter:   [dispid 130]
	void LineUnitAfter(float arg0);

	// ReadingOrder:   [dispid 131]
	WdReadingOrder ReadingOrder();

	// ReadingOrder:   [dispid 131]
	void ReadingOrder(WdReadingOrder arg0);

	// SpaceBeforeAuto:   [dispid 132]
	long SpaceBeforeAuto();

	// SpaceBeforeAuto:   [dispid 132]
	void SpaceBeforeAuto(long arg0);

	// SpaceAfterAuto:   [dispid 133]
	long SpaceAfterAuto();

	// SpaceAfterAuto:   [dispid 133]
	void SpaceAfterAuto(long arg0);

	// IncreaseSpacing:   [dispid 335]
	void IncreaseSpacing();

	// DecreaseSpacing:   [dispid 336]
	void DecreaseSpacing();
};
#endif

// Permission
// {000C0376-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE Permission
DECLARE_INTERFACE_(Permission, _IMsoDispObj)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
	// _IMsoDispObj methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ IDispatch** ppidisp) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* plCreator) PURE; 
#endif
	// Permission methods:
	STDMETHOD_(HRESULT, Get_Item) (THIS_ VARIANT , UserPermission** UserPerm) PURE; 
	STDMETHOD_(HRESULT, Get_Count) (THIS_ long* Count) PURE; 
	STDMETHOD_(HRESULT, Get_EnableTrustedBrowser) (THIS_ VARIANT_BOOL* Enable) PURE; 
	STDMETHOD_(HRESULT, Set_EnableTrustedBrowser) (THIS_ VARIANT_BOOL Enable) PURE; 
	STDMETHOD_(HRESULT, Add) (THIS_ BSTR UserId, VARIANT , VARIANT ExpirationDate, UserPermission** UserPerm) PURE; 
	STDMETHOD_(HRESULT, ApplyPolicy) (THIS_ BSTR FileName) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** ppidisp) PURE;
	STDMETHOD_(HRESULT, RemoveAll) (THIS ) PURE; 
	STDMETHOD_(HRESULT, Get_Enabled) (THIS_ VARIANT_BOOL* Enabled) PURE; 
	STDMETHOD_(HRESULT, Set_Enabled) (THIS_ VARIANT_BOOL Enabled) PURE; 
	STDMETHOD_(HRESULT, Get_RequestPermissionURL) (THIS_ BSTR* Contact) PURE; 
	STDMETHOD_(HRESULT, Set_RequestPermissionURL) (THIS_ BSTR Contact) PURE; 
	STDMETHOD_(HRESULT, Get_PolicyName) (THIS_ BSTR* PolicyName) PURE; 
	STDMETHOD_(HRESULT, Get_PolicyDescription) (THIS_ BSTR* PolicyDescription) PURE; 
	STDMETHOD_(HRESULT, Get_StoreLicenses) (THIS_ VARIANT_BOOL* Enabled) PURE; 
	STDMETHOD_(HRESULT, Set_StoreLicenses) (THIS_ VARIANT_BOOL Enabled) PURE; 
	STDMETHOD_(HRESULT, Get_DocumentAuthor) (THIS_ BSTR* Author) PURE; 
	STDMETHOD_(HRESULT, Set_DocumentAuthor) (THIS_ BSTR Author) PURE; 
	STDMETHOD_(HRESULT, Get_PermissionFromPolicy) (THIS_ VARIANT_BOOL* FromPolicy) PURE; 
	STDMETHOD_(HRESULT, Get__NewEnum) (THIS_ IUnknown** ppunkEnum) PURE; 
};
typedef Permission* LPERMISSION;
#ifdef __cplusplus
// Permission  {000C0376-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TPermissionProxy : public __OCF TAutoProxy
{
public:
	TPermissionProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1610743808]
	IDispatch* _Application();

	// Creator:   [dispid 1610743809]
	long Creator();

	// Item:   [dispid 0]
	void Item(TUserPermissionProxy& Obj, __OCF TAutoVal arg0);

	// Count:   [dispid 1]
	long Count();

	// EnableTrustedBrowser:   [dispid 2]
	/*__OWL*/ TBool EnableTrustedBrowser();

	// EnableTrustedBrowser:   [dispid 2]
	void EnableTrustedBrowser(/*__OWL*/ TBool arg0);

	// Add:   [dispid 3]
	void Add(TUserPermissionProxy& Obj, __OCF TAutoString UserId, __OCF TAutoVal arg1 = __OCF TNoArg(), __OCF TAutoVal ExpirationDate = __OCF TNoArg());

	// ApplyPolicy:   [dispid 4]
	void ApplyPolicy(__OCF TAutoString FileName);

	// Parent:   [dispid 5]
	IDispatch* Parent();

	// RemoveAll:   [dispid 6]
	void RemoveAll();

	// Enabled:   [dispid 7]
	/*__OWL*/ TBool Enabled();

	// Enabled:   [dispid 7]
	void Enabled(/*__OWL*/ TBool arg0);

	// RequestPermissionURL:   [dispid 8]
	__OCF TAutoString RequestPermissionURL();

	// RequestPermissionURL:   [dispid 8]
	void RequestPermissionURL(__OCF TAutoString arg0);

	// PolicyName:   [dispid 9]
	__OCF TAutoString PolicyName();

	// PolicyDescription:   [dispid 10]
	__OCF TAutoString PolicyDescription();

	// StoreLicenses:   [dispid 11]
	/*__OWL*/ TBool StoreLicenses();

	// StoreLicenses:   [dispid 11]
	void StoreLicenses(/*__OWL*/ TBool arg0);

	// DocumentAuthor:   [dispid 12]
	__OCF TAutoString DocumentAuthor();

	// DocumentAuthor:   [dispid 12]
	void DocumentAuthor(__OCF TAutoString arg0);

	// PermissionFromPolicy:   [dispid 13]
	/*__OWL*/ TBool PermissionFromPolicy();

	// _NewEnum:   [dispid -4]
	void _NewEnum(__OCF TAutoEnumerator<IUnknown*>& Obj);
};
#endif

// WdProofreadingErrorType
typedef enum tagWdProofreadingErrorType
{
	wdSpellingError = 0, 
	wdGrammaticalError = 1, 
} WdProofreadingErrorType;

// ProofreadingErrors
// {000209BB-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE ProofreadingErrors
DECLARE_INTERFACE_(ProofreadingErrors, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE;
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// ProofreadingErrors methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get__NewEnum) (THIS_ IUnknown** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Count) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Type) (THIS_ WdProofreadingErrorType* prop) PURE; 
	STDMETHOD_(HRESULT, Item) (THIS_ long , WordRange** prop) PURE; 
};
typedef ProofreadingErrors* LPROOFREADINGERRORS;
#ifdef __cplusplus
// ProofreadingErrors  {000209BB-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TProofreadingErrorsProxy : public __OCF TAutoProxy
{
public:
	TProofreadingErrorsProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// _NewEnum:   [dispid -4]
	void _NewEnum(__OCF TAutoEnumerator<IUnknown*>& Obj);

	// Count:   [dispid 1]
	long Count();

	// Type:   [dispid 2]
	WdProofreadingErrorType Type();

	// Item:   [dispid 0]
	void Item(TRangeProxy& Obj, long arg0);
};
#endif

// MsoCondition
typedef enum tagMsoCondition
{
	msoConditionFileTypeAllFiles = 1, 
	msoConditionFileTypeOfficeFiles = 2, 
	msoConditionFileTypeWordDocuments = 3,
	msoConditionFileTypeExcelWorkbooks = 4, 
	msoConditionFileTypePowerPointPresentations = 5, 
	msoConditionFileTypeBinders = 6, 
	msoConditionFileTypeDatabases = 7, 
	msoConditionFileTypeTemplates = 8, 
	msoConditionIncludes = 9, 
	msoConditionIncludesPhrase = 10, 
	msoConditionBeginsWith = 11, 
	msoConditionEndsWith = 12, 
	msoConditionIncludesNearEachOther = 13, 
	msoConditionIsExactly = 14, 
	msoConditionIsNot = 15, 
	msoConditionYesterday = 16, 
	msoConditionToday = 17, 
	msoConditionTomorrow = 18, 
	msoConditionLastWeek = 19, 
	msoConditionThisWeek = 20, 
	msoConditionNextWeek = 21, 
	msoConditionLastMonth = 22, 
	msoConditionThisMonth = 23, 
	msoConditionNextMonth = 24, 
	msoConditionAnytime = 25, 
	msoConditionAnytimeBetween = 26, 
	msoConditionOn = 27, 
	msoConditionOnOrAfter = 28, 
	msoConditionOnOrBefore = 29, 
	msoConditionInTheNext = 30,
	msoConditionInTheLast = 31, 
	msoConditionEquals = 32, 
	msoConditionDoesNotEqual = 33, 
	msoConditionAnyNumberBetween = 34, 
	msoConditionAtMost = 35, 
	msoConditionAtLeast = 36, 
	msoConditionMoreThan = 37, 
	msoConditionLessThan = 38, 
	msoConditionIsYes = 39, 
	msoConditionIsNo = 40, 
	msoConditionIncludesFormsOf = 41, 
	msoConditionFreeText = 42, 
	msoConditionFileTypeOutlookItems = 43, 
	msoConditionFileTypeMailItem = 44, 
	msoConditionFileTypeCalendarItem = 45, 
	msoConditionFileTypeContactItem = 46, 
	msoConditionFileTypeNoteItem = 47, 
	msoConditionFileTypeJournalItem = 48, 
	msoConditionFileTypeTaskItem = 49, 
	msoConditionFileTypePhotoDrawFiles = 50, 
	msoConditionFileTypeDataConnectionFiles = 51, 
	msoConditionFileTypePublisherFiles = 52, 
	msoConditionFileTypeProjectFiles = 53, 
	msoConditionFileTypeDocumentImagingFiles = 54, 
	msoConditionFileTypeVisioFiles = 55, 
	msoConditionFileTypeDesignerFiles = 56, 
	msoConditionFileTypeWebPages = 57,
	msoConditionEqualsLow = 58, 
	msoConditionEqualsNormal = 59, 
	msoConditionEqualsHigh = 60, 
	msoConditionNotEqualToLow = 61, 
	msoConditionNotEqualToNormal = 62, 
	msoConditionNotEqualToHigh = 63, 
	msoConditionEqualsNotStarted = 64, 
	msoConditionEqualsInProgress = 65, 
	msoConditionEqualsCompleted = 66, 
	msoConditionEqualsWaitingForSomeoneElse = 67, 
	msoConditionEqualsDeferred = 68, 
	msoConditionNotEqualToNotStarted = 69, 
	msoConditionNotEqualToInProgress = 70, 
	msoConditionNotEqualToCompleted = 71, 
	msoConditionNotEqualToWaitingForSomeoneElse = 72, 
	msoConditionNotEqualToDeferred = 73, 
} MsoCondition;

// MsoConnector
typedef enum tagMsoConnector
{
	msoConnectorAnd = 1, 
	msoConnectorOr = 2, 
} MsoConnector;

// PropertyTests
// {000C0334-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE PropertyTests
DECLARE_INTERFACE_(PropertyTests, _IMsoDispObj)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
	// _IMsoDispObj methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ IDispatch** ppidisp) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* plCreator) PURE; 
#endif
	// PropertyTests methods:
	STDMETHOD_(HRESULT, Get_Item) (THIS_ int , long lcid, PropertyTest** ppIDocProp) PURE; 
	STDMETHOD_(HRESULT, Get_Count) (THIS_ long* pc) PURE; 
	STDMETHOD_(HRESULT, Add) (THIS_ BSTR Name, MsoCondition Condition, VARIANT Value, VARIANT SecondValue, MsoConnector Connector) PURE; 
	STDMETHOD_(HRESULT, Remove) (THIS_ int ) PURE; 
	STDMETHOD_(HRESULT, Get__NewEnum) (THIS_ IUnknown** ppunkEnum) PURE; 
};
typedef PropertyTests* LPROPERTYTESTS;
#ifdef __cplusplus
// PropertyTests  {000C0334-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TPropertyTestsProxy : public __OCF TAutoProxy
{
public:
	TPropertyTestsProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1610743808]
	IDispatch* _Application();

	// Creator:   [dispid 1610743809]
	long Creator();

	// Item:   [dispid 0]
	void Item(TPropertyTestProxy& Obj, int arg0);

	// Count:   [dispid 4]
	long Count();

	// Add:   [dispid 5]
	void Add(__OCF TAutoString Name, MsoCondition Condition, __OCF TAutoVal Value, __OCF TAutoVal SecondValue, MsoConnector Connector);

	// Remove:   [dispid 6]
	void Remove(int arg0);

	// _NewEnum:   [dispid -4]
	void _NewEnum(__OCF TAutoEnumerator<IUnknown*>& Obj);
};
#endif

// ReadabilityStatistics
// {000209AE-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE ReadabilityStatistics
DECLARE_INTERFACE_(ReadabilityStatistics, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// ReadabilityStatistics methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE;
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get__NewEnum) (THIS_ IUnknown** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Count) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Item) (THIS_ VARIANT* , ReadabilityStatistic** prop) PURE; 
};
typedef ReadabilityStatistics* LPEADABILITYSTATISTICS;
#ifdef __cplusplus
// ReadabilityStatistics  {000209AE-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TReadabilityStatisticsProxy : public __OCF TAutoProxy
{
public:
	TReadabilityStatisticsProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// _NewEnum:   [dispid -4]
	void _NewEnum(__OCF TAutoEnumerator<IUnknown*>& Obj);

	// Count:   [dispid 1]
	long Count();

	// Item:   [dispid 0]
	void Item(TReadabilityStatisticProxy& Obj, __OCF TAutoVal* arg0);
};
#endif

// RecentFiles
// {00020963-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE RecentFiles
DECLARE_INTERFACE_(RecentFiles, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// RecentFiles methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE;
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get__NewEnum) (THIS_ IUnknown** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Count) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Maximum) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Maximum) (THIS_ long prop) PURE; 
	STDMETHOD_(HRESULT, Item) (THIS_ long , RecentFile** prop) PURE; 
	STDMETHOD_(HRESULT, Add) (THIS_ VARIANT* , VARIANT* ReadOnly, RecentFile** prop) PURE; 
};
typedef RecentFiles* LPECENTFILES;
#ifdef __cplusplus
// RecentFiles  {00020963-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TRecentFilesProxy : public __OCF TAutoProxy
{
public:
	TRecentFilesProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// _NewEnum:   [dispid -4]
	void _NewEnum(__OCF TAutoEnumerator<IUnknown*>& Obj);

	// Count:   [dispid 1]
	long Count();

	// Maximum:   [dispid 2]
	long Maximum();

	// Maximum:   [dispid 2]
	void Maximum(long arg0);

	// Item:   [dispid 0]
	void Item(TRecentFileProxy& Obj, long arg0);

	// Add:   [dispid 3]
	void Add(TRecentFileProxy& Obj, __OCF TAutoVal* arg0, __OCF TAutoVal* ReadOnly = 0);
};
#endif

// Revisions
// {00020980-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE Revisions
DECLARE_INTERFACE_(Revisions, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// Revisions methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get__NewEnum) (THIS_ IUnknown** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Count) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Item) (THIS_ long , Revision** prop) PURE; 
	STDMETHOD_(HRESULT, AcceptAll) (THIS ) PURE; 
	STDMETHOD_(HRESULT, RejectAll) (THIS ) PURE; 
};
typedef Revisions* LPEVISIONS;
#ifdef __cplusplus
// Revisions  {00020980-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TRevisionsProxy : public __OCF TAutoProxy
{
public:
	TRevisionsProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// _NewEnum:   [dispid -4]
	void _NewEnum(__OCF TAutoEnumerator<IUnknown*>& Obj);

	// Count:   [dispid 5]
	long Count();

	// Item:   [dispid 0]
	void Item(TRevisionProxy& Obj, long arg0);

	// AcceptAll:   [dispid 101]
	void AcceptAll();

	// RejectAll:   [dispid 102]
	void RejectAll();
};
#endif

// WdRoutingSlipDelivery
typedef enum tagWdRoutingSlipDelivery
{
	wdOneAfterAnother = 0, 
	wdAllAtOnce = 1, 
} WdRoutingSlipDelivery;

// WdRoutingSlipStatus
typedef enum tagWdRoutingSlipStatus
{
	wdNotYetRouted = 0, 
	wdRouteInProgress = 1, 
	wdRouteComplete = 2, 
} WdRoutingSlipStatus;

// RoutingSlip
// {00020969-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE RoutingSlip
DECLARE_INTERFACE_(RoutingSlip, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE;
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// RoutingSlip methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE;
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Subject) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Subject) (THIS_ BSTR prop) PURE; 
	STDMETHOD_(HRESULT, Get_Message) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Message) (THIS_ BSTR prop) PURE; 
	STDMETHOD_(HRESULT, Get_Delivery) (THIS_ WdRoutingSlipDelivery* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Delivery) (THIS_ WdRoutingSlipDelivery prop) PURE; 
	STDMETHOD_(HRESULT, Get_TrackStatus) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_TrackStatus) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_Protect) (THIS_ WdProtectionType* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Protect) (THIS_ WdProtectionType prop) PURE; 
	STDMETHOD_(HRESULT, Get_ReturnWhenDone) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_ReturnWhenDone) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_Status) (THIS_ WdRoutingSlipStatus* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Recipients) (THIS_ VARIANT* , VARIANT* prop) PURE; 
	STDMETHOD_(HRESULT, Reset) (THIS ) PURE; 
	STDMETHOD_(HRESULT, AddRecipient) (THIS_ BSTR Recipient) PURE; 
};
typedef RoutingSlip* LPOUTINGSLIP;
#ifdef __cplusplus
// RoutingSlip  {00020969-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TRoutingSlipProxy : public __OCF TAutoProxy
{
public:
	TRoutingSlipProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// Subject:   [dispid 1]
	__OCF TAutoString Subject();

	// Subject:   [dispid 1]
	void Subject(__OCF TAutoString arg0);

	// Message:   [dispid 2]
	__OCF TAutoString Message();

	// Message:   [dispid 2]
	void Message(__OCF TAutoString arg0);

	// Delivery:   [dispid 3]
	WdRoutingSlipDelivery Delivery();

	// Delivery:   [dispid 3]
	void Delivery(WdRoutingSlipDelivery arg0);

	// TrackStatus:   [dispid 4]
	/*__OWL*/ TBool TrackStatus();

	// TrackStatus:   [dispid 4]
	void TrackStatus(/*__OWL*/ TBool arg0);

	// Protect:   [dispid 5]
	WdProtectionType Protect();

	// Protect:   [dispid 5]
	void Protect(WdProtectionType arg0);

	// ReturnWhenDone:   [dispid 6]
	/*__OWL*/ TBool ReturnWhenDone();

	// ReturnWhenDone:   [dispid 6]
	void ReturnWhenDone(/*__OWL*/ TBool arg0);

	// Status:   [dispid 7]
	WdRoutingSlipStatus Status();

	// Recipients:   [dispid 9]
	__OCF TAutoVal Recipients(__OCF TAutoVal* arg0 = 0);

	// Reset:   [dispid 101]
	void Reset();

	// AddRecipient:   [dispid 102]
	void AddRecipient(__OCF TAutoString Recipient);
};
#endif

// WdRowAlignment
typedef enum tagWdRowAlignment
{
	wdAlignRowLeft = 0, 
	wdAlignRowCenter = 1, 
	wdAlignRowRight = 2, 
} WdRowAlignment;

// WdRowHeightRule
typedef enum tagWdRowHeightRule
{
	wdRowHeightAuto = 0, 
	wdRowHeightAtLeast = 1,
	wdRowHeightExactly = 2, 
} WdRowHeightRule;

// WdRulerStyle
typedef enum tagWdRulerStyle
{
	wdAdjustNone = 0, 
	wdAdjustProportional = 1, 
	wdAdjustFirstColumn = 2, 
	wdAdjustSameWidth = 3, 
} WdRulerStyle;

// WdRelativeHorizontalPosition
typedef enum tagWdRelativeHorizontalPosition
{
	wdRelativeHorizontalPositionMargin = 0, 
	wdRelativeHorizontalPositionPage = 1, 
	wdRelativeHorizontalPositionColumn = 2, 
	wdRelativeHorizontalPositionCharacter = 3, 
} WdRelativeHorizontalPosition;

// WdRelativeVerticalPosition
typedef enum tagWdRelativeVerticalPosition
{
	wdRelativeVerticalPositionMargin = 0, 
	wdRelativeVerticalPositionPage = 1, 
	wdRelativeVerticalPositionParagraph = 2,
	wdRelativeVerticalPositionLine = 3, 
} WdRelativeVerticalPosition;

// WdTableDirection
typedef enum tagWdTableDirection
{
	wdTableDirectionRtl = 0, 
	wdTableDirectionLtr = 1, 
} WdTableDirection;

// Rows
// {0002094C-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE Rows
DECLARE_INTERFACE_(Rows, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// Rows methods:
	STDMETHOD_(HRESULT, Get__NewEnum) (THIS_ IUnknown** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Count) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_AllowBreakAcrossPages) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Set_AllowBreakAcrossPages) (THIS_ long prop) PURE; 
	STDMETHOD_(HRESULT, Get_Alignment) (THIS_ WdRowAlignment* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Alignment) (THIS_ WdRowAlignment prop) PURE; 
	STDMETHOD_(HRESULT, Get_HeadingFormat) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Set_HeadingFormat) (THIS_ long prop) PURE; 
	STDMETHOD_(HRESULT, Get_SpaceBetweenColumns) (THIS_ float* prop) PURE; 
	STDMETHOD_(HRESULT, Set_SpaceBetweenColumns) (THIS_ float prop) PURE; 
	STDMETHOD_(HRESULT, Get_Height) (THIS_ float* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Height) (THIS_ float prop) PURE; 
	STDMETHOD_(HRESULT, Get_HeightRule) (THIS_ WdRowHeightRule* prop) PURE; 
	STDMETHOD_(HRESULT, Set_HeightRule) (THIS_ WdRowHeightRule prop) PURE; 
	STDMETHOD_(HRESULT, Get_LeftIndent) (THIS_ float* prop) PURE; 
	STDMETHOD_(HRESULT, Set_LeftIndent) (THIS_ float prop) PURE; 
	STDMETHOD_(HRESULT, Get_First) (THIS_ Row** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Last) (THIS_ Row** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE;
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Borders) (THIS_ Borders** prop) PURE; 
	STDMETHOD_(HRESULT, Set_Borders) (THIS_ Borders* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Shading) (THIS_ Shading** prop) PURE; 
	STDMETHOD_(HRESULT, Item) (THIS_ long , Row** prop) PURE; 
	STDMETHOD_(HRESULT, Add) (THIS_ VARIANT* BeforeRow, Row** prop) PURE;
	STDMETHOD_(HRESULT, Select) (THIS ) PURE; 
	STDMETHOD_(HRESULT, Delete) (THIS ) PURE; 
	STDMETHOD_(HRESULT, SetLeftIndent) (THIS_ float LeftIndent, WdRulerStyle RulerStyle) PURE; 
	STDMETHOD_(HRESULT, SetHeight) (THIS_ float RowHeight, WdRowHeightRule HeightRule) PURE; 
	STDMETHOD_(HRESULT, ConvertToTextOld) (THIS_ VARIANT* Separator, WordRange** prop) PURE; 
	STDMETHOD_(HRESULT, DistributeHeight) (THIS ) PURE; 
	STDMETHOD_(HRESULT, ConvertToText) (THIS_ VARIANT* Separator, VARIANT* NestedTables, WordRange** prop) PURE; 
	STDMETHOD_(HRESULT, Get_WrapAroundText) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Set_WrapAroundText) (THIS_ long prop) PURE; 
	STDMETHOD_(HRESULT, Get_DistanceTop) (THIS_ float* prop) PURE; 
	STDMETHOD_(HRESULT, Set_DistanceTop) (THIS_ float prop) PURE; 
	STDMETHOD_(HRESULT, Get_DistanceBottom) (THIS_ float* prop) PURE; 
	STDMETHOD_(HRESULT, Set_DistanceBottom) (THIS_ float prop) PURE; 
	STDMETHOD_(HRESULT, Get_DistanceLeft) (THIS_ float* prop) PURE; 
	STDMETHOD_(HRESULT, Set_DistanceLeft) (THIS_ float prop) PURE; 
	STDMETHOD_(HRESULT, Get_DistanceRight) (THIS_ float* prop) PURE; 
	STDMETHOD_(HRESULT, Set_DistanceRight) (THIS_ float prop) PURE; 
	STDMETHOD_(HRESULT, Get_HorizontalPosition) (THIS_ float* prop) PURE; 
	STDMETHOD_(HRESULT, Set_HorizontalPosition) (THIS_ float prop) PURE; 
	STDMETHOD_(HRESULT, Get_VerticalPosition) (THIS_ float* prop) PURE; 
	STDMETHOD_(HRESULT, Set_VerticalPosition) (THIS_ float prop) PURE; 
	STDMETHOD_(HRESULT, Get_RelativeHorizontalPosition) (THIS_ WdRelativeHorizontalPosition* prop) PURE; 
	STDMETHOD_(HRESULT, Set_RelativeHorizontalPosition) (THIS_ WdRelativeHorizontalPosition prop) PURE; 
	STDMETHOD_(HRESULT, Get_RelativeVerticalPosition) (THIS_ WdRelativeVerticalPosition* prop) PURE; 
	STDMETHOD_(HRESULT, Set_RelativeVerticalPosition) (THIS_ WdRelativeVerticalPosition prop) PURE; 
	STDMETHOD_(HRESULT, Get_AllowOverlap) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Set_AllowOverlap) (THIS_ long prop) PURE;
	STDMETHOD_(HRESULT, Get_NestingLevel) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_TableDirection) (THIS_ WdTableDirection* prop) PURE; 
	STDMETHOD_(HRESULT, Set_TableDirection) (THIS_ WdTableDirection prop) PURE; 
};
typedef Rows* LPOWS;
#ifdef __cplusplus
// Rows  {0002094C-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TRowsProxy : public __OCF TAutoProxy
{
public:
	TRowsProxy() : TAutoProxy(0x0) {}

	// _NewEnum:   [dispid -4]
	void _NewEnum(__OCF TAutoEnumerator<IUnknown*>& Obj);

	// Count:   [dispid 2]
	long Count();

	// AllowBreakAcrossPages:   [dispid 3]
	long AllowBreakAcrossPages();

	// AllowBreakAcrossPages:   [dispid 3]
	void AllowBreakAcrossPages(long arg0);

	// Alignment:   [dispid 4]
	WdRowAlignment Alignment();

	// Alignment:   [dispid 4]
	void Alignment(WdRowAlignment arg0);

	// HeadingFormat:   [dispid 5]
	long HeadingFormat();

	// HeadingFormat:   [dispid 5]
	void HeadingFormat(long arg0);

	// SpaceBetweenColumns:   [dispid 6]
	float SpaceBetweenColumns();

	// SpaceBetweenColumns:   [dispid 6]
	void SpaceBetweenColumns(float arg0);

	// Height:   [dispid 7]
	float Height();

	// Height:   [dispid 7]
	void Height(float arg0);

	// HeightRule:   [dispid 8]
	WdRowHeightRule HeightRule();

	// HeightRule:   [dispid 8]
	void HeightRule(WdRowHeightRule arg0);

	// LeftIndent:   [dispid 9]
	float LeftIndent();

	// LeftIndent:   [dispid 9]
	void LeftIndent(float arg0);

	// First:   [dispid 10]
	void First(TRowProxy& Obj);

	// Last:   [dispid 11]
	void Last(TRowProxy& Obj);

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// _Borders:   [dispid 1100]
	void _Borders(TBordersProxy& Obj);

	// _Borders:   [dispid 1100]
	void _Borders(Borders* arg0);

	// _Shading:   [dispid 102]
	void _Shading(TShadingProxy& Obj);

	// Item:   [dispid 0]
	void Item(TRowProxy& Obj, long arg0);

	// Add:   [dispid 100]
	void Add(TRowProxy& Obj, __OCF TAutoVal* BeforeRow = 0);

	// Select:   [dispid 199]
	void Select();

	// Delete:   [dispid 200]
	void Delete();

	// SetLeftIndent:   [dispid 202]
	void SetLeftIndent(float LeftIndent, WdRulerStyle RulerStyle);

	// SetHeight:   [dispid 203]
	void SetHeight(float RowHeight, WdRowHeightRule HeightRule);

	// ConvertToTextOld:   [dispid 16]
	void ConvertToTextOld(TRangeProxy& Obj, __OCF TAutoVal* Separator = 0);

	// DistributeHeight:   [dispid 206]
	void DistributeHeight();

	// ConvertToText:   [dispid 210]
	void ConvertToText(TRangeProxy& Obj, __OCF TAutoVal* Separator = 0, __OCF TAutoVal* NestedTables = 0);

	// WrapAroundText:   [dispid 12]
	long WrapAroundText();

	// WrapAroundText:   [dispid 12]
	void WrapAroundText(long arg0);

	// DistanceTop:   [dispid 13]
	float DistanceTop();

	// DistanceTop:   [dispid 13]
	void DistanceTop(float arg0);

	// DistanceBottom:   [dispid 14]
	float DistanceBottom();

	// DistanceBottom:   [dispid 14]
	void DistanceBottom(float arg0);

	// DistanceLeft:   [dispid 20]
	float DistanceLeft();

	// DistanceLeft:   [dispid 20]
	void DistanceLeft(float arg0);

	// DistanceRight:   [dispid 21]
	float DistanceRight();

	// DistanceRight:   [dispid 21]
	void DistanceRight(float arg0);

	// HorizontalPosition:   [dispid 15]
	float HorizontalPosition();

	// HorizontalPosition:   [dispid 15]
	void HorizontalPosition(float arg0);

	// VerticalPosition:   [dispid 17]
	float VerticalPosition();

	// VerticalPosition:   [dispid 17]
	void VerticalPosition(float arg0);

	// RelativeHorizontalPosition:   [dispid 18]
	WdRelativeHorizontalPosition RelativeHorizontalPosition();

	// RelativeHorizontalPosition:   [dispid 18]
	void RelativeHorizontalPosition(WdRelativeHorizontalPosition arg0);

	// RelativeVerticalPosition:   [dispid 19]
	WdRelativeVerticalPosition RelativeVerticalPosition();

	// RelativeVerticalPosition:   [dispid 19]
	void RelativeVerticalPosition(WdRelativeVerticalPosition arg0);

	// AllowOverlap:   [dispid 22]
	long AllowOverlap();

	// AllowOverlap:   [dispid 22]
	void AllowOverlap(long arg0);

	// NestingLevel:   [dispid 103]
	long NestingLevel();

	// TableDirection:   [dispid 104]
	WdTableDirection TableDirection();

	// TableDirection:   [dispid 104]
	void TableDirection(WdTableDirection arg0);
};
#endif

// MsoScriptLocation
typedef enum tagMsoScriptLocation
{
	msoScriptLocationInHead = 1, 
	msoScriptLocationInBody = 2, 
} MsoScriptLocation;

// MsoScriptLanguage
typedef enum tagMsoScriptLanguage
{
	msoScriptLanguageJava = 1, 
	msoScriptLanguageVisualBasic = 2, 
	msoScriptLanguageASP = 3, 
	msoScriptLanguageOther = 4, 
} MsoScriptLanguage;

// Scripts
// {000C0340-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE Scripts
DECLARE_INTERFACE_(Scripts, _IMsoDispObj)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
	// _IMsoDispObj methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ IDispatch** ppidisp) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* plCreator) PURE; 
#endif
	// Scripts methods:
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** Parent) PURE; 
	STDMETHOD_(HRESULT, Get_Count) (THIS_ long* Count) PURE; 
	STDMETHOD_(HRESULT, Get__NewEnum) (THIS_ IUnknown** _NewEnum) PURE; 
	STDMETHOD_(HRESULT, Item) (THIS_ VARIANT , Script** Item) PURE; 
	STDMETHOD_(HRESULT, Add) (THIS_ IDispatch* Anchor, MsoScriptLocation Location, MsoScriptLanguage , BSTR Id, BSTR Extended, BSTR ScriptText, Script** Add) PURE; 
	STDMETHOD_(HRESULT, Delete) (THIS ) PURE; 
};
typedef Scripts* LPCRIPTS;
#ifdef __cplusplus
// Scripts  {000C0340-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TScriptsProxy : public __OCF TAutoProxy
{
public:
	TScriptsProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1610743808]
	IDispatch* _Application();

	// Creator:   [dispid 1610743809]
	long Creator();

	// Parent:   [dispid 1610809344]
	IDispatch* Parent();

	// Count:   [dispid 1610809345]
	long Count();

	// _NewEnum:   [dispid -4]
	void _NewEnum(__OCF TAutoEnumerator<IUnknown*>& Obj);

	// Item:   [dispid 0]
	void Item(TScriptProxy& Obj, __OCF TAutoVal arg0);

	// Add:   [dispid 1610809348]
	void Add(TScriptProxy& Obj, IDispatch* Anchor, MsoScriptLocation Location, MsoScriptLanguage arg2, __OCF TAutoString Id, __OCF TAutoString Extended, __OCF TAutoString ScriptText);

	// Delete:   [dispid 1610809349]
	void Delete();
};
#endif

// SearchFolders
// {000C036A-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE SearchFolders
DECLARE_INTERFACE_(SearchFolders, _IMsoDispObj)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
	// _IMsoDispObj methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ IDispatch** ppidisp) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* plCreator) PURE; 
#endif
	// SearchFolders methods:
	STDMETHOD_(HRESULT, Get_Item) (THIS_ int , ScopeFolder** ScopeFolderRet) PURE; 
	STDMETHOD_(HRESULT, Get_Count) (THIS_ int* iCountRetVal) PURE; 
	STDMETHOD_(HRESULT, Add) (THIS_ ScopeFolder* ) PURE; 
	STDMETHOD_(HRESULT, Remove) (THIS_ int ) PURE; 
	STDMETHOD_(HRESULT, Get__NewEnum) (THIS_ IUnknown** ppunkEnum) PURE; 
};
typedef SearchFolders* LPEARCHFOLDERS;
#ifdef __cplusplus
// SearchFolders  {000C036A-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TSearchFoldersProxy : public __OCF TAutoProxy
{
public:
	TSearchFoldersProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1610743808]
	IDispatch* _Application();

	// Creator:   [dispid 1610743809]
	long Creator();

	// Item:   [dispid 0]
	void Item(TScopeFolderProxy& Obj, int arg0);

	// Count:   [dispid 2]
	int Count();

	// Add:   [dispid 3]
	void Add(ScopeFolder* arg0);

	// Remove:   [dispid 4]
	void Remove(int arg0);

	// _NewEnum:   [dispid -4]
	void _NewEnum(__OCF TAutoEnumerator<IUnknown*>& Obj);
};
#endif

// SearchScopes
// {000C0366-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE SearchScopes
DECLARE_INTERFACE_(SearchScopes, _IMsoDispObj)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
	// _IMsoDispObj methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ IDispatch** ppidisp) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* plCreator) PURE; 
#endif
	// SearchScopes methods:
	STDMETHOD_(HRESULT, Get_Item) (THIS_ int , SearchScope** SearchScopeRet) PURE; 
	STDMETHOD_(HRESULT, Get_Count) (THIS_ int* iCountRetVal) PURE; 
	STDMETHOD_(HRESULT, Get__NewEnum) (THIS_ IUnknown** ppunkEnum) PURE; 
};
typedef SearchScopes* LPEARCHSCOPES;
#ifdef __cplusplus
// SearchScopes  {000C0366-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TSearchScopesProxy : public __OCF TAutoProxy
{
public:
	TSearchScopesProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1610743808]
	IDispatch* _Application();

	// Creator:   [dispid 1610743809]
	long Creator();

	// Item:   [dispid 0]
	void Item(TSearchScopeProxy& Obj, int arg0);

	// Count:   [dispid 4]
	int Count();

	// _NewEnum:   [dispid -4]
	void _NewEnum(__OCF TAutoEnumerator<IUnknown*>& Obj);
};
#endif

// Sections
// {0002095A-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE Sections
DECLARE_INTERFACE_(Sections, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// Sections methods:
	STDMETHOD_(HRESULT, Get__NewEnum) (THIS_ IUnknown** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Count) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_First) (THIS_ Section** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Last) (THIS_ Section** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get_PageSetup) (THIS_ PageSetup** prop) PURE; 
	STDMETHOD_(HRESULT, Set_PageSetup) (THIS_ PageSetup* prop) PURE; 
	STDMETHOD_(HRESULT, Item) (THIS_ long , Section** prop) PURE; 
	STDMETHOD_(HRESULT, Add) (THIS_ VARIANT* , VARIANT* Start, Section** prop) PURE; 
};
typedef Sections* LPECTIONS;
#ifdef __cplusplus
// Sections  {0002095A-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TSectionsProxy : public __OCF TAutoProxy
{
public:
	TSectionsProxy() : TAutoProxy(0x0) {}

	// _NewEnum:   [dispid -4]
	void _NewEnum(__OCF TAutoEnumerator<IUnknown*>& Obj);

	// Count:   [dispid 2]
	long Count();

	// First:   [dispid 3]
	void First(TSectionProxy& Obj);

	// Last:   [dispid 4]
	void Last(TSectionProxy& Obj);

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// _PageSetup:   [dispid 1101]
	void _PageSetup(TPageSetupProxy& Obj);

	// _PageSetup:   [dispid 1101]
	void _PageSetup(PageSetup* arg0);

	// Item:   [dispid 0]
	void Item(TSectionProxy& Obj, long arg0);

	// Add:   [dispid 5]
	void Add(TSectionProxy& Obj, __OCF TAutoVal* arg0 = 0, __OCF TAutoVal* Start = 0);
};
#endif

// Sentences
// {0002095B-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE Sentences
DECLARE_INTERFACE_(Sentences, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// Sentences methods:
	STDMETHOD_(HRESULT, Get__NewEnum) (THIS_ IUnknown** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Count) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_First) (THIS_ WordRange** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Last) (THIS_ WordRange** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Item) (THIS_ long , WordRange** prop) PURE; 
};
typedef Sentences* LPENTENCES;
#ifdef __cplusplus
// Sentences  {0002095B-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TSentencesProxy : public __OCF TAutoProxy
{
public:
	TSentencesProxy() : TAutoProxy(0x0) {}

	// _NewEnum:   [dispid -4]
	void _NewEnum(__OCF TAutoEnumerator<IUnknown*>& Obj);

	// Count:   [dispid 2]
	long Count();

	// First:   [dispid 3]
	void First(TRangeProxy& Obj);

	// Last:   [dispid 4]
	void Last(TRangeProxy& Obj);

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// Item:   [dispid 0]
	void Item(TRangeProxy& Obj, long arg0);
};
#endif

// WdTextureIndex
typedef enum tagWdTextureIndex
{
	wdTextureNone = 0, 
	wdTexture2Pt5Percent = 25, 
	wdTexture5Percent = 50, 
	wdTexture7Pt5Percent = 75, 
	wdTexture10Percent = 100, 
	wdTexture12Pt5Percent = 125, 
	wdTexture15Percent = 150, 
	wdTexture17Pt5Percent = 175, 
	wdTexture20Percent = 200, 
	wdTexture22Pt5Percent = 225, 
	wdTexture25Percent = 250, 
	wdTexture27Pt5Percent = 275, 
	wdTexture30Percent = 300, 
	wdTexture32Pt5Percent = 325, 
	wdTexture35Percent = 350, 
	wdTexture37Pt5Percent = 375, 
	wdTexture40Percent = 400, 
	wdTexture42Pt5Percent = 425, 
	wdTexture45Percent = 450, 
	wdTexture47Pt5Percent = 475, 
	wdTexture50Percent = 500, 
	wdTexture52Pt5Percent = 525, 
	wdTexture55Percent = 550, 
	wdTexture57Pt5Percent = 575, 
	wdTexture60Percent = 600, 
	wdTexture62Pt5Percent = 625, 
	wdTexture65Percent = 650, 
	wdTexture67Pt5Percent = 675, 
	wdTexture70Percent = 700, 
	wdTexture72Pt5Percent = 725, 
	wdTexture75Percent = 750, 
	wdTexture77Pt5Percent = 775, 
	wdTexture80Percent = 800, 
	wdTexture82Pt5Percent = 825, 
	wdTexture85Percent = 850, 
	wdTexture87Pt5Percent = 875, 
	wdTexture90Percent = 900, 
	wdTexture92Pt5Percent = 925, 
	wdTexture95Percent = 950, 
	wdTexture97Pt5Percent = 975, 
	wdTextureSolid = 1000, 
	wdTextureDarkHorizontal = -1, 
	wdTextureDarkVertical = -2, 
	wdTextureDarkDiagonalDown = -3, 
	wdTextureDarkDiagonalUp = -4, 
	wdTextureDarkCross = -5, 
	wdTextureDarkDiagonalCross = -6, 
	wdTextureHorizontal = -7, 
	wdTextureVertical = -8, 
	wdTextureDiagonalDown = -9, 
	wdTextureDiagonalUp = -10, 
	wdTextureCross = -11, 
	wdTextureDiagonalCross = -12, 
} WdTextureIndex;

// Shading
// {0002093A-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE Shading
DECLARE_INTERFACE_(Shading, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// Shading methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get_ForegroundPatternColorIndex) (THIS_ WdColorIndex* prop) PURE; 
	STDMETHOD_(HRESULT, Set_ForegroundPatternColorIndex) (THIS_ WdColorIndex prop) PURE; 
	STDMETHOD_(HRESULT, Get_BackgroundPatternColorIndex) (THIS_ WdColorIndex* prop) PURE; 
	STDMETHOD_(HRESULT, Set_BackgroundPatternColorIndex) (THIS_ WdColorIndex prop) PURE; 
	STDMETHOD_(HRESULT, Get_Texture) (THIS_ WdTextureIndex* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Texture) (THIS_ WdTextureIndex prop) PURE; 
	STDMETHOD_(HRESULT, Get_ForegroundPatternColor) (THIS_ WdColor* prop) PURE; 
	STDMETHOD_(HRESULT, Set_ForegroundPatternColor) (THIS_ WdColor prop) PURE; 
	STDMETHOD_(HRESULT, Get_BackgroundPatternColor) (THIS_ WdColor* prop) PURE; 
	STDMETHOD_(HRESULT, Set_BackgroundPatternColor) (THIS_ WdColor prop) PURE; 
};
typedef Shading* LPHADING;
#ifdef __cplusplus
// Shading  {0002093A-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TShadingProxy : public __OCF TAutoProxy
{
public:
	TShadingProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// ForegroundPatternColorIndex:   [dispid 1]
	WdColorIndex ForegroundPatternColorIndex();

	// ForegroundPatternColorIndex:   [dispid 1]
	void ForegroundPatternColorIndex(WdColorIndex arg0);

	// BackgroundPatternColorIndex:   [dispid 2]
	WdColorIndex BackgroundPatternColorIndex();

	// BackgroundPatternColorIndex:   [dispid 2]
	void BackgroundPatternColorIndex(WdColorIndex arg0);

	// Texture:   [dispid 3]
	WdTextureIndex Texture();

	// Texture:   [dispid 3]
	void Texture(WdTextureIndex arg0);

	// ForegroundPatternColor:   [dispid 4]
	WdColor ForegroundPatternColor();

	// ForegroundPatternColor:   [dispid 4]
	void ForegroundPatternColor(WdColor arg0);

	// BackgroundPatternColor:   [dispid 5]
	WdColor BackgroundPatternColor();

	// BackgroundPatternColor:   [dispid 5]
	void BackgroundPatternColor(WdColor arg0);
};
#endif

// MsoAutoShapeType
typedef enum tagMsoAutoShapeType
{
	msoShapeMixed = -2, 
	msoShapeRectangle = 1, 
	msoShapeParallelogram = 2, 
	msoShapeTrapezoid = 3, 
	msoShapeDiamond = 4, 
	msoShapeRoundedRectangle = 5, 
	msoShapeOctagon = 6, 
	msoShapeIsoscelesTriangle = 7, 
	msoShapeRightTriangle = 8, 
	msoShapeOval = 9, 
	msoShapeHexagon = 10, 
	msoShapeCross = 11, 
	msoShapeRegularPentagon = 12, 
	msoShapeCan = 13, 
	msoShapeCube = 14, 
	msoShapeBevel = 15, 
	msoShapeFoldedCorner = 16, 
	msoShapeSmileyFace = 17, 
	msoShapeDonut = 18, 
	msoShapeNoSymbol = 19, 
	msoShapeBlockArc = 20, 
	msoShapeHeart = 21, 
	msoShapeLightningBolt = 22, 
	msoShapeSun = 23, 
	msoShapeMoon = 24,
	msoShapeArc = 25, 
	msoShapeDoubleBracket = 26, 
	msoShapeDoubleBrace = 27, 
	msoShapePlaque = 28, 
	msoShapeLeftBracket = 29, 
	msoShapeRightBracket = 30, 
	msoShapeLeftBrace = 31, 
	msoShapeRightBrace = 32, 
	msoShapeRightArrow = 33, 
	msoShapeLeftArrow = 34, 
	msoShapeUpArrow = 35, 
	msoShapeDownArrow = 36, 
	msoShapeLeftRightArrow = 37, 
	msoShapeUpDownArrow = 38, 
	msoShapeQuadArrow = 39, 
	msoShapeLeftRightUpArrow = 40, 
	msoShapeBentArrow = 41, 
	msoShapeUTurnArrow = 42, 
	msoShapeLeftUpArrow = 43, 
	msoShapeBentUpArrow = 44, 
	msoShapeCurvedRightArrow = 45, 
	msoShapeCurvedLeftArrow = 46, 
	msoShapeCurvedUpArrow = 47, 
	msoShapeCurvedDownArrow = 48, 
	msoShapeStripedRightArrow = 49, 
	msoShapeNotchedRightArrow = 50,
	msoShapePentagon = 51, 
	msoShapeChevron = 52, 
	msoShapeRightArrowCallout = 53, 
	msoShapeLeftArrowCallout = 54, 
	msoShapeUpArrowCallout = 55, 
	msoShapeDownArrowCallout = 56, 
	msoShapeLeftRightArrowCallout = 57, 
	msoShapeUpDownArrowCallout = 58, 
	msoShapeQuadArrowCallout = 59, 
	msoShapeCircularArrow = 60, 
	msoShapeFlowchartProcess = 61, 
	msoShapeFlowchartAlternateProcess = 62, 
	msoShapeFlowchartDecision = 63, 
	msoShapeFlowchartData = 64, 
	msoShapeFlowchartPredefinedProcess = 65, 
	msoShapeFlowchartInternalStorage = 66, 
	msoShapeFlowchartDocument = 67, 
	msoShapeFlowchartMultidocument = 68, 
	msoShapeFlowchartTerminator = 69, 
	msoShapeFlowchartPreparation = 70, 
	msoShapeFlowchartManualInput = 71, 
	msoShapeFlowchartManualOperation = 72, 
	msoShapeFlowchartConnector = 73, 
	msoShapeFlowchartOffpageConnector = 74, 
	msoShapeFlowchartCard = 75, 
	msoShapeFlowchartPunchedTape = 76,
	msoShapeFlowchartSummingJunction = 77, 
	msoShapeFlowchartOr = 78, 
	msoShapeFlowchartCollate = 79, 
	msoShapeFlowchartSort = 80, 
	msoShapeFlowchartExtract = 81, 
	msoShapeFlowchartMerge = 82, 
	msoShapeFlowchartStoredData = 83, 
	msoShapeFlowchartDelay = 84, 
	msoShapeFlowchartSequentialAccessStorage = 85, 
	msoShapeFlowchartMagneticDisk = 86, 
	msoShapeFlowchartDirectAccessStorage = 87, 
	msoShapeFlowchartDisplay = 88, 
	msoShapeExplosion1 = 89, 
	msoShapeExplosion2 = 90, 
	msoShape4pointStar = 91, 
	msoShape5pointStar = 92, 
	msoShape8pointStar = 93, 
	msoShape16pointStar = 94, 
	msoShape24pointStar = 95, 
	msoShape32pointStar = 96, 
	msoShapeUpRibbon = 97, 
	msoShapeDownRibbon = 98, 
	msoShapeCurvedUpRibbon = 99, 
	msoShapeCurvedDownRibbon = 100, 
	msoShapeVerticalScroll = 101, 
	msoShapeHorizontalScroll = 102,
	msoShapeWave = 103, 
	msoShapeDoubleWave = 104, 
	msoShapeRectangularCallout = 105, 
	msoShapeRoundedRectangularCallout = 106, 
	msoShapeOvalCallout = 107, 
	msoShapeCloudCallout = 108, 
	msoShapeLineCallout1 = 109, 
	msoShapeLineCallout2 = 110, 
	msoShapeLineCallout3 = 111, 
	msoShapeLineCallout4 = 112, 
	msoShapeLineCallout1AccentBar = 113, 
	msoShapeLineCallout2AccentBar = 114, 
	msoShapeLineCallout3AccentBar = 115, 
	msoShapeLineCallout4AccentBar = 116, 
	msoShapeLineCallout1NoBorder = 117, 
	msoShapeLineCallout2NoBorder = 118, 
	msoShapeLineCallout3NoBorder = 119, 
	msoShapeLineCallout4NoBorder = 120, 
	msoShapeLineCallout1BorderandAccentBar = 121, 
	msoShapeLineCallout2BorderandAccentBar = 122, 
	msoShapeLineCallout3BorderandAccentBar = 123, 
	msoShapeLineCallout4BorderandAccentBar = 124, 
	msoShapeActionButtonCustom = 125, 
	msoShapeActionButtonHome = 126, 
	msoShapeActionButtonHelp = 127, 
	msoShapeActionButtonInformation = 128,
	msoShapeActionButtonBackorPrevious = 129, 
	msoShapeActionButtonForwardorNext = 130, 
	msoShapeActionButtonBeginning = 131, 
	msoShapeActionButtonEnd = 132, 
	msoShapeActionButtonReturn = 133, 
	msoShapeActionButtonDocument = 134, 
	msoShapeActionButtonSound = 135, 
	msoShapeActionButtonMovie = 136, 
	msoShapeBalloon = 137, 
	msoShapeNotPrimitive = 138, 
} MsoAutoShapeType;

// MsoTriState
typedef enum tagMsoTriState
{
	msoTrue = -1, 
	msoFalse = 0, 
	msoCTrue = 1, 
	msoTriStateToggle = -3, 
	msoTriStateMixed = -2, 
} MsoTriState;

// MsoShapeType
typedef enum tagMsoShapeType
{
	msoShapeTypeMixed = -2, 
	msoAutoShape = 1, 
	msoCallout = 2, 
	msoChart = 3, 
	msoComment = 4, 
	msoFreeform = 5, 
	msoGroup = 6, 
	msoEmbeddedOLEObject = 7, 
	msoFormControl = 8, 
	msoLine = 9, 
	msoLinkedOLEObject = 10, 
	msoLinkedPicture = 11, 
	msoOLEControlObject = 12, 
	msoPicture = 13, 
	msoPlaceholder = 14, 
	msoTextEffect = 15, 
	msoMedia = 16, 
	msoTextBox = 17, 
	msoScriptAnchor = 18, 
	msoTable = 19, 
	msoCanvas = 20, 
	msoDiagram = 21, 
	msoInk = 22, 
	msoInkComment = 23, 
} MsoShapeType;

// MsoFlipCmd
typedef enum tagMsoFlipCmd
{
	msoFlipHorizontal = 0, 
	msoFlipVertical = 1, 
} MsoFlipCmd;

// MsoScaleFrom
typedef enum tagMsoScaleFrom
{
	msoScaleFromTopLeft = 0, 
	msoScaleFromMiddle = 1, 
	msoScaleFromBottomRight = 2, 
} MsoScaleFrom;

// MsoZOrderCmd
typedef enum tagMsoZOrderCmd
{
	msoBringToFront = 0, 
	msoSendToBack = 1, 
	msoBringForward = 2, 
	msoSendBackward = 3, 
	msoBringInFrontOfText = 4, 
	msoSendBehindText = 5, 
} MsoZOrderCmd;

// Shape
// {000209A0-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE WordShape
DECLARE_INTERFACE_(WordShape, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// Shape methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Adjustments) (THIS_ Adjustments** prop) PURE; 
	STDMETHOD_(HRESULT, Get_AutoShapeType) (THIS_ MsoAutoShapeType* prop) PURE; 
	STDMETHOD_(HRESULT, Set_AutoShapeType) (THIS_ MsoAutoShapeType prop) PURE; 
	STDMETHOD_(HRESULT, Get_Callout) (THIS_ CalloutFormat** prop) PURE; 
	STDMETHOD_(HRESULT, Get_ConnectionSiteCount) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Connector) (THIS_ MsoTriState* prop) PURE; 
	STDMETHOD_(HRESULT, Get_ConnectorFormat) (THIS_ ConnectorFormat** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Fill) (THIS_ FillFormat** prop) PURE; 
	STDMETHOD_(HRESULT, Get_GroupItems) (THIS_ GroupShapes** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Height) (THIS_ float* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Height) (THIS_ float prop) PURE; 
	STDMETHOD_(HRESULT, Get_HorizontalFlip) (THIS_ MsoTriState* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Left) (THIS_ float* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Left) (THIS_ float prop) PURE; 
	STDMETHOD_(HRESULT, Get_Line) (THIS_ LineFormat** prop) PURE; 
	STDMETHOD_(HRESULT, Get_LockAspectRatio) (THIS_ MsoTriState* prop) PURE; 
	STDMETHOD_(HRESULT, Set_LockAspectRatio) (THIS_ MsoTriState prop) PURE; 
	STDMETHOD_(HRESULT, Get_Name) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Name) (THIS_ BSTR prop) PURE; 
	STDMETHOD_(HRESULT, Get_Nodes) (THIS_ ShapeNodes** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Rotation) (THIS_ float* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Rotation) (THIS_ float prop) PURE; 
	STDMETHOD_(HRESULT, Get_PictureFormat) (THIS_ PictureFormat** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Shadow) (THIS_ ShadowFormat** prop) PURE; 
	STDMETHOD_(HRESULT, Get_TextEffect) (THIS_ TextEffectFormat** prop) PURE; 
	STDMETHOD_(HRESULT, Get_TextFrame) (THIS_ TextFrame** prop) PURE; 
	STDMETHOD_(HRESULT, Get_ThreeD) (THIS_ ThreeDFormat** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Top) (THIS_ float* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Top) (THIS_ float prop) PURE; 
	STDMETHOD_(HRESULT, Get_Type) (THIS_ MsoShapeType* prop) PURE; 
	STDMETHOD_(HRESULT, Get_VerticalFlip) (THIS_ MsoTriState* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Vertices) (THIS_ VARIANT* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Visible) (THIS_ MsoTriState* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Visible) (THIS_ MsoTriState prop) PURE; 
	STDMETHOD_(HRESULT, Get_Width) (THIS_ float* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Width) (THIS_ float prop) PURE; 
	STDMETHOD_(HRESULT, Get_ZOrderPosition) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Hyperlink) (THIS_ Hyperlink** prop) PURE; 
	STDMETHOD_(HRESULT, Get_RelativeHorizontalPosition) (THIS_ WdRelativeHorizontalPosition* prop) PURE; 
	STDMETHOD_(HRESULT, Set_RelativeHorizontalPosition) (THIS_ WdRelativeHorizontalPosition prop) PURE; 
	STDMETHOD_(HRESULT, Get_RelativeVerticalPosition) (THIS_ WdRelativeVerticalPosition* prop) PURE; 
	STDMETHOD_(HRESULT, Set_RelativeVerticalPosition) (THIS_ WdRelativeVerticalPosition prop) PURE; 
	STDMETHOD_(HRESULT, Get_LockAnchor) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Set_LockAnchor) (THIS_ long prop) PURE; 
	STDMETHOD_(HRESULT, Get_WrapFormat) (THIS_ WrapFormat** prop) PURE; 
	STDMETHOD_(HRESULT, Get_OLEFormat) (THIS_ OLEFormat** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Anchor) (THIS_ WordRange** prop) PURE; 
	STDMETHOD_(HRESULT, Get_LinkFormat) (THIS_ LinkFormat** prop) PURE; 
	STDMETHOD_(HRESULT, Apply) (THIS ) PURE; 
	STDMETHOD_(HRESULT, Delete) (THIS ) PURE; 
	STDMETHOD_(HRESULT, Duplicate) (THIS_ WordShape** prop) PURE; 
	STDMETHOD_(HRESULT, Flip) (THIS_ MsoFlipCmd FlipCmd) PURE; 
	STDMETHOD_(HRESULT, IncrementLeft) (THIS_ float Increment) PURE; 
	STDMETHOD_(HRESULT, IncrementRotation) (THIS_ float Increment) PURE; 
	STDMETHOD_(HRESULT, IncrementTop) (THIS_ float Increment) PURE; 
	STDMETHOD_(HRESULT, PickUp) (THIS ) PURE; 
	STDMETHOD_(HRESULT, RerouteConnections) (THIS ) PURE; 
	STDMETHOD_(HRESULT, ScaleHeight) (THIS_ float Factor, MsoTriState RelativeToOriginalSize, MsoScaleFrom Scale) PURE; 
	STDMETHOD_(HRESULT, ScaleWidth) (THIS_ float Factor, MsoTriState RelativeToOriginalSize, MsoScaleFrom Scale) PURE; 
	STDMETHOD_(HRESULT, Select) (THIS_ VARIANT* Replace) PURE; 
	STDMETHOD_(HRESULT, SetShapesDefaultProperties) (THIS ) PURE; 
	STDMETHOD_(HRESULT, Ungroup) (THIS_ ShapeRange** prop) PURE; 
	STDMETHOD_(HRESULT, ZOrder) (THIS_ MsoZOrderCmd ZOrderCmd) PURE; 
	STDMETHOD_(HRESULT, ConvertToInlineShape) (THIS_ InlineShape** prop) PURE; 
	STDMETHOD_(HRESULT, ConvertToFrame) (THIS_ Frame** prop) PURE; 
	STDMETHOD_(HRESULT, Activate) (THIS ) PURE; 
	STDMETHOD_(HRESULT, Get_AlternativeText) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Set_AlternativeText) (THIS_ BSTR prop) PURE; 
	STDMETHOD_(HRESULT, Get_Script) (THIS_ Script** prop) PURE; 
	STDMETHOD_(HRESULT, Get_HasDiagram) (THIS_ MsoTriState* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Diagram) (THIS_ IMsoDiagram** prop) PURE; 
	STDMETHOD_(HRESULT, Get_HasDiagramNode) (THIS_ MsoTriState* prop) PURE; 
	STDMETHOD_(HRESULT, Get_DiagramNode) (THIS_ DiagramNode** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Child) (THIS_ MsoTriState* prop) PURE; 
	STDMETHOD_(HRESULT, Get_ParentGroup) (THIS_ WordShape** prop) PURE; 
	STDMETHOD_(HRESULT, Get_CanvasItems) (THIS_ CanvasShapes** prop) PURE; 
	STDMETHOD_(HRESULT, Get_ID) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, CanvasCropLeft) (THIS_ float Increment) PURE; 
	STDMETHOD_(HRESULT, CanvasCropTop) (THIS_ float Increment) PURE; 
	STDMETHOD_(HRESULT, CanvasCropRight) (THIS_ float Increment) PURE; 
	STDMETHOD_(HRESULT, CanvasCropBottom) (THIS_ float Increment) PURE; 
	STDMETHOD_(HRESULT, Set_RTF) (THIS_ BSTR ) PURE; 
	STDMETHOD_(HRESULT, Get_LayoutInCell) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Set_LayoutInCell) (THIS_ long prop) PURE; 
};
typedef WordShape* LPHAPE;
#ifdef __cplusplus
// Shape  {000209A0-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TShapeProxy : public __OCF TAutoProxy
{
public:
	TShapeProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 8000]
	WordApplication* _Application();

	// Creator:   [dispid 8001]
	long Creator();

	// Parent:   [dispid 1]
	IDispatch* Parent();

	// _Adjustments:   [dispid 100]
	void _Adjustments(TAdjustmentsProxy& Obj);

	// AutoShapeType:   [dispid 101]
	MsoAutoShapeType AutoShapeType();

	// AutoShapeType:   [dispid 101]
	void AutoShapeType(MsoAutoShapeType arg0);

	// Callout:   [dispid 103]
	void Callout(TCalloutFormatProxy& Obj);

	// ConnectionSiteCount:   [dispid 104]
	long ConnectionSiteCount();

	// Connector:   [dispid 105]
	MsoTriState Connector();

	// _ConnectorFormat:   [dispid 106]
	void _ConnectorFormat(TConnectorFormatProxy& Obj);

	// Fill:   [dispid 107]
	void Fill(TFillFormatProxy& Obj);

	// GroupItems:   [dispid 108]
	void GroupItems(TGroupShapesProxy& Obj);

	// Height:   [dispid 109]
	float Height();

	// Height:   [dispid 109]
	void Height(float arg0);

	// HorizontalFlip:   [dispid 110]
	MsoTriState HorizontalFlip();

	// Left:   [dispid 111]
	float Left();

	// Left:   [dispid 111]
	void Left(float arg0);

	// Line:   [dispid 112]
	void Line(TLineFormatProxy& Obj);

	// LockAspectRatio:   [dispid 113]
	MsoTriState LockAspectRatio();

	// LockAspectRatio:   [dispid 113]
	void LockAspectRatio(MsoTriState arg0);

	// Name:   [dispid 115]
	__OCF TAutoString Name();

	// Name:   [dispid 115]
	void Name(__OCF TAutoString arg0);

	// Nodes:   [dispid 116]
	void Nodes(TShapeNodesProxy& Obj);

	// Rotation:   [dispid 117]
	float Rotation();

	// Rotation:   [dispid 117]
	void Rotation(float arg0);

	// _PictureFormat:   [dispid 118]
	void _PictureFormat(TPictureFormatProxy& Obj);

	// Shadow:   [dispid 119]
	void Shadow(TShadowFormatProxy& Obj);

	// TextEffect:   [dispid 120]
	void TextEffect(TTextEffectFormatProxy& Obj);

	// _TextFrame:   [dispid 121]
	void _TextFrame(TTextFrameProxy& Obj);

	// ThreeD:   [dispid 122]
	void ThreeD(TThreeDFormatProxy& Obj);

	// Top:   [dispid 123]
	float Top();

	// Top:   [dispid 123]
	void Top(float arg0);

	// Type:   [dispid 124]
	MsoShapeType Type();

	// VerticalFlip:   [dispid 125]
	MsoTriState VerticalFlip();

	// Vertices:   [dispid 126]
	__OCF TAutoVal Vertices();

	// Visible:   [dispid 127]
	MsoTriState Visible();

	// Visible:   [dispid 127]
	void Visible(MsoTriState arg0);

	// Width:   [dispid 128]
	float Width();

	// Width:   [dispid 128]
	void Width(float arg0);

	// ZOrderPosition:   [dispid 129]
	long ZOrderPosition();

	// _Hyperlink:   [dispid 1001]
	void _Hyperlink(THyperlinkProxy& Obj);

	// RelativeHorizontalPosition:   [dispid 300]
	WdRelativeHorizontalPosition RelativeHorizontalPosition();

	// RelativeHorizontalPosition:   [dispid 300]
	void RelativeHorizontalPosition(WdRelativeHorizontalPosition arg0);

	// RelativeVerticalPosition:   [dispid 301]
	WdRelativeVerticalPosition RelativeVerticalPosition();

	// RelativeVerticalPosition:   [dispid 301]
	void RelativeVerticalPosition(WdRelativeVerticalPosition arg0);

	// LockAnchor:   [dispid 302]
	long LockAnchor();

	// LockAnchor:   [dispid 302]
	void LockAnchor(long arg0);

	// _WrapFormat:   [dispid 303]
	void _WrapFormat(TWrapFormatProxy& Obj);

	// _OLEFormat:   [dispid 500]
	void _OLEFormat(TOLEFormatProxy& Obj);

	// Anchor:   [dispid 501]
	void Anchor(TRangeProxy& Obj);

	// _LinkFormat:   [dispid 502]
	void _LinkFormat(TLinkFormatProxy& Obj);

	// Apply:   [dispid 10]
	void Apply();

	// Delete:   [dispid 11]
	void Delete();

	// Duplicate:   [dispid 12]
	void Duplicate(TShapeProxy& Obj);

	// Flip:   [dispid 13]
	void Flip(MsoFlipCmd FlipCmd);

	// IncrementLeft:   [dispid 14]
	void IncrementLeft(float Increment);

	// IncrementRotation:   [dispid 15]
	void IncrementRotation(float Increment);

	// IncrementTop:   [dispid 16]
	void IncrementTop(float Increment);

	// PickUp:   [dispid 17]
	void PickUp();

	// RerouteConnections:   [dispid 18]
	void RerouteConnections();

	// ScaleHeight:   [dispid 19]
	void ScaleHeight(float Factor, MsoTriState RelativeToOriginalSize, MsoScaleFrom Scale);

	// ScaleWidth:   [dispid 20]
	void ScaleWidth(float Factor, MsoTriState RelativeToOriginalSize, MsoScaleFrom Scale);

	// Select:   [dispid 21]
	void Select(__OCF TAutoVal* Replace = 0);

	// SetShapesDefaultProperties:   [dispid 22]
	void SetShapesDefaultProperties();

	// Ungroup:   [dispid 23]
	void Ungroup(TShapeRangeProxy& Obj);

	// ZOrder:   [dispid 24]
	void ZOrder(MsoZOrderCmd ZOrderCmd);

	// ConvertToInlineShape:   [dispid 25]
	void ConvertToInlineShape(TInlineShapeProxy& Obj);

	// ConvertToFrame:   [dispid 29]
	void ConvertToFrame(TFrameProxy& Obj);

	// Activate:   [dispid 50]
	void Activate();

	// AlternativeText:   [dispid 131]
	__OCF TAutoString AlternativeText();

	// AlternativeText:   [dispid 131]
	void AlternativeText(__OCF TAutoString arg0);

	// _Script:   [dispid 503]
	void _Script(TScriptProxy& Obj);

	// HasDiagram:   [dispid 132]
	MsoTriState HasDiagram();

	// Diagram:   [dispid 133]
	void Diagram(TIMsoDiagramProxy& Obj);

	// HasDiagramNode:   [dispid 134]
	MsoTriState HasDiagramNode();

	// _DiagramNode:   [dispid 135]
	void _DiagramNode(TDiagramNodeProxy& Obj);

	// Child:   [dispid 136]
	MsoTriState Child();

	// ParentGroup:   [dispid 137]
	void ParentGroup(TShapeProxy& Obj);

	// CanvasItems:   [dispid 138]
	void CanvasItems(TCanvasShapesProxy& Obj);

	// ID:   [dispid 139]
	long ID();

	// CanvasCropLeft:   [dispid 140]
	void CanvasCropLeft(float Increment);

	// CanvasCropTop:   [dispid 141]
	void CanvasCropTop(float Increment);

	// CanvasCropRight:   [dispid 142]
	void CanvasCropRight(float Increment);

	// CanvasCropBottom:   [dispid 143]
	void CanvasCropBottom(float Increment);

	// RTF:   [dispid 144]
	void RTF(__OCF TAutoString arg0);

	// LayoutInCell:   [dispid 145]
	long LayoutInCell();

	// LayoutInCell:   [dispid 145]
	void LayoutInCell(long arg0);
};
#endif

// MsoAlignCmd
typedef enum tagMsoAlignCmd
{
	msoAlignLefts = 0, 
	msoAlignCenters = 1, 
	msoAlignRights = 2, 
	msoAlignTops = 3, 
	msoAlignMiddles = 4, 
	msoAlignBottoms = 5, 
} MsoAlignCmd;

// MsoDistributeCmd
typedef enum tagMsoDistributeCmd
{
	msoDistributeHorizontally = 0, 
	msoDistributeVertically = 1, 
} MsoDistributeCmd;

// ShapeRange
// {000209B5-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE ShapeRange
DECLARE_INTERFACE_(ShapeRange, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// ShapeRange methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Count) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get__NewEnum) (THIS_ IUnknown** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Adjustments) (THIS_ Adjustments** prop) PURE; 
	STDMETHOD_(HRESULT, Get_AutoShapeType) (THIS_ MsoAutoShapeType* prop) PURE; 
	STDMETHOD_(HRESULT, Set_AutoShapeType) (THIS_ MsoAutoShapeType prop) PURE; 
	STDMETHOD_(HRESULT, Get_Callout) (THIS_ CalloutFormat** prop) PURE; 
	STDMETHOD_(HRESULT, Get_ConnectionSiteCount) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Connector) (THIS_ MsoTriState* prop) PURE; 
	STDMETHOD_(HRESULT, Get_ConnectorFormat) (THIS_ ConnectorFormat** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Fill) (THIS_ FillFormat** prop) PURE; 
	STDMETHOD_(HRESULT, Get_GroupItems) (THIS_ GroupShapes** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Height) (THIS_ float* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Height) (THIS_ float prop) PURE; 
	STDMETHOD_(HRESULT, Get_HorizontalFlip) (THIS_ MsoTriState* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Left) (THIS_ float* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Left) (THIS_ float prop) PURE; 
	STDMETHOD_(HRESULT, Get_Line) (THIS_ LineFormat** prop) PURE; 
	STDMETHOD_(HRESULT, Get_LockAspectRatio) (THIS_ MsoTriState* prop) PURE; 
	STDMETHOD_(HRESULT, Set_LockAspectRatio) (THIS_ MsoTriState prop) PURE; 
	STDMETHOD_(HRESULT, Get_Name) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Name) (THIS_ BSTR prop) PURE; 
	STDMETHOD_(HRESULT, Get_Nodes) (THIS_ ShapeNodes** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Rotation) (THIS_ float* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Rotation) (THIS_ float prop) PURE; 
	STDMETHOD_(HRESULT, Get_PictureFormat) (THIS_ PictureFormat** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Shadow) (THIS_ ShadowFormat** prop) PURE; 
	STDMETHOD_(HRESULT, Get_TextEffect) (THIS_ TextEffectFormat** prop) PURE; 
	STDMETHOD_(HRESULT, Get_TextFrame) (THIS_ TextFrame** prop) PURE; 
	STDMETHOD_(HRESULT, Get_ThreeD) (THIS_ ThreeDFormat** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Top) (THIS_ float* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Top) (THIS_ float prop) PURE; 
	STDMETHOD_(HRESULT, Get_Type) (THIS_ MsoShapeType* prop) PURE; 
	STDMETHOD_(HRESULT, Get_VerticalFlip) (THIS_ MsoTriState* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Vertices) (THIS_ VARIANT* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Visible) (THIS_ MsoTriState* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Visible) (THIS_ MsoTriState prop) PURE; 
	STDMETHOD_(HRESULT, Get_Width) (THIS_ float* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Width) (THIS_ float prop) PURE; 
	STDMETHOD_(HRESULT, Get_ZOrderPosition) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Hyperlink) (THIS_ Hyperlink** prop) PURE; 
	STDMETHOD_(HRESULT, Get_RelativeHorizontalPosition) (THIS_ WdRelativeHorizontalPosition* prop) PURE; 
	STDMETHOD_(HRESULT, Set_RelativeHorizontalPosition) (THIS_ WdRelativeHorizontalPosition prop) PURE; 
	STDMETHOD_(HRESULT, Get_RelativeVerticalPosition) (THIS_ WdRelativeVerticalPosition* prop) PURE; 
	STDMETHOD_(HRESULT, Set_RelativeVerticalPosition) (THIS_ WdRelativeVerticalPosition prop) PURE; 
	STDMETHOD_(HRESULT, Get_LockAnchor) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Set_LockAnchor) (THIS_ long prop) PURE; 
	STDMETHOD_(HRESULT, Get_WrapFormat) (THIS_ WrapFormat** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Anchor) (THIS_ WordRange** prop) PURE; 
	STDMETHOD_(HRESULT, Item) (THIS_ VARIANT* , WordShape** prop) PURE; 
	STDMETHOD_(HRESULT, Align) (THIS_ MsoAlignCmd Align, long RelativeTo) PURE; 
	STDMETHOD_(HRESULT, Apply) (THIS ) PURE; 
	STDMETHOD_(HRESULT, Delete) (THIS ) PURE; 
	STDMETHOD_(HRESULT, Distribute) (THIS_ MsoDistributeCmd Distribute, long RelativeTo) PURE; 
	STDMETHOD_(HRESULT, Duplicate) (THIS_ ShapeRange** prop) PURE; 
	STDMETHOD_(HRESULT, Flip) (THIS_ MsoFlipCmd FlipCmd) PURE; 
	STDMETHOD_(HRESULT, IncrementLeft) (THIS_ float Increment) PURE; 
	STDMETHOD_(HRESULT, IncrementRotation) (THIS_ float Increment) PURE; 
	STDMETHOD_(HRESULT, IncrementTop) (THIS_ float Increment) PURE; 
	STDMETHOD_(HRESULT, Group) (THIS_ WordShape** prop) PURE; 
	STDMETHOD_(HRESULT, PickUp) (THIS ) PURE; 
	STDMETHOD_(HRESULT, Regroup) (THIS_ WordShape** prop) PURE; 
	STDMETHOD_(HRESULT, RerouteConnections) (THIS ) PURE; 
	STDMETHOD_(HRESULT, ScaleHeight) (THIS_ float Factor, MsoTriState RelativeToOriginalSize, MsoScaleFrom Scale) PURE; 
	STDMETHOD_(HRESULT, ScaleWidth) (THIS_ float Factor, MsoTriState RelativeToOriginalSize, MsoScaleFrom Scale) PURE; 
	STDMETHOD_(HRESULT, Select) (THIS_ VARIANT* Replace) PURE; 
	STDMETHOD_(HRESULT, SetShapesDefaultProperties) (THIS ) PURE; 
	STDMETHOD_(HRESULT, Ungroup) (THIS_ ShapeRange** prop) PURE; 
	STDMETHOD_(HRESULT, ZOrder) (THIS_ MsoZOrderCmd ZOrderCmd) PURE; 
	STDMETHOD_(HRESULT, ConvertToFrame) (THIS_ Frame** prop) PURE; 
	STDMETHOD_(HRESULT, ConvertToInlineShape) (THIS_ InlineShape** prop) PURE; 
	STDMETHOD_(HRESULT, Activate) (THIS ) PURE; 
	STDMETHOD_(HRESULT, Get_AlternativeText) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Set_AlternativeText) (THIS_ BSTR prop) PURE; 
	STDMETHOD_(HRESULT, Get_HasDiagram) (THIS_ MsoTriState* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Diagram) (THIS_ IMsoDiagram** prop) PURE; 
	STDMETHOD_(HRESULT, Get_HasDiagramNode) (THIS_ MsoTriState* prop) PURE; 
	STDMETHOD_(HRESULT, Get_DiagramNode) (THIS_ DiagramNode** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Child) (THIS_ MsoTriState* prop) PURE; 
	STDMETHOD_(HRESULT, Get_ParentGroup) (THIS_ WordShape** prop) PURE; 
	STDMETHOD_(HRESULT, Get_CanvasItems) (THIS_ CanvasShapes** prop) PURE; 
	STDMETHOD_(HRESULT, Get_ID) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, CanvasCropLeft) (THIS_ float Increment) PURE; 
	STDMETHOD_(HRESULT, CanvasCropTop) (THIS_ float Increment) PURE; 
	STDMETHOD_(HRESULT, CanvasCropRight) (THIS_ float Increment) PURE; 
	STDMETHOD_(HRESULT, CanvasCropBottom) (THIS_ float Increment) PURE; 
	STDMETHOD_(HRESULT, Set_RTF) (THIS_ BSTR ) PURE; 
	STDMETHOD_(HRESULT, Get_LayoutInCell) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Set_LayoutInCell) (THIS_ long prop) PURE; 
};
typedef ShapeRange* LPHAPERANGE;
#ifdef __cplusplus
// ShapeRange  {000209B5-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TShapeRangeProxy : public __OCF TAutoProxy
{
public:
	TShapeRangeProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 8000]
	WordApplication* _Application();

	// Creator:   [dispid 8001]
	long Creator();

	// Parent:   [dispid 1]
	IDispatch* Parent();

	// Count:   [dispid 2]
	long Count();

	// _NewEnum:   [dispid -4]
	void _NewEnum(__OCF TAutoEnumerator<IUnknown*>& Obj);

	// _Adjustments:   [dispid 100]
	void _Adjustments(TAdjustmentsProxy& Obj);

	// AutoShapeType:   [dispid 101]
	MsoAutoShapeType AutoShapeType();

	// AutoShapeType:   [dispid 101]
	void AutoShapeType(MsoAutoShapeType arg0);

	// Callout:   [dispid 103]
	void Callout(TCalloutFormatProxy& Obj);

	// ConnectionSiteCount:   [dispid 104]
	long ConnectionSiteCount();

	// Connector:   [dispid 105]
	MsoTriState Connector();

	// _ConnectorFormat:   [dispid 106]
	void _ConnectorFormat(TConnectorFormatProxy& Obj);

	// Fill:   [dispid 107]
	void Fill(TFillFormatProxy& Obj);

	// GroupItems:   [dispid 108]
	void GroupItems(TGroupShapesProxy& Obj);

	// Height:   [dispid 109]
	float Height();

	// Height:   [dispid 109]
	void Height(float arg0);

	// HorizontalFlip:   [dispid 110]
	MsoTriState HorizontalFlip();

	// Left:   [dispid 111]
	float Left();

	// Left:   [dispid 111]
	void Left(float arg0);

	// Line:   [dispid 112]
	void Line(TLineFormatProxy& Obj);

	// LockAspectRatio:   [dispid 113]
	MsoTriState LockAspectRatio();

	// LockAspectRatio:   [dispid 113]
	void LockAspectRatio(MsoTriState arg0);

	// Name:   [dispid 115]
	__OCF TAutoString Name();

	// Name:   [dispid 115]
	void Name(__OCF TAutoString arg0);

	// Nodes:   [dispid 116]
	void Nodes(TShapeNodesProxy& Obj);

	// Rotation:   [dispid 117]
	float Rotation();

	// Rotation:   [dispid 117]
	void Rotation(float arg0);

	// _PictureFormat:   [dispid 118]
	void _PictureFormat(TPictureFormatProxy& Obj);

	// Shadow:   [dispid 119]
	void Shadow(TShadowFormatProxy& Obj);

	// TextEffect:   [dispid 120]
	void TextEffect(TTextEffectFormatProxy& Obj);

	// _TextFrame:   [dispid 121]
	void _TextFrame(TTextFrameProxy& Obj);

	// ThreeD:   [dispid 122]
	void ThreeD(TThreeDFormatProxy& Obj);

	// Top:   [dispid 123]
	float Top();

	// Top:   [dispid 123]
	void Top(float arg0);

	// Type:   [dispid 124]
	MsoShapeType Type();

	// VerticalFlip:   [dispid 125]
	MsoTriState VerticalFlip();

	// Vertices:   [dispid 126]
	__OCF TAutoVal Vertices();

	// Visible:   [dispid 127]
	MsoTriState Visible();

	// Visible:   [dispid 127]
	void Visible(MsoTriState arg0);

	// Width:   [dispid 128]
	float Width();

	// Width:   [dispid 128]
	void Width(float arg0);

	// ZOrderPosition:   [dispid 129]
	long ZOrderPosition();

	// _Hyperlink:   [dispid 1001]
	void _Hyperlink(THyperlinkProxy& Obj);

	// RelativeHorizontalPosition:   [dispid 300]
	WdRelativeHorizontalPosition RelativeHorizontalPosition();

	// RelativeHorizontalPosition:   [dispid 300]
	void RelativeHorizontalPosition(WdRelativeHorizontalPosition arg0);

	// RelativeVerticalPosition:   [dispid 301]
	WdRelativeVerticalPosition RelativeVerticalPosition();

	// RelativeVerticalPosition:   [dispid 301]
	void RelativeVerticalPosition(WdRelativeVerticalPosition arg0);

	// LockAnchor:   [dispid 302]
	long LockAnchor();

	// LockAnchor:   [dispid 302]
	void LockAnchor(long arg0);

	// _WrapFormat:   [dispid 303]
	void _WrapFormat(TWrapFormatProxy& Obj);

	// Anchor:   [dispid 304]
	void Anchor(TRangeProxy& Obj);

	// Item:   [dispid 0]
	void Item(TShapeProxy& Obj, __OCF TAutoVal* arg0);

	// Align:   [dispid 10]
	void Align(MsoAlignCmd Align, long RelativeTo);

	// Apply:   [dispid 11]
	void Apply();

	// Delete:   [dispid 12]
	void Delete();

	// Distribute:   [dispid 13]
	void Distribute(MsoDistributeCmd Distribute, long RelativeTo);

	// Duplicate:   [dispid 14]
	void Duplicate(TShapeRangeProxy& Obj);

	// Flip:   [dispid 15]
	void Flip(MsoFlipCmd FlipCmd);

	// IncrementLeft:   [dispid 16]
	void IncrementLeft(float Increment);

	// IncrementRotation:   [dispid 17]
	void IncrementRotation(float Increment);

	// IncrementTop:   [dispid 18]
	void IncrementTop(float Increment);

	// Group:   [dispid 19]
	void Group(TShapeProxy& Obj);

	// PickUp:   [dispid 20]
	void PickUp();

	// Regroup:   [dispid 21]
	void Regroup(TShapeProxy& Obj);

	// RerouteConnections:   [dispid 22]
	void RerouteConnections();

	// ScaleHeight:   [dispid 23]
	void ScaleHeight(float Factor, MsoTriState RelativeToOriginalSize, MsoScaleFrom Scale);

	// ScaleWidth:   [dispid 24]
	void ScaleWidth(float Factor, MsoTriState RelativeToOriginalSize, MsoScaleFrom Scale);

	// Select:   [dispid 25]
	void Select(__OCF TAutoVal* Replace = 0);

	// SetShapesDefaultProperties:   [dispid 26]
	void SetShapesDefaultProperties();

	// Ungroup:   [dispid 27]
	void Ungroup(TShapeRangeProxy& Obj);

	// ZOrder:   [dispid 28]
	void ZOrder(MsoZOrderCmd ZOrderCmd);

	// ConvertToFrame:   [dispid 29]
	void ConvertToFrame(TFrameProxy& Obj);

	// ConvertToInlineShape:   [dispid 30]
	void ConvertToInlineShape(TInlineShapeProxy& Obj);

	// Activate:   [dispid 50]
	void Activate();

	// AlternativeText:   [dispid 131]
	__OCF TAutoString AlternativeText();

	// AlternativeText:   [dispid 131]
	void AlternativeText(__OCF TAutoString arg0);

	// HasDiagram:   [dispid 132]
	MsoTriState HasDiagram();

	// Diagram:   [dispid 133]
	void Diagram(TIMsoDiagramProxy& Obj);

	// HasDiagramNode:   [dispid 134]
	MsoTriState HasDiagramNode();

	// _DiagramNode:   [dispid 135]
	void _DiagramNode(TDiagramNodeProxy& Obj);

	// Child:   [dispid 136]
	MsoTriState Child();

	// ParentGroup:   [dispid 137]
	void ParentGroup(TShapeProxy& Obj);

	// CanvasItems:   [dispid 138]
	void CanvasItems(TCanvasShapesProxy& Obj);

	// ID:   [dispid 139]
	long ID();

	// CanvasCropLeft:   [dispid 140]
	void CanvasCropLeft(float Increment);

	// CanvasCropTop:   [dispid 141]
	void CanvasCropTop(float Increment);

	// CanvasCropRight:   [dispid 142]
	void CanvasCropRight(float Increment);

	// CanvasCropBottom:   [dispid 143]
	void CanvasCropBottom(float Increment);

	// RTF:   [dispid 144]
	void RTF(__OCF TAutoString arg0);

	// LayoutInCell:   [dispid 145]
	long LayoutInCell();

	// LayoutInCell:   [dispid 145]
	void LayoutInCell(long arg0);
};
#endif

// MsoCalloutType
typedef enum tagMsoCalloutType
{
	msoCalloutMixed = -2, 
	msoCalloutOne = 1, 
	msoCalloutTwo = 2, 
	msoCalloutThree = 3, 
	msoCalloutFour = 4, 
} MsoCalloutType;

// MsoConnectorType
typedef enum tagMsoConnectorType
{
	msoConnectorTypeMixed = -2, 
	msoConnectorStraight = 1, 
	msoConnectorElbow = 2, 
	msoConnectorCurve = 3, 
} MsoConnectorType;

// MsoTextOrientation
typedef enum tagMsoTextOrientation
{
	msoTextOrientationMixed = -2, 
	msoTextOrientationHorizontal = 1, 
	msoTextOrientationUpward = 2, 
	msoTextOrientationDownward = 3, 
	msoTextOrientationVerticalFarEast = 4, 
	msoTextOrientationVertical = 5, 
	msoTextOrientationHorizontalRotatedFarEast = 6, 
} MsoTextOrientation;

// MsoPresetTextEffect
typedef enum tagMsoPresetTextEffect
{
	msoTextEffectMixed = -2, 
	msoTextEffect1 = 0, 
	msoTextEffect2 = 1, 
	msoTextEffect3 = 2, 
	msoTextEffect4 = 3, 
	msoTextEffect5 = 4, 
	msoTextEffect6 = 5, 
	msoTextEffect7 = 6, 
	msoTextEffect8 = 7, 
	msoTextEffect9 = 8, 
	msoTextEffect10 = 9, 
	msoTextEffect11 = 10, 
	msoTextEffect12 = 11, 
	msoTextEffect13 = 12, 
	msoTextEffect14 = 13, 
	msoTextEffect15 = 14, 
	msoTextEffect16 = 15, 
	msoTextEffect17 = 16, 
	msoTextEffect18 = 17, 
	msoTextEffect19 = 18, 
	msoTextEffect20 = 19, 
	msoTextEffect21 = 20, 
	msoTextEffect22 = 21, 
	msoTextEffect23 = 22, 
	msoTextEffect24 = 23, 
	msoTextEffect25 = 24, 
	msoTextEffect26 = 25, 
	msoTextEffect27 = 26, 
	msoTextEffect28 = 27, 
	msoTextEffect29 = 28, 
	msoTextEffect30 = 29, 
} MsoPresetTextEffect;

// MsoEditingType
typedef enum tagMsoEditingType
{
	msoEditingAuto = 0, 
	msoEditingCorner = 1, 
	msoEditingSmooth = 2, 
	msoEditingSymmetric = 3, 
} MsoEditingType;

// MsoDiagramType
typedef enum tagMsoDiagramType
{
	msoDiagramMixed = -2, 
	msoDiagramOrgChart = 1, 
	msoDiagramCycle = 2, 
	msoDiagramRadial = 3, 
	msoDiagramPyramid = 4, 
	msoDiagramVenn = 5, 
	msoDiagramTarget = 6, 
} MsoDiagramType;

// Shapes
// {0002099F-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE Shapes
DECLARE_INTERFACE_(Shapes, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// Shapes methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Count) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get__NewEnum) (THIS_ IUnknown** prop) PURE; 
	STDMETHOD_(HRESULT, Item) (THIS_ VARIANT* , WordShape** prop) PURE; 
	STDMETHOD_(HRESULT, AddCallout) (THIS_ MsoCalloutType Type, float Left, float Top, float Width, float Height, VARIANT* Anchor, WordShape** prop) PURE; 
	STDMETHOD_(HRESULT, AddConnector) (THIS_ MsoConnectorType Type, float BeginX, float BeginY, float EndX, float EndY, WordShape** prop) PURE; 
	STDMETHOD_(HRESULT, AddCurve) (THIS_ VARIANT* SafeArrayOfPoints, VARIANT* Anchor, WordShape** prop) PURE; 
	STDMETHOD_(HRESULT, AddLabel) (THIS_ MsoTextOrientation Orientation, float Left, float Top, float Width, float Height, VARIANT* Anchor, WordShape** prop) PURE; 
	STDMETHOD_(HRESULT, AddLine) (THIS_ float BeginX, float BeginY, float EndX, float EndY, VARIANT* Anchor, WordShape** prop) PURE; 
	STDMETHOD_(HRESULT, AddPicture) (THIS_ BSTR FileName, VARIANT* LinkToFile, VARIANT* SaveWithDocument, VARIANT* Left, VARIANT* Top, VARIANT* Width, VARIANT* Height, VARIANT* Anchor, WordShape** prop) PURE; 
	STDMETHOD_(HRESULT, AddPolyline) (THIS_ VARIANT* SafeArrayOfPoints, VARIANT* Anchor, WordShape** prop) PURE; 
	STDMETHOD_(HRESULT, AddShape) (THIS_ long Type, float Left, float Top, float Width, float Height, VARIANT* Anchor, WordShape** prop) PURE; 
	STDMETHOD_(HRESULT, AddTextEffect) (THIS_ MsoPresetTextEffect PresetTextEffect, BSTR Text, BSTR , float , MsoTriState , MsoTriState , float Left, float Top, VARIANT* Anchor, WordShape** prop) PURE; 
	STDMETHOD_(HRESULT, AddTextbox) (THIS_ MsoTextOrientation Orientation, float Left, float Top, float Width, float Height, VARIANT* Anchor, WordShape** prop) PURE; 
	STDMETHOD_(HRESULT, BuildFreeform) (THIS_ MsoEditingType EditingType, float X1, float Y1, FreeformBuilder** prop) PURE; 
	STDMETHOD_(HRESULT, WordRange) (THIS_ VARIANT* , ShapeRange** prop) PURE; 
	STDMETHOD_(HRESULT, SelectAll) (THIS ) PURE; 
	STDMETHOD_(HRESULT, AddOLEObject) (THIS_ VARIANT* ClassType, VARIANT* FileName, VARIANT* LinkToFile, VARIANT* DisplayAsIcon, VARIANT* IconFileName, VARIANT* IconIndex, VARIANT* IconLabel, VARIANT* Left, VARIANT* Top, VARIANT* Width, VARIANT* Height, VARIANT* Anchor, WordShape** prop) PURE; 
	STDMETHOD_(HRESULT, AddOLEControl) (THIS_ VARIANT* ClassType, VARIANT* Left, VARIANT* Top, VARIANT* Width, VARIANT* Height, VARIANT* Anchor, WordShape** prop) PURE; 
	STDMETHOD_(HRESULT, AddDiagram) (THIS_ MsoDiagramType Type, float Left, float Top, float Width, float Height, VARIANT* Anchor, WordShape** prop) PURE; 
	STDMETHOD_(HRESULT, AddCanvas) (THIS_ float Left, float Top, float Width, float Height, VARIANT* Anchor, WordShape** prop) PURE; 
};
typedef Shapes* LPHAPES;
#ifdef __cplusplus
// Shapes  {0002099F-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TShapesProxy : public __OCF TAutoProxy
{
public:
	TShapesProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 8000]
	WordApplication* _Application();

	// Creator:   [dispid 8001]
	long Creator();

	// Parent:   [dispid 1]
	IDispatch* Parent();

	// Count:   [dispid 2]
	long Count();

	// _NewEnum:   [dispid -4]
	void _NewEnum(__OCF TAutoEnumerator<IUnknown*>& Obj);

	// Item:   [dispid 0]
	void Item(TShapeProxy& Obj, __OCF TAutoVal* arg0);

	// AddCallout:   [dispid 10]
	void AddCallout(TShapeProxy& Obj, MsoCalloutType Type, float Left, float Top, float Width, float Height, __OCF TAutoVal* Anchor = 0);

	// AddConnector:   [dispid 11]
	void AddConnector(TShapeProxy& Obj, MsoConnectorType Type, float BeginX, float BeginY, float EndX, float EndY);

	// AddCurve:   [dispid 12]
	void AddCurve(TShapeProxy& Obj, __OCF TAutoVal* SafeArrayOfPoints, __OCF TAutoVal* Anchor = 0);

	// AddLabel:   [dispid 13]
	void AddLabel(TShapeProxy& Obj, MsoTextOrientation Orientation, float Left, float Top, float Width, float Height, __OCF TAutoVal* Anchor = 0);

	// AddLine:   [dispid 14]
	void AddLine(TShapeProxy& Obj, float BeginX, float BeginY, float EndX, float EndY, __OCF TAutoVal* Anchor = 0);

	// AddPicture:   [dispid 15]
	void AddPicture(TShapeProxy& Obj, __OCF TAutoString FileName, __OCF TAutoVal* LinkToFile = 0, __OCF TAutoVal* SaveWithDocument = 0, __OCF TAutoVal* Left = 0, __OCF TAutoVal* Top = 0, __OCF TAutoVal* Width = 0, __OCF TAutoVal* Height = 0, __OCF TAutoVal* Anchor = 0);

	// AddPolyline:   [dispid 16]
	void AddPolyline(TShapeProxy& Obj, __OCF TAutoVal* SafeArrayOfPoints, __OCF TAutoVal* Anchor = 0);

	// AddShape:   [dispid 17]
	void AddShape(TShapeProxy& Obj, long Type, float Left, float Top, float Width, float Height, __OCF TAutoVal* Anchor = 0);

	// AddTextEffect:   [dispid 18]
	void AddTextEffect(TShapeProxy& Obj, MsoPresetTextEffect PresetTextEffect, __OCF TAutoString Text, __OCF TAutoString arg2, float arg3, MsoTriState arg4, MsoTriState arg5, float Left, float Top, __OCF TAutoVal* Anchor = 0);

	// AddTextbox:   [dispid 19]
	void AddTextbox(TShapeProxy& Obj, MsoTextOrientation Orientation, float Left, float Top, float Width, float Height, __OCF TAutoVal* Anchor = 0);

	// BuildFreeform:   [dispid 20]
	void BuildFreeform(TFreeformBuilderProxy& Obj, MsoEditingType EditingType, float X1, float Y1);

	// _Range:   [dispid 21]
	void _Range(TShapeRangeProxy& Obj, __OCF TAutoVal* arg0);

	// SelectAll:   [dispid 22]
	void SelectAll();

	// AddOLEObject:   [dispid 24]
	void AddOLEObject(TShapeProxy& Obj, __OCF TAutoVal* ClassType = 0, __OCF TAutoVal* FileName = 0, __OCF TAutoVal* LinkToFile = 0, __OCF TAutoVal* DisplayAsIcon = 0, __OCF TAutoVal* IconFileName = 0, __OCF TAutoVal* IconIndex = 0, __OCF TAutoVal* IconLabel = 0, __OCF TAutoVal* Left = 0, __OCF TAutoVal* Top = 0, __OCF TAutoVal* Width = 0, __OCF TAutoVal* Height = 0, __OCF TAutoVal* Anchor = 0);

	// AddOLEControl:   [dispid 102]
	void AddOLEControl(TShapeProxy& Obj, __OCF TAutoVal* ClassType = 0, __OCF TAutoVal* Left = 0, __OCF TAutoVal* Top = 0, __OCF TAutoVal* Width = 0, __OCF TAutoVal* Height = 0, __OCF TAutoVal* Anchor = 0);

	// AddDiagram:   [dispid 23]
	void AddDiagram(TShapeProxy& Obj, MsoDiagramType Type, float Left, float Top, float Width, float Height, __OCF TAutoVal* Anchor = 0);

	// AddCanvas:   [dispid 25]
	void AddCanvas(TShapeProxy& Obj, float Left, float Top, float Width, float Height, __OCF TAutoVal* Anchor = 0);
};
#endif

// SharedWorkspace
// {000C0385-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE SharedWorkspace
DECLARE_INTERFACE_(SharedWorkspace, _IMsoDispObj)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
	// _IMsoDispObj methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ IDispatch** ppidisp) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* plCreator) PURE; 
#endif
	// SharedWorkspace methods:
	STDMETHOD_(HRESULT, Get_Name) (THIS_ BSTR* Name) PURE; 
	STDMETHOD_(HRESULT, Set_Name) (THIS_ BSTR Name) PURE; 
	STDMETHOD_(HRESULT, Get_Members) (THIS_ SharedWorkspaceMembers** ppMembers) PURE; 
	STDMETHOD_(HRESULT, Get_Tasks) (THIS_ SharedWorkspaceTasks** ppTasks) PURE; 
	STDMETHOD_(HRESULT, Get_Files) (THIS_ SharedWorkspaceFiles** ppFiles) PURE; 
	STDMETHOD_(HRESULT, Get_Folders) (THIS_ SharedWorkspaceFolders** ppFolders) PURE; 
	STDMETHOD_(HRESULT, Get_Links) (THIS_ SharedWorkspaceLinks** ppLinks) PURE; 
	STDMETHOD_(HRESULT, Refresh) (THIS ) PURE; 
	STDMETHOD_(HRESULT, CreateNew) (THIS_ VARIANT URL, VARIANT Name) PURE; 
	STDMETHOD_(HRESULT, Delete) (THIS ) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** ppidisp) PURE; 
	STDMETHOD_(HRESULT, Get_URL) (THIS_ BSTR* pbstrUrl) PURE; 
	STDMETHOD_(HRESULT, Get_Connected) (THIS_ VARIANT_BOOL* pfConnected) PURE; 
	STDMETHOD_(HRESULT, Get_LastRefreshed) (THIS_ VARIANT* pvarLastRefreshed) PURE; 
	STDMETHOD_(HRESULT, Get_SourceURL) (THIS_ BSTR* pbstrSourceURL) PURE; 
	STDMETHOD_(HRESULT, Set_SourceURL) (THIS_ BSTR pbstrSourceURL) PURE; 
	STDMETHOD_(HRESULT, RemoveDocument) (THIS ) PURE; 
	STDMETHOD_(HRESULT, Disconnect) (THIS ) PURE; 
};
typedef SharedWorkspace* LPHAREDWORKSPACE;
#ifdef __cplusplus
// SharedWorkspace  {000C0385-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TSharedWorkspaceProxy : public __OCF TAutoProxy
{
public:
	TSharedWorkspaceProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1610743808]
	IDispatch* _Application();

	// Creator:   [dispid 1610743809]
	long Creator();

	// Name:   [dispid 0]
	__OCF TAutoString Name();

	// Name:   [dispid 0]
	void Name(__OCF TAutoString arg0);

	// Members:   [dispid 1]
	void Members(TSharedWorkspaceMembersProxy& Obj);

	// _Tasks:   [dispid 2]
	void _Tasks(TSharedWorkspaceTasksProxy& Obj);

	// Files:   [dispid 3]
	void Files(TSharedWorkspaceFilesProxy& Obj);

	// Folders:   [dispid 4]
	void Folders(TSharedWorkspaceFoldersProxy& Obj);

	// Links:   [dispid 5]
	void Links(TSharedWorkspaceLinksProxy& Obj);

	// Refresh:   [dispid 6]
	void Refresh();

	// CreateNew:   [dispid 7]
	void CreateNew(__OCF TAutoVal URL = __OCF TNoArg(), __OCF TAutoVal Name = __OCF TNoArg());

	// Delete:   [dispid 8]
	void Delete();

	// Parent:   [dispid 9]
	IDispatch* Parent();

	// URL:   [dispid 10]
	__OCF TAutoString URL();

	// Connected:   [dispid 11]
	/*__OWL*/ TBool Connected();

	// LastRefreshed:   [dispid 12]
	__OCF TAutoVal LastRefreshed();

	// SourceURL:   [dispid 13]
	__OCF TAutoString SourceURL();

	// SourceURL:   [dispid 13]
	void SourceURL(__OCF TAutoString arg0);

	// RemoveDocument:   [dispid 14]
	void RemoveDocument();

	// Disconnect:   [dispid 15]
	void Disconnect();
};
#endif

// SharedWorkspaceTasks
// {000C037A-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE SharedWorkspaceTasks
DECLARE_INTERFACE_(SharedWorkspaceTasks, _IMsoDispObj)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
	// _IMsoDispObj methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ IDispatch** ppidisp) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* plCreator) PURE; 
#endif
	// SharedWorkspaceTasks methods:
	STDMETHOD_(HRESULT, Get_Item) (THIS_ int , SharedWorkspaceTask** ppidisp) PURE; 
	STDMETHOD_(HRESULT, Get_Count) (THIS_ int* pcItems) PURE; 
	STDMETHOD_(HRESULT, Add) (THIS_ BSTR Title, VARIANT Status, VARIANT Priority, VARIANT Assignee, VARIANT Description, VARIANT DueDate, SharedWorkspaceTask** ppTask) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** ppidisp) PURE; 
	STDMETHOD_(HRESULT, Get_ItemCountExceeded) (THIS_ VARIANT_BOOL* pf) PURE; 
	STDMETHOD_(HRESULT, Get__NewEnum) (THIS_ IUnknown** ppienum) PURE; 
};
typedef SharedWorkspaceTasks* LPHAREDWORKSPACETASKS;
#ifdef __cplusplus
// SharedWorkspaceTasks  {000C037A-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TSharedWorkspaceTasksProxy : public __OCF TAutoProxy
{
public:
	TSharedWorkspaceTasksProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1610743808]
	IDispatch* _Application();

	// Creator:   [dispid 1610743809]
	long Creator();

	// Item:   [dispid 0]
	void Item(TSharedWorkspaceTaskProxy& Obj, int arg0);

	// Count:   [dispid 1]
	int Count();

	// Add:   [dispid 2]
	void Add(TSharedWorkspaceTaskProxy& Obj, __OCF TAutoString Title, __OCF TAutoVal Status = __OCF TNoArg(), __OCF TAutoVal Priority = __OCF TNoArg(), __OCF TAutoVal Assignee = __OCF TNoArg(), __OCF TAutoVal Description = __OCF TNoArg(), __OCF TAutoVal DueDate = __OCF TNoArg());

	// Parent:   [dispid 3]
	IDispatch* Parent();

	// ItemCountExceeded:   [dispid 4]
	/*__OWL*/ TBool ItemCountExceeded();

	// _NewEnum:   [dispid -4]
	void _NewEnum(__OCF TAutoEnumerator<IUnknown*>& Obj);
};
#endif

// SignatureSet
// {000C0410-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE SignatureSet
DECLARE_INTERFACE_(SignatureSet, _IMsoDispObj)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
	// _IMsoDispObj methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ IDispatch** ppidisp) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* plCreator) PURE; 
#endif
	// SignatureSet methods:
	STDMETHOD_(HRESULT, Get__NewEnum) (THIS_ IUnknown** ppienum) PURE; 
	STDMETHOD_(HRESULT, Get_Count) (THIS_ int* pcSig) PURE; 
	STDMETHOD_(HRESULT, Get_Item) (THIS_ int iSig, Signature** ppidisp) PURE; 
	STDMETHOD_(HRESULT, Add) (THIS_ Signature** ppidisp) PURE; 
	STDMETHOD_(HRESULT, Commit) (THIS ) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** ppidisp) PURE; 
};
typedef SignatureSet* LPIGNATURESET;
#ifdef __cplusplus
// SignatureSet  {000C0410-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TSignatureSetProxy : public __OCF TAutoProxy
{
public:
	TSignatureSetProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1610743808]
	IDispatch* _Application();

	// Creator:   [dispid 1610743809]
	long Creator();

	// _NewEnum:   [dispid -4]
	void _NewEnum(__OCF TAutoEnumerator<IUnknown*>& Obj);

	// Count:   [dispid 1610809345]
	int Count();

	// Item:   [dispid 0]
	void Item(TSignatureProxy& Obj, int iSig);

	// Add:   [dispid 1610809347]
	void Add(TSignatureProxy& Obj);

	// Commit:   [dispid 1610809348]
	void Commit();

	// Parent:   [dispid 1610809349]
	IDispatch* Parent();
};
#endif

// SmartDocument
// {000C0377-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE SmartDocument
DECLARE_INTERFACE_(SmartDocument, _IMsoDispObj)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
	// _IMsoDispObj methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ IDispatch** ppidisp) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* plCreator) PURE; 
#endif
	// SmartDocument methods:
	STDMETHOD_(HRESULT, Get_SolutionID) (THIS_ BSTR* pbstrID) PURE; 
	STDMETHOD_(HRESULT, Set_SolutionID) (THIS_ BSTR pbstrID) PURE; 
	STDMETHOD_(HRESULT, Get_SolutionURL) (THIS_ BSTR* pbstrUrl) PURE; 
	STDMETHOD_(HRESULT, Set_SolutionURL) (THIS_ BSTR pbstrUrl) PURE; 
	STDMETHOD_(HRESULT, PickSolution) (THIS_ VARIANT_BOOL ConsiderAllSchemas) PURE; 
	STDMETHOD_(HRESULT, RefreshPane) (THIS ) PURE; 
};
typedef SmartDocument* LPMARTDOCUMENT;
#ifdef __cplusplus
// SmartDocument  {000C0377-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TSmartDocumentProxy : public __OCF TAutoProxy
{
public:
	TSmartDocumentProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1610743808]
	IDispatch* _Application();

	// Creator:   [dispid 1610743809]
	long Creator();

	// SolutionID:   [dispid 1]
	__OCF TAutoString SolutionID();

	// SolutionID:   [dispid 1]
	void SolutionID(__OCF TAutoString arg0);

	// SolutionURL:   [dispid 2]
	__OCF TAutoString SolutionURL();

	// SolutionURL:   [dispid 2]
	void SolutionURL(__OCF TAutoString arg0);

	// PickSolution:   [dispid 3]
	void PickSolution(/*__OWL*/ TBool ConsiderAllSchemas);

	// RefreshPane:   [dispid 4]
	void RefreshPane();
};
#endif

// SmartTagRecognizers
// {F2B60A10-DED5-46FB-A914-3C6F4EBB6451}
#undef INTERFACE
#define INTERFACE SmartTagRecognizers
DECLARE_INTERFACE_(SmartTagRecognizers, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// SmartTagRecognizers methods:
	STDMETHOD_(HRESULT, Get__NewEnum) (THIS_ IUnknown** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Count) (THIS_ long* prop) PURE;
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE;
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Item) (THIS_ VARIANT* , SmartTagRecognizer** prop) PURE; 
	STDMETHOD_(HRESULT, ReloadRecognizers) (THIS ) PURE; 
};
typedef SmartTagRecognizers* LPMARTTAGRECOGNIZERS;
#ifdef __cplusplus
// SmartTagRecognizers  {F2B60A10-DED5-46FB-A914-3C6F4EBB6451}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TSmartTagRecognizersProxy : public __OCF TAutoProxy
{
public:
	TSmartTagRecognizersProxy() : TAutoProxy(0x0) {}

	// _NewEnum:   [dispid -4]
	void _NewEnum(__OCF TAutoEnumerator<IUnknown*>& Obj);

	// Count:   [dispid 2]
	long Count();

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// Item:   [dispid 0]
	void Item(TSmartTagRecognizerProxy& Obj, __OCF TAutoVal* arg0);

	// ReloadRecognizers:   [dispid 1003]
	void ReloadRecognizers();
};
#endif

// SmartTags
// {000209EE-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE SmartTags
DECLARE_INTERFACE_(SmartTags, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// SmartTags methods:
	STDMETHOD_(HRESULT, Get__NewEnum) (THIS_ IUnknown** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Count) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Item) (THIS_ VARIANT* , SmartTag** prop) PURE; 
	STDMETHOD_(HRESULT, Add) (THIS_ BSTR Name, VARIANT* , VARIANT* Properties, SmartTag** prop) PURE; 
	STDMETHOD_(HRESULT, SmartTagsByType) (THIS_ BSTR Name, SmartTags** prop) PURE; 
};
typedef SmartTags* LPMARTTAGS;
#ifdef __cplusplus
// SmartTags  {000209EE-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TSmartTagsProxy : public __OCF TAutoProxy
{
public:
	TSmartTagsProxy() : TAutoProxy(0x0) {}

	// _NewEnum:   [dispid -4]
	void _NewEnum(__OCF TAutoEnumerator<IUnknown*>& Obj);

	// Count:   [dispid 2]
	long Count();

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// Item:   [dispid 0]
	void Item(TSmartTagProxy& Obj, __OCF TAutoVal* arg0);

	// Add:   [dispid 5]
	void Add(TSmartTagProxy& Obj, __OCF TAutoString Name, __OCF TAutoVal* arg1 = 0, __OCF TAutoVal* Properties = 0);

	// SmartTagsByType:   [dispid 1003]
	void SmartTagsByType(TSmartTagsProxy& Obj, __OCF TAutoString Name);
};
#endif

// SmartTagTypes
// {DB8E3072-E106-4453-8E7C-53056F1D30DC}
#undef INTERFACE
#define INTERFACE SmartTagTypes
DECLARE_INTERFACE_(SmartTagTypes, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// SmartTagTypes methods:
	STDMETHOD_(HRESULT, Get__NewEnum) (THIS_ IUnknown** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Count) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Item) (THIS_ VARIANT* , SmartTagType** prop) PURE; 
	STDMETHOD_(HRESULT, ReloadAll) (THIS ) PURE; 
};
typedef SmartTagTypes* LPMARTTAGTYPES;
#ifdef __cplusplus
// SmartTagTypes  {DB8E3072-E106-4453-8E7C-53056F1D30DC}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TSmartTagTypesProxy : public __OCF TAutoProxy
{
public:
	TSmartTagTypesProxy() : TAutoProxy(0x0) {}

	// _NewEnum:   [dispid -4]
	void _NewEnum(__OCF TAutoEnumerator<IUnknown*>& Obj);

	// Count:   [dispid 2]
	long Count();

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// Item:   [dispid 0]
	void Item(TSmartTagTypeProxy& Obj, __OCF TAutoVal* arg0);

	// ReloadAll:   [dispid 1003]
	void ReloadAll();
};
#endif

// WdSpellingErrorType
typedef enum tagWdSpellingErrorType
{
	wdSpellingCorrect = 0, 
	wdSpellingNotInDictionary = 1, 
	wdSpellingCapitalization = 2, 
} WdSpellingErrorType;

// SpellingSuggestions
// {000209AA-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE SpellingSuggestions
DECLARE_INTERFACE_(SpellingSuggestions, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// SpellingSuggestions methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get__NewEnum) (THIS_ IUnknown** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Count) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_SpellingErrorType) (THIS_ WdSpellingErrorType* prop) PURE; 
	STDMETHOD_(HRESULT, Item) (THIS_ long , SpellingSuggestion** prop) PURE; 
};
typedef SpellingSuggestions* LPPELLINGSUGGESTIONS;
#ifdef __cplusplus
// SpellingSuggestions  {000209AA-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TSpellingSuggestionsProxy : public __OCF TAutoProxy
{
public:
	TSpellingSuggestionsProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// _NewEnum:   [dispid -4]
	void _NewEnum(__OCF TAutoEnumerator<IUnknown*>& Obj);

	// Count:   [dispid 1]
	long Count();

	// SpellingErrorType:   [dispid 2]
	WdSpellingErrorType SpellingErrorType();

	// Item:   [dispid 0]
	void Item(TSpellingSuggestionProxy& Obj, long arg0);
};
#endif

// StoryRanges
// {0002098C-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE StoryRanges
DECLARE_INTERFACE_(StoryRanges, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// StoryRanges methods:
	STDMETHOD_(HRESULT, Get__NewEnum) (THIS_ IUnknown** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Count) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Item) (THIS_ WdStoryType , WordRange** prop) PURE; 
};
typedef StoryRanges* LPTORYRANGES;
#ifdef __cplusplus
// StoryRanges  {0002098C-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TStoryRangesProxy : public __OCF TAutoProxy
{
public:
	TStoryRangesProxy() : TAutoProxy(0x0) {}

	// _NewEnum:   [dispid -4]
	void _NewEnum(__OCF TAutoEnumerator<IUnknown*>& Obj);

	// Count:   [dispid 2]
	long Count();

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// Item:   [dispid 0]
	void Item(TRangeProxy& Obj, WdStoryType arg0);
};
#endif

// WdStyleType
typedef enum tagWdStyleType
{
	wdStyleTypeParagraph = 1, 
	wdStyleTypeCharacter = 2, 
	wdStyleTypeTable = 3, 
	wdStyleTypeList = 4, 
} WdStyleType;

// Style
// {0002092C-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE Style
DECLARE_INTERFACE_(Style, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// Style methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get_NameLocal) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Set_NameLocal) (THIS_ BSTR prop) PURE; 
	STDMETHOD_(HRESULT, Get_BaseStyle) (THIS_ VARIANT* prop) PURE; 
	STDMETHOD_(HRESULT, Set_BaseStyle) (THIS_ VARIANT* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Description) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Type) (THIS_ WdStyleType* prop) PURE; 
	STDMETHOD_(HRESULT, Get_BuiltIn) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Get_NextParagraphStyle) (THIS_ VARIANT* prop) PURE; 
	STDMETHOD_(HRESULT, Set_NextParagraphStyle) (THIS_ VARIANT* prop) PURE; 
	STDMETHOD_(HRESULT, Get_InUse) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Shading) (THIS_ Shading** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Borders) (THIS_ Borders** prop) PURE; 
	STDMETHOD_(HRESULT, Set_Borders) (THIS_ Borders* prop) PURE; 
	STDMETHOD_(HRESULT, Get_ParagraphFormat) (THIS_ ParagraphFormat** prop) PURE; 
	STDMETHOD_(HRESULT, Set_ParagraphFormat) (THIS_ ParagraphFormat* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Font) (THIS_ Font** prop) PURE; 
	STDMETHOD_(HRESULT, Set_Font) (THIS_ Font* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Frame) (THIS_ Frame** prop) PURE; 
	STDMETHOD_(HRESULT, Get_LanguageID) (THIS_ WdLanguageID* prop) PURE; 
	STDMETHOD_(HRESULT, Set_LanguageID) (THIS_ WdLanguageID prop) PURE; 
	STDMETHOD_(HRESULT, Get_AutomaticallyUpdate) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_AutomaticallyUpdate) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_ListTemplate) (THIS_ ListTemplate** prop) PURE; 
	STDMETHOD_(HRESULT, Get_ListLevelNumber) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_LanguageIDFarEast) (THIS_ WdLanguageID* prop) PURE; 
	STDMETHOD_(HRESULT, Set_LanguageIDFarEast) (THIS_ WdLanguageID prop) PURE; 
	STDMETHOD_(HRESULT, Get_Hidden) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Hidden) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Delete) (THIS ) PURE; 
	STDMETHOD_(HRESULT, LinkToListTemplate) (THIS_ ListTemplate* , VARIANT* ListLevelNumber) PURE; 
	STDMETHOD_(HRESULT, Get_NoProofing) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Set_NoProofing) (THIS_ long prop) PURE; 
	STDMETHOD_(HRESULT, Get_LinkStyle) (THIS_ VARIANT* prop) PURE; 
	STDMETHOD_(HRESULT, Set_LinkStyle) (THIS_ VARIANT* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Visibility) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Visibility) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_NoSpaceBetweenParagraphsOfSameStyle) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_NoSpaceBetweenParagraphsOfSameStyle) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_Table) (THIS_ TableStyle** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Locked) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Locked) (THIS_ VARIANT_BOOL prop) PURE; 
};
typedef Style* LPTYLE;
#ifdef __cplusplus
// Style  {0002092C-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TStyleProxy : public __OCF TAutoProxy
{
public:
	TStyleProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// NameLocal:   [dispid 0]
	__OCF TAutoString NameLocal();

	// NameLocal:   [dispid 0]
	void NameLocal(__OCF TAutoString arg0);

	// BaseStyle:   [dispid 1]
	__OCF TAutoVal BaseStyle();

	// BaseStyle:   [dispid 1]
	void BaseStyle(__OCF TAutoVal* arg0);

	// Description:   [dispid 2]
	__OCF TAutoString Description();

	// Type:   [dispid 3]
	WdStyleType Type();

	// BuiltIn:   [dispid 4]
	/*__OWL*/ TBool BuiltIn();

	// NextParagraphStyle:   [dispid 5]
	__OCF TAutoVal NextParagraphStyle();

	// NextParagraphStyle:   [dispid 5]
	void NextParagraphStyle(__OCF TAutoVal* arg0);

	// InUse:   [dispid 6]
	/*__OWL*/ TBool InUse();

	// _Shading:   [dispid 7]
	void _Shading(TShadingProxy& Obj);

	// _Borders:   [dispid 8]
	void _Borders(TBordersProxy& Obj);

	// _Borders:   [dispid 8]
	void _Borders(Borders* arg0);

	// _ParagraphFormat:   [dispid 9]
	ParagraphFormat* _ParagraphFormat();

	// _ParagraphFormat:   [dispid 9]
	void _ParagraphFormat(ParagraphFormat* arg0);

	// _Font:   [dispid 10]
	Font* _Font();

	// _Font:   [dispid 10]
	void _Font(Font* arg0);

	// _Frame:   [dispid 11]
	void _Frame(TFrameProxy& Obj);

	// LanguageID:   [dispid 12]
	WdLanguageID LanguageID();

	// LanguageID:   [dispid 12]
	void LanguageID(WdLanguageID arg0);

	// AutomaticallyUpdate:   [dispid 13]
	/*__OWL*/ TBool AutomaticallyUpdate();

	// AutomaticallyUpdate:   [dispid 13]
	void AutomaticallyUpdate(/*__OWL*/ TBool arg0);

	// _ListTemplate:   [dispid 14]
	void _ListTemplate(TListTemplateProxy& Obj);

	// ListLevelNumber:   [dispid 15]
	long ListLevelNumber();

	// LanguageIDFarEast:   [dispid 16]
	WdLanguageID LanguageIDFarEast();

	// LanguageIDFarEast:   [dispid 16]
	void LanguageIDFarEast(WdLanguageID arg0);

	// Hidden:   [dispid 17]
	/*__OWL*/ TBool Hidden();

	// Hidden:   [dispid 17]
	void Hidden(/*__OWL*/ TBool arg0);

	// Delete:   [dispid 100]
	void Delete();

	// LinkToListTemplate:   [dispid 101]
	void LinkToListTemplate(ListTemplate* arg0, __OCF TAutoVal* ListLevelNumber = 0);

	// NoProofing:   [dispid 18]
	long NoProofing();

	// NoProofing:   [dispid 18]
	void NoProofing(long arg0);

	// LinkStyle:   [dispid 104]
	__OCF TAutoVal LinkStyle();

	// LinkStyle:   [dispid 104]
	void LinkStyle(__OCF TAutoVal* arg0);

	// Visibility:   [dispid 19]
	/*__OWL*/ TBool Visibility();

	// Visibility:   [dispid 19]
	void Visibility(/*__OWL*/ TBool arg0);

	// NoSpaceBetweenParagraphsOfSameStyle:   [dispid 20]
	/*__OWL*/ TBool NoSpaceBetweenParagraphsOfSameStyle();

	// NoSpaceBetweenParagraphsOfSameStyle:   [dispid 20]
	void NoSpaceBetweenParagraphsOfSameStyle(/*__OWL*/ TBool arg0);

	// _Table:   [dispid 21]
	void _Table(TTableStyleProxy& Obj);

	// Locked:   [dispid 22]
	/*__OWL*/ TBool Locked();

	// Locked:   [dispid 22]
	void Locked(/*__OWL*/ TBool arg0);
};
#endif

// WdStyleSheetLinkType
typedef enum tagWdStyleSheetLinkType
{
	wdStyleSheetLinkTypeLinked = 0, 
	wdStyleSheetLinkTypeImported = 1, 
} WdStyleSheetLinkType;

// WdStyleSheetPrecedence
typedef enum tagWdStyleSheetPrecedence
{
	wdStyleSheetPrecedenceHigher = -1, 
	wdStyleSheetPrecedenceLower = -2, 
	wdStyleSheetPrecedenceHighest = 1, 
	wdStyleSheetPrecedenceLowest = 0, 
} WdStyleSheetPrecedence;

// StyleSheets
// {07B7CC7E-E66C-11D3-9454-00105AA31A08}
#undef INTERFACE
#define INTERFACE StyleSheets
DECLARE_INTERFACE_(StyleSheets, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// StyleSheets methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get__NewEnum) (THIS_ IUnknown** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Count) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Item) (THIS_ VARIANT* , StyleSheet** prop) PURE; 
	STDMETHOD_(HRESULT, Add) (THIS_ BSTR FileName, WdStyleSheetLinkType LinkType, BSTR Title, WdStyleSheetPrecedence Precedence, StyleSheet** prop) PURE; 
};
typedef StyleSheets* LPTYLESHEETS;
#ifdef __cplusplus
// StyleSheets  {07B7CC7E-E66C-11D3-9454-00105AA31A08}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TStyleSheetsProxy : public __OCF TAutoProxy
{
public:
	TStyleSheetsProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// _NewEnum:   [dispid -4]
	void _NewEnum(__OCF TAutoEnumerator<IUnknown*>& Obj);

	// Count:   [dispid 1]
	long Count();

	// Item:   [dispid 0]
	void Item(TStyleSheetProxy& Obj, __OCF TAutoVal* arg0);

	// Add:   [dispid 2]
	void Add(TStyleSheetProxy& Obj, __OCF TAutoString FileName, WdStyleSheetLinkType LinkType, __OCF TAutoString Title, WdStyleSheetPrecedence Precedence);
};
#endif

// Styles
// {0002092D-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE Styles
DECLARE_INTERFACE_(Styles, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// Styles methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get__NewEnum) (THIS_ IUnknown** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Count) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Item) (THIS_ VARIANT* , Style** prop) PURE; 
	STDMETHOD_(HRESULT, Add) (THIS_ BSTR Name, VARIANT* Type, Style** prop) PURE; 
};
typedef Styles* LPTYLES;
#ifdef __cplusplus
// Styles  {0002092D-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TStylesProxy : public __OCF TAutoProxy
{
public:
	TStylesProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// _NewEnum:   [dispid -4]
	void _NewEnum(__OCF TAutoEnumerator<IUnknown*>& Obj);

	// Count:   [dispid 1]
	long Count();

	// Item:   [dispid 0]
	void Item(TStyleProxy& Obj, __OCF TAutoVal* arg0);

	// Add:   [dispid 100]
	void Add(TStyleProxy& Obj, __OCF TAutoString Name, __OCF TAutoVal* Type = 0);
};
#endif

// Subdocuments
// {00020988-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE Subdocuments
DECLARE_INTERFACE_(Subdocuments, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// Subdocuments methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Count) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get__NewEnum) (THIS_ IUnknown** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Expanded) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Expanded) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Item) (THIS_ long , Subdocument** prop) PURE; 
	STDMETHOD_(HRESULT, AddFromFile) (THIS_ VARIANT* Name, VARIANT* ConfirmConversions, VARIANT* ReadOnly, VARIANT* PasswordDocument, VARIANT* PasswordTemplate, VARIANT* Revert, VARIANT* WritePasswordDocument, VARIANT* WritePasswordTemplate, Subdocument** prop) PURE; 
	STDMETHOD_(HRESULT, AddFromRange) (THIS_ WordRange* , Subdocument** prop) PURE; 
	STDMETHOD_(HRESULT, Merge) (THIS_ VARIANT* FirstSubdocument, VARIANT* LastSubdocument) PURE; 
	STDMETHOD_(HRESULT, Delete) (THIS ) PURE; 
	STDMETHOD_(HRESULT, Select) (THIS ) PURE; 
};
typedef Subdocuments* LPUBDOCUMENTS;
#ifdef __cplusplus
// Subdocuments  {00020988-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TSubdocumentsProxy : public __OCF TAutoProxy
{
public:
	TSubdocumentsProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// Count:   [dispid 1]
	long Count();

	// _NewEnum:   [dispid -4]
	void _NewEnum(__OCF TAutoEnumerator<IUnknown*>& Obj);

	// Expanded:   [dispid 2]
	/*__OWL*/ TBool Expanded();

	// Expanded:   [dispid 2]
	void Expanded(/*__OWL*/ TBool arg0);

	// Item:   [dispid 0]
	void Item(TSubdocumentProxy& Obj, long arg0);

	// AddFromFile:   [dispid 100]
	void AddFromFile(TSubdocumentProxy& Obj, __OCF TAutoVal* Name, __OCF TAutoVal* ConfirmConversions = 0, __OCF TAutoVal* ReadOnly = 0, __OCF TAutoVal* PasswordDocument = 0, __OCF TAutoVal* PasswordTemplate = 0, __OCF TAutoVal* Revert = 0, __OCF TAutoVal* WritePasswordDocument = 0, __OCF TAutoVal* WritePasswordTemplate = 0);

	// AddFromRange:   [dispid 101]
	void AddFromRange(TSubdocumentProxy& Obj, WordRange* arg0);

	// Merge:   [dispid 102]
	void Merge(__OCF TAutoVal* FirstSubdocument = 0, __OCF TAutoVal* LastSubdocument = 0);

	// Delete:   [dispid 103]
	void Delete();

	// Select:   [dispid 104]
	void Select();
};
#endif

// MsoSyncStatusType
typedef enum tagMsoSyncStatusType
{
	msoSyncStatusNoSharedWorkspace = 0, 
	msoSyncStatusLatest = 1, 
	msoSyncStatusNewerAvailable = 2, 
	msoSyncStatusLocalChanges = 3, 
	msoSyncStatusConflict = 4, 
	msoSyncStatusSuspended = 5, 
	msoSyncStatusError = 6, 
} MsoSyncStatusType;

// MsoSyncErrorType
typedef enum tagMsoSyncErrorType
{
	msoSyncErrorNone = 0, 
	msoSyncErrorUnauthorizedUser = 1, 
	msoSyncErrorCouldNotConnect = 2, 
	msoSyncErrorOutOfSpace = 3, 
	msoSyncErrorFileNotFound = 4, 
	msoSyncErrorFileTooLarge = 5, 
	msoSyncErrorFileInUse = 6, 
	msoSyncErrorVirusUpload = 7, 
	msoSyncErrorVirusDownload = 8, 
	msoSyncErrorUnknownUpload = 9, 
	msoSyncErrorUnknownDownload = 10, 
	msoSyncErrorCouldNotOpen = 11, 
	msoSyncErrorCouldNotUpdate = 12, 
	msoSyncErrorCouldNotCompare = 13, 
	msoSyncErrorCouldNotResolve = 14, 
	msoSyncErrorNoNetwork = 15, 
	msoSyncErrorUnknown = 16, 
} MsoSyncErrorType;

// MsoSyncVersionType
typedef enum tagMsoSyncVersionType
{
	msoSyncVersionLastViewed = 0, 
	msoSyncVersionServer = 1, 
} MsoSyncVersionType;

// MsoSyncConflictResolutionType
typedef enum tagMsoSyncConflictResolutionType
{
	msoSyncConflictClientWins = 0, 
	msoSyncConflictServerWins = 1, 
	msoSyncConflictMerge = 2, 
} MsoSyncConflictResolutionType;

// Sync
// {000C0386-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE Sync
DECLARE_INTERFACE_(Sync, _IMsoDispObj)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
	// _IMsoDispObj methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ IDispatch** ppidisp) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* plCreator) PURE; 
#endif
	// Sync methods:
	STDMETHOD_(HRESULT, Get_Status) (THIS_ MsoSyncStatusType* pStatusType) PURE; 
	STDMETHOD_(HRESULT, Get_WorkspaceLastChangedBy) (THIS_ BSTR* pbstrWorkspaceLastChangedBy) PURE; 
	STDMETHOD_(HRESULT, Get_LastSyncTime) (THIS_ VARIANT* pdatSavedTo) PURE; 
	STDMETHOD_(HRESULT, Get_ErrorType) (THIS_ MsoSyncErrorType* pErrorType) PURE; 
	STDMETHOD_(HRESULT, GetUpdate) (THIS ) PURE; 
	STDMETHOD_(HRESULT, PutUpdate) (THIS ) PURE; 
	STDMETHOD_(HRESULT, OpenVersion) (THIS_ MsoSyncVersionType SyncVersionType) PURE; 
	STDMETHOD_(HRESULT, ResolveConflict) (THIS_ MsoSyncConflictResolutionType SyncConflictResolution) PURE; 
	STDMETHOD_(HRESULT, Unsuspend) (THIS ) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** ppidisp) PURE; 
};
typedef Sync* LPYNC;
#ifdef __cplusplus
// Sync  {000C0386-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TSyncProxy : public __OCF TAutoProxy
{
public:
	TSyncProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1610743808]
	IDispatch* _Application();

	// Creator:   [dispid 1610743809]
	long Creator();

	// Status:   [dispid 0]
	MsoSyncStatusType Status();

	// WorkspaceLastChangedBy:   [dispid 1]
	__OCF TAutoString WorkspaceLastChangedBy();

	// LastSyncTime:   [dispid 2]
	__OCF TAutoVal LastSyncTime();

	// ErrorType:   [dispid 4]
	MsoSyncErrorType ErrorType();

	// GetUpdate:   [dispid 6]
	void GetUpdate();

	// PutUpdate:   [dispid 7]
	void PutUpdate();

	// OpenVersion:   [dispid 8]
	void OpenVersion(MsoSyncVersionType SyncVersionType);

	// ResolveConflict:   [dispid 9]
	void ResolveConflict(MsoSyncConflictResolutionType SyncConflictResolution);

	// Unsuspend:   [dispid 10]
	void Unsuspend();

	// Parent:   [dispid 14]
	IDispatch* Parent();
};
#endif

// SynonymInfo
// {0002099B-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE SynonymInfo
DECLARE_INTERFACE_(SynonymInfo, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// SynonymInfo methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Word) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Found) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Get_MeaningCount) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_MeaningList) (THIS_ VARIANT* prop) PURE; 
	STDMETHOD_(HRESULT, Get_PartOfSpeechList) (THIS_ VARIANT* prop) PURE; 
	STDMETHOD_(HRESULT, Get_SynonymList) (THIS_ VARIANT* Meaning, VARIANT* prop) PURE; 
	STDMETHOD_(HRESULT, Get_AntonymList) (THIS_ VARIANT* prop) PURE; 
	STDMETHOD_(HRESULT, Get_RelatedExpressionList) (THIS_ VARIANT* prop) PURE; 
	STDMETHOD_(HRESULT, Get_RelatedWordList) (THIS_ VARIANT* prop) PURE; 
};
typedef SynonymInfo* LPYNONYMINFO;
#ifdef __cplusplus
// SynonymInfo  {0002099B-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TSynonymInfoProxy : public __OCF TAutoProxy
{
public:
	TSynonymInfoProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// Word:   [dispid 1]
	__OCF TAutoString Word();

	// Found:   [dispid 2]
	/*__OWL*/ TBool Found();

	// MeaningCount:   [dispid 3]
	long MeaningCount();

	// MeaningList:   [dispid 4]
	__OCF TAutoVal MeaningList();

	// PartOfSpeechList:   [dispid 5]
	__OCF TAutoVal PartOfSpeechList();

	// SynonymList:   [dispid 7]
	__OCF TAutoVal SynonymList(__OCF TAutoVal* Meaning);

	// AntonymList:   [dispid 8]
	__OCF TAutoVal AntonymList();

	// RelatedExpressionList:   [dispid 9]
	__OCF TAutoVal RelatedExpressionList();

	// RelatedWordList:   [dispid 10]
	__OCF TAutoVal RelatedWordList();
};
#endif

// WdCountry
typedef enum tagWdCountry
{
	wdUS = 1, 
	wdCanada = 2, 
	wdLatinAmerica = 3, 
	wdNetherlands = 31, 
	wdFrance = 33, 
	wdSpain = 34, 
	wdItaly = 39, 
	wdUK = 44, 
	wdDenmark = 45, 
	wdSweden = 46, 
	wdNorway = 47, 
	wdGermany = 49, 
	wdPeru = 51, 
	wdMexico = 52, 
	wdArgentina = 54, 
	wdBrazil = 55, 
	wdChile = 56, 
	wdVenezuela = 58, 
	wdJapan = 81, 
	wdTaiwan = 886, 
	wdChina = 86, 
	wdKorea = 82, 
	wdFinland = 358, 
	wdIceland = 354, 
} WdCountry;

// WdCursorType
typedef enum tagWdCursorType
{
	wdCursorWait = 0, 
	wdCursorIBeam = 1, 
	wdCursorNormal = 2, 
	wdCursorNorthwestArrow = 3, 
} WdCursorType;

// System
// {00020935-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE WordSystem
DECLARE_INTERFACE_(WordSystem, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// System methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get_OperatingSystem) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Get_ProcessorType) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Version) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Get_FreeDiskSpace) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Country) (THIS_ WdCountry* prop) PURE; 
	STDMETHOD_(HRESULT, Get_LanguageDesignation) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Get_HorizontalResolution) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_VerticalResolution) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_ProfileString) (THIS_ BSTR , BSTR Key, BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Set_ProfileString) (THIS_ BSTR , BSTR Key, BSTR prop) PURE; 
	STDMETHOD_(HRESULT, Get_PrivateProfileString) (THIS_ BSTR FileName, BSTR , BSTR Key, BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Set_PrivateProfileString) (THIS_ BSTR FileName, BSTR , BSTR Key, BSTR prop) PURE; 
	STDMETHOD_(HRESULT, Get_MathCoprocessorInstalled) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Get_ComputerType) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Get_MacintoshName) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Get_QuickDrawInstalled) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Cursor) (THIS_ WdCursorType* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Cursor) (THIS_ WdCursorType prop) PURE; 
	STDMETHOD_(HRESULT, MSInfo) (THIS ) PURE; 
	STDMETHOD_(HRESULT, Connect) (THIS_ BSTR Path, VARIANT* Drive, VARIANT* Password) PURE; 
	STDMETHOD_(HRESULT, Get_CountryRegion) (THIS_ WdCountry* prop) PURE; 
};
typedef WordSystem* LPYSTEM;
#ifdef __cplusplus
// System  {00020935-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TSystemProxy : public __OCF TAutoProxy
{
public:
	TSystemProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// OperatingSystem:   [dispid 1]
	__OCF TAutoString OperatingSystem();

	// ProcessorType:   [dispid 2]
	__OCF TAutoString ProcessorType();

	// Version:   [dispid 3]
	__OCF TAutoString Version();

	// FreeDiskSpace:   [dispid 4]
	long FreeDiskSpace();

	// Country:   [dispid 5]
	WdCountry Country();

	// LanguageDesignation:   [dispid 6]
	__OCF TAutoString LanguageDesignation();

	// HorizontalResolution:   [dispid 7]
	long HorizontalResolution();

	// VerticalResolution:   [dispid 8]
	long VerticalResolution();

	// ProfileString:   [dispid 9]
	__OCF TAutoString ProfileString(__OCF TAutoString arg0, __OCF TAutoString Key);

	// ProfileString:   [dispid 9]
	void ProfileString(__OCF TAutoString arg0, __OCF TAutoString Key, __OCF TAutoString arg2);

	// PrivateProfileString:   [dispid 10]
	__OCF TAutoString PrivateProfileString(__OCF TAutoString FileName, __OCF TAutoString arg1, __OCF TAutoString Key);

	// PrivateProfileString:   [dispid 10]
	void PrivateProfileString(__OCF TAutoString FileName, __OCF TAutoString arg1, __OCF TAutoString Key, __OCF TAutoString arg3);

	// MathCoprocessorInstalled:   [dispid 11]
	/*__OWL*/ TBool MathCoprocessorInstalled();

	// ComputerType:   [dispid 12]
	__OCF TAutoString ComputerType();

	// MacintoshName:   [dispid 14]
	__OCF TAutoString MacintoshName();

	// QuickDrawInstalled:   [dispid 15]
	/*__OWL*/ TBool QuickDrawInstalled();

	// Cursor:   [dispid 16]
	WdCursorType Cursor();

	// Cursor:   [dispid 16]
	void Cursor(WdCursorType arg0);

	// MSInfo:   [dispid 101]
	void MSInfo();

	// Connect:   [dispid 102]
	void Connect(__OCF TAutoString Path, __OCF TAutoVal* Drive = 0, __OCF TAutoVal* Password = 0);

	// CountryRegion:   [dispid 103]
	WdCountry CountryRegion();
};
#endif

// WdAutoFitBehavior
typedef enum tagWdAutoFitBehavior
{
	wdAutoFitFixed = 0, 
	wdAutoFitContent = 1, 
	wdAutoFitWindow = 2, 
} WdAutoFitBehavior;

// WdPreferredWidthType
typedef enum tagWdPreferredWidthType
{
	wdPreferredWidthAuto = 1, 
	wdPreferredWidthPercent = 2, 
	wdPreferredWidthPoints = 3, 
} WdPreferredWidthType;

// Table
// {00020951-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE Table
DECLARE_INTERFACE_(Table, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// Table methods:
	STDMETHOD_(HRESULT, Get_Range) (THIS_ WordRange** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Columns) (THIS_ Columns** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Rows) (THIS_ Rows** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Borders) (THIS_ Borders** prop) PURE; 
	STDMETHOD_(HRESULT, Set_Borders) (THIS_ Borders* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Shading) (THIS_ Shading** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Uniform) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Get_AutoFormatType) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Select) (THIS ) PURE; 
	STDMETHOD_(HRESULT, Delete) (THIS ) PURE; 
	STDMETHOD_(HRESULT, SortOld) (THIS_ VARIANT* ExcludeHeader, VARIANT* FieldNumber, VARIANT* SortFieldType, VARIANT* SortOrder, VARIANT* FieldNumber2, VARIANT* SortFieldType2, VARIANT* SortOrder2, VARIANT* FieldNumber3, VARIANT* SortFieldType3, VARIANT* SortOrder3, VARIANT* CaseSensitive, VARIANT* LanguageID) PURE; 
	STDMETHOD_(HRESULT, SortAscending) (THIS ) PURE; 
	STDMETHOD_(HRESULT, SortDescending) (THIS ) PURE; 
	STDMETHOD_(HRESULT, AutoFormat) (THIS_ VARIANT* Format, VARIANT* ApplyBorders, VARIANT* ApplyShading, VARIANT* ApplyFont, VARIANT* ApplyColor, VARIANT* ApplyHeadingRows, VARIANT* ApplyLastRow, VARIANT* ApplyFirstColumn, VARIANT* ApplyLastColumn, VARIANT* AutoFit) PURE; 
	STDMETHOD_(HRESULT, UpdateAutoFormat) (THIS ) PURE; 
	STDMETHOD_(HRESULT, ConvertToTextOld) (THIS_ VARIANT* Separator, WordRange** prop) PURE; 
	STDMETHOD_(HRESULT, Cell) (THIS_ long , long Column, Cell** prop) PURE; 
	STDMETHOD_(HRESULT, Split) (THIS_ VARIANT* BeforeRow, Table** prop) PURE; 
	STDMETHOD_(HRESULT, ConvertToText) (THIS_ VARIANT* Separator, VARIANT* NestedTables, WordRange** prop) PURE; 
	STDMETHOD_(HRESULT, AutoFitBehavior) (THIS_ WdAutoFitBehavior Behavior) PURE; 
	STDMETHOD_(HRESULT, Sort) (THIS_ VARIANT* ExcludeHeader, VARIANT* FieldNumber, VARIANT* SortFieldType, VARIANT* SortOrder, VARIANT* FieldNumber2, VARIANT* SortFieldType2, VARIANT* SortOrder2, VARIANT* FieldNumber3, VARIANT* SortFieldType3, VARIANT* SortOrder3, VARIANT* CaseSensitive, VARIANT* BidiSort, VARIANT* IgnoreThe, VARIANT* IgnoreKashida, VARIANT* IgnoreDiacritics, VARIANT* IgnoreHe, VARIANT* LanguageID) PURE; 
	STDMETHOD_(HRESULT, Get_Tables) (THIS_ Tables** prop) PURE; 
	STDMETHOD_(HRESULT, Get_NestingLevel) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_AllowPageBreaks) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_AllowPageBreaks) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_AllowAutoFit) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_AllowAutoFit) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_PreferredWidth) (THIS_ float* prop) PURE; 
	STDMETHOD_(HRESULT, Set_PreferredWidth) (THIS_ float prop) PURE; 
	STDMETHOD_(HRESULT, Get_PreferredWidthType) (THIS_ WdPreferredWidthType* prop) PURE; 
	STDMETHOD_(HRESULT, Set_PreferredWidthType) (THIS_ WdPreferredWidthType prop) PURE; 
	STDMETHOD_(HRESULT, Get_TopPadding) (THIS_ float* prop) PURE; 
	STDMETHOD_(HRESULT, Set_TopPadding) (THIS_ float prop) PURE; 
	STDMETHOD_(HRESULT, Get_BottomPadding) (THIS_ float* prop) PURE; 
	STDMETHOD_(HRESULT, Set_BottomPadding) (THIS_ float prop) PURE; 
	STDMETHOD_(HRESULT, Get_LeftPadding) (THIS_ float* prop) PURE; 
	STDMETHOD_(HRESULT, Set_LeftPadding) (THIS_ float prop) PURE; 
	STDMETHOD_(HRESULT, Get_RightPadding) (THIS_ float* prop) PURE; 
	STDMETHOD_(HRESULT, Set_RightPadding) (THIS_ float prop) PURE; 
	STDMETHOD_(HRESULT, Get_Spacing) (THIS_ float* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Spacing) (THIS_ float prop) PURE; 
	STDMETHOD_(HRESULT, Get_TableDirection) (THIS_ WdTableDirection* prop) PURE; 
	STDMETHOD_(HRESULT, Set_TableDirection) (THIS_ WdTableDirection prop) PURE; 
	STDMETHOD_(HRESULT, Get_ID) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Set_ID) (THIS_ BSTR prop) PURE; 
	STDMETHOD_(HRESULT, Get_Style) (THIS_ VARIANT* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Style) (THIS_ VARIANT* prop) PURE; 
	STDMETHOD_(HRESULT, Get_ApplyStyleHeadingRows) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_ApplyStyleHeadingRows) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_ApplyStyleLastRow) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_ApplyStyleLastRow) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_ApplyStyleFirstColumn) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_ApplyStyleFirstColumn) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_ApplyStyleLastColumn) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_ApplyStyleLastColumn) (THIS_ VARIANT_BOOL prop) PURE; 
};
typedef Table* LPABLE;
#ifdef __cplusplus
// Table  {00020951-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TTableProxy : public __OCF TAutoProxy
{
public:
	TTableProxy() : TAutoProxy(0x0) {}

	// _Range:   [dispid 0]
	void _Range(TRangeProxy& Obj);

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// _Columns:   [dispid 100]
	void _Columns(TColumnsProxy& Obj);

	// _Rows:   [dispid 101]
	void _Rows(TRowsProxy& Obj);

	// _Borders:   [dispid 1100]
	void _Borders(TBordersProxy& Obj);

	// _Borders:   [dispid 1100]
	void _Borders(Borders* arg0);

	// _Shading:   [dispid 104]
	void _Shading(TShadingProxy& Obj);

	// Uniform:   [dispid 105]
	/*__OWL*/ TBool Uniform();

	// AutoFormatType:   [dispid 106]
	long AutoFormatType();

	// Select:   [dispid 200]
	void Select();

	// Delete:   [dispid 9]
	void Delete();

	// SortOld:   [dispid 10]
	void SortOld(__OCF TAutoVal* ExcludeHeader = 0, __OCF TAutoVal* FieldNumber = 0, __OCF TAutoVal* SortFieldType = 0, __OCF TAutoVal* SortOrder = 0, __OCF TAutoVal* FieldNumber2 = 0, __OCF TAutoVal* SortFieldType2 = 0, __OCF TAutoVal* SortOrder2 = 0, __OCF TAutoVal* FieldNumber3 = 0, __OCF TAutoVal* SortFieldType3 = 0, __OCF TAutoVal* SortOrder3 = 0, __OCF TAutoVal* CaseSensitive = 0, __OCF TAutoVal* LanguageID = 0);

	// SortAscending:   [dispid 12]
	void SortAscending();

	// SortDescending:   [dispid 13]
	void SortDescending();

	// AutoFormat:   [dispid 14]
	void AutoFormat(__OCF TAutoVal* Format = 0, __OCF TAutoVal* ApplyBorders = 0, __OCF TAutoVal* ApplyShading = 0, __OCF TAutoVal* ApplyFont = 0, __OCF TAutoVal* ApplyColor = 0, __OCF TAutoVal* ApplyHeadingRows = 0, __OCF TAutoVal* ApplyLastRow = 0, __OCF TAutoVal* ApplyFirstColumn = 0, __OCF TAutoVal* ApplyLastColumn = 0, __OCF TAutoVal* AutoFit = 0);

	// UpdateAutoFormat:   [dispid 15]
	void UpdateAutoFormat();

	// ConvertToTextOld:   [dispid 16]
	void ConvertToTextOld(TRangeProxy& Obj, __OCF TAutoVal* Separator = 0);

	// _Cell:   [dispid 17]
	void _Cell(TCellProxy& Obj, long arg0, long Column);

	// Split:   [dispid 18]
	void Split(TTableProxy& Obj, __OCF TAutoVal* BeforeRow);

	// ConvertToText:   [dispid 19]
	void ConvertToText(TRangeProxy& Obj, __OCF TAutoVal* Separator = 0, __OCF TAutoVal* NestedTables = 0);

	// AutoFitBehavior:   [dispid 20]
	void AutoFitBehavior(WdAutoFitBehavior Behavior);

	// Sort:   [dispid 23]
	void Sort(__OCF TAutoVal* ExcludeHeader = 0, __OCF TAutoVal* FieldNumber = 0, __OCF TAutoVal* SortFieldType = 0, __OCF TAutoVal* SortOrder = 0, __OCF TAutoVal* FieldNumber2 = 0, __OCF TAutoVal* SortFieldType2 = 0, __OCF TAutoVal* SortOrder2 = 0, __OCF TAutoVal* FieldNumber3 = 0, __OCF TAutoVal* SortFieldType3 = 0, __OCF TAutoVal* SortOrder3 = 0, __OCF TAutoVal* CaseSensitive = 0, __OCF TAutoVal* BidiSort = 0, __OCF TAutoVal* IgnoreThe = 0, __OCF TAutoVal* IgnoreKashida = 0, __OCF TAutoVal* IgnoreDiacritics = 0, __OCF TAutoVal* IgnoreHe = 0, __OCF TAutoVal* LanguageID = 0);

	// _Tables:   [dispid 107]
	void _Tables(TTablesProxy& Obj);

	// NestingLevel:   [dispid 108]
	long NestingLevel();

	// AllowPageBreaks:   [dispid 109]
	/*__OWL*/ TBool AllowPageBreaks();

	// AllowPageBreaks:   [dispid 109]
	void AllowPageBreaks(/*__OWL*/ TBool arg0);

	// AllowAutoFit:   [dispid 110]
	/*__OWL*/ TBool AllowAutoFit();

	// AllowAutoFit:   [dispid 110]
	void AllowAutoFit(/*__OWL*/ TBool arg0);

	// PreferredWidth:   [dispid 111]
	float PreferredWidth();

	// PreferredWidth:   [dispid 111]
	void PreferredWidth(float arg0);

	// PreferredWidthType:   [dispid 112]
	WdPreferredWidthType PreferredWidthType();

	// PreferredWidthType:   [dispid 112]
	void PreferredWidthType(WdPreferredWidthType arg0);

	// TopPadding:   [dispid 113]
	float TopPadding();

	// TopPadding:   [dispid 113]
	void TopPadding(float arg0);

	// BottomPadding:   [dispid 114]
	float BottomPadding();

	// BottomPadding:   [dispid 114]
	void BottomPadding(float arg0);

	// LeftPadding:   [dispid 115]
	float LeftPadding();

	// LeftPadding:   [dispid 115]
	void LeftPadding(float arg0);

	// RightPadding:   [dispid 116]
	float RightPadding();

	// RightPadding:   [dispid 116]
	void RightPadding(float arg0);

	// Spacing:   [dispid 117]
	float Spacing();

	// Spacing:   [dispid 117]
	void Spacing(float arg0);

	// TableDirection:   [dispid 118]
	WdTableDirection TableDirection();

	// TableDirection:   [dispid 118]
	void TableDirection(WdTableDirection arg0);

	// ID:   [dispid 119]
	__OCF TAutoString ID();

	// ID:   [dispid 119]
	void ID(__OCF TAutoString arg0);

	// _Style:   [dispid 201]
	__OCF TAutoVal _Style();

	// _Style:   [dispid 201]
	void _Style(__OCF TAutoVal* arg0);

	// ApplyStyleHeadingRows:   [dispid 202]
	/*__OWL*/ TBool ApplyStyleHeadingRows();

	// ApplyStyleHeadingRows:   [dispid 202]
	void ApplyStyleHeadingRows(/*__OWL*/ TBool arg0);

	// ApplyStyleLastRow:   [dispid 203]
	/*__OWL*/ TBool ApplyStyleLastRow();

	// ApplyStyleLastRow:   [dispid 203]
	void ApplyStyleLastRow(/*__OWL*/ TBool arg0);

	// ApplyStyleFirstColumn:   [dispid 204]
	/*__OWL*/ TBool ApplyStyleFirstColumn();

	// ApplyStyleFirstColumn:   [dispid 204]
	void ApplyStyleFirstColumn(/*__OWL*/ TBool arg0);

	// ApplyStyleLastColumn:   [dispid 205]
	/*__OWL*/ TBool ApplyStyleLastColumn();

	// ApplyStyleLastColumn:   [dispid 205]
	void ApplyStyleLastColumn(/*__OWL*/ TBool arg0);
};
#endif

// TablesOfAuthoritiesCategories
// {00020976-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE TablesOfAuthoritiesCategories
DECLARE_INTERFACE_(TablesOfAuthoritiesCategories, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// TablesOfAuthoritiesCategories methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get__NewEnum) (THIS_ IUnknown** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Count) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Item) (THIS_ VARIANT* , TableOfAuthoritiesCategory** prop) PURE; 
};
typedef TablesOfAuthoritiesCategories* LPABLESOFAUTHORITIESCATEGORIES;
#ifdef __cplusplus
// TablesOfAuthoritiesCategories  {00020976-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TTablesOfAuthoritiesCategoriesProxy : public __OCF TAutoProxy
{
public:
	TTablesOfAuthoritiesCategoriesProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// _NewEnum:   [dispid -4]
	void _NewEnum(__OCF TAutoEnumerator<IUnknown*>& Obj);

	// Count:   [dispid 1]
	long Count();

	// Item:   [dispid 0]
	void Item(TTableOfAuthoritiesCategoryProxy& Obj, __OCF TAutoVal* arg0);
};
#endif

// WdToaFormat
typedef enum tagWdToaFormat
{
	wdTOATemplate = 0, 
	wdTOAClassic = 1, 
	wdTOADistinctive = 2, 
	wdTOAFormal = 3, 
	wdTOASimple = 4, 
} WdToaFormat;

// TablesOfAuthorities
// {00020912-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE TablesOfAuthorities
DECLARE_INTERFACE_(TablesOfAuthorities, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// TablesOfAuthorities methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get__NewEnum) (THIS_ IUnknown** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Count) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Format) (THIS_ WdToaFormat* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Format) (THIS_ WdToaFormat prop) PURE; 
	STDMETHOD_(HRESULT, Item) (THIS_ long , TableOfAuthorities** prop) PURE; 
	STDMETHOD_(HRESULT, Add) (THIS_ WordRange* , VARIANT* Category, VARIANT* , VARIANT* Passim, VARIANT* KeepEntryFormatting, VARIANT* Separator, VARIANT* IncludeSequenceName, VARIANT* EntrySeparator, VARIANT* PageRangeSeparator, VARIANT* IncludeCategoryHeader, VARIANT* PageNumberSeparator, TableOfAuthorities** prop) PURE; 
	STDMETHOD_(HRESULT, NextCitation) (THIS_ BSTR ShortCitation) PURE; 
	STDMETHOD_(HRESULT, MarkCitation) (THIS_ WordRange* , BSTR ShortCitation, VARIANT* LongCitation, VARIANT* LongCitationAutoText, VARIANT* Category, Field** prop) PURE; 
	STDMETHOD_(HRESULT, MarkAllCitations) (THIS_ BSTR ShortCitation, VARIANT* LongCitation, VARIANT* LongCitationAutoText, VARIANT* Category) PURE; 
};
typedef TablesOfAuthorities* LPABLESOFAUTHORITIES;
#ifdef __cplusplus
// TablesOfAuthorities  {00020912-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TTablesOfAuthoritiesProxy : public __OCF TAutoProxy
{
public:
	TTablesOfAuthoritiesProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// _NewEnum:   [dispid -4]
	void _NewEnum(__OCF TAutoEnumerator<IUnknown*>& Obj);

	// Count:   [dispid 1]
	long Count();

	// Format:   [dispid 2]
	WdToaFormat Format();

	// Format:   [dispid 2]
	void Format(WdToaFormat arg0);

	// Item:   [dispid 0]
	void Item(TTableOfAuthoritiesProxy& Obj, long arg0);

	// Add:   [dispid 100]
	void Add(TTableOfAuthoritiesProxy& Obj, WordRange* arg0, __OCF TAutoVal* Category = 0, __OCF TAutoVal* arg2 = 0, __OCF TAutoVal* Passim = 0, __OCF TAutoVal* KeepEntryFormatting = 0, __OCF TAutoVal* Separator = 0, __OCF TAutoVal* IncludeSequenceName = 0, __OCF TAutoVal* EntrySeparator = 0, __OCF TAutoVal* PageRangeSeparator = 0, __OCF TAutoVal* IncludeCategoryHeader = 0, __OCF TAutoVal* PageNumberSeparator = 0);

	// NextCitation:   [dispid 103]
	void NextCitation(__OCF TAutoString ShortCitation);

	// MarkCitation:   [dispid 101]
	void MarkCitation(TFieldProxy& Obj, WordRange* arg0, __OCF TAutoString ShortCitation, __OCF TAutoVal* LongCitation = 0, __OCF TAutoVal* LongCitationAutoText = 0, __OCF TAutoVal* Category = 0);

	// MarkAllCitations:   [dispid 102]
	void MarkAllCitations(__OCF TAutoString ShortCitation, __OCF TAutoVal* LongCitation = 0, __OCF TAutoVal* LongCitationAutoText = 0, __OCF TAutoVal* Category = 0);
};
#endif

// WdTocFormat
typedef enum tagWdTocFormat
{
	wdTOCTemplate = 0, 
	wdTOCClassic = 1, 
	wdTOCDistinctive = 2, 
	wdTOCFancy = 3, 
	wdTOCModern = 4, 
	wdTOCFormal = 5, 
	wdTOCSimple = 6, 
} WdTocFormat;

// TablesOfContents
// {00020914-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE TablesOfContents
DECLARE_INTERFACE_(TablesOfContents, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// TablesOfContents methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get__NewEnum) (THIS_ IUnknown** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Count) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Format) (THIS_ WdTocFormat* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Format) (THIS_ WdTocFormat prop) PURE; 
	STDMETHOD_(HRESULT, Item) (THIS_ long , TableOfContents** prop) PURE; 
	STDMETHOD_(HRESULT, AddOld) (THIS_ WordRange* , VARIANT* UseHeadingStyles, VARIANT* UpperHeadingLevel, VARIANT* LowerHeadingLevel, VARIANT* UseFields, VARIANT* TableID, VARIANT* RightAlignPageNumbers, VARIANT* IncludePageNumbers, VARIANT* AddedStyles, TableOfContents** prop) PURE; 
	STDMETHOD_(HRESULT, MarkEntry) (THIS_ WordRange* , VARIANT* Entry, VARIANT* EntryAutoText, VARIANT* TableID, VARIANT* Level, Field** prop) PURE; 
	STDMETHOD_(HRESULT, Add2000) (THIS_ WordRange* , VARIANT* UseHeadingStyles, VARIANT* UpperHeadingLevel, VARIANT* LowerHeadingLevel, VARIANT* UseFields, VARIANT* TableID, VARIANT* RightAlignPageNumbers, VARIANT* IncludePageNumbers, VARIANT* AddedStyles, VARIANT* UseHyperlinks, VARIANT* HidePageNumbersInWeb, TableOfContents** prop) PURE; 
	STDMETHOD_(HRESULT, Add) (THIS_ WordRange* , VARIANT* UseHeadingStyles, VARIANT* UpperHeadingLevel, VARIANT* LowerHeadingLevel, VARIANT* UseFields, VARIANT* TableID, VARIANT* RightAlignPageNumbers, VARIANT* IncludePageNumbers, VARIANT* AddedStyles, VARIANT* UseHyperlinks, VARIANT* HidePageNumbersInWeb, VARIANT* UseOutlineLevels, TableOfContents** prop) PURE; 
};
typedef TablesOfContents* LPABLESOFCONTENTS;
#ifdef __cplusplus
// TablesOfContents  {00020914-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TTablesOfContentsProxy : public __OCF TAutoProxy
{
public:
	TTablesOfContentsProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// _NewEnum:   [dispid -4]
	void _NewEnum(__OCF TAutoEnumerator<IUnknown*>& Obj);

	// Count:   [dispid 1]
	long Count();

	// Format:   [dispid 2]
	WdTocFormat Format();

	// Format:   [dispid 2]
	void Format(WdTocFormat arg0);

	// Item:   [dispid 0]
	void Item(TTableOfContentsProxy& Obj, long arg0);

	// AddOld:   [dispid 100]
	void AddOld(TTableOfContentsProxy& Obj, WordRange* arg0, __OCF TAutoVal* UseHeadingStyles = 0, __OCF TAutoVal* UpperHeadingLevel = 0, __OCF TAutoVal* LowerHeadingLevel = 0, __OCF TAutoVal* UseFields = 0, __OCF TAutoVal* TableID = 0, __OCF TAutoVal* RightAlignPageNumbers = 0, __OCF TAutoVal* IncludePageNumbers = 0, __OCF TAutoVal* AddedStyles = 0);

	// MarkEntry:   [dispid 101]
	void MarkEntry(TFieldProxy& Obj, WordRange* arg0, __OCF TAutoVal* Entry = 0, __OCF TAutoVal* EntryAutoText = 0, __OCF TAutoVal* TableID = 0, __OCF TAutoVal* Level = 0);

	// Add2000:   [dispid 102]
	void Add2000(TTableOfContentsProxy& Obj, WordRange* arg0, __OCF TAutoVal* UseHeadingStyles = 0, __OCF TAutoVal* UpperHeadingLevel = 0, __OCF TAutoVal* LowerHeadingLevel = 0, __OCF TAutoVal* UseFields = 0, __OCF TAutoVal* TableID = 0, __OCF TAutoVal* RightAlignPageNumbers = 0, __OCF TAutoVal* IncludePageNumbers = 0, __OCF TAutoVal* AddedStyles = 0, __OCF TAutoVal* UseHyperlinks = 0, __OCF TAutoVal* HidePageNumbersInWeb = 0);

	// Add:   [dispid 103]
	void Add(TTableOfContentsProxy& Obj, WordRange* arg0, __OCF TAutoVal* UseHeadingStyles = 0, __OCF TAutoVal* UpperHeadingLevel = 0, __OCF TAutoVal* LowerHeadingLevel = 0, __OCF TAutoVal* UseFields = 0, __OCF TAutoVal* TableID = 0, __OCF TAutoVal* RightAlignPageNumbers = 0, __OCF TAutoVal* IncludePageNumbers = 0, __OCF TAutoVal* AddedStyles = 0, __OCF TAutoVal* UseHyperlinks = 0, __OCF TAutoVal* HidePageNumbersInWeb = 0, __OCF TAutoVal* UseOutlineLevels = 0);
};
#endif

// WdTofFormat
typedef enum tagWdTofFormat
{
	wdTOFTemplate = 0, 
	wdTOFClassic = 1, 
	wdTOFDistinctive = 2, 
	wdTOFCentered = 3, 
	wdTOFFormal = 4, 
	wdTOFSimple = 5, 
} WdTofFormat;

// TablesOfFigures
// {00020922-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE TablesOfFigures
DECLARE_INTERFACE_(TablesOfFigures, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// TablesOfFigures methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get__NewEnum) (THIS_ IUnknown** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Count) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Format) (THIS_ WdTofFormat* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Format) (THIS_ WdTofFormat prop) PURE; 
	STDMETHOD_(HRESULT, Item) (THIS_ long , TableOfFigures** prop) PURE; 
	STDMETHOD_(HRESULT, AddOld) (THIS_ WordRange* , VARIANT* Caption, VARIANT* IncludeLabel, VARIANT* UseHeadingStyles, VARIANT* UpperHeadingLevel, VARIANT* LowerHeadingLevel, VARIANT* UseFields, VARIANT* TableID, VARIANT* RightAlignPageNumbers, VARIANT* IncludePageNumbers, VARIANT* AddedStyles, TableOfFigures** prop) PURE; 
	STDMETHOD_(HRESULT, MarkEntry) (THIS_ WordRange* , VARIANT* Entry, VARIANT* EntryAutoText, VARIANT* TableID, VARIANT* Level, Field** prop) PURE; 
	STDMETHOD_(HRESULT, Add) (THIS_ WordRange* , VARIANT* Caption, VARIANT* IncludeLabel, VARIANT* UseHeadingStyles, VARIANT* UpperHeadingLevel, VARIANT* LowerHeadingLevel, VARIANT* UseFields, VARIANT* TableID, VARIANT* RightAlignPageNumbers, VARIANT* IncludePageNumbers, VARIANT* AddedStyles, VARIANT* UseHyperlinks, VARIANT* HidePageNumbersInWeb, TableOfFigures** prop) PURE; 
};
typedef TablesOfFigures* LPABLESOFFIGURES;
#ifdef __cplusplus
// TablesOfFigures  {00020922-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TTablesOfFiguresProxy : public __OCF TAutoProxy
{
public:
	TTablesOfFiguresProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// _NewEnum:   [dispid -4]
	void _NewEnum(__OCF TAutoEnumerator<IUnknown*>& Obj);

	// Count:   [dispid 1]
	long Count();

	// Format:   [dispid 2]
	WdTofFormat Format();

	// Format:   [dispid 2]
	void Format(WdTofFormat arg0);

	// Item:   [dispid 0]
	void Item(TTableOfFiguresProxy& Obj, long arg0);

	// AddOld:   [dispid 100]
	void AddOld(TTableOfFiguresProxy& Obj, WordRange* arg0, __OCF TAutoVal* Caption = 0, __OCF TAutoVal* IncludeLabel = 0, __OCF TAutoVal* UseHeadingStyles = 0, __OCF TAutoVal* UpperHeadingLevel = 0, __OCF TAutoVal* LowerHeadingLevel = 0, __OCF TAutoVal* UseFields = 0, __OCF TAutoVal* TableID = 0, __OCF TAutoVal* RightAlignPageNumbers = 0, __OCF TAutoVal* IncludePageNumbers = 0, __OCF TAutoVal* AddedStyles = 0);

	// MarkEntry:   [dispid 101]
	void MarkEntry(TFieldProxy& Obj, WordRange* arg0, __OCF TAutoVal* Entry = 0, __OCF TAutoVal* EntryAutoText = 0, __OCF TAutoVal* TableID = 0, __OCF TAutoVal* Level = 0);

	// Add:   [dispid 444]
	void Add(TTableOfFiguresProxy& Obj, WordRange* arg0, __OCF TAutoVal* Caption = 0, __OCF TAutoVal* IncludeLabel = 0, __OCF TAutoVal* UseHeadingStyles = 0, __OCF TAutoVal* UpperHeadingLevel = 0, __OCF TAutoVal* LowerHeadingLevel = 0, __OCF TAutoVal* UseFields = 0, __OCF TAutoVal* TableID = 0, __OCF TAutoVal* RightAlignPageNumbers = 0, __OCF TAutoVal* IncludePageNumbers = 0, __OCF TAutoVal* AddedStyles = 0, __OCF TAutoVal* UseHyperlinks = 0, __OCF TAutoVal* HidePageNumbersInWeb = 0);
};
#endif

// Tables
// {0002094D-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE Tables
DECLARE_INTERFACE_(Tables, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// Tables methods:
	STDMETHOD_(HRESULT, Get__NewEnum) (THIS_ IUnknown** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Count) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Item) (THIS_ long , Table** prop) PURE; 
	STDMETHOD_(HRESULT, AddOld) (THIS_ WordRange* , long NumRows, long NumColumns, Table** prop) PURE; 
	STDMETHOD_(HRESULT, Add) (THIS_ WordRange* , long NumRows, long NumColumns, VARIANT* DefaultTableBehavior, VARIANT* AutoFitBehavior, Table** prop) PURE; 
	STDMETHOD_(HRESULT, Get_NestingLevel) (THIS_ long* prop) PURE; 
};
typedef Tables* LPABLES;
#ifdef __cplusplus
// Tables  {0002094D-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TTablesProxy : public __OCF TAutoProxy
{
public:
	TTablesProxy() : TAutoProxy(0x0) {}

	// _NewEnum:   [dispid -4]
	void _NewEnum(__OCF TAutoEnumerator<IUnknown*>& Obj);

	// Count:   [dispid 2]
	long Count();

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// Item:   [dispid 0]
	void Item(TTableProxy& Obj, long arg0);

	// AddOld:   [dispid 4]
	void AddOld(TTableProxy& Obj, WordRange* arg0, long NumRows, long NumColumns);

	// Add:   [dispid 200]
	void Add(TTableProxy& Obj, WordRange* arg0, long NumRows, long NumColumns, __OCF TAutoVal* DefaultTableBehavior = 0, __OCF TAutoVal* AutoFitBehavior = 0);

	// NestingLevel:   [dispid 100]
	long NestingLevel();
};
#endif

// WdConditionCode
typedef enum tagWdConditionCode
{
	wdFirstRow = 0, 
	wdLastRow = 1, 
	wdOddRowBanding = 2, 
	wdEvenRowBanding = 3, 
	wdFirstColumn = 4, 
	wdLastColumn = 5, 
	wdOddColumnBanding = 6, 
	wdEvenColumnBanding = 7, 
	wdNECell = 8, 
	wdNWCell = 9, 
	wdSECell = 10, 
	wdSWCell = 11, 
} WdConditionCode;

// TableStyle
// {B7564E97-0519-4C68-B400-3803E7C63242}
#undef INTERFACE
#define INTERFACE TableStyle
DECLARE_INTERFACE_(TableStyle, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// TableStyle methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get_AllowPageBreaks) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_AllowPageBreaks) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_Borders) (THIS_ Borders** prop) PURE; 
	STDMETHOD_(HRESULT, Set_Borders) (THIS_ Borders* prop) PURE; 
	STDMETHOD_(HRESULT, Get_BottomPadding) (THIS_ float* prop) PURE; 
	STDMETHOD_(HRESULT, Set_BottomPadding) (THIS_ float prop) PURE; 
	STDMETHOD_(HRESULT, Get_LeftPadding) (THIS_ float* prop) PURE; 
	STDMETHOD_(HRESULT, Set_LeftPadding) (THIS_ float prop) PURE; 
	STDMETHOD_(HRESULT, Get_TopPadding) (THIS_ float* prop) PURE; 
	STDMETHOD_(HRESULT, Set_TopPadding) (THIS_ float prop) PURE; 
	STDMETHOD_(HRESULT, Get_RightPadding) (THIS_ float* prop) PURE; 
	STDMETHOD_(HRESULT, Set_RightPadding) (THIS_ float prop) PURE; 
	STDMETHOD_(HRESULT, Get_Alignment) (THIS_ WdRowAlignment* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Alignment) (THIS_ WdRowAlignment prop) PURE; 
	STDMETHOD_(HRESULT, Get_Spacing) (THIS_ float* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Spacing) (THIS_ float prop) PURE; 
	STDMETHOD_(HRESULT, Condition) (THIS_ WdConditionCode ConditionCode, ConditionalStyle** prop) PURE; 
	STDMETHOD_(HRESULT, Get_TableDirection) (THIS_ WdTableDirection* prop) PURE; 
	STDMETHOD_(HRESULT, Set_TableDirection) (THIS_ WdTableDirection prop) PURE; 
	STDMETHOD_(HRESULT, Get_AllowBreakAcrossPage) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Set_AllowBreakAcrossPage) (THIS_ long prop) PURE; 
	STDMETHOD_(HRESULT, Get_LeftIndent) (THIS_ float* prop) PURE; 
	STDMETHOD_(HRESULT, Set_LeftIndent) (THIS_ float prop) PURE; 
	STDMETHOD_(HRESULT, Get_Shading) (THIS_ Shading** prop) PURE; 
	STDMETHOD_(HRESULT, Get_RowStripe) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Set_RowStripe) (THIS_ long prop) PURE; 
	STDMETHOD_(HRESULT, Get_ColumnStripe) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Set_ColumnStripe) (THIS_ long prop) PURE; 
};
typedef TableStyle* LPABLESTYLE;
#ifdef __cplusplus
// TableStyle  {B7564E97-0519-4C68-B400-3803E7C63242}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TTableStyleProxy : public __OCF TAutoProxy
{
public:
	TTableStyleProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 100]
	IDispatch* Parent();

	// AllowPageBreaks:   [dispid 2]
	/*__OWL*/ TBool AllowPageBreaks();

	// AllowPageBreaks:   [dispid 2]
	void AllowPageBreaks(/*__OWL*/ TBool arg0);

	// _Borders:   [dispid 3]
	void _Borders(TBordersProxy& Obj);

	// _Borders:   [dispid 3]
	void _Borders(Borders* arg0);

	// BottomPadding:   [dispid 4]
	float BottomPadding();

	// BottomPadding:   [dispid 4]
	void BottomPadding(float arg0);

	// LeftPadding:   [dispid 5]
	float LeftPadding();

	// LeftPadding:   [dispid 5]
	void LeftPadding(float arg0);

	// TopPadding:   [dispid 6]
	float TopPadding();

	// TopPadding:   [dispid 6]
	void TopPadding(float arg0);

	// RightPadding:   [dispid 7]
	float RightPadding();

	// RightPadding:   [dispid 7]
	void RightPadding(float arg0);

	// Alignment:   [dispid 9]
	WdRowAlignment Alignment();

	// Alignment:   [dispid 9]
	void Alignment(WdRowAlignment arg0);

	// Spacing:   [dispid 10]
	float Spacing();

	// Spacing:   [dispid 10]
	void Spacing(float arg0);

	// Condition:   [dispid 16]
	void Condition(TConditionalStyleProxy& Obj, WdConditionCode ConditionCode);

	// TableDirection:   [dispid 12]
	WdTableDirection TableDirection();

	// TableDirection:   [dispid 12]
	void TableDirection(WdTableDirection arg0);

	// AllowBreakAcrossPage:   [dispid 13]
	long AllowBreakAcrossPage();

	// AllowBreakAcrossPage:   [dispid 13]
	void AllowBreakAcrossPage(long arg0);

	// LeftIndent:   [dispid 14]
	float LeftIndent();

	// LeftIndent:   [dispid 14]
	void LeftIndent(float arg0);

	// _Shading:   [dispid 15]
	void _Shading(TShadingProxy& Obj);

	// RowStripe:   [dispid 17]
	long RowStripe();

	// RowStripe:   [dispid 17]
	void RowStripe(long arg0);

	// ColumnStripe:   [dispid 18]
	long ColumnStripe();

	// ColumnStripe:   [dispid 18]
	void ColumnStripe(long arg0);
};
#endif

// TabStops
// {00020955-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE TabStops
DECLARE_INTERFACE_(TabStops, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// TabStops methods:
	STDMETHOD_(HRESULT, Get__NewEnum) (THIS_ IUnknown** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Count) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Item) (THIS_ VARIANT* , TabStop** prop) PURE; 
	STDMETHOD_(HRESULT, Add) (THIS_ float Position, VARIANT* Alignment, VARIANT* Leader, TabStop** prop) PURE; 
	STDMETHOD_(HRESULT, ClearAll) (THIS ) PURE; 
	STDMETHOD_(HRESULT, Before) (THIS_ float Position, TabStop** prop) PURE; 
	STDMETHOD_(HRESULT, After) (THIS_ float Position, TabStop** prop) PURE; 
};
typedef TabStops* LPABSTOPS;
#ifdef __cplusplus
// TabStops  {00020955-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TTabStopsProxy : public __OCF TAutoProxy
{
public:
	TTabStopsProxy() : TAutoProxy(0x0) {}

	// _NewEnum:   [dispid -4]
	void _NewEnum(__OCF TAutoEnumerator<IUnknown*>& Obj);

	// Count:   [dispid 2]
	long Count();

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// Item:   [dispid 0]
	void Item(TTabStopProxy& Obj, __OCF TAutoVal* arg0);

	// Add:   [dispid 100]
	void Add(TTabStopProxy& Obj, float Position, __OCF TAutoVal* Alignment = 0, __OCF TAutoVal* Leader = 0);

	// ClearAll:   [dispid 101]
	void ClearAll();

	// Before:   [dispid 102]
	void Before(TTabStopProxy& Obj, float Position);

	// After:   [dispid 103]
	void After(TTabStopProxy& Obj, float Position);
};
#endif

// WdTaskPanes
typedef enum tagWdTaskPanes
{
	wdTaskPaneFormatting = 0, 
	wdTaskPaneRevealFormatting = 1, 
	wdTaskPaneMailMerge = 2, 
	wdTaskPaneTranslate = 3, 
	wdTaskPaneSearch = 4, 
	wdTaskPaneXMLStructure = 5, 
	wdTaskPaneDocumentProtection = 6, 
	wdTaskPaneDocumentActions = 7, 
	wdTaskPaneSharedWorkspace = 8, 
	wdTaskPaneHelp = 9, 
	wdTaskPaneResearch = 10, 
	wdTaskPaneFaxService = 11, 
	wdTaskPaneXMLDocument = 12, 
	wdTaskPaneDocumentUpdates = 13, 
} WdTaskPanes;

// TaskPanes
// {E6AAEC05-E543-4085-BA92-9BF7D2474F5C}
#undef INTERFACE
#define INTERFACE TaskPanes
DECLARE_INTERFACE_(TaskPanes, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// TaskPanes methods:
	STDMETHOD_(HRESULT, Get__NewEnum) (THIS_ IUnknown** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Count) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Item) (THIS_ WdTaskPanes , TaskPane** prop) PURE; 
};
typedef TaskPanes* LPASKPANES;
#ifdef __cplusplus
// TaskPanes  {E6AAEC05-E543-4085-BA92-9BF7D2474F5C}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TTaskPanesProxy : public __OCF TAutoProxy
{
public:
	TTaskPanesProxy() : TAutoProxy(0x0) {}

	// _NewEnum:   [dispid -4]
	void _NewEnum(__OCF TAutoEnumerator<IUnknown*>& Obj);

	// Count:   [dispid 2]
	long Count();

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// Item:   [dispid 0]
	void Item(TTaskPaneProxy& Obj, WdTaskPanes arg0);
};
#endif

// Tasks
// {00020983-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE Tasks
DECLARE_INTERFACE_(Tasks, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// Tasks methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get__NewEnum) (THIS_ IUnknown** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Count) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Item) (THIS_ VARIANT* , Task** prop) PURE; 
	STDMETHOD_(HRESULT, Exists) (THIS_ BSTR Name, VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, ExitInterfaceWindows) (THIS ) PURE;
};
typedef Tasks* LPASKS;
#ifdef __cplusplus
// Tasks  {00020983-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TTasksProxy : public __OCF TAutoProxy
{
public:
	TTasksProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// _NewEnum:   [dispid -4]
	void _NewEnum(__OCF TAutoEnumerator<IUnknown*>& Obj);

	// Count:   [dispid 1]
	long Count();

	// Item:   [dispid 0]
	void Item(TTaskProxy& Obj, __OCF TAutoVal* arg0);

	// Exists:   [dispid 2]
	/*__OWL*/ TBool Exists(__OCF TAutoString Name);

	// ExitWindows:   [dispid 3]
	void ExitInterfaceWindows();
};
#endif

// WdTemplateType
typedef enum tagWdTemplateType
{
	wdNormalTemplate = 0, 
	wdGlobalTemplate = 1, 
	wdAttachedTemplate = 2, 
} WdTemplateType;

// Template
// {0002096A-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE Template
DECLARE_INTERFACE_(Template, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// Template methods:
	STDMETHOD_(HRESULT, Get_Name) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Path) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Get_AutoTextEntries) (THIS_ AutoTextEntries** prop) PURE; 
	STDMETHOD_(HRESULT, Get_LanguageID) (THIS_ WdLanguageID* prop) PURE; 
	STDMETHOD_(HRESULT, Set_LanguageID) (THIS_ WdLanguageID prop) PURE; 
	STDMETHOD_(HRESULT, Get_Saved) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Saved) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_Type) (THIS_ WdTemplateType* prop) PURE; 
	STDMETHOD_(HRESULT, Get_FullName) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Get_BuiltInDocumentProperties) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get_CustomDocumentProperties) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get_ListTemplates) (THIS_ ListTemplates** prop) PURE; 
	STDMETHOD_(HRESULT, Get_LanguageIDFarEast) (THIS_ WdLanguageID* prop) PURE; 
	STDMETHOD_(HRESULT, Set_LanguageIDFarEast) (THIS_ WdLanguageID prop) PURE; 
	STDMETHOD_(HRESULT, Get_VBProject) (THIS_ VBProject** prop) PURE; 
	STDMETHOD_(HRESULT, Get_KerningByAlgorithm) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_KerningByAlgorithm) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_JustificationMode) (THIS_ WdJustificationMode* prop) PURE; 
	STDMETHOD_(HRESULT, Set_JustificationMode) (THIS_ WdJustificationMode prop) PURE; 
	STDMETHOD_(HRESULT, Get_FarEastLineBreakLevel) (THIS_ WdFarEastLineBreakLevel* prop) PURE; 
	STDMETHOD_(HRESULT, Set_FarEastLineBreakLevel) (THIS_ WdFarEastLineBreakLevel prop) PURE; 
	STDMETHOD_(HRESULT, Get_NoLineBreakBefore) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Set_NoLineBreakBefore) (THIS_ BSTR prop) PURE; 
	STDMETHOD_(HRESULT, Get_NoLineBreakAfter) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Set_NoLineBreakAfter) (THIS_ BSTR prop) PURE; 
	STDMETHOD_(HRESULT, OpenAsDocument) (THIS_ Document** prop) PURE; 
	STDMETHOD_(HRESULT, Save) (THIS ) PURE; 
	STDMETHOD_(HRESULT, Get_NoProofing) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Set_NoProofing) (THIS_ long prop) PURE; 
	STDMETHOD_(HRESULT, Get_FarEastLineBreakLanguage) (THIS_ WdFarEastLineBreakLanguageID* prop) PURE; 
	STDMETHOD_(HRESULT, Set_FarEastLineBreakLanguage) (THIS_ WdFarEastLineBreakLanguageID prop) PURE; 
};
typedef Template* LPEMPLATE;
#ifdef __cplusplus
// Template  {0002096A-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TTemplateProxy : public __OCF TAutoProxy
{
public:
	TTemplateProxy() : TAutoProxy(0x0) {}

	// Name:   [dispid 0]
	__OCF TAutoString Name();

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// Path:   [dispid 1]
	__OCF TAutoString Path();

	// _AutoTextEntries:   [dispid 2]
	void _AutoTextEntries(TAutoTextEntriesProxy& Obj);

	// LanguageID:   [dispid 4]
	WdLanguageID LanguageID();

	// LanguageID:   [dispid 4]
	void LanguageID(WdLanguageID arg0);

	// Saved:   [dispid 5]
	/*__OWL*/ TBool Saved();

	// Saved:   [dispid 5]
	void Saved(/*__OWL*/ TBool arg0);

	// Type:   [dispid 6]
	WdTemplateType Type();

	// FullName:   [dispid 7]
	__OCF TAutoString FullName();

	// BuiltInDocumentProperties:   [dispid 8]
	IDispatch* BuiltInDocumentProperties();

	// CustomDocumentProperties:   [dispid 9]
	IDispatch* CustomDocumentProperties();

	// _ListTemplates:   [dispid 10]
	void _ListTemplates(TListTemplatesProxy& Obj);

	// LanguageIDFarEast:   [dispid 11]
	WdLanguageID LanguageIDFarEast();

	// LanguageIDFarEast:   [dispid 11]
	void LanguageIDFarEast(WdLanguageID arg0);

	// _VBProject:   [dispid 99]
	VBProject* _VBProject();

	// KerningByAlgorithm:   [dispid 12]
	/*__OWL*/ TBool KerningByAlgorithm();

	// KerningByAlgorithm:   [dispid 12]
	void KerningByAlgorithm(/*__OWL*/ TBool arg0);

	// JustificationMode:   [dispid 13]
	WdJustificationMode JustificationMode();

	// JustificationMode:   [dispid 13]
	void JustificationMode(WdJustificationMode arg0);

	// FarEastLineBreakLevel:   [dispid 14]
	WdFarEastLineBreakLevel FarEastLineBreakLevel();

	// FarEastLineBreakLevel:   [dispid 14]
	void FarEastLineBreakLevel(WdFarEastLineBreakLevel arg0);

	// NoLineBreakBefore:   [dispid 15]
	__OCF TAutoString NoLineBreakBefore();

	// NoLineBreakBefore:   [dispid 15]
	void NoLineBreakBefore(__OCF TAutoString arg0);

	// NoLineBreakAfter:   [dispid 16]
	__OCF TAutoString NoLineBreakAfter();

	// NoLineBreakAfter:   [dispid 16]
	void NoLineBreakAfter(__OCF TAutoString arg0);

	// OpenAsDocument:   [dispid 100]
	Document* OpenAsDocument();

	// Save:   [dispid 101]
	void Save();

	// NoProofing:   [dispid 17]
	long NoProofing();

	// NoProofing:   [dispid 17]
	void NoProofing(long arg0);

	// FarEastLineBreakLanguage:   [dispid 18]
	WdFarEastLineBreakLanguageID FarEastLineBreakLanguage();

	// FarEastLineBreakLanguage:   [dispid 18]
	void FarEastLineBreakLanguage(WdFarEastLineBreakLanguageID arg0);
};
#endif

// Templates
// {000209A2-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE Templates
DECLARE_INTERFACE_(Templates, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// Templates methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Count) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get__NewEnum) (THIS_ IUnknown** prop) PURE; 
	STDMETHOD_(HRESULT, Item) (THIS_ VARIANT* , Template** prop) PURE; 
};
typedef Templates* LPEMPLATES;
#ifdef __cplusplus
// Templates  {000209A2-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TTemplatesProxy : public __OCF TAutoProxy
{
public:
	TTemplatesProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// Count:   [dispid 1]
	long Count();

	// _NewEnum:   [dispid -4]
	void _NewEnum(__OCF TAutoEnumerator<IUnknown*>& Obj);

	// Item:   [dispid 0]
	void Item(TTemplateProxy& Obj, __OCF TAutoVal* arg0);
};
#endif

// WdFlowDirection
typedef enum tagWdFlowDirection
{
	wdFlowLtr = 0, 
	wdFlowRtl = 1, 
} WdFlowDirection;

// TextColumns
// {00020973-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE TextColumns
DECLARE_INTERFACE_(TextColumns, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// TextColumns methods:
	STDMETHOD_(HRESULT, Get__NewEnum) (THIS_ IUnknown** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Count) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get_EvenlySpaced) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Set_EvenlySpaced) (THIS_ long prop) PURE; 
	STDMETHOD_(HRESULT, Get_LineBetween) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Set_LineBetween) (THIS_ long prop) PURE; 
	STDMETHOD_(HRESULT, Get_Width) (THIS_ float* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Width) (THIS_ float prop) PURE; 
	STDMETHOD_(HRESULT, Get_Spacing) (THIS_ float* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Spacing) (THIS_ float prop) PURE; 
	STDMETHOD_(HRESULT, Item) (THIS_ long , TextColumn** prop) PURE; 
	STDMETHOD_(HRESULT, Add) (THIS_ VARIANT* Width, VARIANT* Spacing, VARIANT* EvenlySpaced, TextColumn** prop) PURE; 
	STDMETHOD_(HRESULT, SetCount) (THIS_ long NumColumns) PURE; 
	STDMETHOD_(HRESULT, Get_FlowDirection) (THIS_ WdFlowDirection* prop) PURE; 
	STDMETHOD_(HRESULT, Set_FlowDirection) (THIS_ WdFlowDirection prop) PURE; 
};
typedef TextColumns* LPEXTCOLUMNS;
#ifdef __cplusplus
// TextColumns  {00020973-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TTextColumnsProxy : public __OCF TAutoProxy
{
public:
	TTextColumnsProxy() : TAutoProxy(0x0) {}

	// _NewEnum:   [dispid -4]
	void _NewEnum(__OCF TAutoEnumerator<IUnknown*>& Obj);

	// Count:   [dispid 2]
	long Count();

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// EvenlySpaced:   [dispid 100]
	long EvenlySpaced();

	// EvenlySpaced:   [dispid 100]
	void EvenlySpaced(long arg0);

	// LineBetween:   [dispid 101]
	long LineBetween();

	// LineBetween:   [dispid 101]
	void LineBetween(long arg0);

	// Width:   [dispid 102]
	float Width();

	// Width:   [dispid 102]
	void Width(float arg0);

	// Spacing:   [dispid 103]
	float Spacing();

	// Spacing:   [dispid 103]
	void Spacing(float arg0);

	// Item:   [dispid 0]
	void Item(TTextColumnProxy& Obj, long arg0);

	// Add:   [dispid 201]
	void Add(TTextColumnProxy& Obj, __OCF TAutoVal* Width = 0, __OCF TAutoVal* Spacing = 0, __OCF TAutoVal* EvenlySpaced = 0);

	// SetCount:   [dispid 202]
	void SetCount(long NumColumns);

	// FlowDirection:   [dispid 104]
	WdFlowDirection FlowDirection();

	// FlowDirection:   [dispid 104]
	void FlowDirection(WdFlowDirection arg0);
};
#endif

// MsoTextEffectAlignment
typedef enum tagMsoTextEffectAlignment
{
	msoTextEffectAlignmentMixed = -2, 
	msoTextEffectAlignmentLeft = 1, 
	msoTextEffectAlignmentCentered = 2, 
	msoTextEffectAlignmentRight = 3, 
	msoTextEffectAlignmentLetterJustify = 4, 
	msoTextEffectAlignmentWordJustify = 5, 
	msoTextEffectAlignmentStretchJustify = 6, 
} MsoTextEffectAlignment;

// MsoPresetTextEffectShape
typedef enum tagMsoPresetTextEffectShape
{
	msoTextEffectShapeMixed = -2,
	msoTextEffectShapePlainText = 1, 
	msoTextEffectShapeStop = 2, 
	msoTextEffectShapeTriangleUp = 3, 
	msoTextEffectShapeTriangleDown = 4, 
	msoTextEffectShapeChevronUp = 5, 
	msoTextEffectShapeChevronDown = 6, 
	msoTextEffectShapeRingInside = 7, 
	msoTextEffectShapeRingOutside = 8, 
	msoTextEffectShapeArchUpCurve = 9, 
	msoTextEffectShapeArchDownCurve = 10, 
	msoTextEffectShapeCircleCurve = 11, 
	msoTextEffectShapeButtonCurve = 12, 
	msoTextEffectShapeArchUpPour = 13, 
	msoTextEffectShapeArchDownPour = 14, 
	msoTextEffectShapeCirclePour = 15, 
	msoTextEffectShapeButtonPour = 16, 
	msoTextEffectShapeCurveUp = 17, 
	msoTextEffectShapeCurveDown = 18, 
	msoTextEffectShapeCanUp = 19, 
	msoTextEffectShapeCanDown = 20, 
	msoTextEffectShapeWave1 = 21, 
	msoTextEffectShapeWave2 = 22, 
	msoTextEffectShapeDoubleWave1 = 23, 
	msoTextEffectShapeDoubleWave2 = 24, 
	msoTextEffectShapeInflate = 25, 
	msoTextEffectShapeDeflate = 26,
	msoTextEffectShapeInflateBottom = 27, 
	msoTextEffectShapeDeflateBottom = 28, 
	msoTextEffectShapeInflateTop = 29, 
	msoTextEffectShapeDeflateTop = 30, 
	msoTextEffectShapeDeflateInflate = 31, 
	msoTextEffectShapeDeflateInflateDeflate = 32, 
	msoTextEffectShapeFadeRight = 33, 
	msoTextEffectShapeFadeLeft = 34, 
	msoTextEffectShapeFadeUp = 35, 
	msoTextEffectShapeFadeDown = 36, 
	msoTextEffectShapeSlantUp = 37, 
	msoTextEffectShapeSlantDown = 38, 
	msoTextEffectShapeCascadeUp = 39, 
	msoTextEffectShapeCascadeDown = 40, 
} MsoPresetTextEffectShape;

// TextEffectFormat
// {000209CF-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE TextEffectFormat
DECLARE_INTERFACE_(TextEffectFormat, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE;
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// TextEffectFormat methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Alignment) (THIS_ MsoTextEffectAlignment* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Alignment) (THIS_ MsoTextEffectAlignment prop) PURE; 
	STDMETHOD_(HRESULT, Get_FontBold) (THIS_ MsoTriState* prop) PURE; 
	STDMETHOD_(HRESULT, Set_FontBold) (THIS_ MsoTriState prop) PURE; 
	STDMETHOD_(HRESULT, Get_FontItalic) (THIS_ MsoTriState* prop) PURE; 
	STDMETHOD_(HRESULT, Set_FontItalic) (THIS_ MsoTriState prop) PURE; 
	STDMETHOD_(HRESULT, Get_FontName) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Set_FontName) (THIS_ BSTR prop) PURE; 
	STDMETHOD_(HRESULT, Get_FontSize) (THIS_ float* prop) PURE; 
	STDMETHOD_(HRESULT, Set_FontSize) (THIS_ float prop) PURE; 
	STDMETHOD_(HRESULT, Get_KernedPairs) (THIS_ MsoTriState* prop) PURE; 
	STDMETHOD_(HRESULT, Set_KernedPairs) (THIS_ MsoTriState prop) PURE; 
	STDMETHOD_(HRESULT, Get_NormalizedHeight) (THIS_ MsoTriState* prop) PURE; 
	STDMETHOD_(HRESULT, Set_NormalizedHeight) (THIS_ MsoTriState prop) PURE; 
	STDMETHOD_(HRESULT, Get_PresetShape) (THIS_ MsoPresetTextEffectShape* prop) PURE; 
	STDMETHOD_(HRESULT, Set_PresetShape) (THIS_ MsoPresetTextEffectShape prop) PURE; 
	STDMETHOD_(HRESULT, Get_PresetTextEffect) (THIS_ MsoPresetTextEffect* prop) PURE; 
	STDMETHOD_(HRESULT, Set_PresetTextEffect) (THIS_ MsoPresetTextEffect prop) PURE; 
	STDMETHOD_(HRESULT, Get_RotatedChars) (THIS_ MsoTriState* prop) PURE; 
	STDMETHOD_(HRESULT, Set_RotatedChars) (THIS_ MsoTriState prop) PURE; 
	STDMETHOD_(HRESULT, Get_Text) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Text) (THIS_ BSTR prop) PURE; 
	STDMETHOD_(HRESULT, Get_Tracking) (THIS_ float* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Tracking) (THIS_ float prop) PURE; 
	STDMETHOD_(HRESULT, ToggleVerticalText) (THIS ) PURE; 
};
typedef TextEffectFormat* LPEXTEFFECTFORMAT;
#ifdef __cplusplus
// TextEffectFormat  {000209CF-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TTextEffectFormatProxy : public __OCF TAutoProxy
{
public:
	TTextEffectFormatProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1]
	IDispatch* Parent();

	// Alignment:   [dispid 100]
	MsoTextEffectAlignment Alignment();

	// Alignment:   [dispid 100]
	void Alignment(MsoTextEffectAlignment arg0);

	// _FontBold:   [dispid 101]
	MsoTriState _FontBold();

	// _FontBold:   [dispid 101]
	void _FontBold(MsoTriState arg0);

	// _FontItalic:   [dispid 102]
	MsoTriState _FontItalic();

	// _FontItalic:   [dispid 102]
	void _FontItalic(MsoTriState arg0);

	// _FontName:   [dispid 103]
	__OCF TAutoString _FontName();

	// _FontName:   [dispid 103]
	void _FontName(__OCF TAutoString arg0);

	// _FontSize:   [dispid 104]
	float _FontSize();

	// _FontSize:   [dispid 104]
	void _FontSize(float arg0);

	// KernedPairs:   [dispid 105]
	MsoTriState KernedPairs();

	// KernedPairs:   [dispid 105]
	void KernedPairs(MsoTriState arg0);

	// NormalizedHeight:   [dispid 106]
	MsoTriState NormalizedHeight();

	// NormalizedHeight:   [dispid 106]
	void NormalizedHeight(MsoTriState arg0);

	// PresetShape:   [dispid 107]
	MsoPresetTextEffectShape PresetShape();

	// PresetShape:   [dispid 107]
	void PresetShape(MsoPresetTextEffectShape arg0);

	// PresetTextEffect:   [dispid 108]
	MsoPresetTextEffect PresetTextEffect();

	// PresetTextEffect:   [dispid 108]
	void PresetTextEffect(MsoPresetTextEffect arg0);

	// RotatedChars:   [dispid 109]
	MsoTriState RotatedChars();

	// RotatedChars:   [dispid 109]
	void RotatedChars(MsoTriState arg0);

	// Text:   [dispid 110]
	__OCF TAutoString Text();

	// Text:   [dispid 110]
	void Text(__OCF TAutoString arg0);

	// Tracking:   [dispid 111]
	float Tracking();

	// Tracking:   [dispid 111]
	void Tracking(float arg0);

	// ToggleVerticalText:   [dispid 10]
	void ToggleVerticalText();
};
#endif

// TextFrame
// {000209B2-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE TextFrame
DECLARE_INTERFACE_(TextFrame, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// TextFrame methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ WordShape** prop) PURE; 
	STDMETHOD_(HRESULT, Get_MarginBottom) (THIS_ float* prop) PURE; 
	STDMETHOD_(HRESULT, Set_MarginBottom) (THIS_ float prop) PURE; 
	STDMETHOD_(HRESULT, Get_MarginLeft) (THIS_ float* prop) PURE; 
	STDMETHOD_(HRESULT, Set_MarginLeft) (THIS_ float prop) PURE; 
	STDMETHOD_(HRESULT, Get_MarginRight) (THIS_ float* prop) PURE; 
	STDMETHOD_(HRESULT, Set_MarginRight) (THIS_ float prop) PURE; 
	STDMETHOD_(HRESULT, Get_MarginTop) (THIS_ float* prop) PURE; 
	STDMETHOD_(HRESULT, Set_MarginTop) (THIS_ float prop) PURE; 
	STDMETHOD_(HRESULT, Get_Orientation) (THIS_ MsoTextOrientation* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Orientation) (THIS_ MsoTextOrientation prop) PURE; 
	STDMETHOD_(HRESULT, Get_TextRange) (THIS_ WordRange** prop) PURE; 
	STDMETHOD_(HRESULT, Get_ContainingRange) (THIS_ WordRange** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Next) (THIS_ TextFrame** prop) PURE; 
	STDMETHOD_(HRESULT, Set_Next) (THIS_ TextFrame* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Previous) (THIS_ TextFrame** prop) PURE; 
	STDMETHOD_(HRESULT, Set_Previous) (THIS_ TextFrame* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Overflowing) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Get_HasText) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, BreakForwardLink) (THIS ) PURE; 
	STDMETHOD_(HRESULT, ValidLinkTarget) (THIS_ TextFrame* TargetTextFrame, VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Get_AutoSize) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Set_AutoSize) (THIS_ long prop) PURE; 
	STDMETHOD_(HRESULT, Get_WordWrap) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Set_WordWrap) (THIS_ long prop) PURE; 
};
typedef TextFrame* LPEXTFRAME;
#ifdef __cplusplus
// TextFrame  {000209B2-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TTextFrameProxy : public __OCF TAutoProxy
{
public:
	TTextFrameProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 8000]
	WordApplication* _Application();

	// Creator:   [dispid 8001]
	long Creator();

	// Parent:   [dispid 1]
	void Parent(TShapeProxy& Obj);

	// MarginBottom:   [dispid 100]
	float MarginBottom();

	// MarginBottom:   [dispid 100]
	void MarginBottom(float arg0);

	// MarginLeft:   [dispid 101]
	float MarginLeft();

	// MarginLeft:   [dispid 101]
	void MarginLeft(float arg0);

	// MarginRight:   [dispid 102]
	float MarginRight();

	// MarginRight:   [dispid 102]
	void MarginRight(float arg0);

	// MarginTop:   [dispid 103]
	float MarginTop();

	// MarginTop:   [dispid 103]
	void MarginTop(float arg0);

	// Orientation:   [dispid 104]
	MsoTextOrientation Orientation();

	// Orientation:   [dispid 104]
	void Orientation(MsoTextOrientation arg0);

	// TextRange:   [dispid 1001]
	void TextRange(TRangeProxy& Obj);

	// ContainingRange:   [dispid 1002]
	void ContainingRange(TRangeProxy& Obj);

	// Next:   [dispid 5001]
	void Next(TTextFrameProxy& Obj);

	// Next:   [dispid 5001]
	void Next(TextFrame* arg0);

	// Previous:   [dispid 5002]
	void Previous(TTextFrameProxy& Obj);

	// Previous:   [dispid 5002]
	void Previous(TextFrame* arg0);

	// Overflowing:   [dispid 5003]
	/*__OWL*/ TBool Overflowing();

	// HasText:   [dispid 5008]
	long HasText();

	// BreakForwardLink:   [dispid 5004]
	void BreakForwardLink();

	// ValidLinkTarget:   [dispid 5006]
	/*__OWL*/ TBool ValidLinkTarget(TextFrame* TargetTextFrame);

	// AutoSize:   [dispid 5009]
	long AutoSize();

	// AutoSize:   [dispid 5009]
	void AutoSize(long arg0);

	// WordWrap:   [dispid 5010]
	long WordWrap();

	// WordWrap:   [dispid 5010]
	void WordWrap(long arg0);
};
#endif

// WdViewType
typedef enum tagWdViewType
{
	wdNormalView = 1, 
	wdOutlineView = 2, 
	wdPrintView = 3, 
	wdPrintPreview = 4, 
	wdMasterView = 5, 
	wdWebView = 6, 
	wdReadingView = 7, 
} WdViewType;

// TextRetrievalMode
// {00020939-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE TextRetrievalMode
DECLARE_INTERFACE_(TextRetrievalMode, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// TextRetrievalMode methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get_ViewType) (THIS_ WdViewType* prop) PURE; 
	STDMETHOD_(HRESULT, Set_ViewType) (THIS_ WdViewType prop) PURE; 
	STDMETHOD_(HRESULT, Get_Duplicate) (THIS_ TextRetrievalMode** prop) PURE; 
	STDMETHOD_(HRESULT, Get_IncludeHiddenText) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_IncludeHiddenText) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_IncludeFieldCodes) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_IncludeFieldCodes) (THIS_ VARIANT_BOOL prop) PURE; 
};
typedef TextRetrievalMode* LPEXTRETRIEVALMODE;
#ifdef __cplusplus
// TextRetrievalMode  {00020939-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TTextRetrievalModeProxy : public __OCF TAutoProxy
{
public:
	TTextRetrievalModeProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// ViewType:   [dispid 0]
	WdViewType ViewType();

	// ViewType:   [dispid 0]
	void ViewType(WdViewType arg0);

	// Duplicate:   [dispid 1]
	void Duplicate(TTextRetrievalModeProxy& Obj);

	// IncludeHiddenText:   [dispid 2]
	/*__OWL*/ TBool IncludeHiddenText();

	// IncludeHiddenText:   [dispid 2]
	void IncludeHiddenText(/*__OWL*/ TBool arg0);

	// IncludeFieldCodes:   [dispid 3]
	/*__OWL*/ TBool IncludeFieldCodes();

	// IncludeFieldCodes:   [dispid 3]
	void IncludeFieldCodes(/*__OWL*/ TBool arg0);
};
#endif

// MsoExtrusionColorType
typedef enum tagMsoExtrusionColorType
{
	msoExtrusionColorTypeMixed = -2, 
	msoExtrusionColorAutomatic = 1, 
	msoExtrusionColorCustom = 2, 
} MsoExtrusionColorType;

// MsoPresetExtrusionDirection
typedef enum tagMsoPresetExtrusionDirection
{
	msoPresetExtrusionDirectionMixed = -2, 
	msoExtrusionBottomRight = 1, 
	msoExtrusionBottom = 2, 
	msoExtrusionBottomLeft = 3, 
	msoExtrusionRight = 4, 
	msoExtrusionNone = 5, 
	msoExtrusionLeft = 6, 
	msoExtrusionTopRight = 7, 
	msoExtrusionTop = 8, 
	msoExtrusionTopLeft = 9, 
} MsoPresetExtrusionDirection;

// MsoPresetLightingDirection
typedef enum tagMsoPresetLightingDirection
{
	msoPresetLightingDirectionMixed = -2, 
	msoLightingTopLeft = 1, 
	msoLightingTop = 2, 
	msoLightingTopRight = 3, 
	msoLightingLeft = 4, 
	msoLightingNone = 5, 
	msoLightingRight = 6, 
	msoLightingBottomLeft = 7, 
	msoLightingBottom = 8, 
	msoLightingBottomRight = 9, 
} MsoPresetLightingDirection;

// MsoPresetLightingSoftness
typedef enum tagMsoPresetLightingSoftness
{
	msoPresetLightingSoftnessMixed = -2, 
	msoLightingDim = 1, 
	msoLightingNormal = 2, 
	msoLightingBright = 3, 
} MsoPresetLightingSoftness;

// MsoPresetMaterial
typedef enum tagMsoPresetMaterial
{
	msoPresetMaterialMixed = -2, 
	msoMaterialMatte = 1, 
	msoMaterialPlastic = 2, 
	msoMaterialMetal = 3, 
	msoMaterialWireFrame = 4, 
} MsoPresetMaterial;

// MsoPresetThreeDFormat
typedef enum tagMsoPresetThreeDFormat
{
	msoPresetThreeDFormatMixed = -2, 
	msoThreeD1 = 1, 
	msoThreeD2 = 2, 
	msoThreeD3 = 3, 
	msoThreeD4 = 4, 
	msoThreeD5 = 5, 
	msoThreeD6 = 6, 
	msoThreeD7 = 7, 
	msoThreeD8 = 8, 
	msoThreeD9 = 9, 
	msoThreeD10 = 10, 
	msoThreeD11 = 11, 
	msoThreeD12 = 12, 
	msoThreeD13 = 13, 
	msoThreeD14 = 14, 
	msoThreeD15 = 15, 
	msoThreeD16 = 16, 
	msoThreeD17 = 17, 
	msoThreeD18 = 18, 
	msoThreeD19 = 19, 
	msoThreeD20 = 20, 
} MsoPresetThreeDFormat;

// ThreeDFormat
// {000209D0-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE ThreeDFormat
DECLARE_INTERFACE_(ThreeDFormat, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// ThreeDFormat methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Depth) (THIS_ float* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Depth) (THIS_ float prop) PURE; 
	STDMETHOD_(HRESULT, Get_ExtrusionColor) (THIS_ ColorFormat** prop) PURE; 
	STDMETHOD_(HRESULT, Get_ExtrusionColorType) (THIS_ MsoExtrusionColorType* prop) PURE; 
	STDMETHOD_(HRESULT, Set_ExtrusionColorType) (THIS_ MsoExtrusionColorType prop) PURE; 
	STDMETHOD_(HRESULT, Get_Perspective) (THIS_ MsoTriState* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Perspective) (THIS_ MsoTriState prop) PURE; 
	STDMETHOD_(HRESULT, Get_PresetExtrusionDirection) (THIS_ MsoPresetExtrusionDirection* prop) PURE; 
	STDMETHOD_(HRESULT, Get_PresetLightingDirection) (THIS_ MsoPresetLightingDirection* prop) PURE; 
	STDMETHOD_(HRESULT, Set_PresetLightingDirection) (THIS_ MsoPresetLightingDirection prop) PURE; 
	STDMETHOD_(HRESULT, Get_PresetLightingSoftness) (THIS_ MsoPresetLightingSoftness* prop) PURE; 
	STDMETHOD_(HRESULT, Set_PresetLightingSoftness) (THIS_ MsoPresetLightingSoftness prop) PURE; 
	STDMETHOD_(HRESULT, Get_PresetMaterial) (THIS_ MsoPresetMaterial* prop) PURE; 
	STDMETHOD_(HRESULT, Set_PresetMaterial) (THIS_ MsoPresetMaterial prop) PURE; 
	STDMETHOD_(HRESULT, Get_PresetThreeDFormat) (THIS_ MsoPresetThreeDFormat* prop) PURE; 
	STDMETHOD_(HRESULT, Get_RotationX) (THIS_ float* prop) PURE; 
	STDMETHOD_(HRESULT, Set_RotationX) (THIS_ float prop) PURE; 
	STDMETHOD_(HRESULT, Get_RotationY) (THIS_ float* prop) PURE; 
	STDMETHOD_(HRESULT, Set_RotationY) (THIS_ float prop) PURE; 
	STDMETHOD_(HRESULT, Get_Visible) (THIS_ MsoTriState* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Visible) (THIS_ MsoTriState prop) PURE; 
	STDMETHOD_(HRESULT, IncrementRotationX) (THIS_ float Increment) PURE; 
	STDMETHOD_(HRESULT, IncrementRotationY) (THIS_ float Increment) PURE; 
	STDMETHOD_(HRESULT, ResetRotation) (THIS ) PURE; 
	STDMETHOD_(HRESULT, SetExtrusionDirection) (THIS_ MsoPresetExtrusionDirection PresetExtrusionDirection) PURE; 
	STDMETHOD_(HRESULT, SetThreeDFormat) (THIS_ MsoPresetThreeDFormat PresetThreeDFormat) PURE; 
};
typedef ThreeDFormat* LPHREEDFORMAT;
#ifdef __cplusplus
// ThreeDFormat  {000209D0-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TThreeDFormatProxy : public __OCF TAutoProxy
{
public:
	TThreeDFormatProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1]
	IDispatch* Parent();

	// Depth:   [dispid 100]
	float Depth();

	// Depth:   [dispid 100]
	void Depth(float arg0);

	// ExtrusionColor:   [dispid 101]
	void ExtrusionColor(TColorFormatProxy& Obj);

	// ExtrusionColorType:   [dispid 102]
	MsoExtrusionColorType ExtrusionColorType();

	// ExtrusionColorType:   [dispid 102]
	void ExtrusionColorType(MsoExtrusionColorType arg0);

	// Perspective:   [dispid 103]
	MsoTriState Perspective();

	// Perspective:   [dispid 103]
	void Perspective(MsoTriState arg0);

	// PresetExtrusionDirection:   [dispid 104]
	MsoPresetExtrusionDirection PresetExtrusionDirection();

	// PresetLightingDirection:   [dispid 105]
	MsoPresetLightingDirection PresetLightingDirection();

	// PresetLightingDirection:   [dispid 105]
	void PresetLightingDirection(MsoPresetLightingDirection arg0);

	// PresetLightingSoftness:   [dispid 106]
	MsoPresetLightingSoftness PresetLightingSoftness();

	// PresetLightingSoftness:   [dispid 106]
	void PresetLightingSoftness(MsoPresetLightingSoftness arg0);

	// PresetMaterial:   [dispid 107]
	MsoPresetMaterial PresetMaterial();

	// PresetMaterial:   [dispid 107]
	void PresetMaterial(MsoPresetMaterial arg0);

	// PresetThreeDFormat:   [dispid 108]
	MsoPresetThreeDFormat PresetThreeDFormat();

	// RotationX:   [dispid 109]
	float RotationX();

	// RotationX:   [dispid 109]
	void RotationX(float arg0);

	// RotationY:   [dispid 110]
	float RotationY();

	// RotationY:   [dispid 110]
	void RotationY(float arg0);

	// Visible:   [dispid 111]
	MsoTriState Visible();

	// Visible:   [dispid 111]
	void Visible(MsoTriState arg0);

	// IncrementRotationX:   [dispid 10]
	void IncrementRotationX(float Increment);

	// IncrementRotationY:   [dispid 11]
	void IncrementRotationY(float Increment);

	// ResetRotation:   [dispid 12]
	void ResetRotation();

	// SetExtrusionDirection:   [dispid 14]
	void SetExtrusionDirection(MsoPresetExtrusionDirection PresetExtrusionDirection);

	// SetThreeDFormat:   [dispid 13]
	void SetThreeDFormat(MsoPresetThreeDFormat PresetThreeDFormat);
};
#endif

// TwoInitialCapsExceptions
// {00020944-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE TwoInitialCapsExceptions
DECLARE_INTERFACE_(TwoInitialCapsExceptions, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// TwoInitialCapsExceptions methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get__NewEnum) (THIS_ IUnknown** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Count) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Item) (THIS_ VARIANT* , TwoInitialCapsException** prop) PURE; 
	STDMETHOD_(HRESULT, Add) (THIS_ BSTR Name, TwoInitialCapsException** prop) PURE; 
};
typedef TwoInitialCapsExceptions* LPWOINITIALCAPSEXCEPTIONS;
#ifdef __cplusplus
// TwoInitialCapsExceptions  {00020944-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TTwoInitialCapsExceptionsProxy : public __OCF TAutoProxy
{
public:
	TTwoInitialCapsExceptionsProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// _NewEnum:   [dispid -4]
	void _NewEnum(__OCF TAutoEnumerator<IUnknown*>& Obj);

	// Count:   [dispid 1]
	long Count();

	// Item:   [dispid 0]
	void Item(TTwoInitialCapsExceptionProxy& Obj, __OCF TAutoVal* arg0);

	// Add:   [dispid 101]
	void Add(TTwoInitialCapsExceptionProxy& Obj, __OCF TAutoString Name);
};
#endif

// UserPermission
// {000C0375-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE UserPermission
DECLARE_INTERFACE_(UserPermission, _IMsoDispObj)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
	// _IMsoDispObj methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ IDispatch** ppidisp) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* plCreator) PURE; 
#endif
	// UserPermission methods:
	STDMETHOD_(HRESULT, Get_UserId) (THIS_ BSTR* UserId) PURE; 
	STDMETHOD_(HRESULT, Get_Permission) (THIS_ long* ) PURE; 
	STDMETHOD_(HRESULT, Set_Permission) (THIS_ long ) PURE; 
	STDMETHOD_(HRESULT, Get_ExpirationDate) (THIS_ VARIANT* ExpirationDate) PURE; 
	STDMETHOD_(HRESULT, Set_ExpirationDate) (THIS_ VARIANT ExpirationDate) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** ppidisp) PURE; 
	STDMETHOD_(HRESULT, Remove) (THIS ) PURE; 
};
typedef UserPermission* LPSERPERMISSION;
#ifdef __cplusplus
// UserPermission  {000C0375-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TUserPermissionProxy : public __OCF TAutoProxy
{
public:
	TUserPermissionProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1610743808]
	IDispatch* _Application();

	// Creator:   [dispid 1610743809]
	long Creator();

	// UserId:   [dispid 0]
	__OCF TAutoString UserId();

	// _Permission:   [dispid 1]
	long _Permission();

	// _Permission:   [dispid 1]
	void _Permission(long arg0);

	// ExpirationDate:   [dispid 2]
	__OCF TAutoVal ExpirationDate();

	// ExpirationDate:   [dispid 2]
	void ExpirationDate(__OCF TAutoVal arg0);

	// Parent:   [dispid 3]
	IDispatch* Parent();

	// Remove:   [dispid 4]
	void Remove();
};
#endif

// Variables
// {00020965-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE Variables
DECLARE_INTERFACE_(Variables, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// Variables methods:
	STDMETHOD_(HRESULT, Get__NewEnum) (THIS_ IUnknown** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Count) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Item) (THIS_ VARIANT* , Variable** prop) PURE; 
	STDMETHOD_(HRESULT, Add) (THIS_ BSTR Name, VARIANT* Value, Variable** prop) PURE; 
};
typedef Variables* LPARIABLES;
#ifdef __cplusplus
// Variables  {00020965-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TVariablesProxy : public __OCF TAutoProxy
{
public:
	TVariablesProxy() : TAutoProxy(0x0) {}

	// _NewEnum:   [dispid -4]
	void _NewEnum(__OCF TAutoEnumerator<IUnknown*>& Obj);

	// Count:   [dispid 2]
	long Count();

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// Item:   [dispid 0]
	void Item(TVariableProxy& Obj, __OCF TAutoVal* arg0);

	// Add:   [dispid 7]
	void Add(TVariableProxy& Obj, __OCF TAutoString Name, __OCF TAutoVal* Value = 0);
};
#endif

// VBE
// {0002E166-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE VBE
DECLARE_INTERFACE_(VBE, WordApplication)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
	// Application methods:
	STDMETHOD_(HRESULT, Get_Version) (THIS_ BSTR* lpbstrReturn) PURE; 
#endif
	// VBE methods:
	STDMETHOD_(HRESULT, Get_VBProjects) (THIS_ VBProjects** lppptReturn) PURE; 
	STDMETHOD_(HRESULT, Get_CommandBars) (THIS_ CommandBars** ppcbs) PURE; 
	STDMETHOD_(HRESULT, Get_CodePanes) (THIS_ CodePanes** ppCodePanes) PURE; 
	STDMETHOD_(HRESULT, Get_Windows) (THIS_ WordWindows** ppwnsVBWindows) PURE; 
	STDMETHOD_(HRESULT, Get_Events) (THIS_ Events** ppevtEvents) PURE; 
	STDMETHOD_(HRESULT, Get_ActiveVBProject) (THIS_ VBProject** lppptReturn) PURE; 
	STDMETHOD_(HRESULT, SetRef_ActiveVBProject) (THIS_ VBProject* lppptReturn) PURE; 
	STDMETHOD_(HRESULT, Get_SelectedVBComponent) (THIS_ VBComponent** lppscReturn) PURE; 
	STDMETHOD_(HRESULT, Get_MainWindow) (THIS_ Window** ppwin) PURE; 
	STDMETHOD_(HRESULT, Get_ActiveWindow) (THIS_ Window** ppwinActive) PURE; 
	STDMETHOD_(HRESULT, Get_ActiveCodePane) (THIS_ CodePane** ppCodePane) PURE; 
	STDMETHOD_(HRESULT, SetRef_ActiveCodePane) (THIS_ CodePane* ppCodePane) PURE; 
	STDMETHOD_(HRESULT, Get_Addins) (THIS_ WordAddIns** lpppAddIns) PURE;
};
typedef VBE* LPBE;
#ifdef __cplusplus
// VBE  {0002E166-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TVBEProxy : public __OCF TAutoProxy
{
public:
	TVBEProxy() : TAutoProxy(0x0) {}

	// Version:   [dispid 100]
	__OCF TAutoString Version();

	// _VBProjects:   [dispid 107]
	VBProjects* _VBProjects();

	// _CommandBars:   [dispid 108]
	CommandBars* _CommandBars();

	// _CodePanes:   [dispid 109]
	CodePanes* _CodePanes();

	// _Windows:   [dispid 110]
	WordWindows* GetWindows();

	// _Events:   [dispid 111]
	void _Events(TEventsProxy& Obj);

	// ActiveVBProject:   [dispid 201]
	VBProject* ActiveVBProject();

	// ActiveVBProject:   [dispid 201]
	void ActiveVBProject(VBProject* arg0);

	// SelectedVBComponent:   [dispid 202]
	VBComponent* SelectedVBComponent();

	// MainWindow:   [dispid 204]
	void MainWindow(TWindowProxy& Obj);

	// ActiveWindow:   [dispid 205]
	void ActiveWindow(TWindowProxy& Obj);

	// ActiveCodePane:   [dispid 206]
	CodePane* ActiveCodePane();

	// ActiveCodePane:   [dispid 206]
	void ActiveCodePane(CodePane* arg0);

	// _Addins:   [dispid 209]
	WordAddIns* _Addins();
};
#endif

// WdAutoVersions
typedef enum tagWdAutoVersions
{
	wdAutoVersionOff = 0, 
	wdAutoVersionOnClose = 1, 
} WdAutoVersions;

// Versions
// {000209B3-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE Versions
DECLARE_INTERFACE_(Versions, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// Versions methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get__NewEnum) (THIS_ IUnknown** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Count) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_AutoVersion) (THIS_ WdAutoVersions* prop) PURE; 
	STDMETHOD_(HRESULT, Set_AutoVersion) (THIS_ WdAutoVersions prop) PURE; 
	STDMETHOD_(HRESULT, Item) (THIS_ long , Version** prop) PURE; 
	STDMETHOD_(HRESULT, Save) (THIS_ VARIANT* ) PURE; 
};
typedef Versions* LPERSIONS;
#ifdef __cplusplus
// Versions  {000209B3-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TVersionsProxy : public __OCF TAutoProxy
{
public:
	TVersionsProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// _NewEnum:   [dispid -4]
	void _NewEnum(__OCF TAutoEnumerator<IUnknown*>& Obj);

	// Count:   [dispid 2]
	long Count();

	// AutoVersion:   [dispid 3]
	WdAutoVersions AutoVersion();

	// AutoVersion:   [dispid 3]
	void AutoVersion(WdAutoVersions arg0);

	// Item:   [dispid 0]
	void Item(TVersionProxy& Obj, long arg0);

	// Save:   [dispid 11]
	void Save(__OCF TAutoVal* arg0 = 0);
};
#endif

// WebOptions
// {000209E4-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE WebOptions
DECLARE_INTERFACE_(WebOptions, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// WebOptions methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get_OptimizeForBrowser) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_OptimizeForBrowser) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_BrowserLevel) (THIS_ WdBrowserLevel* prop) PURE; 
	STDMETHOD_(HRESULT, Set_BrowserLevel) (THIS_ WdBrowserLevel prop) PURE; 
	STDMETHOD_(HRESULT, Get_RelyOnCSS) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_RelyOnCSS) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_OrganizeInFolder) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_OrganizeInFolder) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_UseLongFileNames) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_UseLongFileNames) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_RelyOnVML) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_RelyOnVML) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_AllowPNG) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_AllowPNG) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_ScreenSize) (THIS_ MsoScreenSize* prop) PURE; 
	STDMETHOD_(HRESULT, Set_ScreenSize) (THIS_ MsoScreenSize prop) PURE; 
	STDMETHOD_(HRESULT, Get_PixelsPerInch) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Set_PixelsPerInch) (THIS_ long prop) PURE; 
	STDMETHOD_(HRESULT, Get_Encoding) (THIS_ MsoEncoding* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Encoding) (THIS_ MsoEncoding prop) PURE; 
	STDMETHOD_(HRESULT, Get_FolderSuffix) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, UseDefaultFolderSuffix) (THIS ) PURE; 
	STDMETHOD_(HRESULT, Get_TargetBrowser) (THIS_ MsoTargetBrowser* prop) PURE; 
	STDMETHOD_(HRESULT, Set_TargetBrowser) (THIS_ MsoTargetBrowser prop) PURE; 
};
typedef WebOptions* LPEBOPTIONS;
#ifdef __cplusplus
// WebOptions  {000209E4-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TWebOptionsProxy : public __OCF TAutoProxy
{
public:
	TWebOptionsProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// OptimizeForBrowser:   [dispid 1]
	/*__OWL*/ TBool OptimizeForBrowser();

	// OptimizeForBrowser:   [dispid 1]
	void OptimizeForBrowser(/*__OWL*/ TBool arg0);

	// BrowserLevel:   [dispid 2]
	WdBrowserLevel BrowserLevel();

	// BrowserLevel:   [dispid 2]
	void BrowserLevel(WdBrowserLevel arg0);

	// RelyOnCSS:   [dispid 3]
	/*__OWL*/ TBool RelyOnCSS();

	// RelyOnCSS:   [dispid 3]
	void RelyOnCSS(/*__OWL*/ TBool arg0);

	// OrganizeInFolder:   [dispid 4]
	/*__OWL*/ TBool OrganizeInFolder();

	// OrganizeInFolder:   [dispid 4]
	void OrganizeInFolder(/*__OWL*/ TBool arg0);

	// UseLongFileNames:   [dispid 5]
	/*__OWL*/ TBool UseLongFileNames();

	// UseLongFileNames:   [dispid 5]
	void UseLongFileNames(/*__OWL*/ TBool arg0);

	// RelyOnVML:   [dispid 6]
	/*__OWL*/ TBool RelyOnVML();

	// RelyOnVML:   [dispid 6]
	void RelyOnVML(/*__OWL*/ TBool arg0);

	// AllowPNG:   [dispid 7]
	/*__OWL*/ TBool AllowPNG();

	// AllowPNG:   [dispid 7]
	void AllowPNG(/*__OWL*/ TBool arg0);

	// ScreenSize:   [dispid 8]
	MsoScreenSize ScreenSize();

	// ScreenSize:   [dispid 8]
	void ScreenSize(MsoScreenSize arg0);

	// PixelsPerInch:   [dispid 9]
	long PixelsPerInch();

	// PixelsPerInch:   [dispid 9]
	void PixelsPerInch(long arg0);

	// Encoding:   [dispid 10]
	MsoEncoding Encoding();

	// Encoding:   [dispid 10]
	void Encoding(MsoEncoding arg0);

	// FolderSuffix:   [dispid 11]
	__OCF TAutoString FolderSuffix();

	// UseDefaultFolderSuffix:   [dispid 101]
	void UseDefaultFolderSuffix();

	// TargetBrowser:   [dispid 12]
	MsoTargetBrowser TargetBrowser();

	// TargetBrowser:   [dispid 12]
	void TargetBrowser(MsoTargetBrowser arg0);
};
#endif

// MsoCharacterSet
typedef enum tagMsoCharacterSet
{
	msoCharacterSetArabic = 1, 
	msoCharacterSetCyrillic = 2, 
	msoCharacterSetEnglishWesternEuropeanOtherLatinScript = 3, 
	msoCharacterSetGreek = 4, 
	msoCharacterSetHebrew = 5, 
	msoCharacterSetJapanese = 6, 
	msoCharacterSetKorean = 7, 
	msoCharacterSetMultilingualUnicode = 8, 
	msoCharacterSetSimplifiedChinese = 9, 
	msoCharacterSetThai = 10, 
	msoCharacterSetTraditionalChinese = 11, 
	msoCharacterSetVietnamese = 12, 
} MsoCharacterSet;

// WebPageFonts
// {000C0914-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE WebPageFonts
DECLARE_INTERFACE_(WebPageFonts, _IMsoDispObj)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
	// _IMsoDispObj methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ IDispatch** ppidisp) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* plCreator) PURE; 
#endif
	// WebPageFonts methods:
	STDMETHOD_(HRESULT, Get_Count) (THIS_ int* Count) PURE; 
	STDMETHOD_(HRESULT, Get_Item) (THIS_ MsoCharacterSet , WebPageFont** Item) PURE; 
	STDMETHOD_(HRESULT, Get__NewEnum) (THIS_ IUnknown** _NewEnum) PURE; 
};
typedef WebPageFonts* LPEBPAGEFONTS;
#ifdef __cplusplus
// WebPageFonts  {000C0914-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TWebPageFontsProxy : public __OCF TAutoProxy
{
public:
	TWebPageFontsProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1610743808]
	IDispatch* _Application();

	// Creator:   [dispid 1610743809]
	long Creator();

	// Count:   [dispid 1]
	int Count();

	// Item:   [dispid 0]
	void Item(TWebPageFontProxy& Obj, MsoCharacterSet arg0);

	// _NewEnum:   [dispid -4]
	void _NewEnum(__OCF TAutoEnumerator<IUnknown*>& Obj);
};
#endif

// WdWindowType
typedef enum tagWdWindowType
{
	wdWindowDocument = 0, 
	wdWindowTemplate = 1, 
} WdWindowType;

// WdIMEMode
typedef enum tagWdIMEMode
{
	wdIMEModeNoControl = 0, 
	wdIMEModeOn = 1, 
	wdIMEModeOff = 2,
	wdIMEModeHiragana = 4, 
	wdIMEModeKatakana = 5, 
	wdIMEModeKatakanaHalf = 6, 
	wdIMEModeAlphaFull = 7, 
	wdIMEModeAlpha = 8, 
	wdIMEModeHangulFull = 9, 
	wdIMEModeHangul = 10, 
} WdIMEMode;

// Window
// {00020962-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE Window
DECLARE_INTERFACE_(Window, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// Window methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get_ActivePane) (THIS_ Pane** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Document) (THIS_ Document** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Panes) (THIS_ Panes** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Selection) (THIS_ Selection** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Left) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Left) (THIS_ long prop) PURE; 
	STDMETHOD_(HRESULT, Get_Top) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Top) (THIS_ long prop) PURE; 
	STDMETHOD_(HRESULT, Get_Width) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Width) (THIS_ long prop) PURE; 
	STDMETHOD_(HRESULT, Get_Height) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Height) (THIS_ long prop) PURE; 
	STDMETHOD_(HRESULT, Get_Split) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Split) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_SplitVertical) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Set_SplitVertical) (THIS_ long prop) PURE; 
	STDMETHOD_(HRESULT, Get_Caption) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Caption) (THIS_ BSTR prop) PURE; 
	STDMETHOD_(HRESULT, Get_WindowState) (THIS_ WdWindowState* prop) PURE; 
	STDMETHOD_(HRESULT, Set_WindowState) (THIS_ WdWindowState prop) PURE; 
	STDMETHOD_(HRESULT, Get_DisplayRulers) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_DisplayRulers) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_DisplayVerticalRuler) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_DisplayVerticalRuler) (THIS_ VARIANT_BOOL prop) PURE;
	STDMETHOD_(HRESULT, Get_View) (THIS_ View** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Type) (THIS_ WdWindowType* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Next) (THIS_ Window** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Previous) (THIS_ Window** prop) PURE; 
	STDMETHOD_(HRESULT, Get_WindowNumber) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_DisplayVerticalScrollBar) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_DisplayVerticalScrollBar) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_DisplayHorizontalScrollBar) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_DisplayHorizontalScrollBar) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_StyleAreaWidth) (THIS_ float* prop) PURE; 
	STDMETHOD_(HRESULT, Set_StyleAreaWidth) (THIS_ float prop) PURE; 
	STDMETHOD_(HRESULT, Get_DisplayScreenTips) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_DisplayScreenTips) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_HorizontalPercentScrolled) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Set_HorizontalPercentScrolled) (THIS_ long prop) PURE; 
	STDMETHOD_(HRESULT, Get_VerticalPercentScrolled) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Set_VerticalPercentScrolled) (THIS_ long prop) PURE; 
	STDMETHOD_(HRESULT, Get_DocumentMap) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_DocumentMap) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_Active) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Get_DocumentMapPercentWidth) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Set_DocumentMapPercentWidth) (THIS_ long prop) PURE; 
	STDMETHOD_(HRESULT, Get_Index) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_IMEMode) (THIS_ WdIMEMode* prop) PURE; 
	STDMETHOD_(HRESULT, Set_IMEMode) (THIS_ WdIMEMode prop) PURE; 
	STDMETHOD_(HRESULT, Activate) (THIS ) PURE; 
	STDMETHOD_(HRESULT, Close) (THIS_ VARIANT* SaveChanges, VARIANT* RouteDocument) PURE;
	STDMETHOD_(HRESULT, LargeScroll) (THIS_ VARIANT* Down, VARIANT* Up, VARIANT* ToRight, VARIANT* ToLeft) PURE; 
	STDMETHOD_(HRESULT, SmallScroll) (THIS_ VARIANT* Down, VARIANT* Up, VARIANT* ToRight, VARIANT* ToLeft) PURE; 
	STDMETHOD_(HRESULT, NewWindow) (THIS_ Window** prop) PURE; 
	STDMETHOD_(HRESULT, PrintOutOld) (THIS_ VARIANT* Background, VARIANT* Append, VARIANT* , VARIANT* OutputFileName, VARIANT* From, VARIANT* To, VARIANT* Item, VARIANT* Copies, VARIANT* Pages, VARIANT* PageType, VARIANT* PrintToFile, VARIANT* Collate, VARIANT* ActivePrinterMacGX, VARIANT* ManualDuplexPrint) PURE; 
	STDMETHOD_(HRESULT, PageScroll) (THIS_ VARIANT* Down, VARIANT* Up) PURE; 
	STDMETHOD_(HRESULT, SetFocus) (THIS ) PURE; 
	STDMETHOD_(HRESULT, RangeFromPoint) (THIS_ long x, long y, IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, ScrollIntoView) (THIS_ IDispatch* obj, VARIANT* Start) PURE; 
	STDMETHOD_(HRESULT, GetPoint) (THIS_ long* ScreenPixelsLeft, long* ScreenPixelsTop, long* ScreenPixelsWidth, long* ScreenPixelsHeight, IDispatch* obj) PURE; 
	STDMETHOD_(HRESULT, PrintOut2000) (THIS_ VARIANT* Background, VARIANT* Append, VARIANT* , VARIANT* OutputFileName, VARIANT* From, VARIANT* To, VARIANT* Item, VARIANT* Copies, VARIANT* Pages, VARIANT* PageType, VARIANT* PrintToFile, VARIANT* Collate, VARIANT* ActivePrinterMacGX, VARIANT* ManualDuplexPrint, VARIANT* PrintZoomColumn, VARIANT* PrintZoomRow, VARIANT* PrintZoomPaperWidth, VARIANT* PrintZoomPaperHeight) PURE; 
	STDMETHOD_(HRESULT, Get_UsableWidth) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_UsableHeight) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_EnvelopeVisible) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_EnvelopeVisible) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_DisplayRightRuler) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_DisplayRightRuler) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_DisplayLeftScrollBar) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_DisplayLeftScrollBar) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_Visible) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Visible) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, PrintOut) (THIS_ VARIANT* Background, VARIANT* Append, VARIANT* , VARIANT* OutputFileName, VARIANT* From, VARIANT* To, VARIANT* Item, VARIANT* Copies, VARIANT* Pages, VARIANT* PageType, VARIANT* PrintToFile, VARIANT* Collate, VARIANT* ActivePrinterMacGX, VARIANT* ManualDuplexPrint, VARIANT* PrintZoomColumn, VARIANT* PrintZoomRow, VARIANT* PrintZoomPaperWidth, VARIANT* PrintZoomPaperHeight) PURE; 
	STDMETHOD_(HRESULT, ToggleShowAllReviewers) (THIS ) PURE; 
	STDMETHOD_(HRESULT, Get_Thumbnails) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Thumbnails) (THIS_ VARIANT_BOOL prop) PURE; 
};
typedef Window* LPINDOW;
#ifdef __cplusplus
// Window  {00020962-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TWindowProxy : public __OCF TAutoProxy
{
public:
	TWindowProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// ActivePane:   [dispid 1]
	void ActivePane(TPaneProxy& Obj);

	// _Document:   [dispid 2]
	Document* _Document();

	// _Panes:   [dispid 3]
	void _Panes(TPanesProxy& Obj);

	// _Selection:   [dispid 4]
	void _Selection(TSelectionProxy& Obj);

	// Left:   [dispid 5]
	long Left();

	// Left:   [dispid 5]
	void Left(long arg0);

	// Top:   [dispid 6]
	long Top();

	// Top:   [dispid 6]
	void Top(long arg0);

	// Width:   [dispid 7]
	long Width();

	// Width:   [dispid 7]
	void Width(long arg0);

	// Height:   [dispid 8]
	long Height();

	// Height:   [dispid 8]
	void Height(long arg0);

	// Split:   [dispid 9]
	/*__OWL*/ TBool Split();

	// Split:   [dispid 9]
	void Split(/*__OWL*/ TBool arg0);

	// SplitVertical:   [dispid 10]
	long SplitVertical();

	// SplitVertical:   [dispid 10]
	void SplitVertical(long arg0);

	// Caption:   [dispid 0]
	__OCF TAutoString Caption();

	// Caption:   [dispid 0]
	void Caption(__OCF TAutoString arg0);

	// WindowState:   [dispid 11]
	WdWindowState WindowState();

	// WindowState:   [dispid 11]
	void WindowState(WdWindowState arg0);

	// DisplayRulers:   [dispid 12]
	/*__OWL*/ TBool DisplayRulers();

	// DisplayRulers:   [dispid 12]
	void DisplayRulers(/*__OWL*/ TBool arg0);

	// DisplayVerticalRuler:   [dispid 13]
	/*__OWL*/ TBool DisplayVerticalRuler();

	// DisplayVerticalRuler:   [dispid 13]
	void DisplayVerticalRuler(/*__OWL*/ TBool arg0);

	// _View:   [dispid 14]
	void _View(TViewProxy& Obj);

	// Type:   [dispid 15]
	WdWindowType Type();

	// Next:   [dispid 16]
	void Next(TWindowProxy& Obj);

	// Previous:   [dispid 17]
	void Previous(TWindowProxy& Obj);

	// WindowNumber:   [dispid 18]
	long WindowNumber();

	// DisplayVerticalScrollBar:   [dispid 19]
	/*__OWL*/ TBool DisplayVerticalScrollBar();

	// DisplayVerticalScrollBar:   [dispid 19]
	void DisplayVerticalScrollBar(/*__OWL*/ TBool arg0);

	// DisplayHorizontalScrollBar:   [dispid 20]
	/*__OWL*/ TBool DisplayHorizontalScrollBar();

	// DisplayHorizontalScrollBar:   [dispid 20]
	void DisplayHorizontalScrollBar(/*__OWL*/ TBool arg0);

	// StyleAreaWidth:   [dispid 21]
	float StyleAreaWidth();

	// StyleAreaWidth:   [dispid 21]
	void StyleAreaWidth(float arg0);

	// DisplayScreenTips:   [dispid 22]
	/*__OWL*/ TBool DisplayScreenTips();

	// DisplayScreenTips:   [dispid 22]
	void DisplayScreenTips(/*__OWL*/ TBool arg0);

	// HorizontalPercentScrolled:   [dispid 23]
	long HorizontalPercentScrolled();

	// HorizontalPercentScrolled:   [dispid 23]
	void HorizontalPercentScrolled(long arg0);

	// VerticalPercentScrolled:   [dispid 24]
	long VerticalPercentScrolled();

	// VerticalPercentScrolled:   [dispid 24]
	void VerticalPercentScrolled(long arg0);

	// DocumentMap:   [dispid 25]
	/*__OWL*/ TBool DocumentMap();

	// DocumentMap:   [dispid 25]
	void DocumentMap(/*__OWL*/ TBool arg0);

	// Active:   [dispid 26]
	/*__OWL*/ TBool Active();

	// DocumentMapPercentWidth:   [dispid 27]
	long DocumentMapPercentWidth();

	// DocumentMapPercentWidth:   [dispid 27]
	void DocumentMapPercentWidth(long arg0);

	// _Index:   [dispid 28]
	long _Index();

	// IMEMode:   [dispid 30]
	WdIMEMode IMEMode();

	// IMEMode:   [dispid 30]
	void IMEMode(WdIMEMode arg0);

	// Activate:   [dispid 100]
	void Activate();

	// Close:   [dispid 102]
	void Close(__OCF TAutoVal* SaveChanges = 0, __OCF TAutoVal* RouteDocument = 0);

	// LargeScroll:   [dispid 103]
	void LargeScroll(__OCF TAutoVal* Down = 0, __OCF TAutoVal* Up = 0, __OCF TAutoVal* ToRight = 0, __OCF TAutoVal* ToLeft = 0);

	// SmallScroll:   [dispid 104]
	void SmallScroll(__OCF TAutoVal* Down = 0, __OCF TAutoVal* Up = 0, __OCF TAutoVal* ToRight = 0, __OCF TAutoVal* ToLeft = 0);

	// NewWindow:   [dispid 105]
	void NewWindow(TWindowProxy& Obj);

	// PrintOutOld:   [dispid 107]
	void PrintOutOld(__OCF TAutoVal* Background = 0, __OCF TAutoVal* Append = 0, __OCF TAutoVal* arg2 = 0, __OCF TAutoVal* OutputFileName = 0, __OCF TAutoVal* From = 0, __OCF TAutoVal* To = 0, __OCF TAutoVal* Item = 0, __OCF TAutoVal* Copies = 0, __OCF TAutoVal* Pages = 0, __OCF TAutoVal* PageType = 0, __OCF TAutoVal* PrintToFile = 0, __OCF TAutoVal* Collate = 0, __OCF TAutoVal* ActivePrinterMacGX = 0, __OCF TAutoVal* ManualDuplexPrint = 0);

	// PageScroll:   [dispid 108]
	void PageScroll(__OCF TAutoVal* Down = 0, __OCF TAutoVal* Up = 0);

	// SetFocus:   [dispid 109]
	void SetFocus();

	// RangeFromPoint:   [dispid 110]
	IDispatch* RangeFromPoint(long x, long y);

	// ScrollIntoView:   [dispid 111]
	void ScrollIntoView(IDispatch* obj, __OCF TAutoVal* Start = 0);

	// GetPoint:   [dispid 112]
	void GetPoint(long* ScreenPixelsLeft, long* ScreenPixelsTop, long* ScreenPixelsWidth, long* ScreenPixelsHeight, IDispatch* obj);

	// PrintOut2000:   [dispid 444]
	void PrintOut2000(__OCF TAutoVal* Background = 0, __OCF TAutoVal* Append = 0, __OCF TAutoVal* arg2 = 0, __OCF TAutoVal* OutputFileName = 0, __OCF TAutoVal* From = 0, __OCF TAutoVal* To = 0, __OCF TAutoVal* Item = 0, __OCF TAutoVal* Copies = 0, __OCF TAutoVal* Pages = 0, __OCF TAutoVal* PageType = 0, __OCF TAutoVal* PrintToFile = 0, __OCF TAutoVal* Collate = 0, __OCF TAutoVal* ActivePrinterMacGX = 0, __OCF TAutoVal* ManualDuplexPrint = 0, __OCF TAutoVal* PrintZoomColumn = 0, __OCF TAutoVal* PrintZoomRow = 0, __OCF TAutoVal* PrintZoomPaperWidth = 0, __OCF TAutoVal* PrintZoomPaperHeight = 0);

	// UsableWidth:   [dispid 31]
	long UsableWidth();

	// UsableHeight:   [dispid 32]
	long UsableHeight();

	// EnvelopeVisible:   [dispid 33]
	/*__OWL*/ TBool EnvelopeVisible();

	// EnvelopeVisible:   [dispid 33]
	void EnvelopeVisible(/*__OWL*/ TBool arg0);

	// DisplayRightRuler:   [dispid 35]
	/*__OWL*/ TBool DisplayRightRuler();

	// DisplayRightRuler:   [dispid 35]
	void DisplayRightRuler(/*__OWL*/ TBool arg0);

	// DisplayLeftScrollBar:   [dispid 34]
	/*__OWL*/ TBool DisplayLeftScrollBar();

	// DisplayLeftScrollBar:   [dispid 34]
	void DisplayLeftScrollBar(/*__OWL*/ TBool arg0);

	// Visible:   [dispid 36]
	/*__OWL*/ TBool Visible();

	// Visible:   [dispid 36]
	void Visible(/*__OWL*/ TBool arg0);

	// PrintOut:   [dispid 445]
	void PrintOut(__OCF TAutoVal* Background = 0, __OCF TAutoVal* Append = 0, __OCF TAutoVal* arg2 = 0, __OCF TAutoVal* OutputFileName = 0, __OCF TAutoVal* From = 0, __OCF TAutoVal* To = 0, __OCF TAutoVal* Item = 0, __OCF TAutoVal* Copies = 0, __OCF TAutoVal* Pages = 0, __OCF TAutoVal* PageType = 0, __OCF TAutoVal* PrintToFile = 0, __OCF TAutoVal* Collate = 0, __OCF TAutoVal* ActivePrinterMacGX = 0, __OCF TAutoVal* ManualDuplexPrint = 0, __OCF TAutoVal* PrintZoomColumn = 0, __OCF TAutoVal* PrintZoomRow = 0, __OCF TAutoVal* PrintZoomPaperWidth = 0, __OCF TAutoVal* PrintZoomPaperHeight = 0);

	// ToggleShowAllReviewers:   [dispid 446]
	void ToggleShowAllReviewers();

	// Thumbnails:   [dispid 37]
	/*__OWL*/ TBool Thumbnails();

	// Thumbnails:   [dispid 37]
	void Thumbnails(/*__OWL*/ TBool arg0);
};
#endif

// Windows
// {00020961-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE WordWindows
DECLARE_INTERFACE_(WordWindows, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// Windows methods:
	STDMETHOD_(HRESULT, Get__NewEnum) (THIS_ IUnknown** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Count) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Item) (THIS_ VARIANT* , Window** prop) PURE; 
	STDMETHOD_(HRESULT, Add) (THIS_ VARIANT* , Window** prop) PURE; 
	STDMETHOD_(HRESULT, Arrange) (THIS_ VARIANT* ArrangeStyle) PURE; 
	STDMETHOD_(HRESULT, CompareSideBySideWith) (THIS_ VARIANT* , VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, BreakSideBySide) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, ResetPositionsSideBySide) (THIS ) PURE; 
	STDMETHOD_(HRESULT, Get_SyncScrollingSideBySide) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_SyncScrollingSideBySide) (THIS_ VARIANT_BOOL prop) PURE; 
};
typedef WordWindows* LPINDOWS;
#ifdef __cplusplus
// WordWindows  {00020961-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TWindowsProxy : public __OCF TAutoProxy
{
public:
	TWindowsProxy() : TAutoProxy(0x0) {}

	// _NewEnum:   [dispid -4]
	void _NewEnum(__OCF TAutoEnumerator<IUnknown*>& Obj);

	// Count:   [dispid 2]
	long Count();

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// Item:   [dispid 0]
	void Item(TWindowProxy& Obj, __OCF TAutoVal* arg0);

	// Add:   [dispid 10]
	void Add(TWindowProxy& Obj, __OCF TAutoVal* arg0 = 0);

	// Arrange:   [dispid 11]
	void Arrange(__OCF TAutoVal* ArrangeStyle = 0);

	// CompareSideBySideWith:   [dispid 12]
	/*__OWL*/ TBool CompareSideBySideWith(__OCF TAutoVal* arg0);

	// BreakSideBySide:   [dispid 13]
	/*__OWL*/ TBool BreakSideBySide();

	// ResetPositionsSideBySide:   [dispid 14]
	void ResetPositionsSideBySide();

	// SyncScrollingSideBySide:   [dispid 1003]
	/*__OWL*/ TBool SyncScrollingSideBySide();

	// SyncScrollingSideBySide:   [dispid 1003]
	void SyncScrollingSideBySide(/*__OWL*/ TBool arg0);
};
#endif

// Words
// {0002095C-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE Words
DECLARE_INTERFACE_(Words, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// Words methods:
	STDMETHOD_(HRESULT, Get__NewEnum) (THIS_ IUnknown** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Count) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_First) (THIS_ WordRange** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Last) (THIS_ WordRange** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Item) (THIS_ long , WordRange** prop) PURE; 
};
typedef Words* LPORDS;
#ifdef __cplusplus
// Words  {0002095C-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TWordsProxy : public __OCF TAutoProxy
{
public:
	TWordsProxy() : TAutoProxy(0x0) {}

	// _NewEnum:   [dispid -4]
	void _NewEnum(__OCF TAutoEnumerator<IUnknown*>& Obj);

	// Count:   [dispid 2]
	long Count();

	// First:   [dispid 3]
	void First(TRangeProxy& Obj);

	// Last:   [dispid 4]
	void Last(TRangeProxy& Obj);

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// Item:   [dispid 0]
	void Item(TRangeProxy& Obj, long arg0);
};
#endif

// WdWrapType
typedef enum tagWdWrapType
{
	wdWrapSquare = 0, 
	wdWrapTight = 1, 
	wdWrapThrough = 2, 
	wdWrapNone = 3, 
	wdWrapTopBottom = 4, 
	wdWrapInline = 7, 
} WdWrapType;

// WdWrapSideType
typedef enum tagWdWrapSideType
{
	wdWrapBoth = 0, 
	wdWrapLeft = 1, 
	wdWrapRight = 2, 
	wdWrapLargest = 3, 
} WdWrapSideType;

// WrapFormat
// {000209C3-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE WrapFormat
DECLARE_INTERFACE_(WrapFormat, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// WrapFormat methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Type) (THIS_ WdWrapType* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Type) (THIS_ WdWrapType prop) PURE; 
	STDMETHOD_(HRESULT, Get_Side) (THIS_ WdWrapSideType* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Side) (THIS_ WdWrapSideType prop) PURE; 
	STDMETHOD_(HRESULT, Get_DistanceTop) (THIS_ float* prop) PURE; 
	STDMETHOD_(HRESULT, Set_DistanceTop) (THIS_ float prop) PURE; 
	STDMETHOD_(HRESULT, Get_DistanceBottom) (THIS_ float* prop) PURE; 
	STDMETHOD_(HRESULT, Set_DistanceBottom) (THIS_ float prop) PURE; 
	STDMETHOD_(HRESULT, Get_DistanceLeft) (THIS_ float* prop) PURE; 
	STDMETHOD_(HRESULT, Set_DistanceLeft) (THIS_ float prop) PURE; 
	STDMETHOD_(HRESULT, Get_DistanceRight) (THIS_ float* prop) PURE; 
	STDMETHOD_(HRESULT, Set_DistanceRight) (THIS_ float prop) PURE; 
	STDMETHOD_(HRESULT, Get_AllowOverlap) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Set_AllowOverlap) (THIS_ long prop) PURE; 
};
typedef WrapFormat* LPRAPFORMAT;
#ifdef __cplusplus
// WrapFormat  {000209C3-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TWrapFormatProxy : public __OCF TAutoProxy
{
public:
	TWrapFormatProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// Type:   [dispid 100]
	WdWrapType Type();

	// Type:   [dispid 100]
	void Type(WdWrapType arg0);

	// Side:   [dispid 101]
	WdWrapSideType Side();

	// Side:   [dispid 101]
	void Side(WdWrapSideType arg0);

	// DistanceTop:   [dispid 102]
	float DistanceTop();

	// DistanceTop:   [dispid 102]
	void DistanceTop(float arg0);

	// DistanceBottom:   [dispid 103]
	float DistanceBottom();

	// DistanceBottom:   [dispid 103]
	void DistanceBottom(float arg0);

	// DistanceLeft:   [dispid 104]
	float DistanceLeft();

	// DistanceLeft:   [dispid 104]
	void DistanceLeft(float arg0);

	// DistanceRight:   [dispid 105]
	float DistanceRight();

	// DistanceRight:   [dispid 105]
	void DistanceRight(float arg0);

	// AllowOverlap:   [dispid 106]
	long AllowOverlap();

	// AllowOverlap:   [dispid 106]
	void AllowOverlap(long arg0);
};
#endif

// XMLChildNodeSuggestions
// {DE63B5AC-CA4F-46FE-9184-A5719AB9ED5B}
#undef INTERFACE
#define INTERFACE XMLChildNodeSuggestions
DECLARE_INTERFACE_(XMLChildNodeSuggestions, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// XMLChildNodeSuggestions methods:
	STDMETHOD_(HRESULT, Get__NewEnum) (THIS_ IUnknown** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Count) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Item) (THIS_ VARIANT* , XMLChildNodeSuggestion** prop) PURE; 
};
typedef XMLChildNodeSuggestions* LPMLCHILDNODESUGGESTIONS;
#ifdef __cplusplus
// XMLChildNodeSuggestions  {DE63B5AC-CA4F-46FE-9184-A5719AB9ED5B}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TXMLChildNodeSuggestionsProxy : public __OCF TAutoProxy
{
public:
	TXMLChildNodeSuggestionsProxy() : TAutoProxy(0x0) {}

	// _NewEnum:   [dispid -4]
	void _NewEnum(__OCF TAutoEnumerator<IUnknown*>& Obj);

	// Count:   [dispid 2]
	long Count();

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// Item:   [dispid 0]
	void Item(TXMLChildNodeSuggestionProxy& Obj, __OCF TAutoVal* arg0);
};
#endif

// XMLNamespaces
// {656BBED7-E82D-4B0A-8F97-EC742BA11FFA}
#undef INTERFACE
#define INTERFACE XMLNamespaces
DECLARE_INTERFACE_(XMLNamespaces, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// XMLNamespaces methods:
	STDMETHOD_(HRESULT, Get__NewEnum) (THIS_ IUnknown** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Count) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Item) (THIS_ VARIANT* , XMLNamespace** prop) PURE; 
	STDMETHOD_(HRESULT, Add) (THIS_ BSTR Path, VARIANT* NamespaceURI, VARIANT* Alias, VARIANT_BOOL InstallForAllUsers, XMLNamespace** prop) PURE; 
	STDMETHOD_(HRESULT, InstallManifest) (THIS_ BSTR Path, VARIANT_BOOL InstallForAllUsers) PURE; 
};
typedef XMLNamespaces* LPMLNAMESPACES;
#ifdef __cplusplus
// XMLNamespaces  {656BBED7-E82D-4B0A-8F97-EC742BA11FFA}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TXMLNamespacesProxy : public __OCF TAutoProxy
{
public:
	TXMLNamespacesProxy() : TAutoProxy(0x0) {}

	// _NewEnum:   [dispid -4]
	void _NewEnum(__OCF TAutoEnumerator<IUnknown*>& Obj);

	// Count:   [dispid 2]
	long Count();

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// Item:   [dispid 0]
	void Item(TXMLNamespaceProxy& Obj, __OCF TAutoVal* arg0);

	// Add:   [dispid 101]
	void Add(TXMLNamespaceProxy& Obj, __OCF TAutoString Path, __OCF TAutoVal* NamespaceURI, __OCF TAutoVal* Alias, /*__OWL*/ TBool InstallForAllUsers);

	// InstallManifest:   [dispid 102]
	void InstallManifest(__OCF TAutoString Path, /*__OWL*/ TBool InstallForAllUsers);
};
#endif

// WdXMLNodeType
typedef enum tagWdXMLNodeType
{
	wdXMLNodeElement = 1, 
	wdXMLNodeAttribute = 2, 
} WdXMLNodeType;

// WdXMLNodeLevel
typedef enum tagWdXMLNodeLevel
{
	wdXMLNodeLevelInline = 0, 
	wdXMLNodeLevelParagraph = 1, 
	wdXMLNodeLevelRow = 2, 
	wdXMLNodeLevelCell = 3, 
} WdXMLNodeLevel;

// WdXMLValidationStatus
typedef enum tagWdXMLValidationStatus
{
	wdXMLValidationStatusOK = 0, 
	wdXMLValidationStatusCustom = -1072898048, 
} WdXMLValidationStatus;

// XMLNode
// {09760240-0B89-49F7-A79D-479F24723F56}
#undef INTERFACE
#define INTERFACE XMLNode
DECLARE_INTERFACE_(XMLNode, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// XMLNode methods:
	STDMETHOD_(HRESULT, Get_BaseName) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Range) (THIS_ WordRange** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Text) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Text) (THIS_ BSTR prop) PURE; 
	STDMETHOD_(HRESULT, Get_NamespaceURI) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Get_XML) (THIS_ VARIANT_BOOL DataOnly, BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Get_NextSibling) (THIS_ XMLNode** prop) PURE; 
	STDMETHOD_(HRESULT, Get_PreviousSibling) (THIS_ XMLNode** prop) PURE; 
	STDMETHOD_(HRESULT, Get_ParentNode) (THIS_ XMLNode** prop) PURE; 
	STDMETHOD_(HRESULT, Get_FirstChild) (THIS_ XMLNode** prop) PURE; 
	STDMETHOD_(HRESULT, Get_LastChild) (THIS_ XMLNode** prop) PURE; 
	STDMETHOD_(HRESULT, Get_OwnerDocument) (THIS_ Document** prop) PURE; 
	STDMETHOD_(HRESULT, Get_NodeType) (THIS_ WdXMLNodeType* prop) PURE; 
	STDMETHOD_(HRESULT, Get_ChildNodes) (THIS_ XMLNodes** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Attributes) (THIS_ XMLNodes** prop) PURE; 
	STDMETHOD_(HRESULT, Get_NodeValue) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Set_NodeValue) (THIS_ BSTR prop) PURE; 
	STDMETHOD_(HRESULT, Get_HasChildNodes) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, SelectSingleNode) (THIS_ BSTR XPath, BSTR PrefixMapping, VARIANT_BOOL FastSearchSkippingTextNodes, XMLNode** prop) PURE; 
	STDMETHOD_(HRESULT, SelectNodes) (THIS_ BSTR XPath, BSTR PrefixMapping, VARIANT_BOOL FastSearchSkippingTextNodes, XMLNodes** prop) PURE; 
	STDMETHOD_(HRESULT, Get_ChildNodeSuggestions) (THIS_ XMLChildNodeSuggestions** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Level) (THIS_ WdXMLNodeLevel* prop) PURE; 
	STDMETHOD_(HRESULT, Get_ValidationStatus) (THIS_ WdXMLValidationStatus* prop) PURE; 
	STDMETHOD_(HRESULT, Get_SmartTag) (THIS_ SmartTag** prop) PURE; 
	STDMETHOD_(HRESULT, Get_ValidationErrorText) (THIS_ VARIANT_BOOL Advanced, BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Get_PlaceholderText) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Set_PlaceholderText) (THIS_ BSTR prop) PURE; 
	STDMETHOD_(HRESULT, Delete) (THIS ) PURE; 
	STDMETHOD_(HRESULT, Copy) (THIS ) PURE; 
	STDMETHOD_(HRESULT, RemoveChild) (THIS_ XMLNode* ChildElement) PURE; 
	STDMETHOD_(HRESULT, Cut) (THIS ) PURE; 
	STDMETHOD_(HRESULT, Validate) (THIS ) PURE; 
	STDMETHOD_(HRESULT, SetValidationError) (THIS_ WdXMLValidationStatus Status, VARIANT* ErrorText, VARIANT_BOOL ClearedAutomatically) PURE; 
};
typedef XMLNode* LPMLNODE;
#ifdef __cplusplus
// XMLNode  {09760240-0B89-49F7-A79D-479F24723F56}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TXMLNodeProxy : public __OCF TAutoProxy
{
public:
	TXMLNodeProxy() : TAutoProxy(0x0) {}

	// BaseName:   [dispid 0]
	__OCF TAutoString BaseName();

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// _Range:   [dispid 1]
	void _Range(TRangeProxy& Obj);

	// Text:   [dispid 2]
	__OCF TAutoString Text();

	// Text:   [dispid 2]
	void Text(__OCF TAutoString arg0);

	// NamespaceURI:   [dispid 4]
	__OCF TAutoString NamespaceURI();

	// XML:   [dispid 5]
	__OCF TAutoString XML(/*__OWL*/ TBool DataOnly);

	// NextSibling:   [dispid 6]
	void NextSibling(TXMLNodeProxy& Obj);

	// PreviousSibling:   [dispid 7]
	void PreviousSibling(TXMLNodeProxy& Obj);

	// ParentNode:   [dispid 8]
	void ParentNode(TXMLNodeProxy& Obj);

	// FirstChild:   [dispid 9]
	void FirstChild(TXMLNodeProxy& Obj);

	// LastChild:   [dispid 10]
	void LastChild(TXMLNodeProxy& Obj);

	// OwnerDocument:   [dispid 11]
	Document* OwnerDocument();

	// NodeType:   [dispid 12]
	WdXMLNodeType NodeType();

	// ChildNodes:   [dispid 13]
	void ChildNodes(TXMLNodesProxy& Obj);

	// Attributes:   [dispid 15]
	void Attributes(TXMLNodesProxy& Obj);

	// NodeValue:   [dispid 16]
	__OCF TAutoString NodeValue();

	// NodeValue:   [dispid 16]
	void NodeValue(__OCF TAutoString arg0);

	// HasChildNodes:   [dispid 17]
	/*__OWL*/ TBool HasChildNodes();

	// SelectSingleNode:   [dispid 18]
	void SelectSingleNode(TXMLNodeProxy& Obj, __OCF TAutoString XPath, __OCF TAutoString PrefixMapping, /*__OWL*/ TBool FastSearchSkippingTextNodes);

	// SelectNodes:   [dispid 19]
	void SelectNodes(TXMLNodesProxy& Obj, __OCF TAutoString XPath, __OCF TAutoString PrefixMapping, /*__OWL*/ TBool FastSearchSkippingTextNodes);

	// ChildNodeSuggestions:   [dispid 20]
	void ChildNodeSuggestions(TXMLChildNodeSuggestionsProxy& Obj);

	// Level:   [dispid 21]
	WdXMLNodeLevel Level();

	// ValidationStatus:   [dispid 22]
	WdXMLValidationStatus ValidationStatus();

	// _SmartTag:   [dispid 23]
	void _SmartTag(TSmartTagProxy& Obj);

	// ValidationErrorText:   [dispid 24]
	__OCF TAutoString ValidationErrorText(/*__OWL*/ TBool Advanced);

	// PlaceholderText:   [dispid 25]
	__OCF TAutoString PlaceholderText();

	// PlaceholderText:   [dispid 25]
	void PlaceholderText(__OCF TAutoString arg0);

	// Delete:   [dispid 100]
	void Delete();

	// Copy:   [dispid 101]
	void Copy();

	// RemoveChild:   [dispid 102]
	void RemoveChild(XMLNode* ChildElement);

	// Cut:   [dispid 103]
	void Cut();

	// Validate:   [dispid 104]
	void Validate();

	// SetValidationError:   [dispid 105]
	void SetValidationError(WdXMLValidationStatus Status, __OCF TAutoVal* ErrorText, /*__OWL*/ TBool ClearedAutomatically);
};
#endif

// XMLNodes
// {D36C1F42-7044-4B9E-9CA3-85919454DB04}
#undef INTERFACE
#define INTERFACE XMLNodes
DECLARE_INTERFACE_(XMLNodes, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// XMLNodes methods:
	STDMETHOD_(HRESULT, Get__NewEnum) (THIS_ IUnknown** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Count) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Item) (THIS_ long , XMLNode** prop) PURE; 
	STDMETHOD_(HRESULT, Add) (THIS_ BSTR Name, BSTR Namespace, VARIANT* , XMLNode** prop) PURE; 
};
typedef XMLNodes* LPMLNODES;
#ifdef __cplusplus
// XMLNodes  {D36C1F42-7044-4B9E-9CA3-85919454DB04}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TXMLNodesProxy : public __OCF TAutoProxy
{
public:
	TXMLNodesProxy() : TAutoProxy(0x0) {}

	// _NewEnum:   [dispid -4]
	void _NewEnum(__OCF TAutoEnumerator<IUnknown*>& Obj);

	// Count:   [dispid 2]
	long Count();

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// Item:   [dispid 0]
	void Item(TXMLNodeProxy& Obj, long arg0);

	// Add:   [dispid 100]
	void Add(TXMLNodeProxy& Obj, __OCF TAutoString Name, __OCF TAutoString Namespace, __OCF TAutoVal* arg2 = 0);
};
#endif

// XMLSchemaReferences
// {356B06EC-4908-42A4-81FC-4B5A51F3483B}
#undef INTERFACE
#define INTERFACE XMLSchemaReferences
DECLARE_INTERFACE_(XMLSchemaReferences, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// XMLSchemaReferences methods:
	STDMETHOD_(HRESULT, Get__NewEnum) (THIS_ IUnknown** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Count) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get_AutomaticValidation) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_AutomaticValidation) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_AllowSaveAsXMLWithoutValidation) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_AllowSaveAsXMLWithoutValidation) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_HideValidationErrors) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_HideValidationErrors) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_IgnoreMixedContent) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_IgnoreMixedContent) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_ShowPlaceholderText) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_ShowPlaceholderText) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Item) (THIS_ VARIANT* , XMLSchemaReference** prop) PURE; 
	STDMETHOD_(HRESULT, Validate) (THIS ) PURE; 
	STDMETHOD_(HRESULT, Add) (THIS_ VARIANT* NamespaceURI, VARIANT* Alias, VARIANT* FileName, VARIANT_BOOL InstallForAllUsers, XMLSchemaReference** prop) PURE; 
};
typedef XMLSchemaReferences* LPMLSCHEMAREFERENCES;
#ifdef __cplusplus
// XMLSchemaReferences  {356B06EC-4908-42A4-81FC-4B5A51F3483B}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TXMLSchemaReferencesProxy : public __OCF TAutoProxy
{
public:
	TXMLSchemaReferencesProxy() : TAutoProxy(0x0) {}

	// _NewEnum:   [dispid -4]
	void _NewEnum(__OCF TAutoEnumerator<IUnknown*>& Obj);

	// Count:   [dispid 2]
	long Count();

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// AutomaticValidation:   [dispid 3]
	/*__OWL*/ TBool AutomaticValidation();

	// AutomaticValidation:   [dispid 3]
	void AutomaticValidation(/*__OWL*/ TBool arg0);

	// AllowSaveAsXMLWithoutValidation:   [dispid 4]
	/*__OWL*/ TBool AllowSaveAsXMLWithoutValidation();

	// AllowSaveAsXMLWithoutValidation:   [dispid 4]
	void AllowSaveAsXMLWithoutValidation(/*__OWL*/ TBool arg0);

	// HideValidationErrors:   [dispid 5]
	/*__OWL*/ TBool HideValidationErrors();

	// HideValidationErrors:   [dispid 5]
	void HideValidationErrors(/*__OWL*/ TBool arg0);

	// IgnoreMixedContent:   [dispid 6]
	/*__OWL*/ TBool IgnoreMixedContent();

	// IgnoreMixedContent:   [dispid 6]
	void IgnoreMixedContent(/*__OWL*/ TBool arg0);

	// ShowPlaceholderText:   [dispid 7]
	/*__OWL*/ TBool ShowPlaceholderText();

	// ShowPlaceholderText:   [dispid 7]
	void ShowPlaceholderText(/*__OWL*/ TBool arg0);

	// Item:   [dispid 0]
	void Item(TXMLSchemaReferenceProxy& Obj, __OCF TAutoVal* arg0);

	// Validate:   [dispid 100]
	void Validate();

	// Add:   [dispid 101]
	void Add(TXMLSchemaReferenceProxy& Obj, __OCF TAutoVal* NamespaceURI, __OCF TAutoVal* Alias, __OCF TAutoVal* FileName, /*__OWL*/ TBool InstallForAllUsers);
};
#endif

// vbext_ComponentType
typedef enum tagvbext_ComponentType
{
	vbext_ct_StdModule = 1, 
	vbext_ct_ClassModule = 2, 
	vbext_ct_MSForm = 3, 
	vbext_ct_ActiveXDesigner = 11, 
	vbext_ct_Document = 100, 
} vbext_ComponentType;

// _VBComponent_Old
// {0002E164-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE _VBComponent_Old
DECLARE_INTERFACE_(_VBComponent_Old, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// _VBComponent_Old methods:
	STDMETHOD_(HRESULT, Get_Saved) (THIS_ VARIANT_BOOL* lpfReturn) PURE; 
	STDMETHOD_(HRESULT, Get_Name) (THIS_ BSTR* pbstrReturn) PURE; 
	STDMETHOD_(HRESULT, Set_Name) (THIS_ BSTR pbstrReturn) PURE; 
	STDMETHOD_(HRESULT, Get_Designer) (THIS_ IDispatch** ppDispatch) PURE; 
	STDMETHOD_(HRESULT, Get_CodeModule) (THIS_ CodeModule** ppVbaModule) PURE; 
	STDMETHOD_(HRESULT, Get_Type) (THIS_ vbext_ComponentType* pKind) PURE; 
	STDMETHOD_(HRESULT, Export) (THIS_ BSTR FileName) PURE; 
	STDMETHOD_(HRESULT, Get_VBE) (THIS_ VBE** lppaReturn) PURE; 
	STDMETHOD_(HRESULT, Get_Collection) (THIS_ VBComponents** lppcReturn) PURE; 
	STDMETHOD_(HRESULT, Get_HasOpenDesigner) (THIS_ VARIANT_BOOL* lpfReturn) PURE; 
	STDMETHOD_(HRESULT, Get_Properties) (THIS_ Properties** lpppReturn) PURE; 
	STDMETHOD_(HRESULT, DesignerWindow) (THIS_ Window** lppcReturn) PURE; 
	STDMETHOD_(HRESULT, Activate) (THIS ) PURE; 
};
typedef _VBComponent_Old* LPVBCOMPONENT_OLD;
// _VBComponent
// {EEE00921-E393-11D1-BB03-00C04FB6C4A6}
#undef INTERFACE
#define INTERFACE _VBComponent
DECLARE_INTERFACE_(_VBComponent, _VBComponent_Old)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
	// _VBComponent_Old methods:
	STDMETHOD_(HRESULT, Get_Saved) (THIS_ VARIANT_BOOL* lpfReturn) PURE; 
	STDMETHOD_(HRESULT, Get_Name) (THIS_ BSTR* pbstrReturn) PURE; 
	STDMETHOD_(HRESULT, Set_Name) (THIS_ BSTR pbstrReturn) PURE; 
	STDMETHOD_(HRESULT, Get_Designer) (THIS_ IDispatch** ppDispatch) PURE; 
	STDMETHOD_(HRESULT, Get_CodeModule) (THIS_ CodeModule** ppVbaModule) PURE; 
	STDMETHOD_(HRESULT, Get_Type) (THIS_ vbext_ComponentType* pKind) PURE; 
	STDMETHOD_(HRESULT, Export) (THIS_ BSTR FileName) PURE; 
	STDMETHOD_(HRESULT, Get_VBE) (THIS_ VBE** lppaReturn) PURE; 
	STDMETHOD_(HRESULT, Get_Collection) (THIS_ VBComponents** lppcReturn) PURE; 
	STDMETHOD_(HRESULT, Get_HasOpenDesigner) (THIS_ VARIANT_BOOL* lpfReturn) PURE; 
	STDMETHOD_(HRESULT, Get_Properties) (THIS_ Properties** lpppReturn) PURE; 
	STDMETHOD_(HRESULT, DesignerWindow) (THIS_ Window** lppcReturn) PURE; 
	STDMETHOD_(HRESULT, Activate) (THIS ) PURE; 
#endif
	// _VBComponent methods:
	STDMETHOD_(HRESULT, Get_DesignerID) (THIS_ BSTR* pbstrReturn) PURE; 
};
typedef _VBComponent* LPVBCOMPONENT;
#ifdef __cplusplus
// _VBComponent  {EEE00921-E393-11D1-BB03-00C04FB6C4A6}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS T_VBComponentProxy : public __OCF TAutoProxy
{
public:
	T_VBComponentProxy() : TAutoProxy(0x0) {}

	// Saved:   [dispid 10]
	/*__OWL*/ TBool Saved();

	// Name:   [dispid 48]
	__OCF TAutoString Name();

	// Name:   [dispid 48]
	void Name(__OCF TAutoString arg0);

	// Designer:   [dispid 49]
	IDispatch* Designer();

	// _CodeModule:   [dispid 50]
	CodeModule* _CodeModule();

	// Type:   [dispid 51]
	vbext_ComponentType Type();

	// Export:   [dispid 52]
	void Export(__OCF TAutoString FileName);

	// _VBE:   [dispid 53]
	void _VBE(TVBEProxy& Obj);

	// Collection:   [dispid 54]
	VBComponents* Collection();

	// HasOpenDesigner:   [dispid 55]
	/*__OWL*/ TBool HasOpenDesigner();

	// _Properties:   [dispid 56]
	Properties* _Properties();

	// DesignerWindow:   [dispid 57]
	void DesignerWindow(TWindowProxy& Obj);

	// Activate:   [dispid 60]
	void Activate();

	// DesignerID:   [dispid 64]
	__OCF TAutoString DesignerID();
};
#endif

// _VBComponents_Old
// {0002E162-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE _VBComponents_Old
DECLARE_INTERFACE_(_VBComponents_Old, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// _VBComponents_Old methods:
	STDMETHOD_(HRESULT, Item) (THIS_ VARIANT , VBComponent** lppcReturn) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ VBProject** lppptReturn) PURE; 
	STDMETHOD_(HRESULT, Get_Count) (THIS_ long* lplReturn) PURE; 
	STDMETHOD_(HRESULT, _NewEnum) (THIS_ IUnknown** lppiuReturn) PURE; 
	STDMETHOD_(HRESULT, Remove) (THIS_ VBComponent* ) PURE; 
	STDMETHOD_(HRESULT, Add) (THIS_ vbext_ComponentType ComponentType, VBComponent** lppComponent) PURE; 
	STDMETHOD_(HRESULT, Import) (THIS_ BSTR FileName, VBComponent** lppComponent) PURE; 
	STDMETHOD_(HRESULT, Get_VBE) (THIS_ VBE** lppaReturn) PURE; 
};
typedef _VBComponents_Old* LPVBCOMPONENTS_OLD;
// _VBComponents
// {EEE0091C-E393-11D1-BB03-00C04FB6C4A6}
#undef INTERFACE
#define INTERFACE _VBComponents
DECLARE_INTERFACE_(_VBComponents, _VBComponents_Old)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
	// _VBComponents_Old methods:
	STDMETHOD_(HRESULT, Item) (THIS_ VARIANT , VBComponent** lppcReturn) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ VBProject** lppptReturn) PURE; 
	STDMETHOD_(HRESULT, Get_Count) (THIS_ long* lplReturn) PURE; 
	STDMETHOD_(HRESULT, _NewEnum) (THIS_ IUnknown** lppiuReturn) PURE; 
	STDMETHOD_(HRESULT, Remove) (THIS_ VBComponent* ) PURE; 
	STDMETHOD_(HRESULT, Add) (THIS_ vbext_ComponentType ComponentType, VBComponent** lppComponent) PURE; 
	STDMETHOD_(HRESULT, Import) (THIS_ BSTR FileName, VBComponent** lppComponent) PURE; 
	STDMETHOD_(HRESULT, Get_VBE) (THIS_ VBE** lppaReturn) PURE; 
#endif
	// _VBComponents methods:
	STDMETHOD_(HRESULT, AddCustom) (THIS_ BSTR ProgId, VBComponent** lppComponent) PURE; 
	STDMETHOD_(HRESULT, AddMTDesigner) (THIS_ long , VBComponent** lppComponent) PURE; 
};
typedef _VBComponents* LPVBCOMPONENTS;
#ifdef __cplusplus
// _VBComponents  {EEE0091C-E393-11D1-BB03-00C04FB6C4A6}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS T_VBComponentsProxy : public __OCF TAutoProxy
{
public:
	T_VBComponentsProxy() : TAutoProxy(0x0) {}

	// Item:   [dispid 0]
	VBComponent* Item(__OCF TAutoVal arg0);

	// Parent:   [dispid 2]
	VBProject* Parent();

	// Count:   [dispid 10]
	long Count();

	// _NewEnum:   [dispid -4]
	void _NewEnum(__OCF TAutoEnumerator<IUnknown*>& Obj);

	// Remove:   [dispid 11]
	void Remove(VBComponent* arg0);

	// Add:   [dispid 12]
	VBComponent* Add(vbext_ComponentType ComponentType);

	// Import:   [dispid 13]
	VBComponent* Import(__OCF TAutoString FileName);

	// _VBE:   [dispid 20]
	void _VBE(TVBEProxy& Obj);

	// AddCustom:   [dispid 25]
	VBComponent* AddCustom(__OCF TAutoString ProgId);

	// AddMTDesigner:   [dispid 26]
	VBComponent* AddMTDesigner(long arg0);
};
#endif

// vbext_ProcKind
typedef enum tagvbext_ProcKind
{
	vbext_pk_Proc = 0, 
	vbext_pk_Let = 1, 
	vbext_pk_Set = 2, 
	vbext_pk_Get = 3, 
} vbext_ProcKind;

// _CodeModule
// {0002E16E-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE _CodeModule
DECLARE_INTERFACE_(_CodeModule, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// _CodeModule methods:
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ VBComponent** retval) PURE; 
	STDMETHOD_(HRESULT, Get_VBE) (THIS_ VBE** retval) PURE; 
	STDMETHOD_(HRESULT, Get_Name) (THIS_ BSTR* pbstrName) PURE; 
	STDMETHOD_(HRESULT, Set_Name) (THIS_ BSTR pbstrName) PURE; 
	STDMETHOD_(HRESULT, AddFromString) (THIS_ BSTR String) PURE; 
	STDMETHOD_(HRESULT, AddFromFile) (THIS_ BSTR FileName) PURE; 
	STDMETHOD_(HRESULT, Get_Lines) (THIS_ long StartLine, long Count, BSTR* String) PURE; 
	STDMETHOD_(HRESULT, Get_CountOfLines) (THIS_ long* CountOfLines) PURE; 
	STDMETHOD_(HRESULT, InsertLines) (THIS_ long Line, BSTR String) PURE; 
	STDMETHOD_(HRESULT, DeleteLines) (THIS_ long StartLine, long Count) PURE; 
	STDMETHOD_(HRESULT, ReplaceLine) (THIS_ long Line, BSTR String) PURE; 
	STDMETHOD_(HRESULT, Get_ProcStartLine) (THIS_ BSTR ProcName, vbext_ProcKind ProcKind, long* ProcStartLine) PURE; 
	STDMETHOD_(HRESULT, Get_ProcCountLines) (THIS_ BSTR ProcName, vbext_ProcKind ProcKind, long* ProcCountLines) PURE; 
	STDMETHOD_(HRESULT, Get_ProcBodyLine) (THIS_ BSTR ProcName, vbext_ProcKind ProcKind, long* ProcBodyLine) PURE; 
	STDMETHOD_(HRESULT, Get_ProcOfLine) (THIS_ long Line, vbext_ProcKind* ProcKind, BSTR* pbstrName) PURE; 
	STDMETHOD_(HRESULT, Get_CountOfDeclarationLines) (THIS_ long* pDeclCountOfLines) PURE; 
	STDMETHOD_(HRESULT, CreateEventProc) (THIS_ BSTR EventName, BSTR ObjectName, long* Line) PURE; 
	STDMETHOD_(HRESULT, Find) (THIS_ BSTR Target, long* StartLine, long* StartColumn, long* EndLine, long* EndColumn, VARIANT_BOOL WholeWord, VARIANT_BOOL MatchCase, VARIANT_BOOL PatternSearch, VARIANT_BOOL* pfFound) PURE; 
	STDMETHOD_(HRESULT, Get_CodePane) (THIS_ CodePane** ) PURE; 
};
typedef _CodeModule* LPCODEMODULE;
#ifdef __cplusplus
// _CodeModule  {0002E16E-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FHIDDEN TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS T_CodeModuleProxy : public __OCF TAutoProxy
{
public:
	T_CodeModuleProxy() : TAutoProxy(0x0) {}

	// Parent:   [dispid 1610743808]
	VBComponent* Parent();

	// _VBE:   [dispid 1610743809]
	void _VBE(TVBEProxy& Obj);

	// Name:   [dispid 0]
	__OCF TAutoString Name();

	// Name:   [dispid 0]
	void Name(__OCF TAutoString arg0);

	// AddFromString:   [dispid 1610743812]
	void AddFromString(__OCF TAutoString String);

	// AddFromFile:   [dispid 1610743813]
	void AddFromFile(__OCF TAutoString FileName);

	// Lines:   [dispid 1610743814]
	__OCF TAutoString Lines(long StartLine, long Count);

	// CountOfLines:   [dispid 1610743815]
	long CountOfLines();

	// InsertLines:   [dispid 1610743816]
	void InsertLines(long Line, __OCF TAutoString String);

	// DeleteLines:   [dispid 1610743817]
	void DeleteLines(long StartLine, long Count);

	// ReplaceLine:   [dispid 1610743818]
	void ReplaceLine(long Line, __OCF TAutoString String);

	// ProcStartLine:   [dispid 1610743819]
	long ProcStartLine(__OCF TAutoString ProcName, vbext_ProcKind ProcKind);

	// ProcCountLines:   [dispid 1610743820]
	long ProcCountLines(__OCF TAutoString ProcName, vbext_ProcKind ProcKind);

	// ProcBodyLine:   [dispid 1610743821]
	long ProcBodyLine(__OCF TAutoString ProcName, vbext_ProcKind ProcKind);

	// ProcOfLine:   [dispid 1610743822]
	__OCF TAutoString ProcOfLine(long Line, vbext_ProcKind* ProcKind);

	// CountOfDeclarationLines:   [dispid 1610743823]
	long CountOfDeclarationLines();

	// CreateEventProc:   [dispid 1610743824]
	long CreateEventProc(__OCF TAutoString EventName, __OCF TAutoString ObjectName);

	// _Find:   [dispid 1610743825]
	/*__OWL*/ TBool _Find(__OCF TAutoString Target, long* StartLine, long* StartColumn, long* EndLine, long* EndColumn, /*__OWL*/ TBool WholeWord, /*__OWL*/ TBool MatchCase, /*__OWL*/ TBool PatternSearch);

	// _CodePane:   [dispid 1610743826]
	CodePane* _CodePane();
};
#endif

// vbext_CodePaneview
typedef enum tagvbext_CodePaneview
{
	vbext_cv_ProcedureView = 0, 
	vbext_cv_FullModuleView = 1, 
} vbext_CodePaneview;

// _CodePane
// {0002E176-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE _CodePane
DECLARE_INTERFACE_(_CodePane, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// _CodePane methods:
	STDMETHOD_(HRESULT, Get_Collection) (THIS_ CodePanes** retval) PURE; 
	STDMETHOD_(HRESULT, Get_VBE) (THIS_ VBE** retval) PURE; 
	STDMETHOD_(HRESULT, Get_Window) (THIS_ Window** retval) PURE; 
	STDMETHOD_(HRESULT, GetSelection) (THIS_ long* StartLine, long* StartColumn, long* EndLine, long* EndColumn) PURE; 
	STDMETHOD_(HRESULT, SetSelection) (THIS_ long StartLine, long StartColumn, long EndLine, long EndColumn) PURE; 
	STDMETHOD_(HRESULT, Get_TopLine) (THIS_ long* TopLine) PURE; 
	STDMETHOD_(HRESULT, Set_TopLine) (THIS_ long TopLine) PURE; 
	STDMETHOD_(HRESULT, Get_CountOfVisibleLines) (THIS_ long* CountOfVisibleLines) PURE; 
	STDMETHOD_(HRESULT, Get_CodeModule) (THIS_ CodeModule** ) PURE; 
	STDMETHOD_(HRESULT, Show) (THIS ) PURE; 
	STDMETHOD_(HRESULT, Get_CodePaneView) (THIS_ vbext_CodePaneview* pCodePaneview) PURE; 
};
typedef _CodePane* LPCODEPANE;
#ifdef __cplusplus
// _CodePane  {0002E176-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS T_CodePaneProxy : public __OCF TAutoProxy
{
public:
	T_CodePaneProxy() : TAutoProxy(0x0) {}

	// Collection:   [dispid 1610743808]
	CodePanes* Collection();

	// _VBE:   [dispid 1610743809]
	void _VBE(TVBEProxy& Obj);

	// _Window:   [dispid 1610743810]
	void _Window(TWindowProxy& Obj);

	// GetSelection:   [dispid 1610743811]
	void GetSelection(long* StartLine, long* StartColumn, long* EndLine, long* EndColumn);

	// SetSelection:   [dispid 1610743812]
	void SetSelection(long StartLine, long StartColumn, long EndLine, long EndColumn);

	// TopLine:   [dispid 1610743813]
	long TopLine();

	// TopLine:   [dispid 1610743813]
	void TopLine(long arg0);

	// CountOfVisibleLines:   [dispid 1610743815]
	long CountOfVisibleLines();

	// _CodeModule:   [dispid 1610743816]
	CodeModule* _CodeModule();

	// Show:   [dispid 1610743817]
	void Show();

	// CodePaneView:   [dispid 1610743818]
	vbext_CodePaneview CodePaneView();
};
#endif

// _CodePanes
// {0002E172-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE _CodePanes
DECLARE_INTERFACE_(_CodePanes, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// _CodePanes methods:
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ VBE** retval) PURE; 
	STDMETHOD_(HRESULT, Get_VBE) (THIS_ VBE** retval) PURE; 
	STDMETHOD_(HRESULT, Item) (THIS_ VARIANT , CodePane** ) PURE; 
	STDMETHOD_(HRESULT, Get_Count) (THIS_ long* Count) PURE; 
	STDMETHOD_(HRESULT, _NewEnum) (THIS_ IUnknown** ppenum) PURE; 
	STDMETHOD_(HRESULT, Get_Current) (THIS_ CodePane** ) PURE; 
	STDMETHOD_(HRESULT, Set_Current) (THIS_ CodePane* ) PURE; 
};
typedef _CodePanes* LPCODEPANES;
#ifdef __cplusplus
// _CodePanes  {0002E172-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS T_CodePanesProxy : public __OCF TAutoProxy
{
public:
	T_CodePanesProxy() : TAutoProxy(0x0) {}

	// Parent:   [dispid 1610743808]
	void Parent(TVBEProxy& Obj);

	// _VBE:   [dispid 1610743809]
	void _VBE(TVBEProxy& Obj);

	// Item:   [dispid 0]
	CodePane* Item(__OCF TAutoVal arg0);

	// Count:   [dispid 1610743811]
	long Count();

	// _NewEnum:   [dispid -4]
	void _NewEnum(__OCF TAutoEnumerator<IUnknown*>& Obj);

	// Current:   [dispid 1610743813]
	CodePane* Current();

	// Current:   [dispid 1610743813]
	void Current(CodePane* arg0);
};
#endif

// _Properties
// {0002E188-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE _Properties
DECLARE_INTERFACE_(_Properties, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// _Properties methods:
	STDMETHOD_(HRESULT, Item) (THIS_ VARIANT , Property** lplppReturn) PURE; 
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** lppaReturn) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** lppidReturn) PURE; 
	STDMETHOD_(HRESULT, Get_Count) (THIS_ long* lplReturn) PURE; 
	STDMETHOD_(HRESULT, _NewEnum) (THIS_ IUnknown** lppiuReturn) PURE; 
	STDMETHOD_(HRESULT, Get_VBE) (THIS_ VBE** lppaReturn) PURE; 
};
typedef _Properties* LPPROPERTIES;
#ifdef __cplusplus
// _Properties  {0002E188-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS T_PropertiesProxy : public __OCF TAutoProxy
{
public:
	T_PropertiesProxy() : TAutoProxy(0x0) {}

	// Item:   [dispid 0]
	void Item(TPropertyProxy& Obj, __OCF TAutoVal arg0);

	// _Application:   [dispid 1]
	void _Application(T_ApplicationProxy& Obj);

	// Parent:   [dispid 2]
	IDispatch* Parent();

	// Count:   [dispid 40]
	long Count();

	// _NewEnum:   [dispid -4]
	void _NewEnum(__OCF TAutoEnumerator<IUnknown*>& Obj);

	// _VBE:   [dispid 10]
	void _VBE(TVBEProxy& Obj);
};
#endif

// _References
// {0002E17A-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE _References
DECLARE_INTERFACE_(_References, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// _References methods:
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ VBProject** retval) PURE; 
	STDMETHOD_(HRESULT, Get_VBE) (THIS_ VBE** retval) PURE; 
	STDMETHOD_(HRESULT, Item) (THIS_ VARIANT , Reference** ) PURE; 
	STDMETHOD_(HRESULT, Get_Count) (THIS_ long* Count) PURE; 
	STDMETHOD_(HRESULT, _NewEnum) (THIS_ IUnknown** ppenum) PURE; 
	STDMETHOD_(HRESULT, AddFromGuid) (THIS_ BSTR , long Major, long Minor, Reference** ) PURE; 
	STDMETHOD_(HRESULT, AddFromFile) (THIS_ BSTR FileName, Reference** ) PURE; 
	STDMETHOD_(HRESULT, Remove) (THIS_ Reference* ) PURE; 
};
typedef _References* LPREFERENCES;
#ifdef __cplusplus
// _References  {0002E17A-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FHIDDEN TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS T_ReferencesProxy : public __OCF TAutoProxy
{
public:
	T_ReferencesProxy() : TAutoProxy(0x0) {}

	// Parent:   [dispid 1610743808]
	VBProject* Parent();

	// _VBE:   [dispid 1610743809]
	void _VBE(TVBEProxy& Obj);

	// Item:   [dispid 0]
	void Item(TReferenceProxy& Obj, __OCF TAutoVal arg0);

	// Count:   [dispid 1610743811]
	long Count();

	// _NewEnum:   [dispid -4]
	void _NewEnum(__OCF TAutoEnumerator<IUnknown*>& Obj);

	// AddFromGuid:   [dispid 1610743813]
	void AddFromGuid(TReferenceProxy& Obj, __OCF TAutoString arg0, long Major, long Minor);

	// AddFromFile:   [dispid 1610743814]
	void AddFromFile(TReferenceProxy& Obj, __OCF TAutoString FileName);

	// Remove:   [dispid 1610743815]
	void Remove(Reference* arg0);
};
#endif

// AddIn
// {0002097E-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE AddIn
DECLARE_INTERFACE_(AddIn, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// AddIn methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Name) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Index) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Path) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Installed) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Installed) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_Compiled) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Autoload) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Delete) (THIS ) PURE; 
};
typedef AddIn* LPDDIN;
#ifdef __cplusplus
// AddIn  {0002097E-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TAddInProxy : public __OCF TAutoProxy
{
public:
	TAddInProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// Name:   [dispid 0]
	__OCF TAutoString Name();

	// _Index:   [dispid 1]
	long _Index();

	// Path:   [dispid 3]
	__OCF TAutoString Path();

	// Installed:   [dispid 4]
	/*__OWL*/ TBool Installed();

	// Installed:   [dispid 4]
	void Installed(/*__OWL*/ TBool arg0);

	// Compiled:   [dispid 5]
	/*__OWL*/ TBool Compiled();

	// Autoload:   [dispid 6]
	/*__OWL*/ TBool Autoload();

	// Delete:   [dispid 101]
	void Delete();
};
#endif

// Adjustments
// {000209C4-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE Adjustments
DECLARE_INTERFACE_(Adjustments, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// Adjustments methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Count) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Item) (THIS_ long , float* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Item) (THIS_ long , float prop) PURE; 
};
typedef Adjustments* LPDJUSTMENTS;
#ifdef __cplusplus
// Adjustments  {000209C4-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TAdjustmentsProxy : public __OCF TAutoProxy
{
public:
	TAdjustmentsProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1]
	IDispatch* Parent();

	// Count:   [dispid 2]
	long Count();

	// Item:   [dispid 0]
	float Item(long arg0);

	// Item:   [dispid 0]
	void Item(long arg0, float arg1);
};
#endif

// AnswerWizardFiles
// {000C0361-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE AnswerWizardFiles
DECLARE_INTERFACE_(AnswerWizardFiles, _IMsoDispObj)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
	// _IMsoDispObj methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ IDispatch** ppidisp) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* plCreator) PURE; 
#endif
	// AnswerWizardFiles methods:
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** ppidisp) PURE; 
	STDMETHOD_(HRESULT, Get_Item) (THIS_ int , BSTR* pbstr) PURE; 
	STDMETHOD_(HRESULT, Get_Count) (THIS_ int* pCount) PURE; 
	STDMETHOD_(HRESULT, Add) (THIS_ BSTR FileName) PURE; 
	STDMETHOD_(HRESULT, Delete) (THIS_ BSTR FileName) PURE; 
};
typedef AnswerWizardFiles* LPNSWERWIZARDFILES;
#ifdef __cplusplus
// AnswerWizardFiles  {000C0361-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TAnswerWizardFilesProxy : public __OCF TAutoProxy
{
public:
	TAnswerWizardFilesProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1610743808]
	IDispatch* _Application();

	// Creator:   [dispid 1610743809]
	long Creator();

	// Parent:   [dispid 1610809344]
	IDispatch* Parent();

	// Item:   [dispid 0]
	__OCF TAutoString Item(int arg0);

	// Count:   [dispid 1610809346]
	int Count();

	// Add:   [dispid 1610809347]
	void Add(__OCF TAutoString FileName);

	// Delete:   [dispid 1610809348]
	void Delete(__OCF TAutoString FileName);
};
#endif

// AutoCaption
// {0002097B-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE AutoCaption
DECLARE_INTERFACE_(AutoCaption, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// AutoCaption methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Name) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Get_AutoInsert) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_AutoInsert) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_Index) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_CaptionLabel) (THIS_ VARIANT* prop) PURE; 
	STDMETHOD_(HRESULT, Set_CaptionLabel) (THIS_ VARIANT* prop) PURE; 
};
typedef AutoCaption* LPUTOCAPTION;
#ifdef __cplusplus
// AutoCaption  {0002097B-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TAutoCaptionProxy : public __OCF TAutoProxy
{
public:
	TAutoCaptionProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// Name:   [dispid 0]
	__OCF TAutoString Name();

	// AutoInsert:   [dispid 1]
	/*__OWL*/ TBool AutoInsert();

	// AutoInsert:   [dispid 1]
	void AutoInsert(/*__OWL*/ TBool arg0);

	// _Index:   [dispid 2]
	long _Index();

	// _CaptionLabel:   [dispid 3]
	__OCF TAutoVal _CaptionLabel();

	// _CaptionLabel:   [dispid 3]
	void _CaptionLabel(__OCF TAutoVal* arg0);
};
#endif

// AutoCorrectEntries
// {00020948-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE AutoCorrectEntries
DECLARE_INTERFACE_(AutoCorrectEntries, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// AutoCorrectEntries methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get__NewEnum) (THIS_ IUnknown** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Count) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Item) (THIS_ VARIANT* , AutoCorrectEntry** prop) PURE; 
	STDMETHOD_(HRESULT, Add) (THIS_ BSTR Name, BSTR Value, AutoCorrectEntry** prop) PURE; 
	STDMETHOD_(HRESULT, AddRichText) (THIS_ BSTR Name, WordRange* , AutoCorrectEntry** prop) PURE; 
};
typedef AutoCorrectEntries* LPUTOCORRECTENTRIES;
#ifdef __cplusplus
// AutoCorrectEntries  {00020948-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TAutoCorrectEntriesProxy : public __OCF TAutoProxy
{
public:
	TAutoCorrectEntriesProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// _NewEnum:   [dispid -4]
	void _NewEnum(__OCF TAutoEnumerator<IUnknown*>& Obj);

	// Count:   [dispid 1]
	long Count();

	// Item:   [dispid 0]
	void Item(TAutoCorrectEntryProxy& Obj, __OCF TAutoVal* arg0);

	// Add:   [dispid 101]
	void Add(TAutoCorrectEntryProxy& Obj, __OCF TAutoString Name, __OCF TAutoString Value);

	// AddRichText:   [dispid 102]
	void AddRichText(TAutoCorrectEntryProxy& Obj, __OCF TAutoString Name, WordRange* arg1);
};
#endif

// AutoCorrectEntry
// {00020947-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE AutoCorrectEntry
DECLARE_INTERFACE_(AutoCorrectEntry, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// AutoCorrectEntry methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Index) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Name) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Name) (THIS_ BSTR prop) PURE; 
	STDMETHOD_(HRESULT, Get_Value) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Value) (THIS_ BSTR prop) PURE; 
	STDMETHOD_(HRESULT, Get_RichText) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Delete) (THIS ) PURE; 
	STDMETHOD_(HRESULT, Apply) (THIS_ WordRange* ) PURE; 
};
typedef AutoCorrectEntry* LPUTOCORRECTENTRY;
#ifdef __cplusplus
// AutoCorrectEntry  {00020947-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TAutoCorrectEntryProxy : public __OCF TAutoProxy
{
public:
	TAutoCorrectEntryProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// _Index:   [dispid 1]
	long _Index();

	// Name:   [dispid 2]
	__OCF TAutoString Name();

	// Name:   [dispid 2]
	void Name(__OCF TAutoString arg0);

	// Value:   [dispid 3]
	__OCF TAutoString Value();

	// Value:   [dispid 3]
	void Value(__OCF TAutoString arg0);

	// RichText:   [dispid 4]
	/*__OWL*/ TBool RichText();

	// Delete:   [dispid 101]
	void Delete();

	// Apply:   [dispid 102]
	void Apply(WordRange* arg0);
};
#endif

// AutoTextEntries
// {00020937-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE AutoTextEntries
DECLARE_INTERFACE_(AutoTextEntries, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// AutoTextEntries methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get__NewEnum) (THIS_ IUnknown** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Count) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Item) (THIS_ VARIANT* , AutoTextEntry** prop) PURE; 
	STDMETHOD_(HRESULT, Add) (THIS_ BSTR Name, WordRange* , AutoTextEntry** prop) PURE; 
	STDMETHOD_(HRESULT, AppendToSpike) (THIS_ WordRange* , AutoTextEntry** prop) PURE; 
};
typedef AutoTextEntries* LPUTOTEXTENTRIES;
#ifdef __cplusplus
// AutoTextEntries  {00020937-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TAutoTextEntriesProxy : public __OCF TAutoProxy
{
public:
	TAutoTextEntriesProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// _NewEnum:   [dispid -4]
	void _NewEnum(__OCF TAutoEnumerator<IUnknown*>& Obj);

	// Count:   [dispid 1]
	long Count();

	// Item:   [dispid 0]
	void Item(TAutoTextEntryProxy& Obj, __OCF TAutoVal* arg0);

	// Add:   [dispid 101]
	void Add(TAutoTextEntryProxy& Obj, __OCF TAutoString Name, WordRange* arg1);

	// AppendToSpike:   [dispid 102]
	void AppendToSpike(TAutoTextEntryProxy& Obj, WordRange* arg0);
};
#endif

// AutoTextEntry
// {00020936-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE AutoTextEntry
DECLARE_INTERFACE_(AutoTextEntry, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// AutoTextEntry methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Index) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Name) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Name) (THIS_ BSTR prop) PURE; 
	STDMETHOD_(HRESULT, Get_StyleName) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Value) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Value) (THIS_ BSTR prop) PURE; 
	STDMETHOD_(HRESULT, Delete) (THIS ) PURE; 
	STDMETHOD_(HRESULT, Insert) (THIS_ WordRange* Where, VARIANT* RichText, WordRange** prop) PURE; 
};
typedef AutoTextEntry* LPUTOTEXTENTRY;
#ifdef __cplusplus
// AutoTextEntry  {00020936-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TAutoTextEntryProxy : public __OCF TAutoProxy
{
public:
	TAutoTextEntryProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// _Index:   [dispid 1]
	long _Index();

	// Name:   [dispid 2]
	__OCF TAutoString Name();

	// Name:   [dispid 2]
	void Name(__OCF TAutoString arg0);

	// StyleName:   [dispid 3]
	__OCF TAutoString StyleName();

	// Value:   [dispid 0]
	__OCF TAutoString Value();

	// Value:   [dispid 0]
	void Value(__OCF TAutoString arg0);

	// Delete:   [dispid 101]
	void Delete();

	// Insert:   [dispid 102]
	void Insert(TRangeProxy& Obj, WordRange* Where, __OCF TAutoVal* RichText = 0);
};
#endif

// Bookmark
// {00020968-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE Bookmark
DECLARE_INTERFACE_(Bookmark, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// Bookmark methods:
	STDMETHOD_(HRESULT, Get_Name) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Range) (THIS_ WordRange** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Empty) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Start) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Start) (THIS_ long prop) PURE; 
	STDMETHOD_(HRESULT, Get_End) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Set_End) (THIS_ long prop) PURE; 
	STDMETHOD_(HRESULT, Get_Column) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Get_StoryType) (THIS_ WdStoryType* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Select) (THIS ) PURE; 
	STDMETHOD_(HRESULT, Delete) (THIS ) PURE; 
	STDMETHOD_(HRESULT, Copy) (THIS_ BSTR Name, Bookmark** prop) PURE; 
};
typedef Bookmark* LPOOKMARK;
#ifdef __cplusplus
// Bookmark  {00020968-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TBookmarkProxy : public __OCF TAutoProxy
{
public:
	TBookmarkProxy() : TAutoProxy(0x0) {}

	// Name:   [dispid 0]
	__OCF TAutoString Name();

	// _Range:   [dispid 1]
	void _Range(TRangeProxy& Obj);

	// Empty:   [dispid 2]
	/*__OWL*/ TBool Empty();

	// Start:   [dispid 3]
	long Start();

	// Start:   [dispid 3]
	void Start(long arg0);

	// End:   [dispid 4]
	long End();

	// End:   [dispid 4]
	void End(long arg0);

	// Column:   [dispid 5]
	/*__OWL*/ TBool Column();

	// StoryType:   [dispid 6]
	WdStoryType StoryType();

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// Select:   [dispid 65535]
	void Select();

	// Delete:   [dispid 11]
	void Delete();

	// Copy:   [dispid 12]
	void Copy(TBookmarkProxy& Obj, __OCF TAutoString Name);
};
#endif

// WdPageBorderArt
typedef enum tagWdPageBorderArt
{
	wdArtApples = 1, 
	wdArtMapleMuffins = 2, 
	wdArtCakeSlice = 3, 
	wdArtCandyCorn = 4, 
	wdArtIceCreamCones = 5, 
	wdArtChampagneBottle = 6, 
	wdArtPartyGlass = 7, 
	wdArtChristmasTree = 8, 
	wdArtTrees = 9, 
	wdArtPalmsColor = 10, 
	wdArtBalloons3Colors = 11, 
	wdArtBalloonsHotAir = 12, 
	wdArtPartyFavor = 13, 
	wdArtConfettiStreamers = 14, 
	wdArtHearts = 15, 
	wdArtHeartBalloon = 16, 
	wdArtStars3D = 17, 
	wdArtStarsShadowed = 18, 
	wdArtStars = 19, 
	wdArtSun = 20, 
	wdArtEarth2 = 21, 
	wdArtEarth1 = 22, 
	wdArtPeopleHats = 23, 
	wdArtSombrero = 24, 
	wdArtPencils = 25, 
	wdArtPackages = 26, 
	wdArtClocks = 27, 
	wdArtFirecrackers = 28, 
	wdArtRings = 29, 
	wdArtMapPins = 30, 
	wdArtConfetti = 31, 
	wdArtCreaturesButterfly = 32, 
	wdArtCreaturesLadyBug = 33, 
	wdArtCreaturesFish = 34, 
	wdArtBirdsFlight = 35, 
	wdArtScaredCat = 36, 
	wdArtBats = 37, 
	wdArtFlowersRoses = 38, 
	wdArtFlowersRedRose = 39, 
	wdArtPoinsettias = 40, 
	wdArtHolly = 41, 
	wdArtFlowersTiny = 42, 
	wdArtFlowersPansy = 43, 
	wdArtFlowersModern2 = 44, 
	wdArtFlowersModern1 = 45, 
	wdArtWhiteFlowers = 46, 
	wdArtVine = 47, 
	wdArtFlowersDaisies = 48, 
	wdArtFlowersBlockPrint = 49, 
	wdArtDecoArchColor = 50, 
	wdArtFans = 51, 
	wdArtFilm = 52, 
	wdArtLightning1 = 53, 
	wdArtCompass = 54, 
	wdArtDoubleD = 55, 
	wdArtClassicalWave = 56, 
	wdArtShadowedSquares = 57, 
	wdArtTwistedLines1 = 58, 
	wdArtWaveline = 59, 
	wdArtQuadrants = 60, 
	wdArtCheckedBarColor = 61, 
	wdArtSwirligig = 62, 
	wdArtPushPinNote1 = 63, 
	wdArtPushPinNote2 = 64, 
	wdArtPumpkin1 = 65, 
	wdArtEggsBlack = 66, 
	wdArtCup = 67, 
	wdArtHeartGray = 68, 
	wdArtGingerbreadMan = 69, 
	wdArtBabyPacifier = 70, 
	wdArtBabyRattle = 71, 
	wdArtCabins = 72, 
	wdArtHouseFunky = 73, 
	wdArtStarsBlack = 74, 
	wdArtSnowflakes = 75, 
	wdArtSnowflakeFancy = 76, 
	wdArtSkyrocket = 77, 
	wdArtSeattle = 78, 
	wdArtMusicNotes = 79, 
	wdArtPalmsBlack = 80, 
	wdArtMapleLeaf = 81, 
	wdArtPaperClips = 82, 
	wdArtShorebirdTracks = 83, 
	wdArtPeople = 84, 
	wdArtPeopleWaving = 85, 
	wdArtEclipsingSquares2 = 86, 
	wdArtHypnotic = 87, 
	wdArtDiamondsGray = 88, 
	wdArtDecoArch = 89, 
	wdArtDecoBlocks = 90, 
	wdArtCirclesLines = 91, 
	wdArtPapyrus = 92, 
	wdArtWoodwork = 93, 
	wdArtWeavingBraid = 94, 
	wdArtWeavingRibbon = 95, 
	wdArtWeavingAngles = 96, 
	wdArtArchedScallops = 97, 
	wdArtSafari = 98, 
	wdArtCelticKnotwork = 99, 
	wdArtCrazyMaze = 100, 
	wdArtEclipsingSquares1 = 101, 
	wdArtBirds = 102, 
	wdArtFlowersTeacup = 103, 
	wdArtNorthwest = 104, 
	wdArtSouthwest = 105, 
	wdArtTribal6 = 106, 
	wdArtTribal4 = 107, 
	wdArtTribal3 = 108, 
	wdArtTribal2 = 109, 
	wdArtTribal5 = 110, 
	wdArtXIllusions = 111, 
	wdArtZanyTriangles = 112, 
	wdArtPyramids = 113, 
	wdArtPyramidsAbove = 114, 
	wdArtConfettiGrays = 115, 
	wdArtConfettiOutline = 116, 
	wdArtConfettiWhite = 117, 
	wdArtMosaic = 118, 
	wdArtLightning2 = 119, 
	wdArtHeebieJeebies = 120, 
	wdArtLightBulb = 121, 
	wdArtGradient = 122, 
	wdArtTriangleParty = 123, 
	wdArtTwistedLines2 = 124, 
	wdArtMoons = 125, 
	wdArtOvals = 126, 
	wdArtDoubleDiamonds = 127, 
	wdArtChainLink = 128, 
	wdArtTriangles = 129, 
	wdArtTribal1 = 130, 
	wdArtMarqueeToothed = 131, 
	wdArtSharksTeeth = 132, 
	wdArtSawtooth = 133, 
	wdArtSawtoothGray = 134, 
	wdArtPostageStamp = 135, 
	wdArtWeavingStrips = 136, 
	wdArtZigZag = 137, 
	wdArtCrossStitch = 138, 
	wdArtGems = 139, 
	wdArtCirclesRectangles = 140, 
	wdArtCornerTriangles = 141, 
	wdArtCreaturesInsects = 142, 
	wdArtZigZagStitch = 143, 
	wdArtCheckered = 144, 
	wdArtCheckedBarBlack = 145, 
	wdArtMarquee = 146, 
	wdArtBasicWhiteDots = 147, 
	wdArtBasicWideMidline = 148, 
	wdArtBasicWideOutline = 149, 
	wdArtBasicWideInline = 150, 
	wdArtBasicThinLines = 151, 
	wdArtBasicWhiteDashes = 152, 
	wdArtBasicWhiteSquares = 153, 
	wdArtBasicBlackSquares = 154, 
	wdArtBasicBlackDashes = 155, 
	wdArtBasicBlackDots = 156, 
	wdArtStarsTop = 157, 
	wdArtCertificateBanner = 158, 
	wdArtHandmade1 = 159, 
	wdArtHandmade2 = 160, 
	wdArtTornPaper = 161, 
	wdArtTornPaperBlack = 162, 
	wdArtCouponCutoutDashes = 163, 
	wdArtCouponCutoutDots = 164, 
} WdPageBorderArt;

// Border
// {0002093B-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE Border
DECLARE_INTERFACE_(Border, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// Border methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Visible) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Visible) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_ColorIndex) (THIS_ WdColorIndex* prop) PURE; 
	STDMETHOD_(HRESULT, Set_ColorIndex) (THIS_ WdColorIndex prop) PURE; 
	STDMETHOD_(HRESULT, Get_Inside) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Get_LineStyle) (THIS_ WdLineStyle* prop) PURE; 
	STDMETHOD_(HRESULT, Set_LineStyle) (THIS_ WdLineStyle prop) PURE; 
	STDMETHOD_(HRESULT, Get_LineWidth) (THIS_ WdLineWidth* prop) PURE; 
	STDMETHOD_(HRESULT, Set_LineWidth) (THIS_ WdLineWidth prop) PURE; 
	STDMETHOD_(HRESULT, Get_ArtStyle) (THIS_ WdPageBorderArt* prop) PURE; 
	STDMETHOD_(HRESULT, Set_ArtStyle) (THIS_ WdPageBorderArt prop) PURE; 
	STDMETHOD_(HRESULT, Get_ArtWidth) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Set_ArtWidth) (THIS_ long prop) PURE; 
	STDMETHOD_(HRESULT, Get_Color) (THIS_ WdColor* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Color) (THIS_ WdColor prop) PURE; 
};
typedef Border* LPORDER;
#ifdef __cplusplus
// Border  {0002093B-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TBorderProxy : public __OCF TAutoProxy
{
public:
	TBorderProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// Visible:   [dispid 0]
	/*__OWL*/ TBool Visible();

	// Visible:   [dispid 0]
	void Visible(/*__OWL*/ TBool arg0);

	// ColorIndex:   [dispid 1]
	WdColorIndex ColorIndex();

	// ColorIndex:   [dispid 1]
	void ColorIndex(WdColorIndex arg0);

	// Inside:   [dispid 2]
	/*__OWL*/ TBool Inside();

	// LineStyle:   [dispid 3]
	WdLineStyle LineStyle();

	// LineStyle:   [dispid 3]
	void LineStyle(WdLineStyle arg0);

	// LineWidth:   [dispid 4]
	WdLineWidth LineWidth();

	// LineWidth:   [dispid 4]
	void LineWidth(WdLineWidth arg0);

	// ArtStyle:   [dispid 5]
	WdPageBorderArt ArtStyle();

	// ArtStyle:   [dispid 5]
	void ArtStyle(WdPageBorderArt arg0);

	// ArtWidth:   [dispid 6]
	long ArtWidth();

	// ArtWidth:   [dispid 6]
	void ArtWidth(long arg0);

	// Color:   [dispid 7]
	WdColor Color();

	// Color:   [dispid 7]
	void Color(WdColor arg0);
};
#endif

// MsoCalloutAngleType
typedef enum tagMsoCalloutAngleType
{
	msoCalloutAngleMixed = -2, 
	msoCalloutAngleAutomatic = 1, 
	msoCalloutAngle30 = 2, 
	msoCalloutAngle45 = 3, 
	msoCalloutAngle60 = 4, 
	msoCalloutAngle90 = 5, 
} MsoCalloutAngleType;

// MsoCalloutDropType
typedef enum tagMsoCalloutDropType
{
	msoCalloutDropMixed = -2, 
	msoCalloutDropCustom = 1, 
	msoCalloutDropTop = 2, 
	msoCalloutDropCenter = 3, 
	msoCalloutDropBottom = 4, 
} MsoCalloutDropType;

// CalloutFormat
// {000209C5-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE CalloutFormat
DECLARE_INTERFACE_(CalloutFormat, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// CalloutFormat methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Accent) (THIS_ MsoTriState* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Accent) (THIS_ MsoTriState prop) PURE; 
	STDMETHOD_(HRESULT, Get_Angle) (THIS_ MsoCalloutAngleType* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Angle) (THIS_ MsoCalloutAngleType prop) PURE; 
	STDMETHOD_(HRESULT, Get_AutoAttach) (THIS_ MsoTriState* prop) PURE; 
	STDMETHOD_(HRESULT, Set_AutoAttach) (THIS_ MsoTriState prop) PURE; 
	STDMETHOD_(HRESULT, Get_AutoLength) (THIS_ MsoTriState* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Border) (THIS_ MsoTriState* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Border) (THIS_ MsoTriState prop) PURE; 
	STDMETHOD_(HRESULT, Get_Drop) (THIS_ float* prop) PURE; 
	STDMETHOD_(HRESULT, Get_DropType) (THIS_ MsoCalloutDropType* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Gap) (THIS_ float* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Gap) (THIS_ float prop) PURE; 
	STDMETHOD_(HRESULT, Get_Length) (THIS_ float* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Type) (THIS_ MsoCalloutType* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Type) (THIS_ MsoCalloutType prop) PURE; 
	STDMETHOD_(HRESULT, AutomaticLength) (THIS ) PURE; 
	STDMETHOD_(HRESULT, CustomDrop) (THIS_ float Drop) PURE; 
	STDMETHOD_(HRESULT, CustomLength) (THIS_ float Length) PURE; 
	STDMETHOD_(HRESULT, PresetDrop) (THIS_ MsoCalloutDropType DropType) PURE; 
};
typedef CalloutFormat* LPALLOUTFORMAT;
#ifdef __cplusplus
// CalloutFormat  {000209C5-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TCalloutFormatProxy : public __OCF TAutoProxy
{
public:
	TCalloutFormatProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1]
	IDispatch* Parent();

	// Accent:   [dispid 100]
	MsoTriState Accent();

	// Accent:   [dispid 100]
	void Accent(MsoTriState arg0);

	// Angle:   [dispid 101]
	MsoCalloutAngleType Angle();

	// Angle:   [dispid 101]
	void Angle(MsoCalloutAngleType arg0);

	// AutoAttach:   [dispid 102]
	MsoTriState AutoAttach();

	// AutoAttach:   [dispid 102]
	void AutoAttach(MsoTriState arg0);

	// AutoLength:   [dispid 103]
	MsoTriState AutoLength();

	// _Border:   [dispid 104]
	MsoTriState _Border();

	// _Border:   [dispid 104]
	void _Border(MsoTriState arg0);

	// Drop:   [dispid 105]
	float Drop();

	// DropType:   [dispid 106]
	MsoCalloutDropType DropType();

	// Gap:   [dispid 107]
	float Gap();

	// Gap:   [dispid 107]
	void Gap(float arg0);

	// Length:   [dispid 108]
	float Length();

	// Type:   [dispid 109]
	MsoCalloutType Type();

	// Type:   [dispid 109]
	void Type(MsoCalloutType arg0);

	// AutomaticLength:   [dispid 10]
	void AutomaticLength();

	// CustomDrop:   [dispid 11]
	void CustomDrop(float Drop);

	// CustomLength:   [dispid 12]
	void CustomLength(float Length);

	// PresetDrop:   [dispid 13]
	void PresetDrop(MsoCalloutDropType DropType);
};
#endif

// CanvasShapes
// {396F9073-F9FD-11D3-8EA0-0050049A1A01}
#undef INTERFACE
#define INTERFACE CanvasShapes
DECLARE_INTERFACE_(CanvasShapes, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// CanvasShapes methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Count) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get__NewEnum) (THIS_ IUnknown** prop) PURE; 
	STDMETHOD_(HRESULT, Item) (THIS_ VARIANT* , WordShape** prop) PURE; 
	STDMETHOD_(HRESULT, AddCallout) (THIS_ MsoCalloutType Type, float Left, float Top, float Width, float Height, WordShape** prop) PURE; 
	STDMETHOD_(HRESULT, AddConnector) (THIS_ MsoConnectorType Type, float BeginX, float BeginY, float EndX, float EndY, WordShape** prop) PURE; 
	STDMETHOD_(HRESULT, AddCurve) (THIS_ VARIANT* SafeArrayOfPoints, WordShape** prop) PURE; 
	STDMETHOD_(HRESULT, AddLabel) (THIS_ MsoTextOrientation Orientation, float Left, float Top, float Width, float Height, WordShape** prop) PURE; 
	STDMETHOD_(HRESULT, AddLine) (THIS_ float BeginX, float BeginY, float EndX, float EndY, WordShape** prop) PURE; 
	STDMETHOD_(HRESULT, AddPicture) (THIS_ BSTR FileName, VARIANT* LinkToFile, VARIANT* SaveWithDocument, VARIANT* Left, VARIANT* Top, VARIANT* Width, VARIANT* Height, WordShape** prop) PURE; 
	STDMETHOD_(HRESULT, AddPolyline) (THIS_ VARIANT* SafeArrayOfPoints, WordShape** prop) PURE; 
	STDMETHOD_(HRESULT, AddShape) (THIS_ long Type, float Left, float Top, float Width, float Height, WordShape** prop) PURE; 
	STDMETHOD_(HRESULT, AddTextEffect) (THIS_ MsoPresetTextEffect PresetTextEffect, BSTR Text, BSTR , float , MsoTriState , MsoTriState , float Left, float Top, WordShape** prop) PURE; 
	STDMETHOD_(HRESULT, AddTextbox) (THIS_ MsoTextOrientation Orientation, float Left, float Top, float Width, float Height, WordShape** prop) PURE; 
	STDMETHOD_(HRESULT, BuildFreeform) (THIS_ MsoEditingType EditingType, float X1, float Y1, FreeformBuilder** prop) PURE; 
	STDMETHOD_(HRESULT, WordRange) (THIS_ VARIANT* , ShapeRange** prop) PURE; 
	STDMETHOD_(HRESULT, SelectAll) (THIS ) PURE; 
};
typedef CanvasShapes* LPANVASSHAPES;
#ifdef __cplusplus
// CanvasShapes  {396F9073-F9FD-11D3-8EA0-0050049A1A01}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TCanvasShapesProxy : public __OCF TAutoProxy
{
public:
	TCanvasShapesProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 8000]
	WordApplication* _Application();

	// Creator:   [dispid 8001]
	long Creator();

	// Parent:   [dispid 1]
	IDispatch* Parent();

	// Count:   [dispid 2]
	long Count();

	// _NewEnum:   [dispid -4]
	void _NewEnum(__OCF TAutoEnumerator<IUnknown*>& Obj);

	// Item:   [dispid 0]
	void Item(TShapeProxy& Obj, __OCF TAutoVal* arg0);

	// AddCallout:   [dispid 10]
	void AddCallout(TShapeProxy& Obj, MsoCalloutType Type, float Left, float Top, float Width, float Height);

	// AddConnector:   [dispid 11]
	void AddConnector(TShapeProxy& Obj, MsoConnectorType Type, float BeginX, float BeginY, float EndX, float EndY);

	// AddCurve:   [dispid 12]
	void AddCurve(TShapeProxy& Obj, __OCF TAutoVal* SafeArrayOfPoints);

	// AddLabel:   [dispid 13]
	void AddLabel(TShapeProxy& Obj, MsoTextOrientation Orientation, float Left, float Top, float Width, float Height);

	// AddLine:   [dispid 14]
	void AddLine(TShapeProxy& Obj, float BeginX, float BeginY, float EndX, float EndY);

	// AddPicture:   [dispid 15]
	void AddPicture(TShapeProxy& Obj, __OCF TAutoString FileName, __OCF TAutoVal* LinkToFile = 0, __OCF TAutoVal* SaveWithDocument = 0, __OCF TAutoVal* Left = 0, __OCF TAutoVal* Top = 0, __OCF TAutoVal* Width = 0, __OCF TAutoVal* Height = 0);

	// AddPolyline:   [dispid 16]
	void AddPolyline(TShapeProxy& Obj, __OCF TAutoVal* SafeArrayOfPoints);

	// AddShape:   [dispid 17]
	void AddShape(TShapeProxy& Obj, long Type, float Left, float Top, float Width, float Height);

	// AddTextEffect:   [dispid 18]
	void AddTextEffect(TShapeProxy& Obj, MsoPresetTextEffect PresetTextEffect, __OCF TAutoString Text, __OCF TAutoString arg2, float arg3, MsoTriState arg4, MsoTriState arg5, float Left, float Top);

	// AddTextbox:   [dispid 19]
	void AddTextbox(TShapeProxy& Obj, MsoTextOrientation Orientation, float Left, float Top, float Width, float Height);

	// BuildFreeform:   [dispid 20]
	void BuildFreeform(TFreeformBuilderProxy& Obj, MsoEditingType EditingType, float X1, float Y1);

	// _Range:   [dispid 21]
	void _Range(TShapeRangeProxy& Obj, __OCF TAutoVal* arg0);

	// SelectAll:   [dispid 22]
	void SelectAll();
};
#endif

// WdCaptionLabelID
typedef enum tagWdCaptionLabelID
{
	wdCaptionFigure = -1, 
	wdCaptionTable = -2, 
	wdCaptionEquation = -3, 
} WdCaptionLabelID;

// WdCaptionNumberStyle
typedef enum tagWdCaptionNumberStyle
{
	wdCaptionNumberStyleArabic = 0, 
	wdCaptionNumberStyleUppercaseRoman = 1, 
	wdCaptionNumberStyleLowercaseRoman = 2, 
	wdCaptionNumberStyleUppercaseLetter = 3, 
	wdCaptionNumberStyleLowercaseLetter = 4, 
	wdCaptionNumberStyleArabicFullWidth = 14, 
	wdCaptionNumberStyleKanji = 10, 
	wdCaptionNumberStyleKanjiDigit = 11, 
	wdCaptionNumberStyleKanjiTraditional = 16, 
	wdCaptionNumberStyleNumberInCircle = 18, 
	wdCaptionNumberStyleGanada = 24, 
	wdCaptionNumberStyleChosung = 25, 
	wdCaptionNumberStyleZodiac1 = 30, 
	wdCaptionNumberStyleZodiac2 = 31, 
	wdCaptionNumberStyleHanjaRead = 41, 
	wdCaptionNumberStyleHanjaReadDigit = 42, 
	wdCaptionNumberStyleTradChinNum2 = 34, 
	wdCaptionNumberStyleTradChinNum3 = 35, 
	wdCaptionNumberStyleSimpChinNum2 = 38, 
	wdCaptionNumberStyleSimpChinNum3 = 39, 
	wdCaptionNumberStyleHebrewLetter1 = 45, 
	wdCaptionNumberStyleArabicLetter1 = 46, 
	wdCaptionNumberStyleHebrewLetter2 = 47, 
	wdCaptionNumberStyleArabicLetter2 = 48, 
	wdCaptionNumberStyleHindiLetter1 = 49, 
	wdCaptionNumberStyleHindiLetter2 = 50, 
	wdCaptionNumberStyleHindiArabic = 51, 
	wdCaptionNumberStyleHindiCardinalText = 52, 
	wdCaptionNumberStyleThaiLetter = 53, 
	wdCaptionNumberStyleThaiArabic = 54, 
	wdCaptionNumberStyleThaiCardinalText = 55, 
	wdCaptionNumberStyleVietCardinalText = 56, 
} WdCaptionNumberStyle;

// WdSeparatorType
typedef enum tagWdSeparatorType
{
	wdSeparatorHyphen = 0, 
	wdSeparatorPeriod = 1, 
	wdSeparatorColon = 2, 
	wdSeparatorEmDash = 3, 
	wdSeparatorEnDash = 4, 
} WdSeparatorType;

// WdCaptionPosition
typedef enum tagWdCaptionPosition
{
	wdCaptionPositionAbove = 0, 
	wdCaptionPositionBelow = 1, 
} WdCaptionPosition;

// CaptionLabel
// {00020979-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE CaptionLabel
DECLARE_INTERFACE_(CaptionLabel, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// CaptionLabel methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Name) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Get_BuiltIn) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Get_ID) (THIS_ WdCaptionLabelID* prop) PURE; 
	STDMETHOD_(HRESULT, Get_IncludeChapterNumber) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_IncludeChapterNumber) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_NumberStyle) (THIS_ WdCaptionNumberStyle* prop) PURE; 
	STDMETHOD_(HRESULT, Set_NumberStyle) (THIS_ WdCaptionNumberStyle prop) PURE; 
	STDMETHOD_(HRESULT, Get_ChapterStyleLevel) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Set_ChapterStyleLevel) (THIS_ long prop) PURE; 
	STDMETHOD_(HRESULT, Get_Separator) (THIS_ WdSeparatorType* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Separator) (THIS_ WdSeparatorType prop) PURE; 
	STDMETHOD_(HRESULT, Get_Position) (THIS_ WdCaptionPosition* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Position) (THIS_ WdCaptionPosition prop) PURE; 
	STDMETHOD_(HRESULT, Delete) (THIS ) PURE; 
};
typedef CaptionLabel* LPAPTIONLABEL;
#ifdef __cplusplus
// CaptionLabel  {00020979-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TCaptionLabelProxy : public __OCF TAutoProxy
{
public:
	TCaptionLabelProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// Name:   [dispid 0]
	__OCF TAutoString Name();

	// BuiltIn:   [dispid 1]
	/*__OWL*/ TBool BuiltIn();

	// ID:   [dispid 2]
	WdCaptionLabelID ID();

	// IncludeChapterNumber:   [dispid 3]
	/*__OWL*/ TBool IncludeChapterNumber();

	// IncludeChapterNumber:   [dispid 3]
	void IncludeChapterNumber(/*__OWL*/ TBool arg0);

	// NumberStyle:   [dispid 4]
	WdCaptionNumberStyle NumberStyle();

	// NumberStyle:   [dispid 4]
	void NumberStyle(WdCaptionNumberStyle arg0);

	// ChapterStyleLevel:   [dispid 5]
	long ChapterStyleLevel();

	// ChapterStyleLevel:   [dispid 5]
	void ChapterStyleLevel(long arg0);

	// Separator:   [dispid 6]
	WdSeparatorType Separator();

	// Separator:   [dispid 6]
	void Separator(WdSeparatorType arg0);

	// Position:   [dispid 7]
	WdCaptionPosition Position();

	// Position:   [dispid 7]
	void Position(WdCaptionPosition arg0);

	// Delete:   [dispid 100]
	void Delete();
};
#endif

// WdCellVerticalAlignment
typedef enum tagWdCellVerticalAlignment
{
	wdCellAlignVerticalTop = 0, 
	wdCellAlignVerticalCenter = 1, 
	wdCellAlignVerticalBottom = 3, 
} WdCellVerticalAlignment;

// Cell
// {0002094E-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE Cell
DECLARE_INTERFACE_(Cell, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// Cell methods:
	STDMETHOD_(HRESULT, Get_Range) (THIS_ WordRange** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get_RowIndex) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_ColumnIndex) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Width) (THIS_ float* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Width) (THIS_ float prop) PURE; 
	STDMETHOD_(HRESULT, Get_Height) (THIS_ float* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Height) (THIS_ float prop) PURE; 
	STDMETHOD_(HRESULT, Get_HeightRule) (THIS_ WdRowHeightRule* prop) PURE; 
	STDMETHOD_(HRESULT, Set_HeightRule) (THIS_ WdRowHeightRule prop) PURE; 
	STDMETHOD_(HRESULT, Get_VerticalAlignment) (THIS_ WdCellVerticalAlignment* prop) PURE; 
	STDMETHOD_(HRESULT, Set_VerticalAlignment) (THIS_ WdCellVerticalAlignment prop) PURE; 
	STDMETHOD_(HRESULT, Get_Column) (THIS_ Column** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Row) (THIS_ Row** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Next) (THIS_ Cell** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Previous) (THIS_ Cell** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Shading) (THIS_ Shading** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Borders) (THIS_ Borders** prop) PURE; 
	STDMETHOD_(HRESULT, Set_Borders) (THIS_ Borders* prop) PURE; 
	STDMETHOD_(HRESULT, Select) (THIS ) PURE; 
	STDMETHOD_(HRESULT, Delete) (THIS_ VARIANT* ShiftCells) PURE; 
	STDMETHOD_(HRESULT, Formula) (THIS_ VARIANT* Formula, VARIANT* NumFormat) PURE; 
	STDMETHOD_(HRESULT, SetWidth) (THIS_ float ColumnWidth, WdRulerStyle RulerStyle) PURE; 
	STDMETHOD_(HRESULT, SetHeight) (THIS_ VARIANT* RowHeight, WdRowHeightRule HeightRule) PURE; 
	STDMETHOD_(HRESULT, Merge) (THIS_ Cell* MergeTo) PURE; 
	STDMETHOD_(HRESULT, Split) (THIS_ VARIANT* NumRows, VARIANT* NumColumns) PURE; 
	STDMETHOD_(HRESULT, AutoSum) (THIS ) PURE; 
	STDMETHOD_(HRESULT, Get_Tables) (THIS_ Tables** prop) PURE; 
	STDMETHOD_(HRESULT, Get_NestingLevel) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_WordWrap) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_WordWrap) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_PreferredWidth) (THIS_ float* prop) PURE; 
	STDMETHOD_(HRESULT, Set_PreferredWidth) (THIS_ float prop) PURE; 
	STDMETHOD_(HRESULT, Get_FitText) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_FitText) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_TopPadding) (THIS_ float* prop) PURE; 
	STDMETHOD_(HRESULT, Set_TopPadding) (THIS_ float prop) PURE; 
	STDMETHOD_(HRESULT, Get_BottomPadding) (THIS_ float* prop) PURE; 
	STDMETHOD_(HRESULT, Set_BottomPadding) (THIS_ float prop) PURE; 
	STDMETHOD_(HRESULT, Get_LeftPadding) (THIS_ float* prop) PURE; 
	STDMETHOD_(HRESULT, Set_LeftPadding) (THIS_ float prop) PURE; 
	STDMETHOD_(HRESULT, Get_RightPadding) (THIS_ float* prop) PURE; 
	STDMETHOD_(HRESULT, Set_RightPadding) (THIS_ float prop) PURE; 
	STDMETHOD_(HRESULT, Get_ID) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Set_ID) (THIS_ BSTR prop) PURE; 
	STDMETHOD_(HRESULT, Get_PreferredWidthType) (THIS_ WdPreferredWidthType* prop) PURE; 
	STDMETHOD_(HRESULT, Set_PreferredWidthType) (THIS_ WdPreferredWidthType prop) PURE; 
};
typedef Cell* LPELL;
#ifdef __cplusplus
// Cell  {0002094E-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TCellProxy : public __OCF TAutoProxy
{
public:
	TCellProxy() : TAutoProxy(0x0) {}

	// _Range:   [dispid 0]
	void _Range(TRangeProxy& Obj);

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// RowIndex:   [dispid 4]
	long RowIndex();

	// ColumnIndex:   [dispid 5]
	long ColumnIndex();

	// Width:   [dispid 6]
	float Width();

	// Width:   [dispid 6]
	void Width(float arg0);

	// Height:   [dispid 7]
	float Height();

	// Height:   [dispid 7]
	void Height(float arg0);

	// HeightRule:   [dispid 8]
	WdRowHeightRule HeightRule();

	// HeightRule:   [dispid 8]
	void HeightRule(WdRowHeightRule arg0);

	// VerticalAlignment:   [dispid 1104]
	WdCellVerticalAlignment VerticalAlignment();

	// VerticalAlignment:   [dispid 1104]
	void VerticalAlignment(WdCellVerticalAlignment arg0);

	// _Column:   [dispid 101]
	void _Column(TColumnProxy& Obj);

	// _Row:   [dispid 102]
	void _Row(TRowProxy& Obj);

	// Next:   [dispid 103]
	void Next(TCellProxy& Obj);

	// Previous:   [dispid 104]
	void Previous(TCellProxy& Obj);

	// _Shading:   [dispid 105]
	void _Shading(TShadingProxy& Obj);

	// _Borders:   [dispid 1100]
	void _Borders(TBordersProxy& Obj);

	// _Borders:   [dispid 1100]
	void _Borders(Borders* arg0);

	// Select:   [dispid 65535]
	void Select();

	// Delete:   [dispid 200]
	void Delete(__OCF TAutoVal* ShiftCells = 0);

	// Formula:   [dispid 201]
	void Formula(__OCF TAutoVal* Formula = 0, __OCF TAutoVal* NumFormat = 0);

	// SetWidth:   [dispid 202]
	void SetWidth(float ColumnWidth, WdRulerStyle RulerStyle);

	// SetHeight:   [dispid 203]
	void SetHeight(__OCF TAutoVal* RowHeight, WdRowHeightRule HeightRule);

	// Merge:   [dispid 204]
	void Merge(Cell* MergeTo);

	// Split:   [dispid 205]
	void Split(__OCF TAutoVal* NumRows = 0, __OCF TAutoVal* NumColumns = 0);

	// AutoSum:   [dispid 206]
	void AutoSum();

	// _Tables:   [dispid 106]
	void _Tables(TTablesProxy& Obj);

	// NestingLevel:   [dispid 107]
	long NestingLevel();

	// WordWrap:   [dispid 108]
	/*__OWL*/ TBool WordWrap();

	// WordWrap:   [dispid 108]
	void WordWrap(/*__OWL*/ TBool arg0);

	// PreferredWidth:   [dispid 109]
	float PreferredWidth();

	// PreferredWidth:   [dispid 109]
	void PreferredWidth(float arg0);

	// FitText:   [dispid 110]
	/*__OWL*/ TBool FitText();

	// FitText:   [dispid 110]
	void FitText(/*__OWL*/ TBool arg0);

	// TopPadding:   [dispid 111]
	float TopPadding();

	// TopPadding:   [dispid 111]
	void TopPadding(float arg0);

	// BottomPadding:   [dispid 112]
	float BottomPadding();

	// BottomPadding:   [dispid 112]
	void BottomPadding(float arg0);

	// LeftPadding:   [dispid 113]
	float LeftPadding();

	// LeftPadding:   [dispid 113]
	void LeftPadding(float arg0);

	// RightPadding:   [dispid 114]
	float RightPadding();

	// RightPadding:   [dispid 114]
	void RightPadding(float arg0);

	// ID:   [dispid 115]
	__OCF TAutoString ID();

	// ID:   [dispid 115]
	void ID(__OCF TAutoString arg0);

	// PreferredWidthType:   [dispid 116]
	WdPreferredWidthType PreferredWidthType();

	// PreferredWidthType:   [dispid 116]
	void PreferredWidthType(WdPreferredWidthType arg0);
};
#endif

// Cells
// {0002094A-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE Cells
DECLARE_INTERFACE_(Cells, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// Cells methods:
	STDMETHOD_(HRESULT, Get__NewEnum) (THIS_ IUnknown** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Count) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Width) (THIS_ float* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Width) (THIS_ float prop) PURE; 
	STDMETHOD_(HRESULT, Get_Height) (THIS_ float* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Height) (THIS_ float prop) PURE; 
	STDMETHOD_(HRESULT, Get_HeightRule) (THIS_ WdRowHeightRule* prop) PURE; 
	STDMETHOD_(HRESULT, Set_HeightRule) (THIS_ WdRowHeightRule prop) PURE; 
	STDMETHOD_(HRESULT, Get_VerticalAlignment) (THIS_ WdCellVerticalAlignment* prop) PURE; 
	STDMETHOD_(HRESULT, Set_VerticalAlignment) (THIS_ WdCellVerticalAlignment prop) PURE; 
	STDMETHOD_(HRESULT, Get_Borders) (THIS_ Borders** prop) PURE; 
	STDMETHOD_(HRESULT, Set_Borders) (THIS_ Borders* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Shading) (THIS_ Shading** prop) PURE; 
	STDMETHOD_(HRESULT, Item) (THIS_ long , Cell** prop) PURE; 
	STDMETHOD_(HRESULT, Add) (THIS_ VARIANT* BeforeCell, Cell** prop) PURE; 
	STDMETHOD_(HRESULT, Delete) (THIS_ VARIANT* ShiftCells) PURE; 
	STDMETHOD_(HRESULT, SetWidth) (THIS_ float ColumnWidth, WdRulerStyle RulerStyle) PURE; 
	STDMETHOD_(HRESULT, SetHeight) (THIS_ VARIANT* RowHeight, WdRowHeightRule HeightRule) PURE; 
	STDMETHOD_(HRESULT, Merge) (THIS ) PURE; 
	STDMETHOD_(HRESULT, Split) (THIS_ VARIANT* NumRows, VARIANT* NumColumns, VARIANT* MergeBeforeSplit) PURE; 
	STDMETHOD_(HRESULT, DistributeHeight) (THIS ) PURE; 
	STDMETHOD_(HRESULT, DistributeWidth) (THIS ) PURE; 
	STDMETHOD_(HRESULT, AutoFit) (THIS ) PURE; 
	STDMETHOD_(HRESULT, Get_NestingLevel) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_PreferredWidth) (THIS_ float* prop) PURE; 
	STDMETHOD_(HRESULT, Set_PreferredWidth) (THIS_ float prop) PURE; 
	STDMETHOD_(HRESULT, Get_PreferredWidthType) (THIS_ WdPreferredWidthType* prop) PURE; 
	STDMETHOD_(HRESULT, Set_PreferredWidthType) (THIS_ WdPreferredWidthType prop) PURE; 
};
typedef Cells* LPELLS;
#ifdef __cplusplus
// Cells  {0002094A-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TCellsProxy : public __OCF TAutoProxy
{
public:
	TCellsProxy() : TAutoProxy(0x0) {}

	// _NewEnum:   [dispid -4]
	void _NewEnum(__OCF TAutoEnumerator<IUnknown*>& Obj);

	// Count:   [dispid 2]
	long Count();

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// Width:   [dispid 6]
	float Width();

	// Width:   [dispid 6]
	void Width(float arg0);

	// Height:   [dispid 7]
	float Height();

	// Height:   [dispid 7]
	void Height(float arg0);

	// HeightRule:   [dispid 8]
	WdRowHeightRule HeightRule();

	// HeightRule:   [dispid 8]
	void HeightRule(WdRowHeightRule arg0);

	// VerticalAlignment:   [dispid 1104]
	WdCellVerticalAlignment VerticalAlignment();

	// VerticalAlignment:   [dispid 1104]
	void VerticalAlignment(WdCellVerticalAlignment arg0);

	// _Borders:   [dispid 1100]
	void _Borders(TBordersProxy& Obj);

	// _Borders:   [dispid 1100]
	void _Borders(Borders* arg0);

	// _Shading:   [dispid 101]
	void _Shading(TShadingProxy& Obj);

	// Item:   [dispid 0]
	void Item(TCellProxy& Obj, long arg0);

	// Add:   [dispid 4]
	void Add(TCellProxy& Obj, __OCF TAutoVal* BeforeCell = 0);

	// Delete:   [dispid 200]
	void Delete(__OCF TAutoVal* ShiftCells = 0);

	// SetWidth:   [dispid 202]
	void SetWidth(float ColumnWidth, WdRulerStyle RulerStyle);

	// SetHeight:   [dispid 203]
	void SetHeight(__OCF TAutoVal* RowHeight, WdRowHeightRule HeightRule);

	// Merge:   [dispid 204]
	void Merge();

	// Split:   [dispid 205]
	void Split(__OCF TAutoVal* NumRows = 0, __OCF TAutoVal* NumColumns = 0, __OCF TAutoVal* MergeBeforeSplit = 0);

	// DistributeHeight:   [dispid 206]
	void DistributeHeight();

	// DistributeWidth:   [dispid 207]
	void DistributeWidth();

	// AutoFit:   [dispid 208]
	void AutoFit();

	// NestingLevel:   [dispid 102]
	long NestingLevel();

	// PreferredWidth:   [dispid 103]
	float PreferredWidth();

	// PreferredWidth:   [dispid 103]
	void PreferredWidth(float arg0);

	// PreferredWidthType:   [dispid 104]
	WdPreferredWidthType PreferredWidthType();

	// PreferredWidthType:   [dispid 104]
	void PreferredWidthType(WdPreferredWidthType arg0);
};
#endif

// MsoColorType
typedef enum tagMsoColorType
{
	msoColorTypeMixed = -2, 
	msoColorTypeRGB = 1, 
	msoColorTypeScheme = 2, 
	msoColorTypeCMYK = 3, 
	msoColorTypeCMS = 4, 
	msoColorTypeInk = 5, 
} MsoColorType;

// ColorFormat
// {000209C6-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE ColorFormat
DECLARE_INTERFACE_(ColorFormat, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// ColorFormat methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get_RGB) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Set_RGB) (THIS_ long prop) PURE; 
	STDMETHOD_(HRESULT, Get_SchemeColor) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Set_SchemeColor) (THIS_ long prop) PURE; 
	STDMETHOD_(HRESULT, Get_Type) (THIS_ MsoColorType* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Name) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Name) (THIS_ BSTR prop) PURE; 
	STDMETHOD_(HRESULT, Get_TintAndShade) (THIS_ float* prop) PURE; 
	STDMETHOD_(HRESULT, Set_TintAndShade) (THIS_ float prop) PURE; 
	STDMETHOD_(HRESULT, Get_OverPrint) (THIS_ MsoTriState* prop) PURE; 
	STDMETHOD_(HRESULT, Set_OverPrint) (THIS_ MsoTriState prop) PURE; 
	STDMETHOD_(HRESULT, Get_Ink) (THIS_ long , float* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Ink) (THIS_ long , float prop) PURE; 
	STDMETHOD_(HRESULT, Get_Cyan) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Cyan) (THIS_ long prop) PURE; 
	STDMETHOD_(HRESULT, Get_Magenta) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Magenta) (THIS_ long prop) PURE; 
	STDMETHOD_(HRESULT, Get_Yellow) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Yellow) (THIS_ long prop) PURE; 
	STDMETHOD_(HRESULT, Get_Black) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Black) (THIS_ long prop) PURE; 
	STDMETHOD_(HRESULT, SetCMYK) (THIS_ long Cyan, long Magenta, long Yellow, long Black) PURE; 
};
typedef ColorFormat* LPOLORFORMAT;
#ifdef __cplusplus
// ColorFormat  {000209C6-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TColorFormatProxy : public __OCF TAutoProxy
{
public:
	TColorFormatProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1]
	IDispatch* Parent();

	// RGB:   [dispid 0]
	long GetRGB();

	// RGB:   [dispid 0]
	void GetRGB(long arg0);

	// SchemeColor:   [dispid 100]
	long SchemeColor();

	// SchemeColor:   [dispid 100]
	void SchemeColor(long arg0);

	// Type:   [dispid 101]
	MsoColorType Type();

	// Name:   [dispid 102]
	__OCF TAutoString Name();

	// Name:   [dispid 102]
	void Name(__OCF TAutoString arg0);

	// TintAndShade:   [dispid 103]
	float TintAndShade();

	// TintAndShade:   [dispid 103]
	void TintAndShade(float arg0);

	// OverPrint:   [dispid 104]
	MsoTriState OverPrint();

	// OverPrint:   [dispid 104]
	void OverPrint(MsoTriState arg0);

	// Ink:   [dispid 105]
	float Ink(long arg0);

	// Ink:   [dispid 105]
	void Ink(long arg0, float arg1);

	// Cyan:   [dispid 106]
	long Cyan();

	// Cyan:   [dispid 106]
	void Cyan(long arg0);

	// Magenta:   [dispid 107]
	long Magenta();

	// Magenta:   [dispid 107]
	void Magenta(long arg0);

	// Yellow:   [dispid 108]
	long Yellow();

	// Yellow:   [dispid 108]
	void Yellow(long arg0);

	// Black:   [dispid 109]
	long Black();

	// Black:   [dispid 109]
	void Black(long arg0);

	// SetCMYK:   [dispid 110]
	void SetCMYK(long Cyan, long Magenta, long Yellow, long Black);
};
#endif

// Column
// {0002094F-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE Column
DECLARE_INTERFACE_(Column, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// Column methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Width) (THIS_ float* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Width) (THIS_ float prop) PURE; 
	STDMETHOD_(HRESULT, Get_IsFirst) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Get_IsLast) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Index) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Cells) (THIS_ Cells** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Borders) (THIS_ Borders** prop) PURE; 
	STDMETHOD_(HRESULT, Set_Borders) (THIS_ Borders* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Shading) (THIS_ Shading** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Next) (THIS_ Column** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Previous) (THIS_ Column** prop) PURE; 
	STDMETHOD_(HRESULT, Select) (THIS ) PURE; 
	STDMETHOD_(HRESULT, Delete) (THIS ) PURE; 
	STDMETHOD_(HRESULT, SetWidth) (THIS_ float ColumnWidth, WdRulerStyle RulerStyle) PURE; 
	STDMETHOD_(HRESULT, AutoFit) (THIS ) PURE; 
	STDMETHOD_(HRESULT, SortOld) (THIS_ VARIANT* ExcludeHeader, VARIANT* SortFieldType, VARIANT* SortOrder, VARIANT* CaseSensitive, VARIANT* LanguageID) PURE; 
	STDMETHOD_(HRESULT, Sort) (THIS_ VARIANT* ExcludeHeader, VARIANT* SortFieldType, VARIANT* SortOrder, VARIANT* CaseSensitive, VARIANT* BidiSort, VARIANT* IgnoreThe, VARIANT* IgnoreKashida, VARIANT* IgnoreDiacritics, VARIANT* IgnoreHe, VARIANT* LanguageID) PURE; 
	STDMETHOD_(HRESULT, Get_NestingLevel) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_PreferredWidth) (THIS_ float* prop) PURE; 
	STDMETHOD_(HRESULT, Set_PreferredWidth) (THIS_ float prop) PURE; 
	STDMETHOD_(HRESULT, Get_PreferredWidthType) (THIS_ WdPreferredWidthType* prop) PURE; 
	STDMETHOD_(HRESULT, Set_PreferredWidthType) (THIS_ WdPreferredWidthType prop) PURE; 
};
typedef Column* LPOLUMN;
#ifdef __cplusplus
// Column  {0002094F-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TColumnProxy : public __OCF TAutoProxy
{
public:
	TColumnProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// Width:   [dispid 3]
	float Width();

	// Width:   [dispid 3]
	void Width(float arg0);

	// IsFirst:   [dispid 4]
	/*__OWL*/ TBool IsFirst();

	// IsLast:   [dispid 5]
	/*__OWL*/ TBool IsLast();

	// _Index:   [dispid 6]
	long _Index();

	// _Cells:   [dispid 100]
	void _Cells(TCellsProxy& Obj);

	// _Borders:   [dispid 1100]
	void _Borders(TBordersProxy& Obj);

	// _Borders:   [dispid 1100]
	void _Borders(Borders* arg0);

	// _Shading:   [dispid 102]
	void _Shading(TShadingProxy& Obj);

	// Next:   [dispid 103]
	void Next(TColumnProxy& Obj);

	// Previous:   [dispid 104]
	void Previous(TColumnProxy& Obj);

	// Select:   [dispid 65535]
	void Select();

	// Delete:   [dispid 200]
	void Delete();

	// SetWidth:   [dispid 201]
	void SetWidth(float ColumnWidth, WdRulerStyle RulerStyle);

	// AutoFit:   [dispid 202]
	void AutoFit();

	// SortOld:   [dispid 203]
	void SortOld(__OCF TAutoVal* ExcludeHeader = 0, __OCF TAutoVal* SortFieldType = 0, __OCF TAutoVal* SortOrder = 0, __OCF TAutoVal* CaseSensitive = 0, __OCF TAutoVal* LanguageID = 0);

	// Sort:   [dispid 204]
	void Sort(__OCF TAutoVal* ExcludeHeader = 0, __OCF TAutoVal* SortFieldType = 0, __OCF TAutoVal* SortOrder = 0, __OCF TAutoVal* CaseSensitive = 0, __OCF TAutoVal* BidiSort = 0, __OCF TAutoVal* IgnoreThe = 0, __OCF TAutoVal* IgnoreKashida = 0, __OCF TAutoVal* IgnoreDiacritics = 0, __OCF TAutoVal* IgnoreHe = 0, __OCF TAutoVal* LanguageID = 0);

	// NestingLevel:   [dispid 105]
	long NestingLevel();

	// PreferredWidth:   [dispid 106]
	float PreferredWidth();

	// PreferredWidth:   [dispid 106]
	void PreferredWidth(float arg0);

	// PreferredWidthType:   [dispid 107]
	WdPreferredWidthType PreferredWidthType();

	// PreferredWidthType:   [dispid 107]
	void PreferredWidthType(WdPreferredWidthType arg0);
};
#endif

// Columns
// {0002094B-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE Columns
DECLARE_INTERFACE_(Columns, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// Columns methods:
	STDMETHOD_(HRESULT, Get__NewEnum) (THIS_ IUnknown** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Count) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get_First) (THIS_ Column** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Last) (THIS_ Column** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Width) (THIS_ float* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Width) (THIS_ float prop) PURE; 
	STDMETHOD_(HRESULT, Get_Borders) (THIS_ Borders** prop) PURE; 
	STDMETHOD_(HRESULT, Set_Borders) (THIS_ Borders* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Shading) (THIS_ Shading** prop) PURE; 
	STDMETHOD_(HRESULT, Item) (THIS_ long , Column** prop) PURE; 
	STDMETHOD_(HRESULT, Add) (THIS_ VARIANT* BeforeColumn, Column** prop) PURE; 
	STDMETHOD_(HRESULT, Select) (THIS ) PURE; 
	STDMETHOD_(HRESULT, Delete) (THIS ) PURE; 
	STDMETHOD_(HRESULT, SetWidth) (THIS_ float ColumnWidth, WdRulerStyle RulerStyle) PURE; 
	STDMETHOD_(HRESULT, AutoFit) (THIS ) PURE; 
	STDMETHOD_(HRESULT, DistributeWidth) (THIS ) PURE; 
	STDMETHOD_(HRESULT, Get_NestingLevel) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_PreferredWidth) (THIS_ float* prop) PURE; 
	STDMETHOD_(HRESULT, Set_PreferredWidth) (THIS_ float prop) PURE; 
	STDMETHOD_(HRESULT, Get_PreferredWidthType) (THIS_ WdPreferredWidthType* prop) PURE; 
	STDMETHOD_(HRESULT, Set_PreferredWidthType) (THIS_ WdPreferredWidthType prop) PURE; 
};
typedef Columns* LPOLUMNS;
#ifdef __cplusplus
// Columns  {0002094B-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TColumnsProxy : public __OCF TAutoProxy
{
public:
	TColumnsProxy() : TAutoProxy(0x0) {}

	// _NewEnum:   [dispid -4]
	void _NewEnum(__OCF TAutoEnumerator<IUnknown*>& Obj);

	// Count:   [dispid 2]
	long Count();

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// First:   [dispid 100]
	void First(TColumnProxy& Obj);

	// Last:   [dispid 101]
	void Last(TColumnProxy& Obj);

	// Width:   [dispid 3]
	float Width();

	// Width:   [dispid 3]
	void Width(float arg0);

	// _Borders:   [dispid 1100]
	void _Borders(TBordersProxy& Obj);

	// _Borders:   [dispid 1100]
	void _Borders(Borders* arg0);

	// _Shading:   [dispid 103]
	void _Shading(TShadingProxy& Obj);

	// Item:   [dispid 0]
	void Item(TColumnProxy& Obj, long arg0);

	// Add:   [dispid 5]
	void Add(TColumnProxy& Obj, __OCF TAutoVal* BeforeColumn = 0);

	// Select:   [dispid 199]
	void Select();

	// Delete:   [dispid 200]
	void Delete();

	// SetWidth:   [dispid 201]
	void SetWidth(float ColumnWidth, WdRulerStyle RulerStyle);

	// AutoFit:   [dispid 202]
	void AutoFit();

	// DistributeWidth:   [dispid 203]
	void DistributeWidth();

	// NestingLevel:   [dispid 104]
	long NestingLevel();

	// PreferredWidth:   [dispid 105]
	float PreferredWidth();

	// PreferredWidth:   [dispid 105]
	void PreferredWidth(float arg0);

	// PreferredWidthType:   [dispid 106]
	WdPreferredWidthType PreferredWidthType();

	// PreferredWidthType:   [dispid 106]
	void PreferredWidthType(WdPreferredWidthType arg0);
};
#endif

// COMAddIn
// {000C033A-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE COMAddIn
DECLARE_INTERFACE_(COMAddIn, _IMsoDispObj)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
	// _IMsoDispObj methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ IDispatch** ppidisp) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* plCreator) PURE; 
#endif
	// COMAddIn methods:
	STDMETHOD_(HRESULT, Get_Description) (THIS_ BSTR* RetValue) PURE; 
	STDMETHOD_(HRESULT, Set_Description) (THIS_ BSTR RetValue) PURE; 
	STDMETHOD_(HRESULT, Get_ProgId) (THIS_ BSTR* RetValue) PURE; 
	STDMETHOD_(HRESULT, Get_Guid) (THIS_ BSTR* RetValue) PURE; 
	STDMETHOD_(HRESULT, Get_Connect) (THIS_ VARIANT_BOOL* RetValue) PURE; 
	STDMETHOD_(HRESULT, Set_Connect) (THIS_ VARIANT_BOOL RetValue) PURE; 
	STDMETHOD_(HRESULT, Get_Object) (THIS_ IDispatch** RetValue) PURE; 
	STDMETHOD_(HRESULT, Set_Object) (THIS_ IDispatch* RetValue) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** retval) PURE; 
};
typedef COMAddIn* LPOMADDIN;
#ifdef __cplusplus
// COMAddIn  {000C033A-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TCOMAddInProxy : public __OCF TAutoProxy
{
public:
	TCOMAddInProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1610743808]
	IDispatch* _Application();

	// Creator:   [dispid 1610743809]
	long Creator();

	// Description:   [dispid 0]
	__OCF TAutoString Description();

	// Description:   [dispid 0]
	void Description(__OCF TAutoString arg0);

	// ProgId:   [dispid 3]
	__OCF TAutoString ProgId();

	// _Guid:   [dispid 4]
	__OCF TAutoString _Guid();

	// Connect:   [dispid 6]
	/*__OWL*/ TBool Connect();

	// Connect:   [dispid 6]
	void Connect(/*__OWL*/ TBool arg0);

	// Object:   [dispid 7]
	IDispatch* Object();

	// Object:   [dispid 7]
	void Object(IDispatch* arg0);

	// Parent:   [dispid 8]
	IDispatch* Parent();
};
#endif

// Comment
// {0002093D-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE Comment
DECLARE_INTERFACE_(Comment, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// Comment methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Range) (THIS_ WordRange** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Reference) (THIS_ WordRange** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Scope) (THIS_ WordRange** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Index) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Author) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Author) (THIS_ BSTR prop) PURE; 
	STDMETHOD_(HRESULT, Get_Initial) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Initial) (THIS_ BSTR prop) PURE; 
	STDMETHOD_(HRESULT, Get_ShowTip) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_ShowTip) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Delete) (THIS ) PURE; 
	STDMETHOD_(HRESULT, Edit) (THIS ) PURE; 
	STDMETHOD_(HRESULT, Get_Date) (THIS_ DATE* prop) PURE; 
	STDMETHOD_(HRESULT, Get_IsInk) (THIS_ VARIANT_BOOL* prop) PURE; 
};
typedef Comment* LPOMMENT;
#ifdef __cplusplus
// Comment  {0002093D-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TCommentProxy : public __OCF TAutoProxy
{
public:
	TCommentProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// _Range:   [dispid 1003]
	void _Range(TRangeProxy& Obj);

	// _Reference:   [dispid 1004]
	void _Reference(TRangeProxy& Obj);

	// Scope:   [dispid 1005]
	void Scope(TRangeProxy& Obj);

	// _Index:   [dispid 1006]
	long _Index();

	// Author:   [dispid 1007]
	__OCF TAutoString Author();

	// Author:   [dispid 1007]
	void Author(__OCF TAutoString arg0);

	// Initial:   [dispid 1008]
	__OCF TAutoString Initial();

	// Initial:   [dispid 1008]
	void Initial(__OCF TAutoString arg0);

	// ShowTip:   [dispid 1009]
	/*__OWL*/ TBool ShowTip();

	// ShowTip:   [dispid 1009]
	void ShowTip(/*__OWL*/ TBool arg0);

	// Delete:   [dispid 10]
	void Delete();

	// Edit:   [dispid 1011]
	void Edit();

	// Date:   [dispid 1010]
	__OCF TAutoDate Date();

	// IsInk:   [dispid 1012]
	/*__OWL*/ TBool IsInk();
};
#endif

// ConditionalStyle
// {1498F56D-ED33-41F9-B37B-EF30E50B08AC}
#undef INTERFACE
#define INTERFACE ConditionalStyle
DECLARE_INTERFACE_(ConditionalStyle, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// ConditionalStyle methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Shading) (THIS_ Shading** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Borders) (THIS_ Borders** prop) PURE; 
	STDMETHOD_(HRESULT, Set_Borders) (THIS_ Borders* prop) PURE; 
	STDMETHOD_(HRESULT, Get_BottomPadding) (THIS_ float* prop) PURE; 
	STDMETHOD_(HRESULT, Set_BottomPadding) (THIS_ float prop) PURE; 
	STDMETHOD_(HRESULT, Get_TopPadding) (THIS_ float* prop) PURE; 
	STDMETHOD_(HRESULT, Set_TopPadding) (THIS_ float prop) PURE; 
	STDMETHOD_(HRESULT, Get_LeftPadding) (THIS_ float* prop) PURE; 
	STDMETHOD_(HRESULT, Set_LeftPadding) (THIS_ float prop) PURE; 
	STDMETHOD_(HRESULT, Get_RightPadding) (THIS_ float* prop) PURE; 
	STDMETHOD_(HRESULT, Set_RightPadding) (THIS_ float prop) PURE; 
	STDMETHOD_(HRESULT, Get_ParagraphFormat) (THIS_ ParagraphFormat** prop) PURE; 
	STDMETHOD_(HRESULT, Set_ParagraphFormat) (THIS_ ParagraphFormat* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Font) (THIS_ Font** prop) PURE; 
	STDMETHOD_(HRESULT, Set_Font) (THIS_ Font* prop) PURE; 
};
typedef ConditionalStyle* LPONDITIONALSTYLE;
#ifdef __cplusplus
// ConditionalStyle  {1498F56D-ED33-41F9-B37B-EF30E50B08AC}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TConditionalStyleProxy : public __OCF TAutoProxy
{
public:
	TConditionalStyleProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 100]
	IDispatch* Parent();

	// _Shading:   [dispid 1]
	void _Shading(TShadingProxy& Obj);

	// _Borders:   [dispid 2]
	void _Borders(TBordersProxy& Obj);

	// _Borders:   [dispid 2]
	void _Borders(Borders* arg0);

	// BottomPadding:   [dispid 3]
	float BottomPadding();

	// BottomPadding:   [dispid 3]
	void BottomPadding(float arg0);

	// TopPadding:   [dispid 4]
	float TopPadding();

	// TopPadding:   [dispid 4]
	void TopPadding(float arg0);

	// LeftPadding:   [dispid 5]
	float LeftPadding();

	// LeftPadding:   [dispid 5]
	void LeftPadding(float arg0);

	// RightPadding:   [dispid 6]
	float RightPadding();

	// RightPadding:   [dispid 6]
	void RightPadding(float arg0);

	// _ParagraphFormat:   [dispid 9]
	ParagraphFormat* _ParagraphFormat();

	// _ParagraphFormat:   [dispid 9]
	void _ParagraphFormat(ParagraphFormat* arg0);

	// _Font:   [dispid 10]
	Font* _Font();

	// _Font:   [dispid 10]
	void _Font(Font* arg0);
};
#endif

// ConnectorFormat
// {000209C7-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE ConnectorFormat
DECLARE_INTERFACE_(ConnectorFormat, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// ConnectorFormat methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_BeginConnected) (THIS_ MsoTriState* prop) PURE; 
	STDMETHOD_(HRESULT, Get_BeginConnectedShape) (THIS_ WordShape** prop) PURE; 
	STDMETHOD_(HRESULT, Get_BeginConnectionSite) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_EndConnected) (THIS_ MsoTriState* prop) PURE; 
	STDMETHOD_(HRESULT, Get_EndConnectedShape) (THIS_ WordShape** prop) PURE; 
	STDMETHOD_(HRESULT, Get_EndConnectionSite) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Type) (THIS_ MsoConnectorType* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Type) (THIS_ MsoConnectorType prop) PURE; 
	STDMETHOD_(HRESULT, BeginConnect) (THIS_ WordShape** ConnectedShape, long ConnectionSite) PURE; 
	STDMETHOD_(HRESULT, BeginDisconnect) (THIS ) PURE; 
	STDMETHOD_(HRESULT, EndConnect) (THIS_ WordShape** ConnectedShape, long ConnectionSite) PURE; 
	STDMETHOD_(HRESULT, EndDisconnect) (THIS ) PURE; 
};
typedef ConnectorFormat* LPONNECTORFORMAT;
#ifdef __cplusplus
// ConnectorFormat  {000209C7-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FHIDDEN TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TConnectorFormatProxy : public __OCF TAutoProxy
{
public:
	TConnectorFormatProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// BeginConnected:   [dispid 100]
	MsoTriState BeginConnected();

	// BeginConnectedShape:   [dispid 101]
	void BeginConnectedShape(TShapeProxy& Obj);

	// BeginConnectionSite:   [dispid 102]
	long BeginConnectionSite();

	// EndConnected:   [dispid 103]
	MsoTriState EndConnected();

	// EndConnectedShape:   [dispid 104]
	void EndConnectedShape(TShapeProxy& Obj);

	// EndConnectionSite:   [dispid 105]
	long EndConnectionSite();

	// Parent:   [dispid 1]
	IDispatch* Parent();

	// Type:   [dispid 106]
	MsoConnectorType Type();

	// Type:   [dispid 106]
	void Type(MsoConnectorType arg0);

	// BeginConnect:   [dispid 10]
	void BeginConnect(WordShape** ConnectedShape, long ConnectionSite);

	// BeginDisconnect:   [dispid 11]
	void BeginDisconnect();

	// EndConnect:   [dispid 12]
	void EndConnect(WordShape** ConnectedShape, long ConnectionSite);

	// EndDisconnect:   [dispid 13]
	void EndDisconnect();
};
#endif

// CustomLabels
// {00020916-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE CustomLabels
DECLARE_INTERFACE_(CustomLabels, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// CustomLabels methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get__NewEnum) (THIS_ IUnknown** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Count) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Item) (THIS_ VARIANT* , CustomLabel** prop) PURE; 
	STDMETHOD_(HRESULT, Add) (THIS_ BSTR Name, VARIANT* DotMatrix, CustomLabel** prop) PURE; 
};
typedef CustomLabels* LPUSTOMLABELS;
#ifdef __cplusplus
// CustomLabels  {00020916-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TCustomLabelsProxy : public __OCF TAutoProxy
{
public:
	TCustomLabelsProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// _NewEnum:   [dispid -4]
	void _NewEnum(__OCF TAutoEnumerator<IUnknown*>& Obj);

	// Count:   [dispid 1]
	long Count();

	// Item:   [dispid 0]
	void Item(TCustomLabelProxy& Obj, __OCF TAutoVal* arg0);

	// Add:   [dispid 101]
	void Add(TCustomLabelProxy& Obj, __OCF TAutoString Name, __OCF TAutoVal* DotMatrix = 0);
};
#endif

// MsoOrgChartLayoutType
typedef enum tagMsoOrgChartLayoutType
{
	msoOrgChartLayoutMixed = -2, 
	msoOrgChartLayoutStandard = 1, 
	msoOrgChartLayoutBothHanging = 2, 
	msoOrgChartLayoutLeftHanging = 3, 
	msoOrgChartLayoutRightHanging = 4, 
} MsoOrgChartLayoutType;

// MsoRelativeNodePosition
typedef enum tagMsoRelativeNodePosition
{
	msoBeforeNode = 1, 
	msoAfterNode = 2, 
	msoBeforeFirstSibling = 3, 
	msoAfterLastSibling = 4, 
} MsoRelativeNodePosition;

// MsoDiagramNodeType
typedef enum tagMsoDiagramNodeType
{
	msoDiagramNode = 1, 
	msoDiagramAssistant = 2, 
} MsoDiagramNodeType;

// DiagramNode
// {000209E9-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE DiagramNode
DECLARE_INTERFACE_(DiagramNode, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// DiagramNode methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Children) (THIS_ DiagramNodeChildren** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Shape) (THIS_ WordShape** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Root) (THIS_ DiagramNode** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Diagram) (THIS_ Diagram** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Layout) (THIS_ MsoOrgChartLayoutType* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Layout) (THIS_ MsoOrgChartLayoutType prop) PURE; 
	STDMETHOD_(HRESULT, Get_TextShape) (THIS_ WordShape** prop) PURE; 
	STDMETHOD_(HRESULT, AddNode) (THIS_ MsoRelativeNodePosition Pos, MsoDiagramNodeType NodeType, DiagramNode** prop) PURE; 
	STDMETHOD_(HRESULT, Delete) (THIS ) PURE; 
	STDMETHOD_(HRESULT, MoveNode) (THIS_ DiagramNode** TargetNode, MsoRelativeNodePosition Pos) PURE; 
	STDMETHOD_(HRESULT, ReplaceNode) (THIS_ DiagramNode** TargetNode) PURE; 
	STDMETHOD_(HRESULT, SwapNode) (THIS_ DiagramNode** TargetNode, MsoRelativeNodePosition Pos) PURE; 
	STDMETHOD_(HRESULT, CloneNode) (THIS_ VARIANT_BOOL copyChildren, DiagramNode** TargetNode, MsoRelativeNodePosition Pos, DiagramNode** prop) PURE; 
	STDMETHOD_(HRESULT, TransferChildren) (THIS_ DiagramNode** ReceivingNode) PURE; 
	STDMETHOD_(HRESULT, NextNode) (THIS_ DiagramNode** prop) PURE; 
	STDMETHOD_(HRESULT, PrevNode) (THIS_ DiagramNode** prop) PURE; 
};
typedef DiagramNode* LPIAGRAMNODE;
#ifdef __cplusplus
// DiagramNode  {000209E9-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TDiagramNodeProxy : public __OCF TAutoProxy
{
public:
	TDiagramNodeProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 100]
	IDispatch* Parent();

	// Children:   [dispid 101]
	void Children(TDiagramNodeChildrenProxy& Obj);

	// _Shape:   [dispid 102]
	void _Shape(TShapeProxy& Obj);

	// Root:   [dispid 103]
	void Root(TDiagramNodeProxy& Obj);

	// _Diagram:   [dispid 104]
	void _Diagram(TDiagramProxy& Obj);

	// Layout:   [dispid 105]
	MsoOrgChartLayoutType Layout();

	// Layout:   [dispid 105]
	void Layout(MsoOrgChartLayoutType arg0);

	// TextShape:   [dispid 106]
	void TextShape(TShapeProxy& Obj);

	// AddNode:   [dispid 10]
	void AddNode(TDiagramNodeProxy& Obj, MsoRelativeNodePosition Pos, MsoDiagramNodeType NodeType);

	// Delete:   [dispid 11]
	void Delete();

	// MoveNode:   [dispid 12]
	void MoveNode(DiagramNode** TargetNode, MsoRelativeNodePosition Pos);

	// ReplaceNode:   [dispid 13]
	void ReplaceNode(DiagramNode** TargetNode);

	// SwapNode:   [dispid 14]
	void SwapNode(DiagramNode** TargetNode, MsoRelativeNodePosition Pos);

	// CloneNode:   [dispid 15]
	void CloneNode(TDiagramNodeProxy& Obj, /*__OWL*/ TBool copyChildren, DiagramNode** TargetNode, MsoRelativeNodePosition Pos);

	// TransferChildren:   [dispid 16]
	void TransferChildren(DiagramNode** ReceivingNode);

	// NextNode:   [dispid 17]
	void NextNode(TDiagramNodeProxy& Obj);

	// PrevNode:   [dispid 18]
	void PrevNode(TDiagramNodeProxy& Obj);
};
#endif

// Diagram
// {000209EC-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE Diagram
DECLARE_INTERFACE_(Diagram, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// Diagram methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Nodes) (THIS_ DiagramNodes** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Type) (THIS_ MsoDiagramType* prop) PURE; 
	STDMETHOD_(HRESULT, Get_AutoLayout) (THIS_ MsoTriState* prop) PURE; 
	STDMETHOD_(HRESULT, Set_AutoLayout) (THIS_ MsoTriState prop) PURE; 
	STDMETHOD_(HRESULT, Get_Reverse) (THIS_ MsoTriState* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Reverse) (THIS_ MsoTriState prop) PURE; 
	STDMETHOD_(HRESULT, Get_AutoFormat) (THIS_ MsoTriState* prop) PURE; 
	STDMETHOD_(HRESULT, Set_AutoFormat) (THIS_ MsoTriState prop) PURE; 
	STDMETHOD_(HRESULT, Convert) (THIS_ MsoDiagramType Type) PURE; 
	STDMETHOD_(HRESULT, FitText) (THIS ) PURE; 
};
typedef Diagram* LPIAGRAM;
#ifdef __cplusplus
// Diagram  {000209EC-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TDiagramProxy : public __OCF TAutoProxy
{
public:
	TDiagramProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 100]
	IDispatch* Parent();

	// Nodes:   [dispid 101]
	void Nodes(TDiagramNodesProxy& Obj);

	// Type:   [dispid 102]
	MsoDiagramType Type();

	// AutoLayout:   [dispid 103]
	MsoTriState AutoLayout();

	// AutoLayout:   [dispid 103]
	void AutoLayout(MsoTriState arg0);

	// Reverse:   [dispid 104]
	MsoTriState Reverse();

	// Reverse:   [dispid 104]
	void Reverse(MsoTriState arg0);

	// AutoFormat:   [dispid 105]
	MsoTriState AutoFormat();

	// AutoFormat:   [dispid 105]
	void AutoFormat(MsoTriState arg0);

	// Convert:   [dispid 10]
	void Convert(MsoDiagramType Type);

	// FitText:   [dispid 11]
	void FitText();
};
#endif

// WdWordDialogTab
typedef enum tagWdWordDialogTab
{
	wdDialogToolsOptionsTabView = 204, 
	wdDialogToolsOptionsTabGeneral = 203, 
	wdDialogToolsOptionsTabEdit = 224, 
	wdDialogToolsOptionsTabPrint = 208, 
	wdDialogToolsOptionsTabSave = 209, 
	wdDialogToolsOptionsTabProofread = 211, 
	wdDialogToolsOptionsTabTrackChanges = 386, 
	wdDialogToolsOptionsTabUserInfo = 213, 
	wdDialogToolsOptionsTabCompatibility = 525, 
	wdDialogToolsOptionsTabTypography = 739, 
	wdDialogToolsOptionsTabFileLocations = 225, 
	wdDialogToolsOptionsTabFuzzy = 790, 
	wdDialogToolsOptionsTabHangulHanjaConversion = 786, 
	wdDialogToolsOptionsTabBidi = 1029, 
	wdDialogToolsOptionsTabSecurity = 1361, 
	wdDialogFilePageSetupTabMargins = 150000, 
	wdDialogFilePageSetupTabPaper = 150001, 
	wdDialogFilePageSetupTabLayout = 150003, 
	wdDialogFilePageSetupTabCharsLines = 150004, 
	wdDialogInsertSymbolTabSymbols = 200000, 
	wdDialogInsertSymbolTabSpecialCharacters = 200001, 
	wdDialogNoteOptionsTabAllFootnotes = 300000, 
	wdDialogNoteOptionsTabAllEndnotes = 300001, 
	wdDialogInsertIndexAndTablesTabIndex = 400000, 
	wdDialogInsertIndexAndTablesTabTableOfContents = 400001, 
	wdDialogInsertIndexAndTablesTabTableOfFigures = 400002, 
	wdDialogInsertIndexAndTablesTabTableOfAuthorities = 400003, 
	wdDialogOrganizerTabStyles = 500000, 
	wdDialogOrganizerTabAutoText = 500001, 
	wdDialogOrganizerTabCommandBars = 500002, 
	wdDialogOrganizerTabMacros = 500003, 
	wdDialogFormatFontTabFont = 600000, 
	wdDialogFormatFontTabCharacterSpacing = 600001, 
	wdDialogFormatFontTabAnimation = 600002, 
	wdDialogFormatBordersAndShadingTabBorders = 700000, 
	wdDialogFormatBordersAndShadingTabPageBorder = 700001, 
	wdDialogFormatBordersAndShadingTabShading = 700002, 
	wdDialogToolsEnvelopesAndLabelsTabEnvelopes = 800000, 
	wdDialogToolsEnvelopesAndLabelsTabLabels = 800001, 
	wdDialogFormatParagraphTabIndentsAndSpacing = 1000000, 
	wdDialogFormatParagraphTabTextFlow = 1000001, 
	wdDialogFormatParagraphTabTeisai = 1000002, 
	wdDialogFormatDrawingObjectTabColorsAndLines = 1200000, 
	wdDialogFormatDrawingObjectTabSize = 1200001, 
	wdDialogFormatDrawingObjectTabPosition = 1200002, 
	wdDialogFormatDrawingObjectTabWrapping = 1200003, 
	wdDialogFormatDrawingObjectTabPicture = 1200004, 
	wdDialogFormatDrawingObjectTabTextbox = 1200005, 
	wdDialogFormatDrawingObjectTabWeb = 1200006, 
	wdDialogFormatDrawingObjectTabHR = 1200007, 
	wdDialogToolsAutoCorrectExceptionsTabFirstLetter = 1400000, 
	wdDialogToolsAutoCorrectExceptionsTabInitialCaps = 1400001, 
	wdDialogToolsAutoCorrectExceptionsTabHangulAndAlphabet = 1400002, 
	wdDialogToolsAutoCorrectExceptionsTabIac = 1400003, 
	wdDialogFormatBulletsAndNumberingTabBulleted = 1500000, 
	wdDialogFormatBulletsAndNumberingTabNumbered = 1500001, 
	wdDialogFormatBulletsAndNumberingTabOutlineNumbered = 1500002, 
	wdDialogLetterWizardTabLetterFormat = 1600000, 
	wdDialogLetterWizardTabRecipientInfo = 1600001, 
	wdDialogLetterWizardTabOtherElements = 1600002, 
	wdDialogLetterWizardTabSenderInfo = 1600003, 
	wdDialogToolsAutoManagerTabAutoCorrect = 1700000, 
	wdDialogToolsAutoManagerTabAutoFormatAsYouType = 1700001, 
	wdDialogToolsAutoManagerTabAutoText = 1700002, 
	wdDialogToolsAutoManagerTabAutoFormat = 1700003, 
	wdDialogToolsAutoManagerTabSmartTags = 1700004, 
	wdDialogTablePropertiesTabTable = 1800000, 
	wdDialogTablePropertiesTabRow = 1800001, 
	wdDialogTablePropertiesTabColumn = 1800002, 
	wdDialogTablePropertiesTabCell = 1800003, 
	wdDialogEmailOptionsTabSignature = 1900000, 
	wdDialogEmailOptionsTabStationary = 1900001, 
	wdDialogEmailOptionsTabQuoting = 1900002, 
	wdDialogWebOptionsBrowsers = 2000000, 
	wdDialogWebOptionsGeneral = 2000000, 
	wdDialogWebOptionsFiles = 2000001, 
	wdDialogWebOptionsPictures = 2000002, 
	wdDialogWebOptionsEncoding = 2000003, 
	wdDialogWebOptionsFonts = 2000004, 
	wdDialogToolsOptionsTabAcetate = 1266, 
	wdDialogTemplates = 2100000, 
	wdDialogTemplatesXMLSchema = 2100001, 
	wdDialogTemplatesXMLExpansionPacks = 2100002, 
	wdDialogTemplatesLinkedCSS = 2100003, 
} WdWordDialogTab;

// Dialog
// {000209B8-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE Dialog
DECLARE_INTERFACE_(Dialog, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// Dialog methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get_DefaultTab) (THIS_ WdWordDialogTab* prop) PURE; 
	STDMETHOD_(HRESULT, Set_DefaultTab) (THIS_ WdWordDialogTab prop) PURE; 
	STDMETHOD_(HRESULT, Get_Type) (THIS_ WdWordDialog* prop) PURE; 
	STDMETHOD_(HRESULT, Show) (THIS_ VARIANT* TimeOut, long* prop) PURE; 
	STDMETHOD_(HRESULT, Display) (THIS_ VARIANT* TimeOut, long* prop) PURE; 
	STDMETHOD_(HRESULT, Execute) (THIS ) PURE; 
	STDMETHOD_(HRESULT, Update) (THIS ) PURE; 
	STDMETHOD_(HRESULT, Get_CommandName) (THIS_ BSTR* prop) PURE; 
};
typedef Dialog* LPIALOG;
#ifdef __cplusplus
// Dialog  {000209B8-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TDialogProxy : public __OCF TAutoProxy
{
public:
	TDialogProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 32003]
	WordApplication* _Application();

	// Creator:   [dispid 32004]
	long Creator();

	// Parent:   [dispid 32005]
	IDispatch* Parent();

	// DefaultTab:   [dispid 32002]
	WdWordDialogTab DefaultTab();

	// DefaultTab:   [dispid 32002]
	void DefaultTab(WdWordDialogTab arg0);

	// Type:   [dispid 0]
	WdWordDialog Type();

	// Show:   [dispid 336]
	long Show(__OCF TAutoVal* TimeOut = 0);

	// Display:   [dispid 338]
	long Display(__OCF TAutoVal* TimeOut = 0);

	// Execute:   [dispid 32001]
	void Execute();

	// Update:   [dispid 302]
	void Update();

	// CommandName:   [dispid 32006]
	__OCF TAutoString CommandName();
};
#endif

// DocumentLibraryVersion
// {000C0387-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE DocumentLibraryVersion
DECLARE_INTERFACE_(DocumentLibraryVersion, _IMsoDispObj)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
	// _IMsoDispObj methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ IDispatch** ppidisp) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* plCreator) PURE; 
#endif
	// DocumentLibraryVersion methods:
	STDMETHOD_(HRESULT, Get_Modified) (THIS_ VARIANT* pvarDate) PURE; 
	STDMETHOD_(HRESULT, Get_Index) (THIS_ long* lIndex) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** ppidisp) PURE; 
	STDMETHOD_(HRESULT, Get_ModifiedBy) (THIS_ BSTR* userName) PURE; 
	STDMETHOD_(HRESULT, Get_Comments) (THIS_ BSTR* ) PURE; 
	STDMETHOD_(HRESULT, Delete) (THIS ) PURE; 
	STDMETHOD_(HRESULT, Open) (THIS_ IDispatch** ppdispOpened) PURE; 
	STDMETHOD_(HRESULT, Restore) (THIS_ IDispatch** ppdispOpened) PURE; 
};
typedef DocumentLibraryVersion* LPOCUMENTLIBRARYVERSION;
#ifdef __cplusplus
// DocumentLibraryVersion  {000C0387-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TDocumentLibraryVersionProxy : public __OCF TAutoProxy
{
public:
	TDocumentLibraryVersionProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1610743808]
	IDispatch* _Application();

	// Creator:   [dispid 1610743809]
	long Creator();

	// Modified:   [dispid 0]
	__OCF TAutoVal Modified();

	// _Index:   [dispid 1]
	long _Index();

	// Parent:   [dispid 2]
	IDispatch* Parent();

	// ModifiedBy:   [dispid 3]
	__OCF TAutoString ModifiedBy();

	// _Comments:   [dispid 4]
	__OCF TAutoString _Comments();

	// Delete:   [dispid 5]
	void Delete();

	// Open:   [dispid 6]
	IDispatch* Open();

	// Restore:   [dispid 7]
	IDispatch* Restore();
};
#endif

// WdDropPosition
typedef enum tagWdDropPosition
{
	wdDropNone = 0, 
	wdDropNormal = 1, 
	wdDropMargin = 2, 
} WdDropPosition;

// DropCap
// {00020956-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE DropCap
DECLARE_INTERFACE_(DropCap, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// DropCap methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Position) (THIS_ WdDropPosition* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Position) (THIS_ WdDropPosition prop) PURE; 
	STDMETHOD_(HRESULT, Get_FontName) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Set_FontName) (THIS_ BSTR prop) PURE; 
	STDMETHOD_(HRESULT, Get_LinesToDrop) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Set_LinesToDrop) (THIS_ long prop) PURE; 
	STDMETHOD_(HRESULT, Get_DistanceFromText) (THIS_ float* prop) PURE; 
	STDMETHOD_(HRESULT, Set_DistanceFromText) (THIS_ float prop) PURE; 
	STDMETHOD_(HRESULT, Clear) (THIS ) PURE; 
	STDMETHOD_(HRESULT, Enable) (THIS ) PURE; 
};
typedef DropCap* LPROPCAP;
#ifdef __cplusplus
// DropCap  {00020956-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TDropCapProxy : public __OCF TAutoProxy
{
public:
	TDropCapProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// Position:   [dispid 10]
	WdDropPosition Position();

	// Position:   [dispid 10]
	void Position(WdDropPosition arg0);

	// _FontName:   [dispid 11]
	__OCF TAutoString _FontName();

	// _FontName:   [dispid 11]
	void _FontName(__OCF TAutoString arg0);

	// LinesToDrop:   [dispid 12]
	long LinesToDrop();

	// LinesToDrop:   [dispid 12]
	void LinesToDrop(long arg0);

	// DistanceFromText:   [dispid 13]
	float DistanceFromText();

	// DistanceFromText:   [dispid 13]
	void DistanceFromText(float arg0);

	// Clear:   [dispid 100]
	void Clear();

	// Enable:   [dispid 101]
	void Enable();
};
#endif

// Editors
// {AED7E08C-14F0-4F33-921D-4C5353137BF6}
#undef INTERFACE
#define INTERFACE Editors
DECLARE_INTERFACE_(Editors, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// Editors methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Count) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Item) (THIS_ VARIANT* , Editor** prop) PURE; 
	STDMETHOD_(HRESULT, Add) (THIS_ VARIANT* EditorID, Editor** prop) PURE; 
};
typedef Editors* LPDITORS;
#ifdef __cplusplus
// Editors  {AED7E08C-14F0-4F33-921D-4C5353137BF6}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TEditorsProxy : public __OCF TAutoProxy
{
public:
	TEditorsProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// Count:   [dispid 2]
	long Count();

	// Item:   [dispid 0]
	void Item(TEditorProxy& Obj, __OCF TAutoVal* arg0);

	// Add:   [dispid 501]
	void Add(TEditorProxy& Obj, __OCF TAutoVal* EditorID);
};
#endif

// EmailAuthor
// {000209D7-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE EmailAuthor
DECLARE_INTERFACE_(EmailAuthor, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// EmailAuthor methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Style) (THIS_ Style** prop) PURE; 
};
typedef EmailAuthor* LPMAILAUTHOR;
#ifdef __cplusplus
// EmailAuthor  {000209D7-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TEmailAuthorProxy : public __OCF TAutoProxy
{
public:
	TEmailAuthorProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// _Style:   [dispid 103]
	void _Style(TStyleProxy& Obj);
};
#endif

// EmailSignatureEntries
// {000209E5-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE EmailSignatureEntries
DECLARE_INTERFACE_(EmailSignatureEntries, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// EmailSignatureEntries methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get__NewEnum) (THIS_ IUnknown** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Count) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Item) (THIS_ VARIANT* , EmailSignatureEntry** prop) PURE; 
	STDMETHOD_(HRESULT, Add) (THIS_ BSTR Name, WordRange* , EmailSignatureEntry** prop) PURE; 
};
typedef EmailSignatureEntries* LPMAILSIGNATUREENTRIES;
#ifdef __cplusplus
// EmailSignatureEntries  {000209E5-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TEmailSignatureEntriesProxy : public __OCF TAutoProxy
{
public:
	TEmailSignatureEntriesProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// _NewEnum:   [dispid -4]
	void _NewEnum(__OCF TAutoEnumerator<IUnknown*>& Obj);

	// Count:   [dispid 1]
	long Count();

	// Item:   [dispid 0]
	void Item(TEmailSignatureEntryProxy& Obj, __OCF TAutoVal* arg0);

	// Add:   [dispid 101]
	void Add(TEmailSignatureEntryProxy& Obj, __OCF TAutoString Name, WordRange* arg1);
};
#endif

// EmailSignatureEntry
// {000209E6-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE EmailSignatureEntry
DECLARE_INTERFACE_(EmailSignatureEntry, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// EmailSignatureEntry methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Index) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Name) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Name) (THIS_ BSTR prop) PURE; 
	STDMETHOD_(HRESULT, Delete) (THIS ) PURE; 
};
typedef EmailSignatureEntry* LPMAILSIGNATUREENTRY;
#ifdef __cplusplus
// EmailSignatureEntry  {000209E6-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TEmailSignatureEntryProxy : public __OCF TAutoProxy
{
public:
	TEmailSignatureEntryProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// _Index:   [dispid 1]
	long _Index();

	// Name:   [dispid 2]
	__OCF TAutoString Name();

	// Name:   [dispid 2]
	void Name(__OCF TAutoString arg0);

	// Delete:   [dispid 101]
	void Delete();
};
#endif

// EndnoteOptions
// {BF043168-F4DE-4E7C-B206-741A8B3EF71A}
#undef INTERFACE
#define INTERFACE EndnoteOptions
DECLARE_INTERFACE_(EndnoteOptions, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// EndnoteOptions methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Location) (THIS_ WdEndnoteLocation* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Location) (THIS_ WdEndnoteLocation prop) PURE; 
	STDMETHOD_(HRESULT, Get_NumberStyle) (THIS_ WdNoteNumberStyle* prop) PURE; 
	STDMETHOD_(HRESULT, Set_NumberStyle) (THIS_ WdNoteNumberStyle prop) PURE; 
	STDMETHOD_(HRESULT, Get_StartingNumber) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Set_StartingNumber) (THIS_ long prop) PURE; 
	STDMETHOD_(HRESULT, Get_NumberingRule) (THIS_ WdNumberingRule* prop) PURE; 
	STDMETHOD_(HRESULT, Set_NumberingRule) (THIS_ WdNumberingRule prop) PURE; 
};
typedef EndnoteOptions* LPNDNOTEOPTIONS;
#ifdef __cplusplus
// EndnoteOptions  {BF043168-F4DE-4E7C-B206-741A8B3EF71A}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TEndnoteOptionsProxy : public __OCF TAutoProxy
{
public:
	TEndnoteOptionsProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// Location:   [dispid 100]
	WdEndnoteLocation Location();

	// Location:   [dispid 100]
	void Location(WdEndnoteLocation arg0);

	// NumberStyle:   [dispid 101]
	WdNoteNumberStyle NumberStyle();

	// NumberStyle:   [dispid 101]
	void NumberStyle(WdNoteNumberStyle arg0);

	// StartingNumber:   [dispid 102]
	long StartingNumber();

	// StartingNumber:   [dispid 102]
	void StartingNumber(long arg0);

	// NumberingRule:   [dispid 103]
	WdNumberingRule NumberingRule();

	// NumberingRule:   [dispid 103]
	void NumberingRule(WdNumberingRule arg0);
};
#endif

// Endnote
// {0002093E-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE Endnote
DECLARE_INTERFACE_(Endnote, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// Endnote methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Range) (THIS_ WordRange** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Reference) (THIS_ WordRange** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Index) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Delete) (THIS ) PURE; 
};
typedef Endnote* LPNDNOTE;
#ifdef __cplusplus
// Endnote  {0002093E-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TEndnoteProxy : public __OCF TAutoProxy
{
public:
	TEndnoteProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// _Range:   [dispid 4]
	void _Range(TRangeProxy& Obj);

	// _Reference:   [dispid 5]
	void _Reference(TRangeProxy& Obj);

	// _Index:   [dispid 6]
	long _Index();

	// Delete:   [dispid 10]
	void Delete();
};
#endif

// Events
// {0002E167-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE Events
DECLARE_INTERFACE_(Events, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// Events methods:
	STDMETHOD_(HRESULT, Get_ReferencesEvents) (THIS_ VBProject* , ReferencesEvents** prceNew) PURE; 
	STDMETHOD_(HRESULT, Get_CommandBarEvents) (THIS_ IDispatch* , CommandBarEvents** prceNew) PURE; 
};
typedef Events* LPVENTS;
#ifdef __cplusplus
// Events  {0002E167-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TEventsProxy : public __OCF TAutoProxy
{
public:
	TEventsProxy() : TAutoProxy(0x0) {}

	// _ReferencesEvents:   [dispid 202]
	ReferencesEvents* _ReferencesEvents(VBProject* arg0);

	// _CommandBarEvents:   [dispid 205]
	CommandBarEvents* _CommandBarEvents(IDispatch* arg0);
};
#endif

// WdFieldKind
typedef enum tagWdFieldKind
{
	wdFieldKindNone = 0, 
	wdFieldKindHot = 1, 
	wdFieldKindWarm = 2, 
	wdFieldKindCold = 3, 
} WdFieldKind;

// Field
// {0002092F-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE Field
DECLARE_INTERFACE_(Field, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// Field methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Code) (THIS_ WordRange** prop) PURE; 
	STDMETHOD_(HRESULT, Set_Code) (THIS_ WordRange* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Type) (THIS_ WdFieldType* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Locked) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Locked) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_Kind) (THIS_ WdFieldKind* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Result) (THIS_ WordRange** prop) PURE; 
	STDMETHOD_(HRESULT, Set_Result) (THIS_ WordRange* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Data) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Data) (THIS_ BSTR prop) PURE; 
	STDMETHOD_(HRESULT, Get_Next) (THIS_ Field** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Previous) (THIS_ Field** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Index) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_ShowCodes) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_ShowCodes) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_LinkFormat) (THIS_ LinkFormat** prop) PURE; 
	STDMETHOD_(HRESULT, Get_OLEFormat) (THIS_ OLEFormat** prop) PURE; 
	STDMETHOD_(HRESULT, Get_InlineShape) (THIS_ InlineShape** prop) PURE; 
	STDMETHOD_(HRESULT, Select) (THIS ) PURE; 
	STDMETHOD_(HRESULT, Update) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Unlink) (THIS ) PURE; 
	STDMETHOD_(HRESULT, UpdateSource) (THIS ) PURE; 
	STDMETHOD_(HRESULT, DoClick) (THIS ) PURE; 
	STDMETHOD_(HRESULT, Copy) (THIS ) PURE; 
	STDMETHOD_(HRESULT, Cut) (THIS ) PURE; 
	STDMETHOD_(HRESULT, Delete) (THIS ) PURE; 
};
typedef Field* LPIELD;
#ifdef __cplusplus
// Field  {0002092F-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TFieldProxy : public __OCF TAutoProxy
{
public:
	TFieldProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// Code:   [dispid 0]
	void Code(TRangeProxy& Obj);

	// Code:   [dispid 0]
	void Code(WordRange* arg0);

	// Type:   [dispid 1]
	WdFieldType Type();

	// Locked:   [dispid 2]
	/*__OWL*/ TBool Locked();

	// Locked:   [dispid 2]
	void Locked(/*__OWL*/ TBool arg0);

	// Kind:   [dispid 3]
	WdFieldKind Kind();

	// Result:   [dispid 4]
	void Result(TRangeProxy& Obj);

	// Result:   [dispid 4]
	void Result(WordRange* arg0);

	// Data:   [dispid 5]
	__OCF TAutoString Data();

	// Data:   [dispid 5]
	void Data(__OCF TAutoString arg0);

	// Next:   [dispid 6]
	void Next(TFieldProxy& Obj);

	// Previous:   [dispid 7]
	void Previous(TFieldProxy& Obj);

	// _Index:   [dispid 8]
	long _Index();

	// ShowCodes:   [dispid 9]
	/*__OWL*/ TBool ShowCodes();

	// ShowCodes:   [dispid 9]
	void ShowCodes(/*__OWL*/ TBool arg0);

	// _LinkFormat:   [dispid 10]
	void _LinkFormat(TLinkFormatProxy& Obj);

	// _OLEFormat:   [dispid 11]
	void _OLEFormat(TOLEFormatProxy& Obj);

	// _InlineShape:   [dispid 12]
	void _InlineShape(TInlineShapeProxy& Obj);

	// Select:   [dispid 65535]
	void Select();

	// Update:   [dispid 101]
	/*__OWL*/ TBool Update();

	// Unlink:   [dispid 102]
	void Unlink();

	// UpdateSource:   [dispid 103]
	void UpdateSource();

	// DoClick:   [dispid 104]
	void DoClick();

	// Copy:   [dispid 105]
	void Copy();

	// Cut:   [dispid 106]
	void Cut();

	// Delete:   [dispid 107]
	void Delete();
};
#endif

// FileConverter
// {00020999-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE FileConverter
DECLARE_INTERFACE_(FileConverter, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// FileConverter methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get_FormatName) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Get_ClassName) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Get_SaveFormat) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_OpenFormat) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_CanSave) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Get_CanOpen) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Path) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Name) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Extensions) (THIS_ BSTR* prop) PURE; 
};
typedef FileConverter* LPILECONVERTER;
#ifdef __cplusplus
// FileConverter  {00020999-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TFileConverterProxy : public __OCF TAutoProxy
{
public:
	TFileConverterProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// FormatName:   [dispid 0]
	__OCF TAutoString FormatName();

	// ClassName:   [dispid 1]
	__OCF TAutoString ClassName();

	// SaveFormat:   [dispid 2]
	long SaveFormat();

	// OpenFormat:   [dispid 3]
	long OpenFormat();

	// CanSave:   [dispid 4]
	/*__OWL*/ TBool CanSave();

	// CanOpen:   [dispid 5]
	/*__OWL*/ TBool CanOpen();

	// Path:   [dispid 6]
	__OCF TAutoString Path();

	// Name:   [dispid 7]
	__OCF TAutoString Name();

	// Extensions:   [dispid 8]
	__OCF TAutoString Extensions();
};
#endif

// FileDialogFilters
// {000C0365-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE FileDialogFilters
DECLARE_INTERFACE_(FileDialogFilters, _IMsoDispObj)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
	// _IMsoDispObj methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ IDispatch** ppidisp) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* plCreator) PURE; 
#endif
	// FileDialogFilters methods:
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** Parent) PURE; 
	STDMETHOD_(HRESULT, Get__NewEnum) (THIS_ IUnknown** ppienum) PURE; 
	STDMETHOD_(HRESULT, Get_Count) (THIS_ long* pcFilters) PURE; 
	STDMETHOD_(HRESULT, Item) (THIS_ int , FileDialogFilter** Item) PURE; 
	STDMETHOD_(HRESULT, Delete) (THIS_ VARIANT filter) PURE; 
	STDMETHOD_(HRESULT, Clear) (THIS ) PURE; 
	STDMETHOD_(HRESULT, Add) (THIS_ BSTR Description, BSTR Extensions, VARIANT Position, FileDialogFilter** Add) PURE; 
};
typedef FileDialogFilters* LPILEDIALOGFILTERS;
#ifdef __cplusplus
// FileDialogFilters  {000C0365-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TFileDialogFiltersProxy : public __OCF TAutoProxy
{
public:
	TFileDialogFiltersProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1610743808]
	IDispatch* _Application();

	// Creator:   [dispid 1610743809]
	long Creator();

	// Parent:   [dispid 1610809344]
	IDispatch* Parent();

	// _NewEnum:   [dispid -4]
	void _NewEnum(__OCF TAutoEnumerator<IUnknown*>& Obj);

	// Count:   [dispid 1610809346]
	long Count();

	// Item:   [dispid 0]
	void Item(TFileDialogFilterProxy& Obj, int arg0);

	// Delete:   [dispid 1610809348]
	void Delete(__OCF TAutoVal filter = __OCF TNoArg());

	// Clear:   [dispid 1610809349]
	void Clear();

	// Add:   [dispid 1610809350]
	void Add(TFileDialogFilterProxy& Obj, __OCF TAutoString Description, __OCF TAutoString Extensions, __OCF TAutoVal Position = __OCF TNoArg());
};
#endif

// MsoGradientColorType
typedef enum tagMsoGradientColorType
{
	msoGradientColorMixed = -2, 
	msoGradientOneColor = 1, 
	msoGradientTwoColors = 2, 
	msoGradientPresetColors = 3, 
} MsoGradientColorType;

// MsoGradientStyle
typedef enum tagMsoGradientStyle
{
	msoGradientMixed = -2, 
	msoGradientHorizontal = 1, 
	msoGradientVertical = 2, 
	msoGradientDiagonalUp = 3, 
	msoGradientDiagonalDown = 4, 
	msoGradientFromCorner = 5, 
	msoGradientFromTitle = 6, 
	msoGradientFromCenter = 7, 
} MsoGradientStyle;

// MsoPatternType
typedef enum tagMsoPatternType
{
	msoPatternMixed = -2, 
	msoPattern5Percent = 1, 
	msoPattern10Percent = 2, 
	msoPattern20Percent = 3, 
	msoPattern25Percent = 4, 
	msoPattern30Percent = 5, 
	msoPattern40Percent = 6, 
	msoPattern50Percent = 7, 
	msoPattern60Percent = 8, 
	msoPattern70Percent = 9, 
	msoPattern75Percent = 10, 
	msoPattern80Percent = 11, 
	msoPattern90Percent = 12, 
	msoPatternDarkHorizontal = 13, 
	msoPatternDarkVertical = 14, 
	msoPatternDarkDownwardDiagonal = 15, 
	msoPatternDarkUpwardDiagonal = 16, 
	msoPatternSmallCheckerBoard = 17, 
	msoPatternTrellis = 18, 
	msoPatternLightHorizontal = 19, 
	msoPatternLightVertical = 20, 
	msoPatternLightDownwardDiagonal = 21, 
	msoPatternLightUpwardDiagonal = 22, 
	msoPatternSmallGrid = 23, 
	msoPatternDottedDiamond = 24, 
	msoPatternWideDownwardDiagonal = 25, 
	msoPatternWideUpwardDiagonal = 26, 
	msoPatternDashedUpwardDiagonal = 27, 
	msoPatternDashedDownwardDiagonal = 28, 
	msoPatternNarrowVertical = 29, 
	msoPatternNarrowHorizontal = 30, 
	msoPatternDashedVertical = 31, 
	msoPatternDashedHorizontal = 32, 
	msoPatternLargeConfetti = 33, 
	msoPatternLargeGrid = 34, 
	msoPatternHorizontalBrick = 35, 
	msoPatternLargeCheckerBoard = 36, 
	msoPatternSmallConfetti = 37, 
	msoPatternZigZag = 38, 
	msoPatternSolidDiamond = 39, 
	msoPatternDiagonalBrick = 40, 
	msoPatternOutlinedDiamond = 41, 
	msoPatternPlaid = 42, 
	msoPatternSphere = 43, 
	msoPatternWeave = 44, 
	msoPatternDottedGrid = 45, 
	msoPatternDivot = 46, 
	msoPatternShingle = 47, 
	msoPatternWave = 48, 
} MsoPatternType;

// MsoPresetGradientType
typedef enum tagMsoPresetGradientType
{
	msoPresetGradientMixed = -2, 
	msoGradientEarlySunset = 1, 
	msoGradientLateSunset = 2, 
	msoGradientNightfall = 3, 
	msoGradientDaybreak = 4, 
	msoGradientHorizon = 5, 
	msoGradientDesert = 6, 
	msoGradientOcean = 7, 
	msoGradientCalmWater = 8, 
	msoGradientFire = 9, 
	msoGradientFog = 10, 
	msoGradientMoss = 11, 
	msoGradientPeacock = 12, 
	msoGradientWheat = 13, 
	msoGradientParchment = 14, 
	msoGradientMahogany = 15, 
	msoGradientRainbow = 16, 
	msoGradientRainbowII = 17, 
	msoGradientGold = 18, 
	msoGradientGoldII = 19, 
	msoGradientBrass = 20, 
	msoGradientChrome = 21, 
	msoGradientChromeII = 22, 
	msoGradientSilver = 23, 
	msoGradientSapphire = 24, 
} MsoPresetGradientType;

// MsoPresetTexture
typedef enum tagMsoPresetTexture
{
	msoPresetTextureMixed = -2, 
	msoTexturePapyrus = 1, 
	msoTextureCanvas = 2, 
	msoTextureDenim = 3, 
	msoTextureWovenMat = 4, 
	msoTextureWaterDroplets = 5, 
	msoTexturePaperBag = 6, 
	msoTextureFishFossil = 7, 
	msoTextureSand = 8, 
	msoTextureGreenMarble = 9, 
	msoTextureWhiteMarble = 10, 
	msoTextureBrownMarble = 11, 
	msoTextureGranite = 12, 
	msoTextureNewsprint = 13, 
	msoTextureRecycledPaper = 14, 
	msoTextureParchment = 15, 
	msoTextureStationery = 16, 
	msoTextureBlueTissuePaper = 17, 
	msoTexturePinkTissuePaper = 18, 
	msoTexturePurpleMesh = 19, 
	msoTextureBouquet = 20, 
	msoTextureCork = 21, 
	msoTextureWalnut = 22, 
	msoTextureOak = 23, 
	msoTextureMediumWood = 24, 
} MsoPresetTexture;

// MsoTextureType
typedef enum tagMsoTextureType
{
	msoTextureTypeMixed = -2, 
	msoTexturePreset = 1, 
	msoTextureUserDefined = 2, 
} MsoTextureType;

// MsoFillType
typedef enum tagMsoFillType
{
	msoFillMixed = -2, 
	msoFillSolid = 1, 
	msoFillPatterned = 2, 
	msoFillGradient = 3, 
	msoFillTextured = 4, 
	msoFillBackground = 5, 
	msoFillPicture = 6, 
} MsoFillType;

// FillFormat
// {000209C8-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE FillFormat
DECLARE_INTERFACE_(FillFormat, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// FillFormat methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get_BackColor) (THIS_ ColorFormat** prop) PURE; 
	STDMETHOD_(HRESULT, Get_ForeColor) (THIS_ ColorFormat** prop) PURE; 
	STDMETHOD_(HRESULT, Get_GradientColorType) (THIS_ MsoGradientColorType* prop) PURE; 
	STDMETHOD_(HRESULT, Get_GradientDegree) (THIS_ float* prop) PURE; 
	STDMETHOD_(HRESULT, Get_GradientStyle) (THIS_ MsoGradientStyle* prop) PURE; 
	STDMETHOD_(HRESULT, Get_GradientVariant) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Pattern) (THIS_ MsoPatternType* prop) PURE; 
	STDMETHOD_(HRESULT, Get_PresetGradientType) (THIS_ MsoPresetGradientType* prop) PURE; 
	STDMETHOD_(HRESULT, Get_PresetTexture) (THIS_ MsoPresetTexture* prop) PURE; 
	STDMETHOD_(HRESULT, Get_TextureName) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Get_TextureType) (THIS_ MsoTextureType* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Transparency) (THIS_ float* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Transparency) (THIS_ float prop) PURE; 
	STDMETHOD_(HRESULT, Get_Type) (THIS_ MsoFillType* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Visible) (THIS_ MsoTriState* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Visible) (THIS_ MsoTriState prop) PURE; 
	STDMETHOD_(HRESULT, Background) (THIS ) PURE; 
	STDMETHOD_(HRESULT, OneColorGradient) (THIS_ MsoGradientStyle , long Variant, float Degree) PURE; 
	STDMETHOD_(HRESULT, Patterned) (THIS_ MsoPatternType Pattern) PURE; 
	STDMETHOD_(HRESULT, PresetGradient) (THIS_ MsoGradientStyle , long Variant, MsoPresetGradientType PresetGradientType) PURE; 
	STDMETHOD_(HRESULT, PresetTextured) (THIS_ MsoPresetTexture PresetTexture) PURE; 
	STDMETHOD_(HRESULT, Solid) (THIS ) PURE; 
	STDMETHOD_(HRESULT, TwoColorGradient) (THIS_ MsoGradientStyle , long Variant) PURE; 
	STDMETHOD_(HRESULT, UserPicture) (THIS_ BSTR PictureFile) PURE; 
	STDMETHOD_(HRESULT, UserTextured) (THIS_ BSTR TextureFile) PURE; 
};
typedef FillFormat* LPILLFORMAT;
#ifdef __cplusplus
// FillFormat  {000209C8-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TFillFormatProxy : public __OCF TAutoProxy
{
public:
	TFillFormatProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1]
	IDispatch* Parent();

	// BackColor:   [dispid 100]
	void BackColor(TColorFormatProxy& Obj);

	// ForeColor:   [dispid 101]
	void ForeColor(TColorFormatProxy& Obj);

	// GradientColorType:   [dispid 102]
	MsoGradientColorType GradientColorType();

	// GradientDegree:   [dispid 103]
	float GradientDegree();

	// GradientStyle:   [dispid 104]
	MsoGradientStyle GradientStyle();

	// GradientVariant:   [dispid 105]
	long GradientVariant();

	// Pattern:   [dispid 106]
	MsoPatternType Pattern();

	// PresetGradientType:   [dispid 107]
	MsoPresetGradientType PresetGradientType();

	// PresetTexture:   [dispid 108]
	MsoPresetTexture PresetTexture();

	// TextureName:   [dispid 109]
	__OCF TAutoString TextureName();

	// TextureType:   [dispid 110]
	MsoTextureType TextureType();

	// Transparency:   [dispid 111]
	float Transparency();

	// Transparency:   [dispid 111]
	void Transparency(float arg0);

	// Type:   [dispid 112]
	MsoFillType Type();

	// Visible:   [dispid 113]
	MsoTriState Visible();

	// Visible:   [dispid 113]
	void Visible(MsoTriState arg0);

	// Background:   [dispid 10]
	void Background();

	// OneColorGradient:   [dispid 11]
	void OneColorGradient(MsoGradientStyle arg0, long Variant, float Degree);

	// Patterned:   [dispid 12]
	void Patterned(MsoPatternType Pattern);

	// PresetGradient:   [dispid 13]
	void PresetGradient(MsoGradientStyle arg0, long Variant, MsoPresetGradientType PresetGradientType);

	// PresetTextured:   [dispid 14]
	void PresetTextured(MsoPresetTexture PresetTexture);

	// Solid:   [dispid 15]
	void Solid();

	// TwoColorGradient:   [dispid 16]
	void TwoColorGradient(MsoGradientStyle arg0, long Variant);

	// UserPicture:   [dispid 17]
	void UserPicture(__OCF TAutoString PictureFile);

	// UserTextured:   [dispid 18]
	void UserTextured(__OCF TAutoString TextureFile);
};
#endif

// FirstLetterException
// {00020945-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE FirstLetterException
DECLARE_INTERFACE_(FirstLetterException, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// FirstLetterException methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Index) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Name) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Delete) (THIS ) PURE; 
};
typedef FirstLetterException* LPIRSTLETTEREXCEPTION;
#ifdef __cplusplus
// FirstLetterException  {00020945-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TFirstLetterExceptionProxy : public __OCF TAutoProxy
{
public:
	TFirstLetterExceptionProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// _Index:   [dispid 1]
	long _Index();

	// Name:   [dispid 2]
	__OCF TAutoString Name();

	// Delete:   [dispid 101]
	void Delete();
};
#endif

// FootnoteOptions
// {BEA85A24-D7DA-4F3D-B58C-ED90FB01D615}
#undef INTERFACE
#define INTERFACE FootnoteOptions
DECLARE_INTERFACE_(FootnoteOptions, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// FootnoteOptions methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Location) (THIS_ WdFootnoteLocation* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Location) (THIS_ WdFootnoteLocation prop) PURE; 
	STDMETHOD_(HRESULT, Get_NumberStyle) (THIS_ WdNoteNumberStyle* prop) PURE; 
	STDMETHOD_(HRESULT, Set_NumberStyle) (THIS_ WdNoteNumberStyle prop) PURE; 
	STDMETHOD_(HRESULT, Get_StartingNumber) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Set_StartingNumber) (THIS_ long prop) PURE; 
	STDMETHOD_(HRESULT, Get_NumberingRule) (THIS_ WdNumberingRule* prop) PURE; 
	STDMETHOD_(HRESULT, Set_NumberingRule) (THIS_ WdNumberingRule prop) PURE; 
};
typedef FootnoteOptions* LPOOTNOTEOPTIONS;
#ifdef __cplusplus
// FootnoteOptions  {BEA85A24-D7DA-4F3D-B58C-ED90FB01D615}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TFootnoteOptionsProxy : public __OCF TAutoProxy
{
public:
	TFootnoteOptionsProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// Location:   [dispid 100]
	WdFootnoteLocation Location();

	// Location:   [dispid 100]
	void Location(WdFootnoteLocation arg0);

	// NumberStyle:   [dispid 101]
	WdNoteNumberStyle NumberStyle();

	// NumberStyle:   [dispid 101]
	void NumberStyle(WdNoteNumberStyle arg0);

	// StartingNumber:   [dispid 102]
	long StartingNumber();

	// StartingNumber:   [dispid 102]
	void StartingNumber(long arg0);

	// NumberingRule:   [dispid 103]
	WdNumberingRule NumberingRule();

	// NumberingRule:   [dispid 103]
	void NumberingRule(WdNumberingRule arg0);
};
#endif

// Footnote
// {0002093F-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE Footnote
DECLARE_INTERFACE_(Footnote, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// Footnote methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Range) (THIS_ WordRange** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Reference) (THIS_ WordRange** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Index) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Delete) (THIS ) PURE; 
};
typedef Footnote* LPOOTNOTE;
#ifdef __cplusplus
// Footnote  {0002093F-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TFootnoteProxy : public __OCF TAutoProxy
{
public:
	TFootnoteProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// _Range:   [dispid 4]
	void _Range(TRangeProxy& Obj);

	// _Reference:   [dispid 5]
	void _Reference(TRangeProxy& Obj);

	// _Index:   [dispid 6]
	long _Index();

	// Delete:   [dispid 10]
	void Delete();
};
#endif

// FormField
// {00020928-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE FormField
DECLARE_INTERFACE_(FormField, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// FormField methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Type) (THIS_ WdFieldType* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Name) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Name) (THIS_ BSTR prop) PURE; 
	STDMETHOD_(HRESULT, Get_EntryMacro) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Set_EntryMacro) (THIS_ BSTR prop) PURE; 
	STDMETHOD_(HRESULT, Get_ExitMacro) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Set_ExitMacro) (THIS_ BSTR prop) PURE; 
	STDMETHOD_(HRESULT, Get_OwnHelp) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_OwnHelp) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_OwnStatus) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_OwnStatus) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_HelpText) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Set_HelpText) (THIS_ BSTR prop) PURE; 
	STDMETHOD_(HRESULT, Get_StatusText) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Set_StatusText) (THIS_ BSTR prop) PURE; 
	STDMETHOD_(HRESULT, Get_Enabled) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Enabled) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_Result) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Result) (THIS_ BSTR prop) PURE; 
	STDMETHOD_(HRESULT, Get_TextInput) (THIS_ TextInput** prop) PURE; 
	STDMETHOD_(HRESULT, Get_CheckBox) (THIS_ CheckBox** prop) PURE; 
	STDMETHOD_(HRESULT, Get_DropDown) (THIS_ DropDown** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Next) (THIS_ FormField** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Previous) (THIS_ FormField** prop) PURE; 
	STDMETHOD_(HRESULT, Get_CalculateOnExit) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_CalculateOnExit) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_Range) (THIS_ WordRange** prop) PURE; 
	STDMETHOD_(HRESULT, Select) (THIS ) PURE; 
	STDMETHOD_(HRESULT, Copy) (THIS ) PURE; 
	STDMETHOD_(HRESULT, Cut) (THIS ) PURE; 
	STDMETHOD_(HRESULT, Delete) (THIS ) PURE; 
};
typedef FormField* LPORMFIELD;
#ifdef __cplusplus
// FormField  {00020928-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TFormFieldProxy : public __OCF TAutoProxy
{
public:
	TFormFieldProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// Type:   [dispid 0]
	WdFieldType Type();

	// Name:   [dispid 2]
	__OCF TAutoString Name();

	// Name:   [dispid 2]
	void Name(__OCF TAutoString arg0);

	// EntryMacro:   [dispid 3]
	__OCF TAutoString EntryMacro();

	// EntryMacro:   [dispid 3]
	void EntryMacro(__OCF TAutoString arg0);

	// ExitMacro:   [dispid 4]
	__OCF TAutoString ExitMacro();

	// ExitMacro:   [dispid 4]
	void ExitMacro(__OCF TAutoString arg0);

	// OwnHelp:   [dispid 5]
	/*__OWL*/ TBool OwnHelp();

	// OwnHelp:   [dispid 5]
	void OwnHelp(/*__OWL*/ TBool arg0);

	// OwnStatus:   [dispid 6]
	/*__OWL*/ TBool OwnStatus();

	// OwnStatus:   [dispid 6]
	void OwnStatus(/*__OWL*/ TBool arg0);

	// HelpText:   [dispid 7]
	__OCF TAutoString HelpText();

	// HelpText:   [dispid 7]
	void HelpText(__OCF TAutoString arg0);

	// StatusText:   [dispid 8]
	__OCF TAutoString StatusText();

	// StatusText:   [dispid 8]
	void StatusText(__OCF TAutoString arg0);

	// Enabled:   [dispid 9]
	/*__OWL*/ TBool Enabled();

	// Enabled:   [dispid 9]
	void Enabled(/*__OWL*/ TBool arg0);

	// Result:   [dispid 10]
	__OCF TAutoString Result();

	// Result:   [dispid 10]
	void Result(__OCF TAutoString arg0);

	// _TextInput:   [dispid 11]
	void _TextInput(TTextInputProxy& Obj);

	// _CheckBox:   [dispid 12]
	void _CheckBox(TCheckBoxProxy& Obj);

	// _DropDown:   [dispid 13]
	void _DropDown(TDropDownProxy& Obj);

	// Next:   [dispid 14]
	void Next(TFormFieldProxy& Obj);

	// Previous:   [dispid 15]
	void Previous(TFormFieldProxy& Obj);

	// CalculateOnExit:   [dispid 16]
	/*__OWL*/ TBool CalculateOnExit();

	// CalculateOnExit:   [dispid 16]
	void CalculateOnExit(/*__OWL*/ TBool arg0);

	// _Range:   [dispid 17]
	void _Range(TRangeProxy& Obj);

	// Select:   [dispid 65535]
	void Select();

	// Copy:   [dispid 101]
	void Copy();

	// Cut:   [dispid 102]
	void Cut();

	// Delete:   [dispid 103]
	void Delete();
};
#endif

// WdFrameSizeRule
typedef enum tagWdFrameSizeRule
{
	wdFrameAuto = 0, 
	wdFrameAtLeast = 1, 
	wdFrameExact = 2, 
} WdFrameSizeRule;

// Frame
// {0002092A-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE Frame
DECLARE_INTERFACE_(Frame, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// Frame methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get_HeightRule) (THIS_ WdFrameSizeRule* prop) PURE; 
	STDMETHOD_(HRESULT, Set_HeightRule) (THIS_ WdFrameSizeRule prop) PURE; 
	STDMETHOD_(HRESULT, Get_WidthRule) (THIS_ WdFrameSizeRule* prop) PURE; 
	STDMETHOD_(HRESULT, Set_WidthRule) (THIS_ WdFrameSizeRule prop) PURE; 
	STDMETHOD_(HRESULT, Get_HorizontalDistanceFromText) (THIS_ float* prop) PURE; 
	STDMETHOD_(HRESULT, Set_HorizontalDistanceFromText) (THIS_ float prop) PURE; 
	STDMETHOD_(HRESULT, Get_Height) (THIS_ float* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Height) (THIS_ float prop) PURE; 
	STDMETHOD_(HRESULT, Get_HorizontalPosition) (THIS_ float* prop) PURE; 
	STDMETHOD_(HRESULT, Set_HorizontalPosition) (THIS_ float prop) PURE; 
	STDMETHOD_(HRESULT, Get_LockAnchor) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_LockAnchor) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_RelativeHorizontalPosition) (THIS_ WdRelativeHorizontalPosition* prop) PURE; 
	STDMETHOD_(HRESULT, Set_RelativeHorizontalPosition) (THIS_ WdRelativeHorizontalPosition prop) PURE; 
	STDMETHOD_(HRESULT, Get_RelativeVerticalPosition) (THIS_ WdRelativeVerticalPosition* prop) PURE; 
	STDMETHOD_(HRESULT, Set_RelativeVerticalPosition) (THIS_ WdRelativeVerticalPosition prop) PURE; 
	STDMETHOD_(HRESULT, Get_VerticalDistanceFromText) (THIS_ float* prop) PURE; 
	STDMETHOD_(HRESULT, Set_VerticalDistanceFromText) (THIS_ float prop) PURE; 
	STDMETHOD_(HRESULT, Get_VerticalPosition) (THIS_ float* prop) PURE; 
	STDMETHOD_(HRESULT, Set_VerticalPosition) (THIS_ float prop) PURE; 
	STDMETHOD_(HRESULT, Get_Width) (THIS_ float* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Width) (THIS_ float prop) PURE; 
	STDMETHOD_(HRESULT, Get_TextWrap) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_TextWrap) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_Shading) (THIS_ Shading** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Borders) (THIS_ Borders** prop) PURE; 
	STDMETHOD_(HRESULT, Set_Borders) (THIS_ Borders* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Range) (THIS_ WordRange** prop) PURE; 
	STDMETHOD_(HRESULT, Delete) (THIS ) PURE; 
	STDMETHOD_(HRESULT, Select) (THIS ) PURE; 
	STDMETHOD_(HRESULT, Copy) (THIS ) PURE; 
	STDMETHOD_(HRESULT, Cut) (THIS ) PURE; 
};
typedef Frame* LPRAME;
#ifdef __cplusplus
// Frame  {0002092A-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TFrameProxy : public __OCF TAutoProxy
{
public:
	TFrameProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// HeightRule:   [dispid 1]
	WdFrameSizeRule HeightRule();

	// HeightRule:   [dispid 1]
	void HeightRule(WdFrameSizeRule arg0);

	// WidthRule:   [dispid 2]
	WdFrameSizeRule WidthRule();

	// WidthRule:   [dispid 2]
	void WidthRule(WdFrameSizeRule arg0);

	// HorizontalDistanceFromText:   [dispid 3]
	float HorizontalDistanceFromText();

	// HorizontalDistanceFromText:   [dispid 3]
	void HorizontalDistanceFromText(float arg0);

	// Height:   [dispid 4]
	float Height();

	// Height:   [dispid 4]
	void Height(float arg0);

	// HorizontalPosition:   [dispid 5]
	float HorizontalPosition();

	// HorizontalPosition:   [dispid 5]
	void HorizontalPosition(float arg0);

	// LockAnchor:   [dispid 6]
	/*__OWL*/ TBool LockAnchor();

	// LockAnchor:   [dispid 6]
	void LockAnchor(/*__OWL*/ TBool arg0);

	// RelativeHorizontalPosition:   [dispid 7]
	WdRelativeHorizontalPosition RelativeHorizontalPosition();

	// RelativeHorizontalPosition:   [dispid 7]
	void RelativeHorizontalPosition(WdRelativeHorizontalPosition arg0);

	// RelativeVerticalPosition:   [dispid 8]
	WdRelativeVerticalPosition RelativeVerticalPosition();

	// RelativeVerticalPosition:   [dispid 8]
	void RelativeVerticalPosition(WdRelativeVerticalPosition arg0);

	// VerticalDistanceFromText:   [dispid 9]
	float VerticalDistanceFromText();

	// VerticalDistanceFromText:   [dispid 9]
	void VerticalDistanceFromText(float arg0);

	// VerticalPosition:   [dispid 10]
	float VerticalPosition();

	// VerticalPosition:   [dispid 10]
	void VerticalPosition(float arg0);

	// Width:   [dispid 11]
	float Width();

	// Width:   [dispid 11]
	void Width(float arg0);

	// TextWrap:   [dispid 12]
	/*__OWL*/ TBool TextWrap();

	// TextWrap:   [dispid 12]
	void TextWrap(/*__OWL*/ TBool arg0);

	// _Shading:   [dispid 13]
	void _Shading(TShadingProxy& Obj);

	// _Borders:   [dispid 1100]
	void _Borders(TBordersProxy& Obj);

	// _Borders:   [dispid 1100]
	void _Borders(Borders* arg0);

	// _Range:   [dispid 15]
	void _Range(TRangeProxy& Obj);

	// Delete:   [dispid 100]
	void Delete();

	// Select:   [dispid 65535]
	void Select();

	// Copy:   [dispid 101]
	void Copy();

	// Cut:   [dispid 102]
	void Cut();
};
#endif

// MsoSegmentType
typedef enum tagMsoSegmentType
{
	msoSegmentLine = 0, 
	msoSegmentCurve = 1, 
} MsoSegmentType;

// FreeformBuilder
// {000209C9-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE FreeformBuilder
DECLARE_INTERFACE_(FreeformBuilder, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// FreeformBuilder methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, AddNodes) (THIS_ MsoSegmentType SegmentType, MsoEditingType EditingType, float X1, float Y1, float X2, float Y2, float X3, float Y3) PURE; 
	STDMETHOD_(HRESULT, ConvertToShape) (THIS_ VARIANT* Anchor, WordShape** prop) PURE; 
};
typedef FreeformBuilder* LPREEFORMBUILDER;
#ifdef __cplusplus
// FreeformBuilder  {000209C9-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TFreeformBuilderProxy : public __OCF TAutoProxy
{
public:
	TFreeformBuilderProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1]
	IDispatch* Parent();

	// AddNodes:   [dispid 10]
	void AddNodes(MsoSegmentType SegmentType, MsoEditingType EditingType, float X1, float Y1, float X2, float Y2, float X3, float Y3);

	// ConvertToShape:   [dispid 11]
	void ConvertToShape(TShapeProxy& Obj, __OCF TAutoVal* Anchor = 0);
};
#endif

// GroupShapes
// {000209B6-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE GroupShapes
DECLARE_INTERFACE_(GroupShapes, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// GroupShapes methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Count) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get__NewEnum) (THIS_ IUnknown** prop) PURE; 
	STDMETHOD_(HRESULT, Item) (THIS_ VARIANT* , WordShape** prop) PURE; 
	STDMETHOD_(HRESULT, WordRange) (THIS_ VARIANT* , ShapeRange** prop) PURE; 
};
typedef GroupShapes* LPROUPSHAPES;
#ifdef __cplusplus
// GroupShapes  {000209B6-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TGroupShapesProxy : public __OCF TAutoProxy
{
public:
	TGroupShapesProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 8000]
	WordApplication* _Application();

	// Creator:   [dispid 8001]
	long Creator();

	// Parent:   [dispid 1]
	IDispatch* Parent();

	// Count:   [dispid 2]
	long Count();

	// _NewEnum:   [dispid -4]
	void _NewEnum(__OCF TAutoEnumerator<IUnknown*>& Obj);

	// Item:   [dispid 0]
	void Item(TShapeProxy& Obj, __OCF TAutoVal* arg0);

	// _Range:   [dispid 10]
	void _Range(TShapeRangeProxy& Obj, __OCF TAutoVal* arg0);
};
#endif

// HangulAndAlphabetException
// {000209D2-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE HangulAndAlphabetException
DECLARE_INTERFACE_(HangulAndAlphabetException, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// HangulAndAlphabetException methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Index) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Name) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Delete) (THIS ) PURE; 
};
typedef HangulAndAlphabetException* LPANGULANDALPHABETEXCEPTION;
#ifdef __cplusplus
// HangulAndAlphabetException  {000209D2-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS THangulAndAlphabetExceptionProxy : public __OCF TAutoProxy
{
public:
	THangulAndAlphabetExceptionProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// _Index:   [dispid 1]
	long _Index();

	// Name:   [dispid 2]
	__OCF TAutoString Name();

	// Delete:   [dispid 101]
	void Delete();
};
#endif

// WdHeaderFooterIndex
typedef enum tagWdHeaderFooterIndex
{
	wdHeaderFooterPrimary = 1, 
	wdHeaderFooterFirstPage = 2, 
	wdHeaderFooterEvenPages = 3, 
} WdHeaderFooterIndex;

// HeaderFooter
// {00020985-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE HeaderFooter
DECLARE_INTERFACE_(HeaderFooter, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// HeaderFooter methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Range) (THIS_ WordRange** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Index) (THIS_ WdHeaderFooterIndex* prop) PURE; 
	STDMETHOD_(HRESULT, Get_IsHeader) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Exists) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Exists) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_PageNumbers) (THIS_ PageNumbers** prop) PURE; 
	STDMETHOD_(HRESULT, Get_LinkToPrevious) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_LinkToPrevious) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_Shapes) (THIS_ Shapes** prop) PURE; 
};
typedef HeaderFooter* LPEADERFOOTER;
#ifdef __cplusplus
// HeaderFooter  {00020985-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS THeaderFooterProxy : public __OCF TAutoProxy
{
public:
	THeaderFooterProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// _Range:   [dispid 0]
	void _Range(TRangeProxy& Obj);

	// _Index:   [dispid 2]
	WdHeaderFooterIndex _Index();

	// IsHeader:   [dispid 3]
	/*__OWL*/ TBool IsHeader();

	// Exists:   [dispid 4]
	/*__OWL*/ TBool Exists();

	// Exists:   [dispid 4]
	void Exists(/*__OWL*/ TBool arg0);

	// _PageNumbers:   [dispid 5]
	void _PageNumbers(TPageNumbersProxy& Obj);

	// LinkToPrevious:   [dispid 6]
	/*__OWL*/ TBool LinkToPrevious();

	// LinkToPrevious:   [dispid 6]
	void LinkToPrevious(/*__OWL*/ TBool arg0);

	// _Shapes:   [dispid 7]
	void _Shapes(TShapesProxy& Obj);
};
#endif

// HTMLDivision
// {000209E7-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE HTMLDivision
DECLARE_INTERFACE_(HTMLDivision, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// HTMLDivision methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Range) (THIS_ WordRange** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Borders) (THIS_ Borders** prop) PURE; 
	STDMETHOD_(HRESULT, Get_LeftIndent) (THIS_ float* prop) PURE; 
	STDMETHOD_(HRESULT, Set_LeftIndent) (THIS_ float prop) PURE; 
	STDMETHOD_(HRESULT, Get_RightIndent) (THIS_ float* prop) PURE; 
	STDMETHOD_(HRESULT, Set_RightIndent) (THIS_ float prop) PURE; 
	STDMETHOD_(HRESULT, Get_SpaceBefore) (THIS_ float* prop) PURE; 
	STDMETHOD_(HRESULT, Set_SpaceBefore) (THIS_ float prop) PURE; 
	STDMETHOD_(HRESULT, Get_SpaceAfter) (THIS_ float* prop) PURE; 
	STDMETHOD_(HRESULT, Set_SpaceAfter) (THIS_ float prop) PURE; 
	STDMETHOD_(HRESULT, Get_HTMLDivisions) (THIS_ HTMLDivisions** prop) PURE; 
	STDMETHOD_(HRESULT, HTMLDivisionParent) (THIS_ VARIANT* LevelsUp, HTMLDivision** prop) PURE; 
	STDMETHOD_(HRESULT, Delete) (THIS ) PURE; 
};
typedef HTMLDivision* LPTMLDIVISION;
#ifdef __cplusplus
// HTMLDivision  {000209E7-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS THTMLDivisionProxy : public __OCF TAutoProxy
{
public:
	THTMLDivisionProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// _Range:   [dispid 1]
	void _Range(TRangeProxy& Obj);

	// _Borders:   [dispid 1100]
	void _Borders(TBordersProxy& Obj);

	// LeftIndent:   [dispid 3]
	float LeftIndent();

	// LeftIndent:   [dispid 3]
	void LeftIndent(float arg0);

	// RightIndent:   [dispid 4]
	float RightIndent();

	// RightIndent:   [dispid 4]
	void RightIndent(float arg0);

	// SpaceBefore:   [dispid 5]
	float SpaceBefore();

	// SpaceBefore:   [dispid 5]
	void SpaceBefore(float arg0);

	// SpaceAfter:   [dispid 6]
	float SpaceAfter();

	// SpaceAfter:   [dispid 6]
	void SpaceAfter(float arg0);

	// _HTMLDivisions:   [dispid 7]
	void _HTMLDivisions(THTMLDivisionsProxy& Obj);

	// HTMLDivisionParent:   [dispid 8]
	void HTMLDivisionParent(THTMLDivisionProxy& Obj, __OCF TAutoVal* LevelsUp = 0);

	// Delete:   [dispid 101]
	void Delete();
};
#endif

// HTMLProjectItems
// {000C0357-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE HTMLProjectItems
DECLARE_INTERFACE_(HTMLProjectItems, _IMsoDispObj)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
	// _IMsoDispObj methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ IDispatch** ppidisp) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* plCreator) PURE; 
#endif
	// HTMLProjectItems methods:
	STDMETHOD_(HRESULT, Item) (THIS_ VARIANT* , HTMLProjectItem** RetValue) PURE; 
	STDMETHOD_(HRESULT, Get_Count) (THIS_ long* RetValue) PURE; 
	STDMETHOD_(HRESULT, Get__NewEnum) (THIS_ IUnknown** RetValue) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** ppidisp) PURE; 
};
typedef HTMLProjectItems* LPTMLPROJECTITEMS;
#ifdef __cplusplus
// HTMLProjectItems  {000C0357-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS THTMLProjectItemsProxy : public __OCF TAutoProxy
{
public:
	THTMLProjectItemsProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1610743808]
	IDispatch* _Application();

	// Creator:   [dispid 1610743809]
	long Creator();

	// Item:   [dispid 0]
	void Item(THTMLProjectItemProxy& Obj, __OCF TAutoVal* arg0);

	// Count:   [dispid 1]
	long Count();

	// _NewEnum:   [dispid -4]
	void _NewEnum(__OCF TAutoEnumerator<IUnknown*>& Obj);

	// Parent:   [dispid 2]
	IDispatch* Parent();
};
#endif

// MsoHyperlinkType
typedef enum tagMsoHyperlinkType
{
	msoHyperlinkRange = 0, 
	msoHyperlinkShape = 1, 
	msoHyperlinkInlineShape = 2, 
} MsoHyperlinkType;

// Hyperlink
// {0002099D-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE Hyperlink
DECLARE_INTERFACE_(Hyperlink, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// Hyperlink methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Name) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Get_AddressOld) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Type) (THIS_ MsoHyperlinkType* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Range) (THIS_ WordRange** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Shape) (THIS_ WordShape** prop) PURE; 
	STDMETHOD_(HRESULT, Get_SubAddressOld) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Get_ExtraInfoRequired) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Delete) (THIS ) PURE; 
	STDMETHOD_(HRESULT, Follow) (THIS_ VARIANT* NewWindow, VARIANT* AddHistory, VARIANT* ExtraInfo, VARIANT* Method, VARIANT* HeaderInfo) PURE; 
	STDMETHOD_(HRESULT, AddToFavorites) (THIS ) PURE; 
	STDMETHOD_(HRESULT, CreateNewDocument) (THIS_ BSTR FileName, VARIANT_BOOL EditNow, VARIANT_BOOL Overwrite) PURE; 
	STDMETHOD_(HRESULT, Get_Address) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Address) (THIS_ BSTR prop) PURE; 
	STDMETHOD_(HRESULT, Get_SubAddress) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Set_SubAddress) (THIS_ BSTR prop) PURE; 
	STDMETHOD_(HRESULT, Get_EmailSubject) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Set_EmailSubject) (THIS_ BSTR prop) PURE; 
	STDMETHOD_(HRESULT, Get_ScreenTip) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Set_ScreenTip) (THIS_ BSTR prop) PURE; 
	STDMETHOD_(HRESULT, Get_TextToDisplay) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Set_TextToDisplay) (THIS_ BSTR prop) PURE; 
	STDMETHOD_(HRESULT, Get_Target) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Target) (THIS_ BSTR prop) PURE; 
};
typedef Hyperlink* LPYPERLINK;
#ifdef __cplusplus
// Hyperlink  {0002099D-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS THyperlinkProxy : public __OCF TAutoProxy
{
public:
	THyperlinkProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// Name:   [dispid 1003]
	__OCF TAutoString Name();

	// AddressOld:   [dispid 1004]
	__OCF TAutoString AddressOld();

	// Type:   [dispid 1005]
	MsoHyperlinkType Type();

	// _Range:   [dispid 1006]
	void _Range(TRangeProxy& Obj);

	// _Shape:   [dispid 1007]
	void _Shape(TShapeProxy& Obj);

	// SubAddressOld:   [dispid 1008]
	__OCF TAutoString SubAddressOld();

	// ExtraInfoRequired:   [dispid 1009]
	/*__OWL*/ TBool ExtraInfoRequired();

	// Delete:   [dispid 103]
	void Delete();

	// Follow:   [dispid 104]
	void Follow(__OCF TAutoVal* NewWindow = 0, __OCF TAutoVal* AddHistory = 0, __OCF TAutoVal* ExtraInfo = 0, __OCF TAutoVal* Method = 0, __OCF TAutoVal* HeaderInfo = 0);

	// AddToFavorites:   [dispid 105]
	void AddToFavorites();

	// CreateNewDocument:   [dispid 106]
	void CreateNewDocument(__OCF TAutoString FileName, /*__OWL*/ TBool EditNow, /*__OWL*/ TBool Overwrite);

	// Address:   [dispid 1100]
	__OCF TAutoString Address();

	// Address:   [dispid 1100]
	void Address(__OCF TAutoString arg0);

	// SubAddress:   [dispid 1101]
	__OCF TAutoString SubAddress();

	// SubAddress:   [dispid 1101]
	void SubAddress(__OCF TAutoString arg0);

	// EmailSubject:   [dispid 1010]
	__OCF TAutoString EmailSubject();

	// EmailSubject:   [dispid 1010]
	void EmailSubject(__OCF TAutoString arg0);

	// ScreenTip:   [dispid 1011]
	__OCF TAutoString ScreenTip();

	// ScreenTip:   [dispid 1011]
	void ScreenTip(__OCF TAutoString arg0);

	// TextToDisplay:   [dispid 1012]
	__OCF TAutoString TextToDisplay();

	// TextToDisplay:   [dispid 1012]
	void TextToDisplay(__OCF TAutoString arg0);

	// Target:   [dispid 1013]
	__OCF TAutoString Target();

	// Target:   [dispid 1013]
	void Target(__OCF TAutoString arg0);
};
#endif

// IMsoDiagram
// {000C036D-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE IMsoDiagram
DECLARE_INTERFACE_(IMsoDiagram, _IMsoDispObj)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
	// _IMsoDispObj methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ IDispatch** ppidisp) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* plCreator) PURE; 
#endif
	// IMsoDiagram methods:
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** Parent) PURE; 
	STDMETHOD_(HRESULT, Get_Nodes) (THIS_ DiagramNodes** Nodes) PURE; 
	STDMETHOD_(HRESULT, Get_Type) (THIS_ MsoDiagramType* Type) PURE; 
	STDMETHOD_(HRESULT, Get_AutoLayout) (THIS_ MsoTriState* AutoLayout) PURE; 
	STDMETHOD_(HRESULT, Set_AutoLayout) (THIS_ MsoTriState AutoLayout) PURE; 
	STDMETHOD_(HRESULT, Get_Reverse) (THIS_ MsoTriState* Reverse) PURE; 
	STDMETHOD_(HRESULT, Set_Reverse) (THIS_ MsoTriState Reverse) PURE; 
	STDMETHOD_(HRESULT, Get_AutoFormat) (THIS_ MsoTriState* AutoFormat) PURE; 
	STDMETHOD_(HRESULT, Set_AutoFormat) (THIS_ MsoTriState AutoFormat) PURE; 
	STDMETHOD_(HRESULT, Convert) (THIS_ MsoDiagramType Type) PURE; 
	STDMETHOD_(HRESULT, FitText) (THIS ) PURE; 
};
typedef IMsoDiagram* LPMSODIAGRAM;
#ifdef __cplusplus
// IMsoDiagram  {000C036D-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FHIDDEN TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TIMsoDiagramProxy : public __OCF TAutoProxy
{
public:
	TIMsoDiagramProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1610743808]
	IDispatch* _Application();

	// Creator:   [dispid 1610743809]
	long Creator();

	// Parent:   [dispid 100]
	IDispatch* Parent();

	// Nodes:   [dispid 101]
	void Nodes(TDiagramNodesProxy& Obj);

	// Type:   [dispid 102]
	MsoDiagramType Type();

	// AutoLayout:   [dispid 103]
	MsoTriState AutoLayout();

	// AutoLayout:   [dispid 103]
	void AutoLayout(MsoTriState arg0);

	// Reverse:   [dispid 104]
	MsoTriState Reverse();

	// Reverse:   [dispid 104]
	void Reverse(MsoTriState arg0);

	// AutoFormat:   [dispid 105]
	MsoTriState AutoFormat();

	// AutoFormat:   [dispid 105]
	void AutoFormat(MsoTriState arg0);

	// Convert:   [dispid 10]
	void Convert(MsoDiagramType Type);

	// FitText:   [dispid 11]
	void FitText();
};
#endif

// WdInlineShapeType
typedef enum tagWdInlineShapeType
{
	wdInlineShapeEmbeddedOLEObject = 1, 
	wdInlineShapeLinkedOLEObject = 2, 
	wdInlineShapePicture = 3, 
	wdInlineShapeLinkedPicture = 4, 
	wdInlineShapeOLEControlObject = 5, 
	wdInlineShapeHorizontalLine = 6, 
	wdInlineShapePictureHorizontalLine = 7, 
	wdInlineShapeLinkedPictureHorizontalLine = 8, 
	wdInlineShapePictureBullet = 9, 
	wdInlineShapeScriptAnchor = 10, 
	wdInlineShapeOWSAnchor = 11, 
} WdInlineShapeType;

// InlineShape
// {000209A8-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE InlineShape
DECLARE_INTERFACE_(InlineShape, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// InlineShape methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Borders) (THIS_ Borders** prop) PURE; 
	STDMETHOD_(HRESULT, Set_Borders) (THIS_ Borders* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Range) (THIS_ WordRange** prop) PURE; 
	STDMETHOD_(HRESULT, Get_LinkFormat) (THIS_ LinkFormat** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Field) (THIS_ Field** prop) PURE; 
	STDMETHOD_(HRESULT, Get_OLEFormat) (THIS_ OLEFormat** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Type) (THIS_ WdInlineShapeType* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Hyperlink) (THIS_ Hyperlink** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Height) (THIS_ float* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Height) (THIS_ float prop) PURE; 
	STDMETHOD_(HRESULT, Get_Width) (THIS_ float* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Width) (THIS_ float prop) PURE; 
	STDMETHOD_(HRESULT, Get_ScaleHeight) (THIS_ float* prop) PURE; 
	STDMETHOD_(HRESULT, Set_ScaleHeight) (THIS_ float prop) PURE; 
	STDMETHOD_(HRESULT, Get_ScaleWidth) (THIS_ float* prop) PURE; 
	STDMETHOD_(HRESULT, Set_ScaleWidth) (THIS_ float prop) PURE; 
	STDMETHOD_(HRESULT, Get_LockAspectRatio) (THIS_ MsoTriState* prop) PURE; 
	STDMETHOD_(HRESULT, Set_LockAspectRatio) (THIS_ MsoTriState prop) PURE; 
	STDMETHOD_(HRESULT, Get_Line) (THIS_ LineFormat** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Fill) (THIS_ FillFormat** prop) PURE; 
	STDMETHOD_(HRESULT, Get_PictureFormat) (THIS_ PictureFormat** prop) PURE; 
	STDMETHOD_(HRESULT, Set_PictureFormat) (THIS_ PictureFormat* prop) PURE; 
	STDMETHOD_(HRESULT, Activate) (THIS ) PURE; 
	STDMETHOD_(HRESULT, Reset) (THIS ) PURE; 
	STDMETHOD_(HRESULT, Delete) (THIS ) PURE; 
	STDMETHOD_(HRESULT, Select) (THIS ) PURE; 
	STDMETHOD_(HRESULT, ConvertToShape) (THIS_ WordShape** prop) PURE; 
	STDMETHOD_(HRESULT, Get_HorizontalLineFormat) (THIS_ HorizontalLineFormat** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Script) (THIS_ Script** prop) PURE; 
	STDMETHOD_(HRESULT, Get_OWSAnchor) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_TextEffect) (THIS_ TextEffectFormat** prop) PURE; 
	STDMETHOD_(HRESULT, Set_TextEffect) (THIS_ TextEffectFormat* prop) PURE; 
	STDMETHOD_(HRESULT, Get_AlternativeText) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Set_AlternativeText) (THIS_ BSTR prop) PURE; 
	STDMETHOD_(HRESULT, Get_IsPictureBullet) (THIS_ VARIANT_BOOL* prop) PURE; 
};
typedef InlineShape* LPNLINESHAPE;
#ifdef __cplusplus
// InlineShape  {000209A8-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TInlineShapeProxy : public __OCF TAutoProxy
{
public:
	TInlineShapeProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// _Borders:   [dispid 1100]
	void _Borders(TBordersProxy& Obj);

	// _Borders:   [dispid 1100]
	void _Borders(Borders* arg0);

	// _Range:   [dispid 2]
	void _Range(TRangeProxy& Obj);

	// _LinkFormat:   [dispid 3]
	void _LinkFormat(TLinkFormatProxy& Obj);

	// _Field:   [dispid 4]
	void _Field(TFieldProxy& Obj);

	// _OLEFormat:   [dispid 5]
	void _OLEFormat(TOLEFormatProxy& Obj);

	// Type:   [dispid 6]
	WdInlineShapeType Type();

	// _Hyperlink:   [dispid 7]
	void _Hyperlink(THyperlinkProxy& Obj);

	// Height:   [dispid 8]
	float Height();

	// Height:   [dispid 8]
	void Height(float arg0);

	// Width:   [dispid 9]
	float Width();

	// Width:   [dispid 9]
	void Width(float arg0);

	// ScaleHeight:   [dispid 10]
	float ScaleHeight();

	// ScaleHeight:   [dispid 10]
	void ScaleHeight(float arg0);

	// ScaleWidth:   [dispid 11]
	float ScaleWidth();

	// ScaleWidth:   [dispid 11]
	void ScaleWidth(float arg0);

	// LockAspectRatio:   [dispid 12]
	MsoTriState LockAspectRatio();

	// LockAspectRatio:   [dispid 12]
	void LockAspectRatio(MsoTriState arg0);

	// Line:   [dispid 112]
	void Line(TLineFormatProxy& Obj);

	// Fill:   [dispid 107]
	void Fill(TFillFormatProxy& Obj);

	// _PictureFormat:   [dispid 118]
	void _PictureFormat(TPictureFormatProxy& Obj);

	// _PictureFormat:   [dispid 118]
	void _PictureFormat(PictureFormat* arg0);

	// Activate:   [dispid 100]
	void Activate();

	// Reset:   [dispid 101]
	void Reset();

	// Delete:   [dispid 102]
	void Delete();

	// Select:   [dispid 65535]
	void Select();

	// ConvertToShape:   [dispid 104]
	void ConvertToShape(TShapeProxy& Obj);

	// _HorizontalLineFormat:   [dispid 119]
	void _HorizontalLineFormat(THorizontalLineFormatProxy& Obj);

	// _Script:   [dispid 122]
	void _Script(TScriptProxy& Obj);

	// OWSAnchor:   [dispid 130]
	long OWSAnchor();

	// TextEffect:   [dispid 120]
	void TextEffect(TTextEffectFormatProxy& Obj);

	// TextEffect:   [dispid 120]
	void TextEffect(TextEffectFormat* arg0);

	// AlternativeText:   [dispid 131]
	__OCF TAutoString AlternativeText();

	// AlternativeText:   [dispid 131]
	void AlternativeText(__OCF TAutoString arg0);

	// IsPictureBullet:   [dispid 132]
	/*__OWL*/ TBool IsPictureBullet();
};
#endif

// Language
// {0002096D-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE Language
DECLARE_INTERFACE_(Language, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// Language methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get_ID) (THIS_ WdLanguageID* prop) PURE; 
	STDMETHOD_(HRESULT, Get_NameLocal) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Name) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Get_ActiveGrammarDictionary) (THIS_ Dictionary** prop) PURE; 
	STDMETHOD_(HRESULT, Get_ActiveHyphenationDictionary) (THIS_ Dictionary** prop) PURE; 
	STDMETHOD_(HRESULT, Get_ActiveSpellingDictionary) (THIS_ Dictionary** prop) PURE; 
	STDMETHOD_(HRESULT, Get_ActiveThesaurusDictionary) (THIS_ Dictionary** prop) PURE; 
	STDMETHOD_(HRESULT, Get_DefaultWritingStyle) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Set_DefaultWritingStyle) (THIS_ BSTR prop) PURE; 
	STDMETHOD_(HRESULT, Get_WritingStyleList) (THIS_ VARIANT* prop) PURE; 
	STDMETHOD_(HRESULT, Get_SpellingDictionaryType) (THIS_ WdDictionaryType* prop) PURE; 
	STDMETHOD_(HRESULT, Set_SpellingDictionaryType) (THIS_ WdDictionaryType prop) PURE; 
};
typedef Language* LPANGUAGE;
#ifdef __cplusplus
// Language  {0002096D-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TLanguageProxy : public __OCF TAutoProxy
{
public:
	TLanguageProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// ID:   [dispid 10]
	WdLanguageID ID();

	// NameLocal:   [dispid 0]
	__OCF TAutoString NameLocal();

	// Name:   [dispid 12]
	__OCF TAutoString Name();

	// ActiveGrammarDictionary:   [dispid 13]
	void ActiveGrammarDictionary(TDictionaryProxy& Obj);

	// ActiveHyphenationDictionary:   [dispid 14]
	void ActiveHyphenationDictionary(TDictionaryProxy& Obj);

	// ActiveSpellingDictionary:   [dispid 15]
	void ActiveSpellingDictionary(TDictionaryProxy& Obj);

	// ActiveThesaurusDictionary:   [dispid 16]
	void ActiveThesaurusDictionary(TDictionaryProxy& Obj);

	// DefaultWritingStyle:   [dispid 17]
	__OCF TAutoString DefaultWritingStyle();

	// DefaultWritingStyle:   [dispid 17]
	void DefaultWritingStyle(__OCF TAutoString arg0);

	// WritingStyleList:   [dispid 18]
	__OCF TAutoVal WritingStyleList();

	// SpellingDictionaryType:   [dispid 19]
	WdDictionaryType SpellingDictionaryType();

	// SpellingDictionaryType:   [dispid 19]
	void SpellingDictionaryType(WdDictionaryType arg0);
};
#endif

// MsoArrowheadLength
typedef enum tagMsoArrowheadLength
{
	msoArrowheadLengthMixed = -2, 
	msoArrowheadShort = 1, 
	msoArrowheadLengthMedium = 2, 
	msoArrowheadLong = 3, 
} MsoArrowheadLength;

// MsoArrowheadStyle
typedef enum tagMsoArrowheadStyle
{
	msoArrowheadStyleMixed = -2, 
	msoArrowheadNone = 1, 
	msoArrowheadTriangle = 2, 
	msoArrowheadOpen = 3, 
	msoArrowheadStealth = 4, 
	msoArrowheadDiamond = 5, 
	msoArrowheadOval = 6, 
} MsoArrowheadStyle;

// MsoArrowheadWidth
typedef enum tagMsoArrowheadWidth
{
	msoArrowheadWidthMixed = -2, 
	msoArrowheadNarrow = 1, 
	msoArrowheadWidthMedium = 2, 
	msoArrowheadWide = 3, 
} MsoArrowheadWidth;

// MsoLineDashStyle
typedef enum tagMsoLineDashStyle
{
	msoLineDashStyleMixed = -2, 
	msoLineSolid = 1, 
	msoLineSquareDot = 2, 
	msoLineRoundDot = 3, 
	msoLineDash = 4, 
	msoLineDashDot = 5, 
	msoLineDashDotDot = 6, 
	msoLineLongDash = 7, 
	msoLineLongDashDot = 8, 
} MsoLineDashStyle;

// MsoLineStyle
typedef enum tagMsoLineStyle
{
	msoLineStyleMixed = -2, 
	msoLineSingle = 1, 
	msoLineThinThin = 2, 
	msoLineThinThick = 3, 
	msoLineThickThin = 4, 
	msoLineThickBetweenThin = 5, 
} MsoLineStyle;

// LineFormat
// {000209CA-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE LineFormat
DECLARE_INTERFACE_(LineFormat, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// LineFormat methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get_BackColor) (THIS_ ColorFormat** prop) PURE; 
	STDMETHOD_(HRESULT, Get_BeginArrowheadLength) (THIS_ MsoArrowheadLength* prop) PURE; 
	STDMETHOD_(HRESULT, Set_BeginArrowheadLength) (THIS_ MsoArrowheadLength prop) PURE; 
	STDMETHOD_(HRESULT, Get_BeginArrowheadStyle) (THIS_ MsoArrowheadStyle* prop) PURE; 
	STDMETHOD_(HRESULT, Set_BeginArrowheadStyle) (THIS_ MsoArrowheadStyle prop) PURE; 
	STDMETHOD_(HRESULT, Get_BeginArrowheadWidth) (THIS_ MsoArrowheadWidth* prop) PURE; 
	STDMETHOD_(HRESULT, Set_BeginArrowheadWidth) (THIS_ MsoArrowheadWidth prop) PURE; 
	STDMETHOD_(HRESULT, Get_DashStyle) (THIS_ MsoLineDashStyle* prop) PURE; 
	STDMETHOD_(HRESULT, Set_DashStyle) (THIS_ MsoLineDashStyle prop) PURE; 
	STDMETHOD_(HRESULT, Get_EndArrowheadLength) (THIS_ MsoArrowheadLength* prop) PURE; 
	STDMETHOD_(HRESULT, Set_EndArrowheadLength) (THIS_ MsoArrowheadLength prop) PURE; 
	STDMETHOD_(HRESULT, Get_EndArrowheadStyle) (THIS_ MsoArrowheadStyle* prop) PURE; 
	STDMETHOD_(HRESULT, Set_EndArrowheadStyle) (THIS_ MsoArrowheadStyle prop) PURE; 
	STDMETHOD_(HRESULT, Get_EndArrowheadWidth) (THIS_ MsoArrowheadWidth* prop) PURE; 
	STDMETHOD_(HRESULT, Set_EndArrowheadWidth) (THIS_ MsoArrowheadWidth prop) PURE; 
	STDMETHOD_(HRESULT, Get_ForeColor) (THIS_ ColorFormat** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Pattern) (THIS_ MsoPatternType* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Pattern) (THIS_ MsoPatternType prop) PURE; 
	STDMETHOD_(HRESULT, Get_Style) (THIS_ MsoLineStyle* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Style) (THIS_ MsoLineStyle prop) PURE; 
	STDMETHOD_(HRESULT, Get_Transparency) (THIS_ float* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Transparency) (THIS_ float prop) PURE; 
	STDMETHOD_(HRESULT, Get_Visible) (THIS_ MsoTriState* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Visible) (THIS_ MsoTriState prop) PURE; 
	STDMETHOD_(HRESULT, Get_Weight) (THIS_ float* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Weight) (THIS_ float prop) PURE; 
	STDMETHOD_(HRESULT, Get_InsetPen) (THIS_ MsoTriState* prop) PURE; 
	STDMETHOD_(HRESULT, Set_InsetPen) (THIS_ MsoTriState prop) PURE; 
};
typedef LineFormat* LPINEFORMAT;
#ifdef __cplusplus
// LineFormat  {000209CA-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TLineFormatProxy : public __OCF TAutoProxy
{
public:
	TLineFormatProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1]
	IDispatch* Parent();

	// BackColor:   [dispid 100]
	void BackColor(TColorFormatProxy& Obj);

	// BeginArrowheadLength:   [dispid 101]
	MsoArrowheadLength BeginArrowheadLength();

	// BeginArrowheadLength:   [dispid 101]
	void BeginArrowheadLength(MsoArrowheadLength arg0);

	// BeginArrowheadStyle:   [dispid 102]
	MsoArrowheadStyle BeginArrowheadStyle();

	// BeginArrowheadStyle:   [dispid 102]
	void BeginArrowheadStyle(MsoArrowheadStyle arg0);

	// BeginArrowheadWidth:   [dispid 103]
	MsoArrowheadWidth BeginArrowheadWidth();

	// BeginArrowheadWidth:   [dispid 103]
	void BeginArrowheadWidth(MsoArrowheadWidth arg0);

	// DashStyle:   [dispid 104]
	MsoLineDashStyle DashStyle();

	// DashStyle:   [dispid 104]
	void DashStyle(MsoLineDashStyle arg0);

	// EndArrowheadLength:   [dispid 105]
	MsoArrowheadLength EndArrowheadLength();

	// EndArrowheadLength:   [dispid 105]
	void EndArrowheadLength(MsoArrowheadLength arg0);

	// EndArrowheadStyle:   [dispid 106]
	MsoArrowheadStyle EndArrowheadStyle();

	// EndArrowheadStyle:   [dispid 106]
	void EndArrowheadStyle(MsoArrowheadStyle arg0);

	// EndArrowheadWidth:   [dispid 107]
	MsoArrowheadWidth EndArrowheadWidth();

	// EndArrowheadWidth:   [dispid 107]
	void EndArrowheadWidth(MsoArrowheadWidth arg0);

	// ForeColor:   [dispid 108]
	void ForeColor(TColorFormatProxy& Obj);

	// Pattern:   [dispid 109]
	MsoPatternType Pattern();

	// Pattern:   [dispid 109]
	void Pattern(MsoPatternType arg0);

	// _Style:   [dispid 110]
	MsoLineStyle _Style();

	// _Style:   [dispid 110]
	void _Style(MsoLineStyle arg0);

	// Transparency:   [dispid 111]
	float Transparency();

	// Transparency:   [dispid 111]
	void Transparency(float arg0);

	// Visible:   [dispid 112]
	MsoTriState Visible();

	// Visible:   [dispid 112]
	void Visible(MsoTriState arg0);

	// Weight:   [dispid 113]
	float Weight();

	// Weight:   [dispid 113]
	void Weight(float arg0);

	// InsetPen:   [dispid 114]
	MsoTriState InsetPen();

	// InsetPen:   [dispid 114]
	void InsetPen(MsoTriState arg0);
};
#endif

// LineNumbering
// {00020972-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE LineNumbering
DECLARE_INTERFACE_(LineNumbering, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// LineNumbering methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get_RestartMode) (THIS_ WdNumberingRule* prop) PURE; 
	STDMETHOD_(HRESULT, Set_RestartMode) (THIS_ WdNumberingRule prop) PURE; 
	STDMETHOD_(HRESULT, Get_StartingNumber) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Set_StartingNumber) (THIS_ long prop) PURE; 
	STDMETHOD_(HRESULT, Get_DistanceFromText) (THIS_ float* prop) PURE; 
	STDMETHOD_(HRESULT, Set_DistanceFromText) (THIS_ float prop) PURE; 
	STDMETHOD_(HRESULT, Get_CountBy) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Set_CountBy) (THIS_ long prop) PURE; 
	STDMETHOD_(HRESULT, Get_Active) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Active) (THIS_ long prop) PURE; 
};
typedef LineNumbering* LPINENUMBERING;
#ifdef __cplusplus
// LineNumbering  {00020972-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TLineNumberingProxy : public __OCF TAutoProxy
{
public:
	TLineNumberingProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// RestartMode:   [dispid 100]
	WdNumberingRule RestartMode();

	// RestartMode:   [dispid 100]
	void RestartMode(WdNumberingRule arg0);

	// StartingNumber:   [dispid 101]
	long StartingNumber();

	// StartingNumber:   [dispid 101]
	void StartingNumber(long arg0);

	// DistanceFromText:   [dispid 102]
	float DistanceFromText();

	// DistanceFromText:   [dispid 102]
	void DistanceFromText(float arg0);

	// CountBy:   [dispid 103]
	long CountBy();

	// CountBy:   [dispid 103]
	void CountBy(long arg0);

	// Active:   [dispid 104]
	long Active();

	// Active:   [dispid 104]
	void Active(long arg0);
};
#endif

// WdLinkType
typedef enum tagWdLinkType
{
	wdLinkTypeOLE = 0, 
	wdLinkTypePicture = 1, 
	wdLinkTypeText = 2, 
	wdLinkTypeReference = 3, 
	wdLinkTypeInclude = 4, 
	wdLinkTypeImport = 5, 
	wdLinkTypeDDE = 6, 
	wdLinkTypeDDEAuto = 7, 
} WdLinkType;

// LinkFormat
// {00020931-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE LinkFormat
DECLARE_INTERFACE_(LinkFormat, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// LinkFormat methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get_AutoUpdate) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_AutoUpdate) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_SourceName) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Get_SourcePath) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Locked) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Locked) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_Type) (THIS_ WdLinkType* prop) PURE; 
	STDMETHOD_(HRESULT, Get_SourceFullName) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Set_SourceFullName) (THIS_ BSTR prop) PURE; 
	STDMETHOD_(HRESULT, Get_SavePictureWithDocument) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_SavePictureWithDocument) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, BreakLink) (THIS ) PURE; 
	STDMETHOD_(HRESULT, Update) (THIS ) PURE; 
};
typedef LinkFormat* LPINKFORMAT;
#ifdef __cplusplus
// LinkFormat  {00020931-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TLinkFormatProxy : public __OCF TAutoProxy
{
public:
	TLinkFormatProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// AutoUpdate:   [dispid 1]
	/*__OWL*/ TBool AutoUpdate();

	// AutoUpdate:   [dispid 1]
	void AutoUpdate(/*__OWL*/ TBool arg0);

	// SourceName:   [dispid 4]
	__OCF TAutoString SourceName();

	// SourcePath:   [dispid 5]
	__OCF TAutoString SourcePath();

	// Locked:   [dispid 13]
	/*__OWL*/ TBool Locked();

	// Locked:   [dispid 13]
	void Locked(/*__OWL*/ TBool arg0);

	// Type:   [dispid 16]
	WdLinkType Type();

	// SourceFullName:   [dispid 21]
	__OCF TAutoString SourceFullName();

	// SourceFullName:   [dispid 21]
	void SourceFullName(__OCF TAutoString arg0);

	// SavePictureWithDocument:   [dispid 22]
	/*__OWL*/ TBool SavePictureWithDocument();

	// SavePictureWithDocument:   [dispid 22]
	void SavePictureWithDocument(/*__OWL*/ TBool arg0);

	// BreakLink:   [dispid 104]
	void BreakLink();

	// Update:   [dispid 105]
	void Update();
};
#endif

// WdListType
typedef enum tagWdListType
{
	wdListNoNumbering = 0, 
	wdListListNumOnly = 1, 
	wdListBullet = 2, 
	wdListSimpleNumbering = 3, 
	wdListOutlineNumbering = 4, 
	wdListMixedNumbering = 5, 
	wdListPictureBullet = 6, 
} WdListType;

// WdContinue
typedef enum tagWdContinue
{
	wdContinueDisabled = 0, 
	wdResetList = 1, 
	wdContinueList = 2, 
} WdContinue;

// ListFormat
// {000209C0-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE ListFormat
DECLARE_INTERFACE_(ListFormat, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// ListFormat methods:
	STDMETHOD_(HRESULT, Get_ListLevelNumber) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Set_ListLevelNumber) (THIS_ long prop) PURE; 
	STDMETHOD_(HRESULT, Get_List) (THIS_ List** prop) PURE; 
	STDMETHOD_(HRESULT, Get_ListTemplate) (THIS_ ListTemplate** prop) PURE; 
	STDMETHOD_(HRESULT, Get_ListValue) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_SingleList) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Get_SingleListTemplate) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Get_ListType) (THIS_ WdListType* prop) PURE; 
	STDMETHOD_(HRESULT, Get_ListString) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, CanContinuePreviousList) (THIS_ ListTemplate* , WdContinue* prop) PURE; 
	STDMETHOD_(HRESULT, RemoveNumbers) (THIS_ VARIANT* NumberType) PURE; 
	STDMETHOD_(HRESULT, ConvertNumbersToText) (THIS_ VARIANT* NumberType) PURE; 
	STDMETHOD_(HRESULT, CountNumberedItems) (THIS_ VARIANT* NumberType, VARIANT* Level, long* prop) PURE; 
	STDMETHOD_(HRESULT, ApplyBulletDefaultOld) (THIS ) PURE; 
	STDMETHOD_(HRESULT, ApplyNumberDefaultOld) (THIS ) PURE; 
	STDMETHOD_(HRESULT, ApplyOutlineNumberDefaultOld) (THIS ) PURE; 
	STDMETHOD_(HRESULT, ApplyListTemplateOld) (THIS_ ListTemplate* , VARIANT* ContinuePreviousList, VARIANT* ApplyTo) PURE; 
	STDMETHOD_(HRESULT, ListOutdent) (THIS ) PURE; 
	STDMETHOD_(HRESULT, ListIndent) (THIS ) PURE; 
	STDMETHOD_(HRESULT, ApplyBulletDefault) (THIS_ VARIANT* DefaultListBehavior) PURE; 
	STDMETHOD_(HRESULT, ApplyNumberDefault) (THIS_ VARIANT* DefaultListBehavior) PURE; 
	STDMETHOD_(HRESULT, ApplyOutlineNumberDefault) (THIS_ VARIANT* DefaultListBehavior) PURE; 
	STDMETHOD_(HRESULT, ApplyListTemplate) (THIS_ ListTemplate* , VARIANT* ContinuePreviousList, VARIANT* ApplyTo, VARIANT* DefaultListBehavior) PURE; 
	STDMETHOD_(HRESULT, Get_ListPictureBullet) (THIS_ InlineShape** prop) PURE; 
};
typedef ListFormat* LPISTFORMAT;
#ifdef __cplusplus
// ListFormat  {000209C0-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TListFormatProxy : public __OCF TAutoProxy
{
public:
	TListFormatProxy() : TAutoProxy(0x0) {}

	// ListLevelNumber:   [dispid 68]
	long ListLevelNumber();

	// ListLevelNumber:   [dispid 68]
	void ListLevelNumber(long arg0);

	// _List:   [dispid 69]
	void _List(TListProxy& Obj);

	// _ListTemplate:   [dispid 70]
	void _ListTemplate(TListTemplateProxy& Obj);

	// ListValue:   [dispid 71]
	long ListValue();

	// SingleList:   [dispid 72]
	/*__OWL*/ TBool SingleList();

	// SingleListTemplate:   [dispid 73]
	/*__OWL*/ TBool SingleListTemplate();

	// ListType:   [dispid 74]
	WdListType ListType();

	// ListString:   [dispid 75]
	__OCF TAutoString ListString();

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// CanContinuePreviousList:   [dispid 184]
	WdContinue CanContinuePreviousList(ListTemplate* arg0);

	// RemoveNumbers:   [dispid 185]
	void RemoveNumbers(__OCF TAutoVal* NumberType = 0);

	// ConvertNumbersToText:   [dispid 186]
	void ConvertNumbersToText(__OCF TAutoVal* NumberType = 0);

	// CountNumberedItems:   [dispid 187]
	long CountNumberedItems(__OCF TAutoVal* NumberType = 0, __OCF TAutoVal* Level = 0);

	// ApplyBulletDefaultOld:   [dispid 188]
	void ApplyBulletDefaultOld();

	// ApplyNumberDefaultOld:   [dispid 189]
	void ApplyNumberDefaultOld();

	// ApplyOutlineNumberDefaultOld:   [dispid 190]
	void ApplyOutlineNumberDefaultOld();

	// ApplyListTemplateOld:   [dispid 191]
	void ApplyListTemplateOld(ListTemplate* arg0, __OCF TAutoVal* ContinuePreviousList = 0, __OCF TAutoVal* ApplyTo = 0);

	// ListOutdent:   [dispid 210]
	void ListOutdent();

	// ListIndent:   [dispid 211]
	void ListIndent();

	// ApplyBulletDefault:   [dispid 212]
	void ApplyBulletDefault(__OCF TAutoVal* DefaultListBehavior = 0);

	// ApplyNumberDefault:   [dispid 213]
	void ApplyNumberDefault(__OCF TAutoVal* DefaultListBehavior = 0);

	// ApplyOutlineNumberDefault:   [dispid 214]
	void ApplyOutlineNumberDefault(__OCF TAutoVal* DefaultListBehavior = 0);

	// ApplyListTemplate:   [dispid 215]
	void ApplyListTemplate(ListTemplate* arg0, __OCF TAutoVal* ContinuePreviousList = 0, __OCF TAutoVal* ApplyTo = 0, __OCF TAutoVal* DefaultListBehavior = 0);

	// ListPictureBullet:   [dispid 76]
	void ListPictureBullet(TInlineShapeProxy& Obj);
};
#endif

// List
// {00020992-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE List
DECLARE_INTERFACE_(List, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// List methods:
	STDMETHOD_(HRESULT, Get_Range) (THIS_ WordRange** prop) PURE; 
	STDMETHOD_(HRESULT, Get_ListParagraphs) (THIS_ ListParagraphs** prop) PURE; 
	STDMETHOD_(HRESULT, Get_SingleListTemplate) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, ConvertNumbersToText) (THIS_ VARIANT* NumberType) PURE; 
	STDMETHOD_(HRESULT, RemoveNumbers) (THIS_ VARIANT* NumberType) PURE; 
	STDMETHOD_(HRESULT, CountNumberedItems) (THIS_ VARIANT* NumberType, VARIANT* Level, long* prop) PURE; 
	STDMETHOD_(HRESULT, ApplyListTemplateOld) (THIS_ ListTemplate* , VARIANT* ContinuePreviousList) PURE; 
	STDMETHOD_(HRESULT, CanContinuePreviousList) (THIS_ ListTemplate* , WdContinue* prop) PURE; 
	STDMETHOD_(HRESULT, ApplyListTemplate) (THIS_ ListTemplate* , VARIANT* ContinuePreviousList, VARIANT* DefaultListBehavior) PURE; 
	STDMETHOD_(HRESULT, Get_StyleName) (THIS_ BSTR* prop) PURE; 
};
typedef List* LPIST;
#ifdef __cplusplus
// List  {00020992-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TListProxy : public __OCF TAutoProxy
{
public:
	TListProxy() : TAutoProxy(0x0) {}

	// _Range:   [dispid 1]
	void _Range(TRangeProxy& Obj);

	// _ListParagraphs:   [dispid 2]
	void _ListParagraphs(TListParagraphsProxy& Obj);

	// SingleListTemplate:   [dispid 3]
	/*__OWL*/ TBool SingleListTemplate();

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// ConvertNumbersToText:   [dispid 101]
	void ConvertNumbersToText(__OCF TAutoVal* NumberType = 0);

	// RemoveNumbers:   [dispid 102]
	void RemoveNumbers(__OCF TAutoVal* NumberType = 0);

	// CountNumberedItems:   [dispid 103]
	long CountNumberedItems(__OCF TAutoVal* NumberType = 0, __OCF TAutoVal* Level = 0);

	// ApplyListTemplateOld:   [dispid 104]
	void ApplyListTemplateOld(ListTemplate* arg0, __OCF TAutoVal* ContinuePreviousList = 0);

	// CanContinuePreviousList:   [dispid 105]
	WdContinue CanContinuePreviousList(ListTemplate* arg0);

	// ApplyListTemplate:   [dispid 106]
	void ApplyListTemplate(ListTemplate* arg0, __OCF TAutoVal* ContinuePreviousList = 0, __OCF TAutoVal* DefaultListBehavior = 0);

	// StyleName:   [dispid 4]
	__OCF TAutoString StyleName();
};
#endif

// ListTemplate
// {0002098F-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE ListTemplate
DECLARE_INTERFACE_(ListTemplate, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// ListTemplate methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get_OutlineNumbered) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_OutlineNumbered) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_Name) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Name) (THIS_ BSTR prop) PURE; 
	STDMETHOD_(HRESULT, Get_ListLevels) (THIS_ ListLevels** prop) PURE; 
	STDMETHOD_(HRESULT, Convert) (THIS_ VARIANT* Level, ListTemplate** prop) PURE; 
};
typedef ListTemplate* LPISTTEMPLATE;
#ifdef __cplusplus
// ListTemplate  {0002098F-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TListTemplateProxy : public __OCF TAutoProxy
{
public:
	TListTemplateProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// OutlineNumbered:   [dispid 1]
	/*__OWL*/ TBool OutlineNumbered();

	// OutlineNumbered:   [dispid 1]
	void OutlineNumbered(/*__OWL*/ TBool arg0);

	// Name:   [dispid 3]
	__OCF TAutoString Name();

	// Name:   [dispid 3]
	void Name(__OCF TAutoString arg0);

	// _ListLevels:   [dispid 2]
	void _ListLevels(TListLevelsProxy& Obj);

	// Convert:   [dispid 101]
	void Convert(TListTemplateProxy& Obj, __OCF TAutoVal* Level = 0);
};
#endif

// WdMailMergeDataSource
typedef enum tagWdMailMergeDataSource
{
	wdNoMergeInfo = -1, 
	wdMergeInfoFromWord = 0, 
	wdMergeInfoFromAccessDDE = 1, 
	wdMergeInfoFromExcelDDE = 2, 
	wdMergeInfoFromMSQueryDDE = 3, 
	wdMergeInfoFromODBC = 4, 
	wdMergeInfoFromODSO = 5, 
} WdMailMergeDataSource;

// WdMailMergeActiveRecord
typedef enum tagWdMailMergeActiveRecord
{
	wdNoActiveRecord = -1, 
	wdNextRecord = -2, 
	wdPreviousRecord = -3, 
	wdFirstRecord = -4, 
	wdLastRecord = -5, 
	wdFirstDataSourceRecord = -6, 
	wdLastDataSourceRecord = -7, 
	wdNextDataSourceRecord = -8, 
	wdPreviousDataSourceRecord = -9, 
} WdMailMergeActiveRecord;

// MailMergeDataSource
// {0002091D-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE MailMergeDataSource
DECLARE_INTERFACE_(MailMergeDataSource, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// MailMergeDataSource methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Name) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Get_HeaderSourceName) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Type) (THIS_ WdMailMergeDataSource* prop) PURE; 
	STDMETHOD_(HRESULT, Get_HeaderSourceType) (THIS_ WdMailMergeDataSource* prop) PURE; 
	STDMETHOD_(HRESULT, Get_ConnectString) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Get_QueryString) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Set_QueryString) (THIS_ BSTR prop) PURE; 
	STDMETHOD_(HRESULT, Get_ActiveRecord) (THIS_ WdMailMergeActiveRecord* prop) PURE; 
	STDMETHOD_(HRESULT, Set_ActiveRecord) (THIS_ WdMailMergeActiveRecord prop) PURE; 
	STDMETHOD_(HRESULT, Get_FirstRecord) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Set_FirstRecord) (THIS_ long prop) PURE; 
	STDMETHOD_(HRESULT, Get_LastRecord) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Set_LastRecord) (THIS_ long prop) PURE; 
	STDMETHOD_(HRESULT, Get_FieldNames) (THIS_ MailMergeFieldNames** prop) PURE; 
	STDMETHOD_(HRESULT, Get_DataFields) (THIS_ MailMergeDataFields** prop) PURE; 
	STDMETHOD_(HRESULT, FindRecord2000) (THIS_ BSTR FindText, BSTR , VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Get_RecordCount) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Included) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Included) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_InvalidAddress) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_InvalidAddress) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_InvalidComments) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Set_InvalidComments) (THIS_ BSTR prop) PURE; 
	STDMETHOD_(HRESULT, Get_MappedDataFields) (THIS_ MappedDataFields** prop) PURE; 
	STDMETHOD_(HRESULT, Get_TableName) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, FindRecord) (THIS_ BSTR FindText, VARIANT* , VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, SetAllIncludedFlags) (THIS_ VARIANT_BOOL Included) PURE; 
	STDMETHOD_(HRESULT, SetAllErrorFlags) (THIS_ VARIANT_BOOL Invalid, BSTR InvalidComment) PURE; 
	STDMETHOD_(HRESULT, Close) (THIS ) PURE; 
};
typedef MailMergeDataSource* LPAILMERGEDATASOURCE;
#ifdef __cplusplus
// MailMergeDataSource  {0002091D-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TMailMergeDataSourceProxy : public __OCF TAutoProxy
{
public:
	TMailMergeDataSourceProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// Name:   [dispid 1]
	__OCF TAutoString Name();

	// HeaderSourceName:   [dispid 2]
	__OCF TAutoString HeaderSourceName();

	// Type:   [dispid 3]
	WdMailMergeDataSource Type();

	// HeaderSourceType:   [dispid 4]
	WdMailMergeDataSource HeaderSourceType();

	// ConnectString:   [dispid 5]
	__OCF TAutoString ConnectString();

	// QueryString:   [dispid 6]
	__OCF TAutoString QueryString();

	// QueryString:   [dispid 6]
	void QueryString(__OCF TAutoString arg0);

	// ActiveRecord:   [dispid 7]
	WdMailMergeActiveRecord ActiveRecord();

	// ActiveRecord:   [dispid 7]
	void ActiveRecord(WdMailMergeActiveRecord arg0);

	// FirstRecord:   [dispid 8]
	long FirstRecord();

	// FirstRecord:   [dispid 8]
	void FirstRecord(long arg0);

	// LastRecord:   [dispid 9]
	long LastRecord();

	// LastRecord:   [dispid 9]
	void LastRecord(long arg0);

	// FieldNames:   [dispid 10]
	void FieldNames(TMailMergeFieldNamesProxy& Obj);

	// DataFields:   [dispid 11]
	void DataFields(TMailMergeDataFieldsProxy& Obj);

	// FindRecord2000:   [dispid 101]
	/*__OWL*/ TBool FindRecord2000(__OCF TAutoString FindText, __OCF TAutoString arg1);

	// RecordCount:   [dispid 12]
	long RecordCount();

	// Included:   [dispid 13]
	/*__OWL*/ TBool Included();

	// Included:   [dispid 13]
	void Included(/*__OWL*/ TBool arg0);

	// InvalidAddress:   [dispid 14]
	/*__OWL*/ TBool InvalidAddress();

	// InvalidAddress:   [dispid 14]
	void InvalidAddress(/*__OWL*/ TBool arg0);

	// InvalidComments:   [dispid 15]
	__OCF TAutoString InvalidComments();

	// InvalidComments:   [dispid 15]
	void InvalidComments(__OCF TAutoString arg0);

	// _MappedDataFields:   [dispid 16]
	void _MappedDataFields(TMappedDataFieldsProxy& Obj);

	// TableName:   [dispid 17]
	__OCF TAutoString TableName();

	// FindRecord:   [dispid 102]
	/*__OWL*/ TBool FindRecord(__OCF TAutoString FindText, __OCF TAutoVal* arg1 = 0);

	// SetAllIncludedFlags:   [dispid 103]
	void SetAllIncludedFlags(/*__OWL*/ TBool Included);

	// SetAllErrorFlags:   [dispid 104]
	void SetAllErrorFlags(/*__OWL*/ TBool Invalid, __OCF TAutoString InvalidComment);

	// Close:   [dispid 105]
	void Close();
};
#endif

// MailMergeFieldNames
// {0002091C-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE MailMergeFieldNames
DECLARE_INTERFACE_(MailMergeFieldNames, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// MailMergeFieldNames methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get__NewEnum) (THIS_ IUnknown** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Count) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Item) (THIS_ VARIANT* , MailMergeFieldName** prop) PURE; 
};
typedef MailMergeFieldNames* LPAILMERGEFIELDNAMES;
#ifdef __cplusplus
// MailMergeFieldNames  {0002091C-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TMailMergeFieldNamesProxy : public __OCF TAutoProxy
{
public:
	TMailMergeFieldNamesProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// _NewEnum:   [dispid -4]
	void _NewEnum(__OCF TAutoEnumerator<IUnknown*>& Obj);

	// Count:   [dispid 1]
	long Count();

	// Item:   [dispid 0]
	void Item(TMailMergeFieldNameProxy& Obj, __OCF TAutoVal* arg0);
};
#endif

// WdMailMergeComparison
typedef enum tagWdMailMergeComparison
{
	wdMergeIfEqual = 0, 
	wdMergeIfNotEqual = 1, 
	wdMergeIfLessThan = 2, 
	wdMergeIfGreaterThan = 3, 
	wdMergeIfLessThanOrEqual = 4, 
	wdMergeIfGreaterThanOrEqual = 5, 
	wdMergeIfIsBlank = 6, 
	wdMergeIfIsNotBlank = 7, 
} WdMailMergeComparison;

// MailMergeFields
// {0002091F-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE MailMergeFields
DECLARE_INTERFACE_(MailMergeFields, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// MailMergeFields methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get__NewEnum) (THIS_ IUnknown** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Count) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Item) (THIS_ long , MailMergeField** prop) PURE; 
	STDMETHOD_(HRESULT, Add) (THIS_ WordRange* , BSTR Name, MailMergeField** prop) PURE; 
	STDMETHOD_(HRESULT, AddAsk) (THIS_ WordRange* , BSTR Name, VARIANT* Prompt, VARIANT* DefaultAskText, VARIANT* AskOnce, MailMergeField** prop) PURE; 
	STDMETHOD_(HRESULT, AddFillIn) (THIS_ WordRange* , VARIANT* Prompt, VARIANT* DefaultFillInText, VARIANT* AskOnce, MailMergeField** prop) PURE; 
	STDMETHOD_(HRESULT, AddIf) (THIS_ WordRange* , BSTR MergeField, WdMailMergeComparison Comparison, VARIANT* CompareTo, VARIANT* TrueAutoText, VARIANT* TrueText, VARIANT* FalseAutoText, VARIANT* FalseText, MailMergeField** prop) PURE; 
	STDMETHOD_(HRESULT, AddMergeRec) (THIS_ WordRange* , MailMergeField** prop) PURE; 
	STDMETHOD_(HRESULT, AddMergeSeq) (THIS_ WordRange* , MailMergeField** prop) PURE; 
	STDMETHOD_(HRESULT, AddNext) (THIS_ WordRange* , MailMergeField** prop) PURE; 
	STDMETHOD_(HRESULT, AddNextIf) (THIS_ WordRange* , BSTR MergeField, WdMailMergeComparison Comparison, VARIANT* CompareTo, MailMergeField** prop) PURE; 
	STDMETHOD_(HRESULT, AddSet) (THIS_ WordRange* , BSTR Name, VARIANT* ValueText, VARIANT* ValueAutoText, MailMergeField** prop) PURE; 
	STDMETHOD_(HRESULT, AddSkipIf) (THIS_ WordRange* , BSTR MergeField, WdMailMergeComparison Comparison, VARIANT* CompareTo, MailMergeField** prop) PURE; 
};
typedef MailMergeFields* LPAILMERGEFIELDS;
#ifdef __cplusplus
// MailMergeFields  {0002091F-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TMailMergeFieldsProxy : public __OCF TAutoProxy
{
public:
	TMailMergeFieldsProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// _NewEnum:   [dispid -4]
	void _NewEnum(__OCF TAutoEnumerator<IUnknown*>& Obj);

	// Count:   [dispid 1]
	long Count();

	// Item:   [dispid 0]
	void Item(TMailMergeFieldProxy& Obj, long arg0);

	// Add:   [dispid 101]
	void Add(TMailMergeFieldProxy& Obj, WordRange* arg0, __OCF TAutoString Name);

	// AddAsk:   [dispid 102]
	void AddAsk(TMailMergeFieldProxy& Obj, WordRange* arg0, __OCF TAutoString Name, __OCF TAutoVal* Prompt = 0, __OCF TAutoVal* DefaultAskText = 0, __OCF TAutoVal* AskOnce = 0);

	// AddFillIn:   [dispid 103]
	void AddFillIn(TMailMergeFieldProxy& Obj, WordRange* arg0, __OCF TAutoVal* Prompt = 0, __OCF TAutoVal* DefaultFillInText = 0, __OCF TAutoVal* AskOnce = 0);

	// AddIf:   [dispid 104]
	void AddIf(TMailMergeFieldProxy& Obj, WordRange* arg0, __OCF TAutoString MergeField, WdMailMergeComparison Comparison, __OCF TAutoVal* CompareTo = 0, __OCF TAutoVal* TrueAutoText = 0, __OCF TAutoVal* TrueText = 0, __OCF TAutoVal* FalseAutoText = 0, __OCF TAutoVal* FalseText = 0);

	// AddMergeRec:   [dispid 105]
	void AddMergeRec(TMailMergeFieldProxy& Obj, WordRange* arg0);

	// AddMergeSeq:   [dispid 106]
	void AddMergeSeq(TMailMergeFieldProxy& Obj, WordRange* arg0);

	// AddNext:   [dispid 107]
	void AddNext(TMailMergeFieldProxy& Obj, WordRange* arg0);

	// AddNextIf:   [dispid 108]
	void AddNextIf(TMailMergeFieldProxy& Obj, WordRange* arg0, __OCF TAutoString MergeField, WdMailMergeComparison Comparison, __OCF TAutoVal* CompareTo = 0);

	// AddSet:   [dispid 109]
	void AddSet(TMailMergeFieldProxy& Obj, WordRange* arg0, __OCF TAutoString Name, __OCF TAutoVal* ValueText = 0, __OCF TAutoVal* ValueAutoText = 0);

	// AddSkipIf:   [dispid 110]
	void AddSkipIf(TMailMergeFieldProxy& Obj, WordRange* arg0, __OCF TAutoString MergeField, WdMailMergeComparison Comparison, __OCF TAutoVal* CompareTo = 0);
};
#endif

// WdMappedDataFields
typedef enum tagWdMappedDataFields
{
	wdUniqueIdentifier = 1, 
	wdCourtesyTitle = 2, 
	wdFirstName = 3, 
	wdMiddleName = 4, 
	wdLastName = 5, 
	wdSuffix = 6, 
	wdNickname = 7, 
	wdJobTitle = 8, 
	wdCompany = 9, 
	wdAddress1 = 10, 
	wdAddress2 = 11, 
	wdCity = 12, 
	wdState = 13, 
	wdPostalCode = 14, 
	wdCountryRegion = 15, 
	wdBusinessPhone = 16, 
	wdBusinessFax = 17, 
	wdHomePhone = 18, 
	wdHomeFax = 19, 
	wdEmailAddress = 20, 
	wdWebPageURL = 21, 
	wdSpouseCourtesyTitle = 22, 
	wdSpouseFirstName = 23, 
	wdSpouseMiddleName = 24, 
	wdSpouseLastName = 25, 
	wdSpouseNickname = 26, 
	wdRubyFirstName = 27, 
	wdRubyLastName = 28, 
	wdAddress3 = 29, 
	wdDepartment = 30, 
} WdMappedDataFields;

// MappedDataFields
// {799A6814-EA41-11D3-87CC-00105AA31A34}
#undef INTERFACE
#define INTERFACE MappedDataFields
DECLARE_INTERFACE_(MappedDataFields, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// MappedDataFields methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Count) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get__NewEnum) (THIS_ IUnknown** prop) PURE; 
	STDMETHOD_(HRESULT, Item) (THIS_ WdMappedDataFields , MappedDataField** prop) PURE; 
};
typedef MappedDataFields* LPAPPEDDATAFIELDS;
#ifdef __cplusplus
// MappedDataFields  {799A6814-EA41-11D3-87CC-00105AA31A34}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TMappedDataFieldsProxy : public __OCF TAutoProxy
{
public:
	TMappedDataFieldsProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// Count:   [dispid 1]
	long Count();

	// _NewEnum:   [dispid -4]
	void _NewEnum(__OCF TAutoEnumerator<IUnknown*>& Obj);

	// Item:   [dispid 0]
	void Item(TMappedDataFieldProxy& Obj, WdMappedDataFields arg0);
};
#endif

// OLEFormat
// {00020933-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE OLEFormat
DECLARE_INTERFACE_(OLEFormat, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// OLEFormat methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get_ClassType) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Set_ClassType) (THIS_ BSTR prop) PURE; 
	STDMETHOD_(HRESULT, Get_DisplayAsIcon) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_DisplayAsIcon) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_IconName) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Set_IconName) (THIS_ BSTR prop) PURE; 
	STDMETHOD_(HRESULT, Get_IconPath) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Get_IconIndex) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Set_IconIndex) (THIS_ long prop) PURE; 
	STDMETHOD_(HRESULT, Get_IconLabel) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Set_IconLabel) (THIS_ BSTR prop) PURE; 
	STDMETHOD_(HRESULT, Get_Label) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Object) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get_ProgID) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Activate) (THIS ) PURE; 
	STDMETHOD_(HRESULT, Edit) (THIS ) PURE; 
	STDMETHOD_(HRESULT, Open) (THIS ) PURE; 
	STDMETHOD_(HRESULT, DoVerb) (THIS_ VARIANT* VerbIndex) PURE; 
	STDMETHOD_(HRESULT, ConvertTo) (THIS_ VARIANT* ClassType, VARIANT* DisplayAsIcon, VARIANT* IconFileName, VARIANT* IconIndex, VARIANT* IconLabel) PURE; 
	STDMETHOD_(HRESULT, ActivateAs) (THIS_ BSTR ClassType) PURE; 
	STDMETHOD_(HRESULT, Get_PreserveFormattingOnUpdate) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_PreserveFormattingOnUpdate) (THIS_ VARIANT_BOOL prop) PURE; 
};
typedef OLEFormat* LPLEFORMAT;
#ifdef __cplusplus
// OLEFormat  {00020933-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TOLEFormatProxy : public __OCF TAutoProxy
{
public:
	TOLEFormatProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// ClassType:   [dispid 2]
	__OCF TAutoString ClassType();

	// ClassType:   [dispid 2]
	void ClassType(__OCF TAutoString arg0);

	// DisplayAsIcon:   [dispid 3]
	/*__OWL*/ TBool DisplayAsIcon();

	// DisplayAsIcon:   [dispid 3]
	void DisplayAsIcon(/*__OWL*/ TBool arg0);

	// IconName:   [dispid 7]
	__OCF TAutoString IconName();

	// IconName:   [dispid 7]
	void IconName(__OCF TAutoString arg0);

	// IconPath:   [dispid 8]
	__OCF TAutoString IconPath();

	// IconIndex:   [dispid 9]
	long IconIndex();

	// IconIndex:   [dispid 9]
	void IconIndex(long arg0);

	// IconLabel:   [dispid 10]
	__OCF TAutoString IconLabel();

	// IconLabel:   [dispid 10]
	void IconLabel(__OCF TAutoString arg0);

	// Label:   [dispid 12]
	__OCF TAutoString Label();

	// Object:   [dispid 14]
	IDispatch* Object();

	// ProgID:   [dispid 22]
	__OCF TAutoString ProgID();

	// Activate:   [dispid 104]
	void Activate();

	// Edit:   [dispid 106]
	void Edit();

	// Open:   [dispid 107]
	void Open();

	// DoVerb:   [dispid 109]
	void DoVerb(__OCF TAutoVal* VerbIndex = 0);

	// ConvertTo:   [dispid 110]
	void ConvertTo(__OCF TAutoVal* ClassType = 0, __OCF TAutoVal* DisplayAsIcon = 0, __OCF TAutoVal* IconFileName = 0, __OCF TAutoVal* IconIndex = 0, __OCF TAutoVal* IconLabel = 0);

	// ActivateAs:   [dispid 111]
	void ActivateAs(__OCF TAutoString ClassType);

	// PreserveFormattingOnUpdate:   [dispid 112]
	/*__OWL*/ TBool PreserveFormattingOnUpdate();

	// PreserveFormattingOnUpdate:   [dispid 112]
	void PreserveFormattingOnUpdate(/*__OWL*/ TBool arg0);
};
#endif

// OtherCorrectionsException
// {000209E1-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE OtherCorrectionsException
DECLARE_INTERFACE_(OtherCorrectionsException, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// OtherCorrectionsException methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Index) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Name) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Delete) (THIS ) PURE; 
};
typedef OtherCorrectionsException* LPTHERCORRECTIONSEXCEPTION;
#ifdef __cplusplus
// OtherCorrectionsException  {000209E1-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TOtherCorrectionsExceptionProxy : public __OCF TAutoProxy
{
public:
	TOtherCorrectionsExceptionProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// _Index:   [dispid 1]
	long _Index();

	// Name:   [dispid 2]
	__OCF TAutoString Name();

	// Delete:   [dispid 101]
	void Delete();
};
#endif

// WdPageNumberStyle
typedef enum tagWdPageNumberStyle
{
	wdPageNumberStyleArabic = 0, 
	wdPageNumberStyleUppercaseRoman = 1, 
	wdPageNumberStyleLowercaseRoman = 2, 
	wdPageNumberStyleUppercaseLetter = 3, 
	wdPageNumberStyleLowercaseLetter = 4, 
	wdPageNumberStyleArabicFullWidth = 14, 
	wdPageNumberStyleKanji = 10, 
	wdPageNumberStyleKanjiDigit = 11, 
	wdPageNumberStyleKanjiTraditional = 16, 
	wdPageNumberStyleNumberInCircle = 18, 
	wdPageNumberStyleHanjaRead = 41, 
	wdPageNumberStyleHanjaReadDigit = 42, 
	wdPageNumberStyleTradChinNum1 = 33, 
	wdPageNumberStyleTradChinNum2 = 34, 
	wdPageNumberStyleSimpChinNum1 = 37, 
	wdPageNumberStyleSimpChinNum2 = 38, 
	wdPageNumberStyleHebrewLetter1 = 45, 
	wdPageNumberStyleArabicLetter1 = 46, 
	wdPageNumberStyleHebrewLetter2 = 47, 
	wdPageNumberStyleArabicLetter2 = 48, 
	wdPageNumberStyleHindiLetter1 = 49, 
	wdPageNumberStyleHindiLetter2 = 50, 
	wdPageNumberStyleHindiArabic = 51, 
	wdPageNumberStyleHindiCardinalText = 52, 
	wdPageNumberStyleThaiLetter = 53, 
	wdPageNumberStyleThaiArabic = 54, 
	wdPageNumberStyleThaiCardinalText = 55, 
	wdPageNumberStyleVietCardinalText = 56, 
	wdPageNumberStyleNumberInDash = 57, 
} WdPageNumberStyle;

// PageNumbers
// {00020986-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE PageNumbers
DECLARE_INTERFACE_(PageNumbers, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// PageNumbers methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get__NewEnum) (THIS_ IUnknown** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Count) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_NumberStyle) (THIS_ WdPageNumberStyle* prop) PURE; 
	STDMETHOD_(HRESULT, Set_NumberStyle) (THIS_ WdPageNumberStyle prop) PURE; 
	STDMETHOD_(HRESULT, Get_IncludeChapterNumber) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_IncludeChapterNumber) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_HeadingLevelForChapter) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Set_HeadingLevelForChapter) (THIS_ long prop) PURE; 
	STDMETHOD_(HRESULT, Get_ChapterPageSeparator) (THIS_ WdSeparatorType* prop) PURE; 
	STDMETHOD_(HRESULT, Set_ChapterPageSeparator) (THIS_ WdSeparatorType prop) PURE; 
	STDMETHOD_(HRESULT, Get_RestartNumberingAtSection) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_RestartNumberingAtSection) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_StartingNumber) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Set_StartingNumber) (THIS_ long prop) PURE; 
	STDMETHOD_(HRESULT, Get_ShowFirstPageNumber) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_ShowFirstPageNumber) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Item) (THIS_ long , PageNumber** prop) PURE; 
	STDMETHOD_(HRESULT, Add) (THIS_ VARIANT* PageNumberAlignment, VARIANT* FirstPage, PageNumber** prop) PURE; 
	STDMETHOD_(HRESULT, Get_DoubleQuote) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_DoubleQuote) (THIS_ VARIANT_BOOL prop) PURE; 
};
typedef PageNumbers* LPAGENUMBERS;
#ifdef __cplusplus
// PageNumbers  {00020986-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TPageNumbersProxy : public __OCF TAutoProxy
{
public:
	TPageNumbersProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// _NewEnum:   [dispid -4]
	void _NewEnum(__OCF TAutoEnumerator<IUnknown*>& Obj);

	// Count:   [dispid 1]
	long Count();

	// NumberStyle:   [dispid 2]
	WdPageNumberStyle NumberStyle();

	// NumberStyle:   [dispid 2]
	void NumberStyle(WdPageNumberStyle arg0);

	// IncludeChapterNumber:   [dispid 3]
	/*__OWL*/ TBool IncludeChapterNumber();

	// IncludeChapterNumber:   [dispid 3]
	void IncludeChapterNumber(/*__OWL*/ TBool arg0);

	// HeadingLevelForChapter:   [dispid 4]
	long HeadingLevelForChapter();

	// HeadingLevelForChapter:   [dispid 4]
	void HeadingLevelForChapter(long arg0);

	// ChapterPageSeparator:   [dispid 5]
	WdSeparatorType ChapterPageSeparator();

	// ChapterPageSeparator:   [dispid 5]
	void ChapterPageSeparator(WdSeparatorType arg0);

	// RestartNumberingAtSection:   [dispid 6]
	/*__OWL*/ TBool RestartNumberingAtSection();

	// RestartNumberingAtSection:   [dispid 6]
	void RestartNumberingAtSection(/*__OWL*/ TBool arg0);

	// StartingNumber:   [dispid 7]
	long StartingNumber();

	// StartingNumber:   [dispid 7]
	void StartingNumber(long arg0);

	// ShowFirstPageNumber:   [dispid 8]
	/*__OWL*/ TBool ShowFirstPageNumber();

	// ShowFirstPageNumber:   [dispid 8]
	void ShowFirstPageNumber(/*__OWL*/ TBool arg0);

	// Item:   [dispid 0]
	void Item(TPageNumberProxy& Obj, long arg0);

	// Add:   [dispid 101]
	void Add(TPageNumberProxy& Obj, __OCF TAutoVal* PageNumberAlignment = 0, __OCF TAutoVal* FirstPage = 0);

	// DoubleQuote:   [dispid 10]
	/*__OWL*/ TBool DoubleQuote();

	// DoubleQuote:   [dispid 10]
	void DoubleQuote(/*__OWL*/ TBool arg0);
};
#endif

// Pane
// {00020960-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE Pane
DECLARE_INTERFACE_(Pane, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// Pane methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Document) (THIS_ Document** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Selection) (THIS_ Selection** prop) PURE; 
	STDMETHOD_(HRESULT, Get_DisplayRulers) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_DisplayRulers) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_DisplayVerticalRuler) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_DisplayVerticalRuler) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_Zooms) (THIS_ Zooms** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Index) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_View) (THIS_ View** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Next) (THIS_ Pane** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Previous) (THIS_ Pane** prop) PURE; 
	STDMETHOD_(HRESULT, Get_HorizontalPercentScrolled) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Set_HorizontalPercentScrolled) (THIS_ long prop) PURE; 
	STDMETHOD_(HRESULT, Get_VerticalPercentScrolled) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Set_VerticalPercentScrolled) (THIS_ long prop) PURE; 
	STDMETHOD_(HRESULT, Get_MinimumFontSize) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Set_MinimumFontSize) (THIS_ long prop) PURE; 
	STDMETHOD_(HRESULT, Get_BrowseToWindow) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_BrowseToWindow) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_BrowseWidth) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Activate) (THIS ) PURE; 
	STDMETHOD_(HRESULT, Close) (THIS ) PURE; 
	STDMETHOD_(HRESULT, LargeScroll) (THIS_ VARIANT* Down, VARIANT* Up, VARIANT* ToRight, VARIANT* ToLeft) PURE; 
	STDMETHOD_(HRESULT, SmallScroll) (THIS_ VARIANT* Down, VARIANT* Up, VARIANT* ToRight, VARIANT* ToLeft) PURE; 
	STDMETHOD_(HRESULT, AutoScroll) (THIS_ long Velocity) PURE; 
	STDMETHOD_(HRESULT, PageScroll) (THIS_ VARIANT* Down, VARIANT* Up) PURE; 
	STDMETHOD_(HRESULT, NewFrameset) (THIS ) PURE;
	STDMETHOD_(HRESULT, TOCInFrameset) (THIS ) PURE; 
	STDMETHOD_(HRESULT, Get_Frameset) (THIS_ Frameset** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Pages) (THIS_ Pages** prop) PURE; 
};
typedef Pane* LPANE;
#ifdef __cplusplus
// Pane  {00020960-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TPaneProxy : public __OCF TAutoProxy
{
public:
	TPaneProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// _Document:   [dispid 1]
	Document* _Document();

	// _Selection:   [dispid 3]
	void _Selection(TSelectionProxy& Obj);

	// DisplayRulers:   [dispid 4]
	/*__OWL*/ TBool DisplayRulers();

	// DisplayRulers:   [dispid 4]
	void DisplayRulers(/*__OWL*/ TBool arg0);

	// DisplayVerticalRuler:   [dispid 5]
	/*__OWL*/ TBool DisplayVerticalRuler();

	// DisplayVerticalRuler:   [dispid 5]
	void DisplayVerticalRuler(/*__OWL*/ TBool arg0);

	// _Zooms:   [dispid 7]
	void _Zooms(TZoomsProxy& Obj);

	// _Index:   [dispid 9]
	long _Index();

	// _View:   [dispid 10]
	void _View(TViewProxy& Obj);

	// Next:   [dispid 11]
	void Next(TPaneProxy& Obj);

	// Previous:   [dispid 12]
	void Previous(TPaneProxy& Obj);

	// HorizontalPercentScrolled:   [dispid 13]
	long HorizontalPercentScrolled();

	// HorizontalPercentScrolled:   [dispid 13]
	void HorizontalPercentScrolled(long arg0);

	// VerticalPercentScrolled:   [dispid 14]
	long VerticalPercentScrolled();

	// VerticalPercentScrolled:   [dispid 14]
	void VerticalPercentScrolled(long arg0);

	// MinimumFontSize:   [dispid 15]
	long MinimumFontSize();

	// MinimumFontSize:   [dispid 15]
	void MinimumFontSize(long arg0);

	// BrowseToWindow:   [dispid 16]
	/*__OWL*/ TBool BrowseToWindow();

	// BrowseToWindow:   [dispid 16]
	void BrowseToWindow(/*__OWL*/ TBool arg0);

	// BrowseWidth:   [dispid 17]
	long BrowseWidth();

	// Activate:   [dispid 100]
	void Activate();

	// Close:   [dispid 101]
	void Close();

	// LargeScroll:   [dispid 102]
	void LargeScroll(__OCF TAutoVal* Down = 0, __OCF TAutoVal* Up = 0, __OCF TAutoVal* ToRight = 0, __OCF TAutoVal* ToLeft = 0);

	// SmallScroll:   [dispid 103]
	void SmallScroll(__OCF TAutoVal* Down = 0, __OCF TAutoVal* Up = 0, __OCF TAutoVal* ToRight = 0, __OCF TAutoVal* ToLeft = 0);

	// AutoScroll:   [dispid 104]
	void AutoScroll(long Velocity);

	// PageScroll:   [dispid 105]
	void PageScroll(__OCF TAutoVal* Down = 0, __OCF TAutoVal* Up = 0);

	// NewFrameset:   [dispid 106]
	void NewFrameset();

	// TOCInFrameset:   [dispid 107]
	void TOCInFrameset();

	// _Frameset:   [dispid 18]
	void _Frameset(TFramesetProxy& Obj);

	// _Pages:   [dispid 19]
	void _Pages(TPagesProxy& Obj);
};
#endif

// Panes
// {0002095F-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE Panes
DECLARE_INTERFACE_(Panes, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// Panes methods:
	STDMETHOD_(HRESULT, Get__NewEnum) (THIS_ IUnknown** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Count) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Item) (THIS_ long , Pane** prop) PURE; 
	STDMETHOD_(HRESULT, Add) (THIS_ VARIANT* SplitVertical, Pane** prop) PURE; 
};
typedef Panes* LPANES;
#ifdef __cplusplus
// Panes  {0002095F-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TPanesProxy : public __OCF TAutoProxy
{
public:
	TPanesProxy() : TAutoProxy(0x0) {}

	// _NewEnum:   [dispid -4]
	void _NewEnum(__OCF TAutoEnumerator<IUnknown*>& Obj);

	// Count:   [dispid 2]
	long Count();

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// Item:   [dispid 0]
	void Item(TPaneProxy& Obj, long arg0);

	// Add:   [dispid 3]
	void Add(TPaneProxy& Obj, __OCF TAutoVal* SplitVertical = 0);
};
#endif

// MsoPictureColorType
typedef enum tagMsoPictureColorType
{
	msoPictureMixed = -2, 
	msoPictureAutomatic = 1, 
	msoPictureGrayscale = 2, 
	msoPictureBlackAndWhite = 3, 
	msoPictureWatermark = 4, 
} MsoPictureColorType;

// PictureFormat
// {000209CB-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE PictureFormat
DECLARE_INTERFACE_(PictureFormat, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// PictureFormat methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Brightness) (THIS_ float* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Brightness) (THIS_ float prop) PURE; 
	STDMETHOD_(HRESULT, Get_ColorType) (THIS_ MsoPictureColorType* prop) PURE; 
	STDMETHOD_(HRESULT, Set_ColorType) (THIS_ MsoPictureColorType prop) PURE; 
	STDMETHOD_(HRESULT, Get_Contrast) (THIS_ float* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Contrast) (THIS_ float prop) PURE; 
	STDMETHOD_(HRESULT, Get_CropBottom) (THIS_ float* prop) PURE; 
	STDMETHOD_(HRESULT, Set_CropBottom) (THIS_ float prop) PURE; 
	STDMETHOD_(HRESULT, Get_CropLeft) (THIS_ float* prop) PURE; 
	STDMETHOD_(HRESULT, Set_CropLeft) (THIS_ float prop) PURE; 
	STDMETHOD_(HRESULT, Get_CropRight) (THIS_ float* prop) PURE; 
	STDMETHOD_(HRESULT, Set_CropRight) (THIS_ float prop) PURE; 
	STDMETHOD_(HRESULT, Get_CropTop) (THIS_ float* prop) PURE; 
	STDMETHOD_(HRESULT, Set_CropTop) (THIS_ float prop) PURE; 
	STDMETHOD_(HRESULT, Get_TransparencyColor) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Set_TransparencyColor) (THIS_ long prop) PURE; 
	STDMETHOD_(HRESULT, Get_TransparentBackground) (THIS_ MsoTriState* prop) PURE; 
	STDMETHOD_(HRESULT, Set_TransparentBackground) (THIS_ MsoTriState prop) PURE; 
	STDMETHOD_(HRESULT, IncrementBrightness) (THIS_ float Increment) PURE; 
	STDMETHOD_(HRESULT, IncrementContrast) (THIS_ float Increment) PURE; 
};
typedef PictureFormat* LPICTUREFORMAT;
#ifdef __cplusplus
// PictureFormat  {000209CB-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TPictureFormatProxy : public __OCF TAutoProxy
{
public:
	TPictureFormatProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1]
	IDispatch* Parent();

	// Brightness:   [dispid 100]
	float Brightness();

	// Brightness:   [dispid 100]
	void Brightness(float arg0);

	// ColorType:   [dispid 101]
	MsoPictureColorType ColorType();

	// ColorType:   [dispid 101]
	void ColorType(MsoPictureColorType arg0);

	// Contrast:   [dispid 102]
	float Contrast();

	// Contrast:   [dispid 102]
	void Contrast(float arg0);

	// CropBottom:   [dispid 103]
	float CropBottom();

	// CropBottom:   [dispid 103]
	void CropBottom(float arg0);

	// CropLeft:   [dispid 104]
	float CropLeft();

	// CropLeft:   [dispid 104]
	void CropLeft(float arg0);

	// CropRight:   [dispid 105]
	float CropRight();

	// CropRight:   [dispid 105]
	void CropRight(float arg0);

	// CropTop:   [dispid 106]
	float CropTop();

	// CropTop:   [dispid 106]
	void CropTop(float arg0);

	// TransparencyColor:   [dispid 107]
	long TransparencyColor();

	// TransparencyColor:   [dispid 107]
	void TransparencyColor(long arg0);

	// TransparentBackground:   [dispid 108]
	MsoTriState TransparentBackground();

	// TransparentBackground:   [dispid 108]
	void TransparentBackground(MsoTriState arg0);

	// IncrementBrightness:   [dispid 10]
	void IncrementBrightness(float Increment);

	// IncrementContrast:   [dispid 11]
	void IncrementContrast(float Increment);
};
#endif

// Property
// {0002E18C-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE Property
DECLARE_INTERFACE_(Property, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// Property methods:
	STDMETHOD_(HRESULT, Get_Value) (THIS_ VARIANT* lppvReturn) PURE; 
	STDMETHOD_(HRESULT, Set_Value) (THIS_ VARIANT lppvReturn) PURE; 
	STDMETHOD_(HRESULT, Get_IndexedValue) (THIS_ VARIANT Index1, VARIANT Index2, VARIANT Index3, VARIANT Index4, VARIANT* lppvReturn) PURE; 
	STDMETHOD_(HRESULT, Set_IndexedValue) (THIS_ VARIANT Index1, VARIANT Index2, VARIANT Index3, VARIANT Index4, VARIANT lppvReturn) PURE; 
	STDMETHOD_(HRESULT, Get_NumIndices) (THIS_ short* lpiRetVal) PURE; 
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** lpaReturn) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ Properties** lpppReturn) PURE; 
	STDMETHOD_(HRESULT, Get_Name) (THIS_ BSTR* lpbstrReturn) PURE; 
	STDMETHOD_(HRESULT, Get_VBE) (THIS_ VBE** lpaReturn) PURE; 
	STDMETHOD_(HRESULT, Get_Collection) (THIS_ Properties** lpppReturn) PURE; 
	STDMETHOD_(HRESULT, Get_Object) (THIS_ IUnknown** lppunk) PURE; 
	STDMETHOD_(HRESULT, SetRef_Object) (THIS_ IUnknown* lppunk) PURE; 
};
typedef Property* LPROPERTY;
#ifdef __cplusplus
// Property  {0002E18C-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TPropertyProxy : public __OCF TAutoProxy
{
public:
	TPropertyProxy() : TAutoProxy(0x0) {}

	// Value:   [dispid 0]
	__OCF TAutoVal Value();

	// Value:   [dispid 0]
	void Value(__OCF TAutoVal arg0);

	// IndexedValue:   [dispid 3]
	__OCF TAutoVal IndexedValue(__OCF TAutoVal Index1, __OCF TAutoVal Index2 = __OCF TNoArg(), __OCF TAutoVal Index3 = __OCF TNoArg(), __OCF TAutoVal Index4 = __OCF TNoArg());

	// IndexedValue:   [dispid 3]
	void IndexedValue(__OCF TAutoVal Index1, __OCF TAutoVal Index2, __OCF TAutoVal Index3 = __OCF TNoArg(), __OCF TAutoVal Index4 = __OCF TNoArg(), __OCF TAutoVal arg4 = __OCF TNoArg());

	// NumIndices:   [dispid 4]
	short NumIndices();

	// _Application:   [dispid 1]
	void _Application(T_ApplicationProxy& Obj);

	// Parent:   [dispid 2]
	Properties* Parent();

	// Name:   [dispid 40]
	__OCF TAutoString Name();

	// _VBE:   [dispid 41]
	void _VBE(TVBEProxy& Obj);

	// Collection:   [dispid 42]
	Properties* Collection();

	// Object:   [dispid 45]
	IUnknown* Object();

	// Object:   [dispid 45]
	void Object(IUnknown* arg0);
};
#endif

// PropertyTest
// {000C0333-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE PropertyTest
DECLARE_INTERFACE_(PropertyTest, _IMsoDispObj)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
	// _IMsoDispObj methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ IDispatch** ppidisp) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* plCreator) PURE; 
#endif
	// PropertyTest methods:
	STDMETHOD_(HRESULT, Get_Name) (THIS_ BSTR* pbstrRetVal) PURE; 
	STDMETHOD_(HRESULT, Get_Condition) (THIS_ MsoCondition* pConditionRetVal) PURE; 
	STDMETHOD_(HRESULT, Get_Value) (THIS_ VARIANT* pvargRetVal) PURE; 
	STDMETHOD_(HRESULT, Get_SecondValue) (THIS_ VARIANT* pvargRetVal2) PURE; 
	STDMETHOD_(HRESULT, Get_Connector) (THIS_ MsoConnector* pConnector) PURE; 
};
typedef PropertyTest* LPROPERTYTEST;
#ifdef __cplusplus
// PropertyTest  {000C0333-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TPropertyTestProxy : public __OCF TAutoProxy
{
public:
	TPropertyTestProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1610743808]
	IDispatch* _Application();

	// Creator:   [dispid 1610743809]
	long Creator();

	// Name:   [dispid 0]
	__OCF TAutoString Name();

	// Condition:   [dispid 2]
	MsoCondition Condition();

	// Value:   [dispid 3]
	__OCF TAutoVal Value();

	// SecondValue:   [dispid 4]
	__OCF TAutoVal SecondValue();

	// Connector:   [dispid 5]
	MsoConnector Connector();
};
#endif

// ReadabilityStatistic
// {000209AF-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE ReadabilityStatistic
DECLARE_INTERFACE_(ReadabilityStatistic, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// ReadabilityStatistic methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Name) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Value) (THIS_ float* prop) PURE; 
};
typedef ReadabilityStatistic* LPEADABILITYSTATISTIC;
#ifdef __cplusplus
// ReadabilityStatistic  {000209AF-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TReadabilityStatisticProxy : public __OCF TAutoProxy
{
public:
	TReadabilityStatisticProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// Name:   [dispid 0]
	__OCF TAutoString Name();

	// Value:   [dispid 1]
	float Value();
};
#endif

// RecentFile
// {00020964-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE RecentFile
DECLARE_INTERFACE_(RecentFile, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// RecentFile methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Name) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Index) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_ReadOnly) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_ReadOnly) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_Path) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Open) (THIS_ Document** prop) PURE; 
	STDMETHOD_(HRESULT, Delete) (THIS ) PURE; 
};
typedef RecentFile* LPECENTFILE;
#ifdef __cplusplus
// RecentFile  {00020964-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TRecentFileProxy : public __OCF TAutoProxy
{
public:
	TRecentFileProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// Name:   [dispid 0]
	__OCF TAutoString Name();

	// _Index:   [dispid 1]
	long _Index();

	// ReadOnly:   [dispid 2]
	/*__OWL*/ TBool ReadOnly();

	// ReadOnly:   [dispid 2]
	void ReadOnly(/*__OWL*/ TBool arg0);

	// Path:   [dispid 3]
	__OCF TAutoString Path();

	// Open:   [dispid 4]
	Document* Open();

	// Delete:   [dispid 5]
	void Delete();
};
#endif

// vbext_RefKind
typedef enum tagvbext_RefKind
{
	vbext_rk_TypeLib = 0, 
	vbext_rk_Project = 1, 
} vbext_RefKind;

// Reference
// {0002E17E-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE Reference
DECLARE_INTERFACE_(Reference, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// Reference methods:
	STDMETHOD_(HRESULT, Get_Collection) (THIS_ References** retval) PURE; 
	STDMETHOD_(HRESULT, Get_VBE) (THIS_ VBE** lppaReturn) PURE; 
	STDMETHOD_(HRESULT, Get_Name) (THIS_ BSTR* pbstrName) PURE; 
	STDMETHOD_(HRESULT, Get_Guid) (THIS_ BSTR* pbstrGuid) PURE; 
	STDMETHOD_(HRESULT, Get_Major) (THIS_ long* pMajor) PURE; 
	STDMETHOD_(HRESULT, Get_Minor) (THIS_ long* pMinor) PURE; 
	STDMETHOD_(HRESULT, Get_FullPath) (THIS_ BSTR* pbstrLocation) PURE; 
	STDMETHOD_(HRESULT, Get_BuiltIn) (THIS_ VARIANT_BOOL* pfIsDefault) PURE; 
	STDMETHOD_(HRESULT, Get_IsBroken) (THIS_ VARIANT_BOOL* pfIsBroken) PURE; 
	STDMETHOD_(HRESULT, Get_Type) (THIS_ vbext_RefKind* pKind) PURE; 
	STDMETHOD_(HRESULT, Get_Description) (THIS_ BSTR* pbstrName) PURE; 
};
typedef Reference* LPEFERENCE;
#ifdef __cplusplus
// Reference  {0002E17E-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TReferenceProxy : public __OCF TAutoProxy
{
public:
	TReferenceProxy() : TAutoProxy(0x0) {}

	// Collection:   [dispid 1610743808]
	References* Collection();

	// _VBE:   [dispid 1610743809]
	void _VBE(TVBEProxy& Obj);

	// Name:   [dispid 1610743810]
	__OCF TAutoString Name();

	// _Guid:   [dispid 1610743811]
	__OCF TAutoString _Guid();

	// Major:   [dispid 1610743812]
	long Major();

	// Minor:   [dispid 1610743813]
	long Minor();

	// FullPath:   [dispid 1610743814]
	__OCF TAutoString FullPath();

	// BuiltIn:   [dispid 1610743815]
	/*__OWL*/ TBool BuiltIn();

	// IsBroken:   [dispid 1610743816]
	/*__OWL*/ TBool IsBroken();

	// Type:   [dispid 1610743817]
	vbext_RefKind Type();

	// Description:   [dispid 1610743818]
	__OCF TAutoString Description();
};
#endif

// Replacement
// {000209B1-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE Replacement
DECLARE_INTERFACE_(Replacement, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// Replacement methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Font) (THIS_ Font** prop) PURE; 
	STDMETHOD_(HRESULT, Set_Font) (THIS_ Font* prop) PURE; 
	STDMETHOD_(HRESULT, Get_ParagraphFormat) (THIS_ ParagraphFormat** prop) PURE; 
	STDMETHOD_(HRESULT, Set_ParagraphFormat) (THIS_ ParagraphFormat* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Style) (THIS_ VARIANT* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Style) (THIS_ VARIANT* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Text) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Text) (THIS_ BSTR prop) PURE; 
	STDMETHOD_(HRESULT, Get_LanguageID) (THIS_ WdLanguageID* prop) PURE; 
	STDMETHOD_(HRESULT, Set_LanguageID) (THIS_ WdLanguageID prop) PURE; 
	STDMETHOD_(HRESULT, Get_Highlight) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Highlight) (THIS_ long prop) PURE; 
	STDMETHOD_(HRESULT, Get_Frame) (THIS_ Frame** prop) PURE; 
	STDMETHOD_(HRESULT, Get_LanguageIDFarEast) (THIS_ WdLanguageID* prop) PURE; 
	STDMETHOD_(HRESULT, Set_LanguageIDFarEast) (THIS_ WdLanguageID prop) PURE; 
	STDMETHOD_(HRESULT, ClearFormatting) (THIS ) PURE; 
	STDMETHOD_(HRESULT, Get_NoProofing) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Set_NoProofing) (THIS_ long prop) PURE; 
};
typedef Replacement* LPEPLACEMENT;
#ifdef __cplusplus
// Replacement  {000209B1-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TReplacementProxy : public __OCF TAutoProxy
{
public:
	TReplacementProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// _Font:   [dispid 10]
	Font* _Font();

	// _Font:   [dispid 10]
	void _Font(Font* arg0);

	// _ParagraphFormat:   [dispid 11]
	ParagraphFormat* _ParagraphFormat();

	// _ParagraphFormat:   [dispid 11]
	void _ParagraphFormat(ParagraphFormat* arg0);

	// _Style:   [dispid 12]
	__OCF TAutoVal _Style();

	// _Style:   [dispid 12]
	void _Style(__OCF TAutoVal* arg0);

	// Text:   [dispid 15]
	__OCF TAutoString Text();

	// Text:   [dispid 15]
	void Text(__OCF TAutoString arg0);

	// LanguageID:   [dispid 16]
	WdLanguageID LanguageID();

	// LanguageID:   [dispid 16]
	void LanguageID(WdLanguageID arg0);

	// Highlight:   [dispid 17]
	long Highlight();

	// Highlight:   [dispid 17]
	void Highlight(long arg0);

	// _Frame:   [dispid 18]
	void _Frame(TFrameProxy& Obj);

	// LanguageIDFarEast:   [dispid 19]
	WdLanguageID LanguageIDFarEast();

	// LanguageIDFarEast:   [dispid 19]
	void LanguageIDFarEast(WdLanguageID arg0);

	// ClearFormatting:   [dispid 20]
	void ClearFormatting();

	// NoProofing:   [dispid 21]
	long NoProofing();

	// NoProofing:   [dispid 21]
	void NoProofing(long arg0);
};
#endif

// WdRevisionType
typedef enum tagWdRevisionType
{
	wdNoRevision = 0, 
	wdRevisionInsert = 1, 
	wdRevisionDelete = 2, 
	wdRevisionProperty = 3, 
	wdRevisionParagraphNumber = 4, 
	wdRevisionDisplayField = 5, 
	wdRevisionReconcile = 6, 
	wdRevisionConflict = 7, 
	wdRevisionStyle = 8, 
	wdRevisionReplace = 9, 
	wdRevisionParagraphProperty = 10, 
	wdRevisionTableProperty = 11, 
	wdRevisionSectionProperty = 12, 
	wdRevisionStyleDefinition = 13, 
} WdRevisionType;

// Revision
// {00020981-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE Revision
DECLARE_INTERFACE_(Revision, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// Revision methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Author) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Date) (THIS_ DATE* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Range) (THIS_ WordRange** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Type) (THIS_ WdRevisionType* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Index) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Accept) (THIS ) PURE; 
	STDMETHOD_(HRESULT, Reject) (THIS ) PURE; 
	STDMETHOD_(HRESULT, Get_Style) (THIS_ Style** prop) PURE; 
	STDMETHOD_(HRESULT, Get_FormatDescription) (THIS_ BSTR* prop) PURE; 
};
typedef Revision* LPEVISION;
#ifdef __cplusplus
// Revision  {00020981-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TRevisionProxy : public __OCF TAutoProxy
{
public:
	TRevisionProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// Author:   [dispid 1]
	__OCF TAutoString Author();

	// Date:   [dispid 2]
	__OCF TAutoDate Date();

	// _Range:   [dispid 3]
	void _Range(TRangeProxy& Obj);

	// Type:   [dispid 4]
	WdRevisionType Type();

	// _Index:   [dispid 5]
	long _Index();

	// Accept:   [dispid 101]
	void Accept();

	// Reject:   [dispid 102]
	void Reject();

	// _Style:   [dispid 8]
	void _Style(TStyleProxy& Obj);

	// FormatDescription:   [dispid 9]
	__OCF TAutoString FormatDescription();
};
#endif

// Row
// {00020950-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE Row
DECLARE_INTERFACE_(Row, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// Row methods:
	STDMETHOD_(HRESULT, Get_Range) (THIS_ WordRange** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get_AllowBreakAcrossPages) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Set_AllowBreakAcrossPages) (THIS_ long prop) PURE; 
	STDMETHOD_(HRESULT, Get_Alignment) (THIS_ WdRowAlignment* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Alignment) (THIS_ WdRowAlignment prop) PURE; 
	STDMETHOD_(HRESULT, Get_HeadingFormat) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Set_HeadingFormat) (THIS_ long prop) PURE; 
	STDMETHOD_(HRESULT, Get_SpaceBetweenColumns) (THIS_ float* prop) PURE; 
	STDMETHOD_(HRESULT, Set_SpaceBetweenColumns) (THIS_ float prop) PURE; 
	STDMETHOD_(HRESULT, Get_Height) (THIS_ float* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Height) (THIS_ float prop) PURE; 
	STDMETHOD_(HRESULT, Get_HeightRule) (THIS_ WdRowHeightRule* prop) PURE; 
	STDMETHOD_(HRESULT, Set_HeightRule) (THIS_ WdRowHeightRule prop) PURE; 
	STDMETHOD_(HRESULT, Get_LeftIndent) (THIS_ float* prop) PURE; 
	STDMETHOD_(HRESULT, Set_LeftIndent) (THIS_ float prop) PURE; 
	STDMETHOD_(HRESULT, Get_IsLast) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Get_IsFirst) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Index) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Cells) (THIS_ Cells** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Borders) (THIS_ Borders** prop) PURE; 
	STDMETHOD_(HRESULT, Set_Borders) (THIS_ Borders* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Shading) (THIS_ Shading** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Next) (THIS_ Row** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Previous) (THIS_ Row** prop) PURE; 
	STDMETHOD_(HRESULT, Select) (THIS ) PURE; 
	STDMETHOD_(HRESULT, Delete) (THIS ) PURE; 
	STDMETHOD_(HRESULT, SetLeftIndent) (THIS_ float LeftIndent, WdRulerStyle RulerStyle) PURE; 
	STDMETHOD_(HRESULT, SetHeight) (THIS_ float RowHeight, WdRowHeightRule HeightRule) PURE; 
	STDMETHOD_(HRESULT, ConvertToTextOld) (THIS_ VARIANT* Separator, WordRange** prop) PURE; 
	STDMETHOD_(HRESULT, ConvertToText) (THIS_ VARIANT* Separator, VARIANT* NestedTables, WordRange** prop) PURE; 
	STDMETHOD_(HRESULT, Get_NestingLevel) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_ID) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Set_ID) (THIS_ BSTR prop) PURE; 
};
typedef Row* LPOW;
#ifdef __cplusplus
// Row  {00020950-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TRowProxy : public __OCF TAutoProxy
{
public:
	TRowProxy() : TAutoProxy(0x0) {}

	// _Range:   [dispid 0]
	void _Range(TRangeProxy& Obj);

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// AllowBreakAcrossPages:   [dispid 3]
	long AllowBreakAcrossPages();

	// AllowBreakAcrossPages:   [dispid 3]
	void AllowBreakAcrossPages(long arg0);

	// Alignment:   [dispid 4]
	WdRowAlignment Alignment();

	// Alignment:   [dispid 4]
	void Alignment(WdRowAlignment arg0);

	// HeadingFormat:   [dispid 5]
	long HeadingFormat();

	// HeadingFormat:   [dispid 5]
	void HeadingFormat(long arg0);

	// SpaceBetweenColumns:   [dispid 6]
	float SpaceBetweenColumns();

	// SpaceBetweenColumns:   [dispid 6]
	void SpaceBetweenColumns(float arg0);

	// Height:   [dispid 7]
	float Height();

	// Height:   [dispid 7]
	void Height(float arg0);

	// HeightRule:   [dispid 8]
	WdRowHeightRule HeightRule();

	// HeightRule:   [dispid 8]
	void HeightRule(WdRowHeightRule arg0);

	// LeftIndent:   [dispid 9]
	float LeftIndent();

	// LeftIndent:   [dispid 9]
	void LeftIndent(float arg0);

	// IsLast:   [dispid 10]
	/*__OWL*/ TBool IsLast();

	// IsFirst:   [dispid 11]
	/*__OWL*/ TBool IsFirst();

	// _Index:   [dispid 12]
	long _Index();

	// _Cells:   [dispid 100]
	void _Cells(TCellsProxy& Obj);

	// _Borders:   [dispid 1100]
	void _Borders(TBordersProxy& Obj);

	// _Borders:   [dispid 1100]
	void _Borders(Borders* arg0);

	// _Shading:   [dispid 103]
	void _Shading(TShadingProxy& Obj);

	// Next:   [dispid 104]
	void Next(TRowProxy& Obj);

	// Previous:   [dispid 105]
	void Previous(TRowProxy& Obj);

	// Select:   [dispid 65535]
	void Select();

	// Delete:   [dispid 200]
	void Delete();

	// SetLeftIndent:   [dispid 202]
	void SetLeftIndent(float LeftIndent, WdRulerStyle RulerStyle);

	// SetHeight:   [dispid 203]
	void SetHeight(float RowHeight, WdRowHeightRule HeightRule);

	// ConvertToTextOld:   [dispid 16]
	void ConvertToTextOld(TRangeProxy& Obj, __OCF TAutoVal* Separator = 0);

	// ConvertToText:   [dispid 18]
	void ConvertToText(TRangeProxy& Obj, __OCF TAutoVal* Separator = 0, __OCF TAutoVal* NestedTables = 0);

	// NestingLevel:   [dispid 106]
	long NestingLevel();

	// ID:   [dispid 107]
	__OCF TAutoString ID();

	// ID:   [dispid 107]
	void ID(__OCF TAutoString arg0);
};
#endif

// ScopeFolder
// {000C0368-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE ScopeFolder
DECLARE_INTERFACE_(ScopeFolder, _IMsoDispObj)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
	// _IMsoDispObj methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ IDispatch** ppidisp) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* plCreator) PURE; 
#endif
	// ScopeFolder methods:
	STDMETHOD_(HRESULT, Get_Name) (THIS_ BSTR* pbstrName) PURE; 
	STDMETHOD_(HRESULT, Get_Path) (THIS_ BSTR* pbstrPath) PURE; 
	STDMETHOD_(HRESULT, Get_ScopeFolders) (THIS_ ScopeFolders** ScopeFoldersRet) PURE; 
	STDMETHOD_(HRESULT, AddToSearchFolders) (THIS ) PURE; 
};
typedef ScopeFolder* LPCOPEFOLDER;
#ifdef __cplusplus
// ScopeFolder  {000C0368-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TScopeFolderProxy : public __OCF TAutoProxy
{
public:
	TScopeFolderProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1610743808]
	IDispatch* _Application();

	// Creator:   [dispid 1610743809]
	long Creator();

	// Name:   [dispid 0]
	__OCF TAutoString Name();

	// Path:   [dispid 2]
	__OCF TAutoString Path();

	// _ScopeFolders:   [dispid 3]
	void _ScopeFolders(TScopeFoldersProxy& Obj);

	// AddToSearchFolders:   [dispid 4]
	void AddToSearchFolders();
};
#endif

// ScopeFolders
// {000C0369-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE ScopeFolders
DECLARE_INTERFACE_(ScopeFolders, _IMsoDispObj)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
	// _IMsoDispObj methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ IDispatch** ppidisp) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* plCreator) PURE; 
#endif
	// ScopeFolders methods:
	STDMETHOD_(HRESULT, Get_Item) (THIS_ int , ScopeFolder** ScopeFolderRet) PURE; 
	STDMETHOD_(HRESULT, Get_Count) (THIS_ int* iCountRetVal) PURE; 
	STDMETHOD_(HRESULT, Get__NewEnum) (THIS_ IUnknown** ppunkEnum) PURE; 
};
typedef ScopeFolders* LPCOPEFOLDERS;
#ifdef __cplusplus
// ScopeFolders  {000C0369-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TScopeFoldersProxy : public __OCF TAutoProxy
{
public:
	TScopeFoldersProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1610743808]
	IDispatch* _Application();

	// Creator:   [dispid 1610743809]
	long Creator();

	// Item:   [dispid 0]
	void Item(TScopeFolderProxy& Obj, int arg0);

	// Count:   [dispid 4]
	int Count();

	// _NewEnum:   [dispid -4]
	void _NewEnum(__OCF TAutoEnumerator<IUnknown*>& Obj);
};
#endif

// Script
// {000C0341-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE Script
DECLARE_INTERFACE_(Script, _IMsoDispObj)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
	// _IMsoDispObj methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ IDispatch** ppidisp) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* plCreator) PURE; 
#endif
	// Script methods:
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** Parent) PURE; 
	STDMETHOD_(HRESULT, Get_Extended) (THIS_ BSTR* Extended) PURE; 
	STDMETHOD_(HRESULT, Set_Extended) (THIS_ BSTR Extended) PURE; 
	STDMETHOD_(HRESULT, Get_Id) (THIS_ BSTR* Id) PURE; 
	STDMETHOD_(HRESULT, Set_Id) (THIS_ BSTR Id) PURE; 
	STDMETHOD_(HRESULT, Get_Language) (THIS_ MsoScriptLanguage* ) PURE; 
	STDMETHOD_(HRESULT, Set_Language) (THIS_ MsoScriptLanguage ) PURE; 
	STDMETHOD_(HRESULT, Get_Location) (THIS_ MsoScriptLocation* Location) PURE; 
	STDMETHOD_(HRESULT, Delete) (THIS ) PURE; 
	STDMETHOD_(HRESULT, Get_Shape) (THIS_ IDispatch** Object) PURE; 
	STDMETHOD_(HRESULT, Get_ScriptText) (THIS_ BSTR* ) PURE; 
	STDMETHOD_(HRESULT, Set_ScriptText) (THIS_ BSTR ) PURE; 
};
typedef Script* LPCRIPT;
#ifdef __cplusplus
// Script  {000C0341-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TScriptProxy : public __OCF TAutoProxy
{
public:
	TScriptProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1610743808]
	IDispatch* _Application();

	// Creator:   [dispid 1610743809]
	long Creator();

	// Parent:   [dispid 1610809344]
	IDispatch* Parent();

	// Extended:   [dispid 1610809345]
	__OCF TAutoString Extended();

	// Extended:   [dispid 1610809345]
	void Extended(__OCF TAutoString arg0);

	// Id:   [dispid 1610809347]
	__OCF TAutoString Id();

	// Id:   [dispid 1610809347]
	void Id(__OCF TAutoString arg0);

	// _Language:   [dispid 1610809349]
	MsoScriptLanguage _Language();

	// _Language:   [dispid 1610809349]
	void _Language(MsoScriptLanguage arg0);

	// Location:   [dispid 1610809351]
	MsoScriptLocation Location();

	// Delete:   [dispid 1610809352]
	void Delete();

	// _Shape:   [dispid 1610809353]
	IDispatch* _Shape();

	// ScriptText:   [dispid 0]
	__OCF TAutoString ScriptText();

	// ScriptText:   [dispid 0]
	void ScriptText(__OCF TAutoString arg0);
};
#endif

// MsoSearchIn
typedef enum tagMsoSearchIn
{
	msoSearchInMyComputer = 0, 
	msoSearchInOutlook = 1, 
	msoSearchInMyNetworkPlaces = 2, 
	msoSearchInCustom = 3, 
} MsoSearchIn;

// SearchScope
// {000C0367-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE SearchScope
DECLARE_INTERFACE_(SearchScope, _IMsoDispObj)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
	// _IMsoDispObj methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ IDispatch** ppidisp) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* plCreator) PURE; 
#endif
	// SearchScope methods:
	STDMETHOD_(HRESULT, Get_Type) (THIS_ MsoSearchIn* MsoSearchInRetVal) PURE; 
	STDMETHOD_(HRESULT, Get_ScopeFolder) (THIS_ ScopeFolder** ScopeFolderRet) PURE; 
};
typedef SearchScope* LPEARCHSCOPE;
#ifdef __cplusplus
// SearchScope  {000C0367-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TSearchScopeProxy : public __OCF TAutoProxy
{
public:
	TSearchScopeProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1610743808]
	IDispatch* _Application();

	// Creator:   [dispid 1610743809]
	long Creator();

	// Type:   [dispid 0]
	MsoSearchIn Type();

	// _ScopeFolder:   [dispid 1]
	void _ScopeFolder(TScopeFolderProxy& Obj);
};
#endif

// Section
// {00020959-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE Section
DECLARE_INTERFACE_(Section, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// Section methods:
	STDMETHOD_(HRESULT, Get_Range) (THIS_ WordRange** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get_PageSetup) (THIS_ PageSetup** prop) PURE; 
	STDMETHOD_(HRESULT, Set_PageSetup) (THIS_ PageSetup* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Headers) (THIS_ HeadersFooters** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Footers) (THIS_ HeadersFooters** prop) PURE; 
	STDMETHOD_(HRESULT, Get_ProtectedForForms) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_ProtectedForForms) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_Index) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Borders) (THIS_ Borders** prop) PURE; 
	STDMETHOD_(HRESULT, Set_Borders) (THIS_ Borders* prop) PURE; 
};
typedef Section* LPECTION;
#ifdef __cplusplus
// Section  {00020959-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TSectionProxy : public __OCF TAutoProxy
{
public:
	TSectionProxy() : TAutoProxy(0x0) {}

	// _Range:   [dispid 0]
	void _Range(TRangeProxy& Obj);

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// _PageSetup:   [dispid 1101]
	void _PageSetup(TPageSetupProxy& Obj);

	// _PageSetup:   [dispid 1101]
	void _PageSetup(PageSetup* arg0);

	// Headers:   [dispid 121]
	void Headers(THeadersFootersProxy& Obj);

	// Footers:   [dispid 122]
	void Footers(THeadersFootersProxy& Obj);

	// ProtectedForForms:   [dispid 123]
	/*__OWL*/ TBool ProtectedForForms();

	// ProtectedForForms:   [dispid 123]
	void ProtectedForForms(/*__OWL*/ TBool arg0);

	// _Index:   [dispid 124]
	long _Index();

	// _Borders:   [dispid 1100]
	void _Borders(TBordersProxy& Obj);

	// _Borders:   [dispid 1100]
	void _Borders(Borders* arg0);
};
#endif

// MsoShadowType
typedef enum tagMsoShadowType
{
	msoShadowMixed = -2, 
	msoShadow1 = 1, 
	msoShadow2 = 2, 
	msoShadow3 = 3, 
	msoShadow4 = 4, 
	msoShadow5 = 5, 
	msoShadow6 = 6, 
	msoShadow7 = 7, 
	msoShadow8 = 8, 
	msoShadow9 = 9, 
	msoShadow10 = 10, 
	msoShadow11 = 11, 
	msoShadow12 = 12, 
	msoShadow13 = 13, 
	msoShadow14 = 14, 
	msoShadow15 = 15, 
	msoShadow16 = 16, 
	msoShadow17 = 17, 
	msoShadow18 = 18, 
	msoShadow19 = 19, 
	msoShadow20 = 20, 
} MsoShadowType;

// ShadowFormat
// {000209CC-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE ShadowFormat
DECLARE_INTERFACE_(ShadowFormat, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// ShadowFormat methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get_ForeColor) (THIS_ ColorFormat** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Obscured) (THIS_ MsoTriState* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Obscured) (THIS_ MsoTriState prop) PURE; 
	STDMETHOD_(HRESULT, Get_OffsetX) (THIS_ float* prop) PURE; 
	STDMETHOD_(HRESULT, Set_OffsetX) (THIS_ float prop) PURE; 
	STDMETHOD_(HRESULT, Get_OffsetY) (THIS_ float* prop) PURE; 
	STDMETHOD_(HRESULT, Set_OffsetY) (THIS_ float prop) PURE; 
	STDMETHOD_(HRESULT, Get_Transparency) (THIS_ float* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Transparency) (THIS_ float prop) PURE; 
	STDMETHOD_(HRESULT, Get_Type) (THIS_ MsoShadowType* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Type) (THIS_ MsoShadowType prop) PURE; 
	STDMETHOD_(HRESULT, Get_Visible) (THIS_ MsoTriState* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Visible) (THIS_ MsoTriState prop) PURE; 
	STDMETHOD_(HRESULT, IncrementOffsetX) (THIS_ float Increment) PURE; 
	STDMETHOD_(HRESULT, IncrementOffsetY) (THIS_ float Increment) PURE; 
};
typedef ShadowFormat* LPHADOWFORMAT;
#ifdef __cplusplus
// ShadowFormat  {000209CC-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TShadowFormatProxy : public __OCF TAutoProxy
{
public:
	TShadowFormatProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1]
	IDispatch* Parent();

	// ForeColor:   [dispid 100]
	void ForeColor(TColorFormatProxy& Obj);

	// Obscured:   [dispid 101]
	MsoTriState Obscured();

	// Obscured:   [dispid 101]
	void Obscured(MsoTriState arg0);

	// OffsetX:   [dispid 102]
	float OffsetX();

	// OffsetX:   [dispid 102]
	void OffsetX(float arg0);

	// OffsetY:   [dispid 103]
	float OffsetY();

	// OffsetY:   [dispid 103]
	void OffsetY(float arg0);

	// Transparency:   [dispid 104]
	float Transparency();

	// Transparency:   [dispid 104]
	void Transparency(float arg0);

	// Type:   [dispid 105]
	MsoShadowType Type();

	// Type:   [dispid 105]
	void Type(MsoShadowType arg0);

	// Visible:   [dispid 106]
	MsoTriState Visible();

	// Visible:   [dispid 106]
	void Visible(MsoTriState arg0);

	// IncrementOffsetX:   [dispid 10]
	void IncrementOffsetX(float Increment);

	// IncrementOffsetY:   [dispid 11]
	void IncrementOffsetY(float Increment);
};
#endif

// ShapeNodes
// {000209CE-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE ShapeNodes
DECLARE_INTERFACE_(ShapeNodes, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// ShapeNodes methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Count) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get__NewEnum) (THIS_ IUnknown** prop) PURE; 
	STDMETHOD_(HRESULT, Delete) (THIS_ long ) PURE; 
	STDMETHOD_(HRESULT, Item) (THIS_ VARIANT* , ShapeNode** prop) PURE; 
	STDMETHOD_(HRESULT, SetEditingType) (THIS_ long , MsoEditingType EditingType) PURE; 
	STDMETHOD_(HRESULT, SetPosition) (THIS_ long , float X1, float Y1) PURE; 
	STDMETHOD_(HRESULT, SetSegmentType) (THIS_ long , MsoSegmentType SegmentType) PURE; 
	STDMETHOD_(HRESULT, Insert) (THIS_ long , MsoSegmentType SegmentType, MsoEditingType EditingType, float X1, float Y1, float X2, float Y2, float X3, float Y3) PURE; 
};
typedef ShapeNodes* LPHAPENODES;
#ifdef __cplusplus
// ShapeNodes  {000209CE-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TShapeNodesProxy : public __OCF TAutoProxy
{
public:
	TShapeNodesProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1]
	IDispatch* Parent();

	// Count:   [dispid 2]
	long Count();

	// _NewEnum:   [dispid -4]
	void _NewEnum(__OCF TAutoEnumerator<IUnknown*>& Obj);

	// Delete:   [dispid 11]
	void Delete(long arg0);

	// Item:   [dispid 0]
	void Item(TShapeNodeProxy& Obj, __OCF TAutoVal* arg0);

	// SetEditingType:   [dispid 13]
	void SetEditingType(long arg0, MsoEditingType EditingType);

	// SetPosition:   [dispid 14]
	void SetPosition(long arg0, float X1, float Y1);

	// SetSegmentType:   [dispid 15]
	void SetSegmentType(long arg0, MsoSegmentType SegmentType);

	// Insert:   [dispid 12]
	void Insert(long arg0, MsoSegmentType SegmentType, MsoEditingType EditingType, float X1, float Y1, float X2, float Y2, float X3, float Y3);
};
#endif

// SharedWorkspaceFiles
// {000C037C-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE SharedWorkspaceFiles
DECLARE_INTERFACE_(SharedWorkspaceFiles, _IMsoDispObj)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
	// _IMsoDispObj methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ IDispatch** ppidisp) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* plCreator) PURE; 
#endif
	// SharedWorkspaceFiles methods:
	STDMETHOD_(HRESULT, Get__NewEnum) (THIS_ IUnknown** ppienum) PURE; 
	STDMETHOD_(HRESULT, Get_Item) (THIS_ int , SharedWorkspaceFile** ppidisp) PURE; 
	STDMETHOD_(HRESULT, Get_Count) (THIS_ int* pcItems) PURE; 
	STDMETHOD_(HRESULT, Add) (THIS_ BSTR FileName, VARIANT ParentFolder, VARIANT OverwriteIfFileAlreadyExists, VARIANT KeepInSync, SharedWorkspaceFile** ppFile) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** ppidisp) PURE; 
	STDMETHOD_(HRESULT, Get_ItemCountExceeded) (THIS_ VARIANT_BOOL* pf) PURE; 
};
typedef SharedWorkspaceFiles* LPHAREDWORKSPACEFILES;
#ifdef __cplusplus
// SharedWorkspaceFiles  {000C037C-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TSharedWorkspaceFilesProxy : public __OCF TAutoProxy
{
public:
	TSharedWorkspaceFilesProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1610743808]
	IDispatch* _Application();

	// Creator:   [dispid 1610743809]
	long Creator();

	// _NewEnum:   [dispid -4]
	void _NewEnum(__OCF TAutoEnumerator<IUnknown*>& Obj);

	// Item:   [dispid 0]
	void Item(TSharedWorkspaceFileProxy& Obj, int arg0);

	// Count:   [dispid 1]
	int Count();

	// Add:   [dispid 2]
	void Add(TSharedWorkspaceFileProxy& Obj, __OCF TAutoString FileName, __OCF TAutoVal ParentFolder = __OCF TNoArg(), __OCF TAutoVal OverwriteIfFileAlreadyExists = __OCF TNoArg(), __OCF TAutoVal KeepInSync = __OCF TNoArg());

	// Parent:   [dispid 3]
	IDispatch* Parent();

	// ItemCountExceeded:   [dispid 4]
	/*__OWL*/ TBool ItemCountExceeded();
};
#endif

// SharedWorkspaceFolders
// {000C037E-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE SharedWorkspaceFolders
DECLARE_INTERFACE_(SharedWorkspaceFolders, _IMsoDispObj)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
	// _IMsoDispObj methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ IDispatch** ppidisp) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* plCreator) PURE; 
#endif
	// SharedWorkspaceFolders methods:
	STDMETHOD_(HRESULT, Get__NewEnum) (THIS_ IUnknown** ppienum) PURE; 
	STDMETHOD_(HRESULT, Get_Item) (THIS_ int , SharedWorkspaceFolder** ppidisp) PURE; 
	STDMETHOD_(HRESULT, Get_Count) (THIS_ int* pcItems) PURE; 
	STDMETHOD_(HRESULT, Add) (THIS_ BSTR FolderName, VARIANT ParentFolder, SharedWorkspaceFolder** ppFolder) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** ppidisp) PURE; 
	STDMETHOD_(HRESULT, Get_ItemCountExceeded) (THIS_ VARIANT_BOOL* pf) PURE; 
};
typedef SharedWorkspaceFolders* LPHAREDWORKSPACEFOLDERS;
#ifdef __cplusplus
// SharedWorkspaceFolders  {000C037E-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TSharedWorkspaceFoldersProxy : public __OCF TAutoProxy
{
public:
	TSharedWorkspaceFoldersProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1610743808]
	IDispatch* _Application();

	// Creator:   [dispid 1610743809]
	long Creator();

	// _NewEnum:   [dispid -4]
	void _NewEnum(__OCF TAutoEnumerator<IUnknown*>& Obj);

	// Item:   [dispid 0]
	void Item(TSharedWorkspaceFolderProxy& Obj, int arg0);

	// Count:   [dispid 1]
	int Count();

	// Add:   [dispid 2]
	void Add(TSharedWorkspaceFolderProxy& Obj, __OCF TAutoString FolderName, __OCF TAutoVal ParentFolder = __OCF TNoArg());

	// Parent:   [dispid 3]
	IDispatch* Parent();

	// ItemCountExceeded:   [dispid 4]
	/*__OWL*/ TBool ItemCountExceeded();
};
#endif

// SharedWorkspaceLinks
// {000C0380-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE SharedWorkspaceLinks
DECLARE_INTERFACE_(SharedWorkspaceLinks, _IMsoDispObj)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
	// _IMsoDispObj methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ IDispatch** ppidisp) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* plCreator) PURE; 
#endif
	// SharedWorkspaceLinks methods:
	STDMETHOD_(HRESULT, Get__NewEnum) (THIS_ IUnknown** ppienum) PURE; 
	STDMETHOD_(HRESULT, Get_Item) (THIS_ int , SharedWorkspaceLink** ppidisp) PURE; 
	STDMETHOD_(HRESULT, Get_Count) (THIS_ int* pcItems) PURE; 
	STDMETHOD_(HRESULT, Add) (THIS_ BSTR URL, VARIANT Description, VARIANT Notes, SharedWorkspaceLink** ppLink) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** ppidisp) PURE; 
	STDMETHOD_(HRESULT, Get_ItemCountExceeded) (THIS_ VARIANT_BOOL* pf) PURE; 
};
typedef SharedWorkspaceLinks* LPHAREDWORKSPACELINKS;
#ifdef __cplusplus
// SharedWorkspaceLinks  {000C0380-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TSharedWorkspaceLinksProxy : public __OCF TAutoProxy
{
public:
	TSharedWorkspaceLinksProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1610743808]
	IDispatch* _Application();

	// Creator:   [dispid 1610743809]
	long Creator();

	// _NewEnum:   [dispid -4]
	void _NewEnum(__OCF TAutoEnumerator<IUnknown*>& Obj);

	// Item:   [dispid 0]
	void Item(TSharedWorkspaceLinkProxy& Obj, int arg0);

	// Count:   [dispid 1]
	int Count();

	// Add:   [dispid 2]
	void Add(TSharedWorkspaceLinkProxy& Obj, __OCF TAutoString URL, __OCF TAutoVal Description = __OCF TNoArg(), __OCF TAutoVal Notes = __OCF TNoArg());

	// Parent:   [dispid 3]
	IDispatch* Parent();

	// ItemCountExceeded:   [dispid 4]
	/*__OWL*/ TBool ItemCountExceeded();
};
#endif

// SharedWorkspaceMembers
// {000C0382-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE SharedWorkspaceMembers
DECLARE_INTERFACE_(SharedWorkspaceMembers, _IMsoDispObj)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
	// _IMsoDispObj methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ IDispatch** ppidisp) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* plCreator) PURE; 
#endif
	// SharedWorkspaceMembers methods:
	STDMETHOD_(HRESULT, Get__NewEnum) (THIS_ IUnknown** ppienum) PURE; 
	STDMETHOD_(HRESULT, Get_Item) (THIS_ int , SharedWorkspaceMember** ppidisp) PURE; 
	STDMETHOD_(HRESULT, Get_Count) (THIS_ int* pcItems) PURE; 
	STDMETHOD_(HRESULT, Add) (THIS_ BSTR , BSTR DomainName, BSTR DisplayName, VARIANT Role, SharedWorkspaceMember** ppMember) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** ppidisp) PURE; 
	STDMETHOD_(HRESULT, Get_ItemCountExceeded) (THIS_ VARIANT_BOOL* pf) PURE; 
};
typedef SharedWorkspaceMembers* LPHAREDWORKSPACEMEMBERS;
#ifdef __cplusplus
// SharedWorkspaceMembers  {000C0382-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TSharedWorkspaceMembersProxy : public __OCF TAutoProxy
{
public:
	TSharedWorkspaceMembersProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1610743808]
	IDispatch* _Application();

	// Creator:   [dispid 1610743809]
	long Creator();

	// _NewEnum:   [dispid -4]
	void _NewEnum(__OCF TAutoEnumerator<IUnknown*>& Obj);

	// Item:   [dispid 0]
	void Item(TSharedWorkspaceMemberProxy& Obj, int arg0);

	// Count:   [dispid 1]
	int Count();

	// Add:   [dispid 2]
	void Add(TSharedWorkspaceMemberProxy& Obj, __OCF TAutoString arg0, __OCF TAutoString DomainName, __OCF TAutoString DisplayName, __OCF TAutoVal Role = __OCF TNoArg());

	// Parent:   [dispid 3]
	IDispatch* Parent();

	// ItemCountExceeded:   [dispid 4]
	/*__OWL*/ TBool ItemCountExceeded();
};
#endif

// MsoSharedWorkspaceTaskStatus
typedef enum tagMsoSharedWorkspaceTaskStatus
{
	msoSharedWorkspaceTaskStatusNotStarted = 1, 
	msoSharedWorkspaceTaskStatusInProgress = 2, 
	msoSharedWorkspaceTaskStatusCompleted = 3, 
	msoSharedWorkspaceTaskStatusDeferred = 4, 
	msoSharedWorkspaceTaskStatusWaiting = 5, 
} MsoSharedWorkspaceTaskStatus;

// MsoSharedWorkspaceTaskPriority
typedef enum tagMsoSharedWorkspaceTaskPriority
{
	msoSharedWorkspaceTaskPriorityHigh = 1, 
	msoSharedWorkspaceTaskPriorityNormal = 2, 
	msoSharedWorkspaceTaskPriorityLow = 3, 
} MsoSharedWorkspaceTaskPriority;

// SharedWorkspaceTask
// {000C0379-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE SharedWorkspaceTask
DECLARE_INTERFACE_(SharedWorkspaceTask, _IMsoDispObj)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
	// _IMsoDispObj methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ IDispatch** ppidisp) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* plCreator) PURE; 
#endif
	// SharedWorkspaceTask methods:
	STDMETHOD_(HRESULT, Get_Title) (THIS_ BSTR* Title) PURE; 
	STDMETHOD_(HRESULT, Set_Title) (THIS_ BSTR Title) PURE; 
	STDMETHOD_(HRESULT, Get_AssignedTo) (THIS_ BSTR* AssignedTo) PURE; 
	STDMETHOD_(HRESULT, Set_AssignedTo) (THIS_ BSTR AssignedTo) PURE; 
	STDMETHOD_(HRESULT, Get_Status) (THIS_ MsoSharedWorkspaceTaskStatus* Status) PURE; 
	STDMETHOD_(HRESULT, Set_Status) (THIS_ MsoSharedWorkspaceTaskStatus Status) PURE; 
	STDMETHOD_(HRESULT, Get_Priority) (THIS_ MsoSharedWorkspaceTaskPriority* Priority) PURE; 
	STDMETHOD_(HRESULT, Set_Priority) (THIS_ MsoSharedWorkspaceTaskPriority Priority) PURE; 
	STDMETHOD_(HRESULT, Get_Description) (THIS_ BSTR* Description) PURE; 
	STDMETHOD_(HRESULT, Set_Description) (THIS_ BSTR Description) PURE; 
	STDMETHOD_(HRESULT, Get_DueDate) (THIS_ VARIANT* DueDate) PURE; 
	STDMETHOD_(HRESULT, Set_DueDate) (THIS_ VARIANT DueDate) PURE; 
	STDMETHOD_(HRESULT, Get_CreatedBy) (THIS_ BSTR* CreatedBy) PURE; 
	STDMETHOD_(HRESULT, Get_CreatedDate) (THIS_ VARIANT* CreatedDate) PURE; 
	STDMETHOD_(HRESULT, Get_ModifiedBy) (THIS_ BSTR* ModifiedBy) PURE; 
	STDMETHOD_(HRESULT, Get_ModifiedDate) (THIS_ VARIANT* ModifiedDate) PURE; 
	STDMETHOD_(HRESULT, Save) (THIS ) PURE; 
	STDMETHOD_(HRESULT, Delete) (THIS ) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** ppidisp) PURE; 
};
typedef SharedWorkspaceTask* LPHAREDWORKSPACETASK;
#ifdef __cplusplus
// SharedWorkspaceTask  {000C0379-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TSharedWorkspaceTaskProxy : public __OCF TAutoProxy
{
public:
	TSharedWorkspaceTaskProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1610743808]
	IDispatch* _Application();

	// Creator:   [dispid 1610743809]
	long Creator();

	// Title:   [dispid 0]
	__OCF TAutoString Title();

	// Title:   [dispid 0]
	void Title(__OCF TAutoString arg0);

	// AssignedTo:   [dispid 1]
	__OCF TAutoString AssignedTo();

	// AssignedTo:   [dispid 1]
	void AssignedTo(__OCF TAutoString arg0);

	// Status:   [dispid 2]
	MsoSharedWorkspaceTaskStatus Status();

	// Status:   [dispid 2]
	void Status(MsoSharedWorkspaceTaskStatus arg0);

	// Priority:   [dispid 3]
	MsoSharedWorkspaceTaskPriority Priority();

	// Priority:   [dispid 3]
	void Priority(MsoSharedWorkspaceTaskPriority arg0);

	// Description:   [dispid 4]
	__OCF TAutoString Description();

	// Description:   [dispid 4]
	void Description(__OCF TAutoString arg0);

	// DueDate:   [dispid 5]
	__OCF TAutoVal DueDate();

	// DueDate:   [dispid 5]
	void DueDate(__OCF TAutoVal arg0);

	// CreatedBy:   [dispid 6]
	__OCF TAutoString CreatedBy();

	// CreatedDate:   [dispid 7]
	__OCF TAutoVal CreatedDate();

	// ModifiedBy:   [dispid 8]
	__OCF TAutoString ModifiedBy();

	// ModifiedDate:   [dispid 9]
	__OCF TAutoVal ModifiedDate();

	// Save:   [dispid 10]
	void Save();

	// Delete:   [dispid 11]
	void Delete();

	// Parent:   [dispid 12]
	IDispatch* Parent();
};
#endif

// Signature
// {000C0411-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE Signature
DECLARE_INTERFACE_(Signature, _IMsoDispObj)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
	// _IMsoDispObj methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ IDispatch** ppidisp) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* plCreator) PURE; 
#endif
	// Signature methods:
	STDMETHOD_(HRESULT, Get_Signer) (THIS_ BSTR* pbstr) PURE; 
	STDMETHOD_(HRESULT, Get_Issuer) (THIS_ BSTR* pbstr) PURE; 
	STDMETHOD_(HRESULT, Get_ExpireDate) (THIS_ VARIANT* pvarDate) PURE; 
	STDMETHOD_(HRESULT, Get_IsValid) (THIS_ VARIANT_BOOL* pfValid) PURE; 
	STDMETHOD_(HRESULT, Get_AttachCertificate) (THIS_ VARIANT_BOOL* pfAttach) PURE; 
	STDMETHOD_(HRESULT, Set_AttachCertificate) (THIS_ VARIANT_BOOL pfAttach) PURE; 
	STDMETHOD_(HRESULT, Delete) (THIS ) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** ppidisp) PURE; 
	STDMETHOD_(HRESULT, Get_IsCertificateExpired) (THIS_ VARIANT_BOOL* pfExpired) PURE; 
	STDMETHOD_(HRESULT, Get_IsCertificateRevoked) (THIS_ VARIANT_BOOL* pfExpired) PURE; 
	STDMETHOD_(HRESULT, Get_SignDate) (THIS_ VARIANT* pvarDate) PURE; 
};
typedef Signature* LPIGNATURE;
#ifdef __cplusplus
// Signature  {000C0411-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TSignatureProxy : public __OCF TAutoProxy
{
public:
	TSignatureProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1610743808]
	IDispatch* _Application();

	// Creator:   [dispid 1610743809]
	long Creator();

	// Signer:   [dispid 1610809344]
	__OCF TAutoString Signer();

	// Issuer:   [dispid 1610809345]
	__OCF TAutoString Issuer();

	// ExpireDate:   [dispid 1610809346]
	__OCF TAutoVal ExpireDate();

	// IsValid:   [dispid 1610809347]
	/*__OWL*/ TBool IsValid();

	// AttachCertificate:   [dispid 1610809348]
	/*__OWL*/ TBool AttachCertificate();

	// AttachCertificate:   [dispid 1610809348]
	void AttachCertificate(/*__OWL*/ TBool arg0);

	// Delete:   [dispid 1610809350]
	void Delete();

	// Parent:   [dispid 1610809351]
	IDispatch* Parent();

	// IsCertificateExpired:   [dispid 1610809352]
	/*__OWL*/ TBool IsCertificateExpired();

	// IsCertificateRevoked:   [dispid 1610809353]
	/*__OWL*/ TBool IsCertificateRevoked();

	// SignDate:   [dispid 1610809354]
	__OCF TAutoVal SignDate();
};
#endif

// SmartTag
// {000209ED-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE SmartTag
DECLARE_INTERFACE_(SmartTag, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// SmartTag methods:
	STDMETHOD_(HRESULT, Get_Name) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Get_XML) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Range) (THIS_ WordRange** prop) PURE; 
	STDMETHOD_(HRESULT, Get_DownloadURL) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Properties) (THIS_ CustomProperties** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Select) (THIS ) PURE; 
	STDMETHOD_(HRESULT, Delete) (THIS ) PURE; 
	STDMETHOD_(HRESULT, Get_SmartTagActions) (THIS_ SmartTagActions** prop) PURE; 
	STDMETHOD_(HRESULT, Get_XMLNode) (THIS_ XMLNode** prop) PURE; 
};
typedef SmartTag* LPMARTTAG;
#ifdef __cplusplus
// SmartTag  {000209ED-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TSmartTagProxy : public __OCF TAutoProxy
{
public:
	TSmartTagProxy() : TAutoProxy(0x0) {}

	// Name:   [dispid 0]
	__OCF TAutoString Name();

	// XML:   [dispid 2]
	__OCF TAutoString XML();

	// _Range:   [dispid 3]
	void _Range(TRangeProxy& Obj);

	// DownloadURL:   [dispid 4]
	__OCF TAutoString DownloadURL();

	// _Properties:   [dispid 5]
	void _Properties(TCustomPropertiesProxy& Obj);

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// Select:   [dispid 65535]
	void Select();

	// Delete:   [dispid 11]
	void Delete();

	// _SmartTagActions:   [dispid 1003]
	void _SmartTagActions(TSmartTagActionsProxy& Obj);

	// _XMLNode:   [dispid 1004]
	void _XMLNode(TXMLNodeProxy& Obj);
};
#endif

// SmartTagRecognizer
// {15EBE471-0182-4CCE-98D0-B6614D1C32A1}
#undef INTERFACE
#define INTERFACE SmartTagRecognizer
DECLARE_INTERFACE_(SmartTagRecognizer, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// SmartTagRecognizer methods:
	STDMETHOD_(HRESULT, Get_FullName) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Enabled) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Enabled) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_ProgID) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Caption) (THIS_ BSTR* prop) PURE; 
};
typedef SmartTagRecognizer* LPMARTTAGRECOGNIZER;
#ifdef __cplusplus
// SmartTagRecognizer  {15EBE471-0182-4CCE-98D0-B6614D1C32A1}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TSmartTagRecognizerProxy : public __OCF TAutoProxy
{
public:
	TSmartTagRecognizerProxy() : TAutoProxy(0x0) {}

	// FullName:   [dispid 1]
	__OCF TAutoString FullName();

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// Enabled:   [dispid 1003]
	/*__OWL*/ TBool Enabled();

	// Enabled:   [dispid 1003]
	void Enabled(/*__OWL*/ TBool arg0);

	// ProgID:   [dispid 0]
	__OCF TAutoString ProgID();

	// Caption:   [dispid 1004]
	__OCF TAutoString Caption();
};
#endif

// SmartTagType
// {5E9A888C-E5DC-4DCB-8308-3C91FB61E6F4}
#undef INTERFACE
#define INTERFACE SmartTagType
DECLARE_INTERFACE_(SmartTagType, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// SmartTagType methods:
	STDMETHOD_(HRESULT, Get_Name) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get_SmartTagActions) (THIS_ SmartTagActions** prop) PURE; 
	STDMETHOD_(HRESULT, Get_SmartTagRecognizers) (THIS_ SmartTagRecognizers** prop) PURE; 
	STDMETHOD_(HRESULT, Get_FriendlyName) (THIS_ BSTR* prop) PURE; 
};
typedef SmartTagType* LPMARTTAGTYPE;
#ifdef __cplusplus
// SmartTagType  {5E9A888C-E5DC-4DCB-8308-3C91FB61E6F4}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TSmartTagTypeProxy : public __OCF TAutoProxy
{
public:
	TSmartTagTypeProxy() : TAutoProxy(0x0) {}

	// Name:   [dispid 0]
	__OCF TAutoString Name();

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// _SmartTagActions:   [dispid 1003]
	void _SmartTagActions(TSmartTagActionsProxy& Obj);

	// _SmartTagRecognizers:   [dispid 1004]
	void _SmartTagRecognizers(TSmartTagRecognizersProxy& Obj);

	// FriendlyName:   [dispid 1005]
	__OCF TAutoString FriendlyName();
};
#endif

// SpellingSuggestion
// {000209AB-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE SpellingSuggestion
DECLARE_INTERFACE_(SpellingSuggestion, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// SpellingSuggestion methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Name) (THIS_ BSTR* prop) PURE; 
};
typedef SpellingSuggestion* LPPELLINGSUGGESTION;
#ifdef __cplusplus
// SpellingSuggestion  {000209AB-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TSpellingSuggestionProxy : public __OCF TAutoProxy
{
public:
	TSpellingSuggestionProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// Name:   [dispid 0]
	__OCF TAutoString Name();
};
#endif

// StyleSheet
// {000209EF-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE StyleSheet
DECLARE_INTERFACE_(StyleSheet, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// StyleSheet methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get_FullName) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Index) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Name) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Path) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Type) (THIS_ WdStyleSheetLinkType* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Type) (THIS_ WdStyleSheetLinkType prop) PURE; 
	STDMETHOD_(HRESULT, Get_Title) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Title) (THIS_ BSTR prop) PURE; 
	STDMETHOD_(HRESULT, Move) (THIS_ WdStyleSheetPrecedence Precedence) PURE; 
	STDMETHOD_(HRESULT, Delete) (THIS ) PURE; 
};
typedef StyleSheet* LPTYLESHEET;
#ifdef __cplusplus
// StyleSheet  {000209EF-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TStyleSheetProxy : public __OCF TAutoProxy
{
public:
	TStyleSheetProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 100]
	IDispatch* Parent();

	// FullName:   [dispid 1]
	__OCF TAutoString FullName();

	// _Index:   [dispid 2]
	long _Index();

	// Name:   [dispid 3]
	__OCF TAutoString Name();

	// Path:   [dispid 4]
	__OCF TAutoString Path();

	// Type:   [dispid 5]
	WdStyleSheetLinkType Type();

	// Type:   [dispid 5]
	void Type(WdStyleSheetLinkType arg0);

	// Title:   [dispid 6]
	__OCF TAutoString Title();

	// Title:   [dispid 6]
	void Title(__OCF TAutoString arg0);

	// Move:   [dispid 7]
	void Move(WdStyleSheetPrecedence Precedence);

	// Delete:   [dispid 8]
	void Delete();
};
#endif

// Subdocument
// {00020989-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE Subdocument
DECLARE_INTERFACE_(Subdocument, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// Subdocument methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Locked) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Locked) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_Range) (THIS_ WordRange** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Name) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Path) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Get_HasFile) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Level) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Delete) (THIS ) PURE; 
	STDMETHOD_(HRESULT, Split) (THIS_ WordRange* ) PURE; 
	STDMETHOD_(HRESULT, Open) (THIS_ Document** prop) PURE; 
};
typedef Subdocument* LPUBDOCUMENT;
#ifdef __cplusplus
// Subdocument  {00020989-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TSubdocumentProxy : public __OCF TAutoProxy
{
public:
	TSubdocumentProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// Locked:   [dispid 1]
	/*__OWL*/ TBool Locked();

	// Locked:   [dispid 1]
	void Locked(/*__OWL*/ TBool arg0);

	// _Range:   [dispid 2]
	void _Range(TRangeProxy& Obj);

	// Name:   [dispid 3]
	__OCF TAutoString Name();

	// Path:   [dispid 4]
	__OCF TAutoString Path();

	// HasFile:   [dispid 5]
	/*__OWL*/ TBool HasFile();

	// Level:   [dispid 6]
	long Level();

	// Delete:   [dispid 100]
	void Delete();

	// Split:   [dispid 101]
	void Split(WordRange* arg0);

	// Open:   [dispid 102]
	Document* Open();
};
#endif

// TableOfAuthoritiesCategory
// {00020977-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE TableOfAuthoritiesCategory
DECLARE_INTERFACE_(TableOfAuthoritiesCategory, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// TableOfAuthoritiesCategory methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Name) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Name) (THIS_ BSTR prop) PURE; 
	STDMETHOD_(HRESULT, Get_Index) (THIS_ long* prop) PURE; 
};
typedef TableOfAuthoritiesCategory* LPABLEOFAUTHORITIESCATEGORY;
#ifdef __cplusplus
// TableOfAuthoritiesCategory  {00020977-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TTableOfAuthoritiesCategoryProxy : public __OCF TAutoProxy
{
public:
	TTableOfAuthoritiesCategoryProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// Name:   [dispid 0]
	__OCF TAutoString Name();

	// Name:   [dispid 0]
	void Name(__OCF TAutoString arg0);

	// _Index:   [dispid 1]
	long _Index();
};
#endif

// TableOfAuthorities
// {00020911-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE TableOfAuthorities
DECLARE_INTERFACE_(TableOfAuthorities, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// TableOfAuthorities methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Passim) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Passim) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_KeepEntryFormatting) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_KeepEntryFormatting) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_Category) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Category) (THIS_ long prop) PURE; 
	STDMETHOD_(HRESULT, Get_Bookmark) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Bookmark) (THIS_ BSTR prop) PURE; 
	STDMETHOD_(HRESULT, Get_Separator) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Separator) (THIS_ BSTR prop) PURE; 
	STDMETHOD_(HRESULT, Get_IncludeSequenceName) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Set_IncludeSequenceName) (THIS_ BSTR prop) PURE; 
	STDMETHOD_(HRESULT, Get_EntrySeparator) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Set_EntrySeparator) (THIS_ BSTR prop) PURE; 
	STDMETHOD_(HRESULT, Get_PageRangeSeparator) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Set_PageRangeSeparator) (THIS_ BSTR prop) PURE; 
	STDMETHOD_(HRESULT, Get_IncludeCategoryHeader) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_IncludeCategoryHeader) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_PageNumberSeparator) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Set_PageNumberSeparator) (THIS_ BSTR prop) PURE; 
	STDMETHOD_(HRESULT, Get_Range) (THIS_ WordRange** prop) PURE; 
	STDMETHOD_(HRESULT, Get_TabLeader) (THIS_ WdTabLeader* prop) PURE; 
	STDMETHOD_(HRESULT, Set_TabLeader) (THIS_ WdTabLeader prop) PURE; 
	STDMETHOD_(HRESULT, Delete) (THIS ) PURE; 
	STDMETHOD_(HRESULT, Update) (THIS ) PURE; 
};
typedef TableOfAuthorities* LPABLEOFAUTHORITIES;
#ifdef __cplusplus
// TableOfAuthorities  {00020911-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TTableOfAuthoritiesProxy : public __OCF TAutoProxy
{
public:
	TTableOfAuthoritiesProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// Passim:   [dispid 1]
	/*__OWL*/ TBool Passim();

	// Passim:   [dispid 1]
	void Passim(/*__OWL*/ TBool arg0);

	// KeepEntryFormatting:   [dispid 2]
	/*__OWL*/ TBool KeepEntryFormatting();

	// KeepEntryFormatting:   [dispid 2]
	void KeepEntryFormatting(/*__OWL*/ TBool arg0);

	// Category:   [dispid 3]
	long Category();

	// Category:   [dispid 3]
	void Category(long arg0);

	// _Bookmark:   [dispid 4]
	__OCF TAutoString _Bookmark();

	// _Bookmark:   [dispid 4]
	void _Bookmark(__OCF TAutoString arg0);

	// Separator:   [dispid 5]
	__OCF TAutoString Separator();

	// Separator:   [dispid 5]
	void Separator(__OCF TAutoString arg0);

	// IncludeSequenceName:   [dispid 6]
	__OCF TAutoString IncludeSequenceName();

	// IncludeSequenceName:   [dispid 6]
	void IncludeSequenceName(__OCF TAutoString arg0);

	// EntrySeparator:   [dispid 7]
	__OCF TAutoString EntrySeparator();

	// EntrySeparator:   [dispid 7]
	void EntrySeparator(__OCF TAutoString arg0);

	// PageRangeSeparator:   [dispid 8]
	__OCF TAutoString PageRangeSeparator();

	// PageRangeSeparator:   [dispid 8]
	void PageRangeSeparator(__OCF TAutoString arg0);

	// IncludeCategoryHeader:   [dispid 9]
	/*__OWL*/ TBool IncludeCategoryHeader();

	// IncludeCategoryHeader:   [dispid 9]
	void IncludeCategoryHeader(/*__OWL*/ TBool arg0);

	// PageNumberSeparator:   [dispid 10]
	__OCF TAutoString PageNumberSeparator();

	// PageNumberSeparator:   [dispid 10]
	void PageNumberSeparator(__OCF TAutoString arg0);

	// _Range:   [dispid 11]
	void _Range(TRangeProxy& Obj);

	// TabLeader:   [dispid 12]
	WdTabLeader TabLeader();

	// TabLeader:   [dispid 12]
	void TabLeader(WdTabLeader arg0);

	// Delete:   [dispid 100]
	void Delete();

	// Update:   [dispid 101]
	void Update();
};
#endif

// TableOfContents
// {00020913-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE TableOfContents
DECLARE_INTERFACE_(TableOfContents, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// TableOfContents methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get_UseHeadingStyles) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_UseHeadingStyles) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_UseFields) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_UseFields) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_UpperHeadingLevel) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Set_UpperHeadingLevel) (THIS_ long prop) PURE; 
	STDMETHOD_(HRESULT, Get_LowerHeadingLevel) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Set_LowerHeadingLevel) (THIS_ long prop) PURE; 
	STDMETHOD_(HRESULT, Get_TableID) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Set_TableID) (THIS_ BSTR prop) PURE; 
	STDMETHOD_(HRESULT, Get_HeadingStyles) (THIS_ HeadingStyles** prop) PURE; 
	STDMETHOD_(HRESULT, Get_RightAlignPageNumbers) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_RightAlignPageNumbers) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_IncludePageNumbers) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_IncludePageNumbers) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_Range) (THIS_ WordRange** prop) PURE; 
	STDMETHOD_(HRESULT, Get_TabLeader) (THIS_ WdTabLeader* prop) PURE; 
	STDMETHOD_(HRESULT, Set_TabLeader) (THIS_ WdTabLeader prop) PURE; 
	STDMETHOD_(HRESULT, Delete) (THIS ) PURE; 
	STDMETHOD_(HRESULT, UpdatePageNumbers) (THIS ) PURE; 
	STDMETHOD_(HRESULT, Update) (THIS ) PURE; 
	STDMETHOD_(HRESULT, Get_UseHyperlinks) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_UseHyperlinks) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_HidePageNumbersInWeb) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_HidePageNumbersInWeb) (THIS_ VARIANT_BOOL prop) PURE; 
};
typedef TableOfContents* LPABLEOFCONTENTS;
#ifdef __cplusplus
// TableOfContents  {00020913-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TTableOfContentsProxy : public __OCF TAutoProxy
{
public:
	TTableOfContentsProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// UseHeadingStyles:   [dispid 1]
	/*__OWL*/ TBool UseHeadingStyles();

	// UseHeadingStyles:   [dispid 1]
	void UseHeadingStyles(/*__OWL*/ TBool arg0);

	// UseFields:   [dispid 2]
	/*__OWL*/ TBool UseFields();

	// UseFields:   [dispid 2]
	void UseFields(/*__OWL*/ TBool arg0);

	// UpperHeadingLevel:   [dispid 3]
	long UpperHeadingLevel();

	// UpperHeadingLevel:   [dispid 3]
	void UpperHeadingLevel(long arg0);

	// LowerHeadingLevel:   [dispid 4]
	long LowerHeadingLevel();

	// LowerHeadingLevel:   [dispid 4]
	void LowerHeadingLevel(long arg0);

	// TableID:   [dispid 5]
	__OCF TAutoString TableID();

	// TableID:   [dispid 5]
	void TableID(__OCF TAutoString arg0);

	// _HeadingStyles:   [dispid 6]
	void _HeadingStyles(THeadingStylesProxy& Obj);

	// RightAlignPageNumbers:   [dispid 7]
	/*__OWL*/ TBool RightAlignPageNumbers();

	// RightAlignPageNumbers:   [dispid 7]
	void RightAlignPageNumbers(/*__OWL*/ TBool arg0);

	// IncludePageNumbers:   [dispid 8]
	/*__OWL*/ TBool IncludePageNumbers();

	// IncludePageNumbers:   [dispid 8]
	void IncludePageNumbers(/*__OWL*/ TBool arg0);

	// _Range:   [dispid 9]
	void _Range(TRangeProxy& Obj);

	// TabLeader:   [dispid 10]
	WdTabLeader TabLeader();

	// TabLeader:   [dispid 10]
	void TabLeader(WdTabLeader arg0);

	// Delete:   [dispid 100]
	void Delete();

	// UpdatePageNumbers:   [dispid 101]
	void UpdatePageNumbers();

	// Update:   [dispid 102]
	void Update();

	// UseHyperlinks:   [dispid 11]
	/*__OWL*/ TBool UseHyperlinks();

	// UseHyperlinks:   [dispid 11]
	void UseHyperlinks(/*__OWL*/ TBool arg0);

	// HidePageNumbersInWeb:   [dispid 12]
	/*__OWL*/ TBool HidePageNumbersInWeb();

	// HidePageNumbersInWeb:   [dispid 12]
	void HidePageNumbersInWeb(/*__OWL*/ TBool arg0);
};
#endif

// TableOfFigures
// {00020921-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE TableOfFigures
DECLARE_INTERFACE_(TableOfFigures, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// TableOfFigures methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Caption) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Caption) (THIS_ BSTR prop) PURE; 
	STDMETHOD_(HRESULT, Get_IncludeLabel) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_IncludeLabel) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_RightAlignPageNumbers) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_RightAlignPageNumbers) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_UseHeadingStyles) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_UseHeadingStyles) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_LowerHeadingLevel) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Set_LowerHeadingLevel) (THIS_ long prop) PURE; 
	STDMETHOD_(HRESULT, Get_UpperHeadingLevel) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Set_UpperHeadingLevel) (THIS_ long prop) PURE; 
	STDMETHOD_(HRESULT, Get_IncludePageNumbers) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_IncludePageNumbers) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_Range) (THIS_ WordRange** prop) PURE; 
	STDMETHOD_(HRESULT, Get_UseFields) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_UseFields) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_TableID) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Set_TableID) (THIS_ BSTR prop) PURE; 
	STDMETHOD_(HRESULT, Get_HeadingStyles) (THIS_ HeadingStyles** prop) PURE; 
	STDMETHOD_(HRESULT, Get_TabLeader) (THIS_ WdTabLeader* prop) PURE; 
	STDMETHOD_(HRESULT, Set_TabLeader) (THIS_ WdTabLeader prop) PURE; 
	STDMETHOD_(HRESULT, Delete) (THIS ) PURE; 
	STDMETHOD_(HRESULT, UpdatePageNumbers) (THIS ) PURE; 
	STDMETHOD_(HRESULT, Update) (THIS ) PURE; 
	STDMETHOD_(HRESULT, Get_UseHyperlinks) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_UseHyperlinks) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_HidePageNumbersInWeb) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_HidePageNumbersInWeb) (THIS_ VARIANT_BOOL prop) PURE; 
};
typedef TableOfFigures* LPABLEOFFIGURES;
#ifdef __cplusplus
// TableOfFigures  {00020921-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TTableOfFiguresProxy : public __OCF TAutoProxy
{
public:
	TTableOfFiguresProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// Caption:   [dispid 1]
	__OCF TAutoString Caption();

	// Caption:   [dispid 1]
	void Caption(__OCF TAutoString arg0);

	// IncludeLabel:   [dispid 2]
	/*__OWL*/ TBool IncludeLabel();

	// IncludeLabel:   [dispid 2]
	void IncludeLabel(/*__OWL*/ TBool arg0);

	// RightAlignPageNumbers:   [dispid 3]
	/*__OWL*/ TBool RightAlignPageNumbers();

	// RightAlignPageNumbers:   [dispid 3]
	void RightAlignPageNumbers(/*__OWL*/ TBool arg0);

	// UseHeadingStyles:   [dispid 4]
	/*__OWL*/ TBool UseHeadingStyles();

	// UseHeadingStyles:   [dispid 4]
	void UseHeadingStyles(/*__OWL*/ TBool arg0);

	// LowerHeadingLevel:   [dispid 5]
	long LowerHeadingLevel();

	// LowerHeadingLevel:   [dispid 5]
	void LowerHeadingLevel(long arg0);

	// UpperHeadingLevel:   [dispid 6]
	long UpperHeadingLevel();

	// UpperHeadingLevel:   [dispid 6]
	void UpperHeadingLevel(long arg0);

	// IncludePageNumbers:   [dispid 7]
	/*__OWL*/ TBool IncludePageNumbers();

	// IncludePageNumbers:   [dispid 7]
	void IncludePageNumbers(/*__OWL*/ TBool arg0);

	// _Range:   [dispid 8]
	void _Range(TRangeProxy& Obj);

	// UseFields:   [dispid 9]
	/*__OWL*/ TBool UseFields();

	// UseFields:   [dispid 9]
	void UseFields(/*__OWL*/ TBool arg0);

	// TableID:   [dispid 10]
	__OCF TAutoString TableID();

	// TableID:   [dispid 10]
	void TableID(__OCF TAutoString arg0);

	// _HeadingStyles:   [dispid 11]
	void _HeadingStyles(THeadingStylesProxy& Obj);

	// TabLeader:   [dispid 12]
	WdTabLeader TabLeader();

	// TabLeader:   [dispid 12]
	void TabLeader(WdTabLeader arg0);

	// Delete:   [dispid 100]
	void Delete();

	// UpdatePageNumbers:   [dispid 101]
	void UpdatePageNumbers();

	// Update:   [dispid 102]
	void Update();

	// UseHyperlinks:   [dispid 13]
	/*__OWL*/ TBool UseHyperlinks();

	// UseHyperlinks:   [dispid 13]
	void UseHyperlinks(/*__OWL*/ TBool arg0);

	// HidePageNumbersInWeb:   [dispid 14]
	/*__OWL*/ TBool HidePageNumbersInWeb();

	// HidePageNumbersInWeb:   [dispid 14]
	void HidePageNumbersInWeb(/*__OWL*/ TBool arg0);
};
#endif

// WdTabAlignment
typedef enum tagWdTabAlignment
{
	wdAlignTabLeft = 0, 
	wdAlignTabCenter = 1, 
	wdAlignTabRight = 2, 
	wdAlignTabDecimal = 3, 
	wdAlignTabBar = 4, 
	wdAlignTabList = 6, 
} WdTabAlignment;

// TabStop
// {00020954-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE TabStop
DECLARE_INTERFACE_(TabStop, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// TabStop methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Alignment) (THIS_ WdTabAlignment* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Alignment) (THIS_ WdTabAlignment prop) PURE; 
	STDMETHOD_(HRESULT, Get_Leader) (THIS_ WdTabLeader* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Leader) (THIS_ WdTabLeader prop) PURE; 
	STDMETHOD_(HRESULT, Get_Position) (THIS_ float* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Position) (THIS_ float prop) PURE; 
	STDMETHOD_(HRESULT, Get_CustomTab) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Next) (THIS_ TabStop** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Previous) (THIS_ TabStop** prop) PURE; 
	STDMETHOD_(HRESULT, Clear) (THIS ) PURE; 
};
typedef TabStop* LPABSTOP;
#ifdef __cplusplus
// TabStop  {00020954-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TTabStopProxy : public __OCF TAutoProxy
{
public:
	TTabStopProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// Alignment:   [dispid 100]
	WdTabAlignment Alignment();

	// Alignment:   [dispid 100]
	void Alignment(WdTabAlignment arg0);

	// Leader:   [dispid 101]
	WdTabLeader Leader();

	// Leader:   [dispid 101]
	void Leader(WdTabLeader arg0);

	// Position:   [dispid 102]
	float Position();

	// Position:   [dispid 102]
	void Position(float arg0);

	// CustomTab:   [dispid 103]
	/*__OWL*/ TBool CustomTab();

	// Next:   [dispid 104]
	void Next(TTabStopProxy& Obj);

	// Previous:   [dispid 105]
	void Previous(TTabStopProxy& Obj);

	// Clear:   [dispid 200]
	void Clear();
};
#endif

// TaskPane
// {B9F1A4E2-0D0A-43B7-8495-139E7ACBD840}
#undef INTERFACE
#define INTERFACE TaskPane
DECLARE_INTERFACE_(TaskPane, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// TaskPane methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Visible) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Visible) (THIS_ VARIANT_BOOL prop) PURE; 
};
typedef TaskPane* LPASKPANE;
#ifdef __cplusplus
// TaskPane  {B9F1A4E2-0D0A-43B7-8495-139E7ACBD840}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TTaskPaneProxy : public __OCF TAutoProxy
{
public:
	TTaskPaneProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// Visible:   [dispid 1003]
	/*__OWL*/ TBool Visible();

	// Visible:   [dispid 1003]
	void Visible(/*__OWL*/ TBool arg0);
};
#endif

// Task
// {00020982-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE Task
DECLARE_INTERFACE_(Task, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// Task methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Name) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Left) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Left) (THIS_ long prop) PURE; 
	STDMETHOD_(HRESULT, Get_Top) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Top) (THIS_ long prop) PURE; 
	STDMETHOD_(HRESULT, Get_Width) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Width) (THIS_ long prop) PURE; 
	STDMETHOD_(HRESULT, Get_Height) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Height) (THIS_ long prop) PURE; 
	STDMETHOD_(HRESULT, Get_WindowState) (THIS_ WdWindowState* prop) PURE; 
	STDMETHOD_(HRESULT, Set_WindowState) (THIS_ WdWindowState prop) PURE; 
	STDMETHOD_(HRESULT, Get_Visible) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Visible) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Activate) (THIS_ VARIANT* Wait) PURE; 
	STDMETHOD_(HRESULT, Close) (THIS ) PURE; 
	STDMETHOD_(HRESULT, Move) (THIS_ long Left, long Top) PURE; 
	STDMETHOD_(HRESULT, Resize) (THIS_ long Width, long Height) PURE; 
	STDMETHOD_(HRESULT, SendWindowMessage) (THIS_ long Message, long wParam, long lParam) PURE; 
};
typedef Task* LPASK;
#ifdef __cplusplus
// Task  {00020982-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TTaskProxy : public __OCF TAutoProxy
{
public:
	TTaskProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// Name:   [dispid 0]
	__OCF TAutoString Name();

	// Left:   [dispid 1]
	long Left();

	// Left:   [dispid 1]
	void Left(long arg0);

	// Top:   [dispid 2]
	long Top();

	// Top:   [dispid 2]
	void Top(long arg0);

	// Width:   [dispid 3]
	long Width();

	// Width:   [dispid 3]
	void Width(long arg0);

	// Height:   [dispid 4]
	long Height();

	// Height:   [dispid 4]
	void Height(long arg0);

	// WindowState:   [dispid 5]
	WdWindowState WindowState();

	// WindowState:   [dispid 5]
	void WindowState(WdWindowState arg0);

	// Visible:   [dispid 6]
	/*__OWL*/ TBool Visible();

	// Visible:   [dispid 6]
	void Visible(/*__OWL*/ TBool arg0);

	// Activate:   [dispid 10]
	void Activate(__OCF TAutoVal* Wait = 0);

	// Close:   [dispid 11]
	void Close();

	// Move:   [dispid 12]
	void Move(long Left, long Top);

	// Resize:   [dispid 13]
	void Resize(long Width, long Height);

	// SendWindowMessage:   [dispid 14]
	void SendWindowMessage(long Message, long wParam, long lParam);
};
#endif

// TextColumn
// {00020974-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE TextColumn
DECLARE_INTERFACE_(TextColumn, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// TextColumn methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Width) (THIS_ float* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Width) (THIS_ float prop) PURE; 
	STDMETHOD_(HRESULT, Get_SpaceAfter) (THIS_ float* prop) PURE; 
	STDMETHOD_(HRESULT, Set_SpaceAfter) (THIS_ float prop) PURE; 
};
typedef TextColumn* LPEXTCOLUMN;
#ifdef __cplusplus
// TextColumn  {00020974-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TTextColumnProxy : public __OCF TAutoProxy
{
public:
	TTextColumnProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// Width:   [dispid 100]
	float Width();

	// Width:   [dispid 100]
	void Width(float arg0);

	// SpaceAfter:   [dispid 101]
	float SpaceAfter();

	// SpaceAfter:   [dispid 101]
	void SpaceAfter(float arg0);
};
#endif

// WdTextFormFieldType
typedef enum tagWdTextFormFieldType
{
	wdRegularText = 0, 
	wdNumberText = 1, 
	wdDateText = 2, 
	wdCurrentDateText = 3, 
	wdCurrentTimeText = 4, 
	wdCalculationText = 5, 
} WdTextFormFieldType;

// TextInput
// {00020927-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE TextInput
DECLARE_INTERFACE_(TextInput, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// TextInput methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Valid) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Default) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Default) (THIS_ BSTR prop) PURE; 
	STDMETHOD_(HRESULT, Get_Type) (THIS_ WdTextFormFieldType* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Format) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Width) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Width) (THIS_ long prop) PURE; 
	STDMETHOD_(HRESULT, Clear) (THIS ) PURE; 
	STDMETHOD_(HRESULT, EditType) (THIS_ WdTextFormFieldType Type, VARIANT* Default, VARIANT* Format, VARIANT* Enabled) PURE; 
};
typedef TextInput* LPEXTINPUT;
#ifdef __cplusplus
// TextInput  {00020927-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TTextInputProxy : public __OCF TAutoProxy
{
public:
	TTextInputProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// Valid:   [dispid 0]
	/*__OWL*/ TBool Valid();

	// Default:   [dispid 1]
	__OCF TAutoString Default();

	// Default:   [dispid 1]
	void Default(__OCF TAutoString arg0);

	// Type:   [dispid 2]
	WdTextFormFieldType Type();

	// Format:   [dispid 3]
	__OCF TAutoString Format();

	// Width:   [dispid 4]
	long Width();

	// Width:   [dispid 4]
	void Width(long arg0);

	// Clear:   [dispid 101]
	void Clear();

	// EditType:   [dispid 102]
	void EditType(WdTextFormFieldType Type, __OCF TAutoVal* Default = 0, __OCF TAutoVal* Format = 0, __OCF TAutoVal* Enabled = 0);
};
#endif

// TwoInitialCapsException
// {00020943-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE TwoInitialCapsException
DECLARE_INTERFACE_(TwoInitialCapsException, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// TwoInitialCapsException methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Index) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Name) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Delete) (THIS ) PURE; 
};
typedef TwoInitialCapsException* LPWOINITIALCAPSEXCEPTION;
#ifdef __cplusplus
// TwoInitialCapsException  {00020943-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TTwoInitialCapsExceptionProxy : public __OCF TAutoProxy
{
public:
	TTwoInitialCapsExceptionProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// _Index:   [dispid 1]
	long _Index();

	// Name:   [dispid 2]
	__OCF TAutoString Name();

	// Delete:   [dispid 101]
	void Delete();
};
#endif

// Variable
// {00020966-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE Variable
DECLARE_INTERFACE_(Variable, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// Variable methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Name) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Value) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Value) (THIS_ BSTR prop) PURE; 
	STDMETHOD_(HRESULT, Get_Index) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Delete) (THIS ) PURE; 
};
typedef Variable* LPARIABLE;
#ifdef __cplusplus
// Variable  {00020966-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TVariableProxy : public __OCF TAutoProxy
{
public:
	TVariableProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// Name:   [dispid 1]
	__OCF TAutoString Name();

	// Value:   [dispid 0]
	__OCF TAutoString Value();

	// Value:   [dispid 0]
	void Value(__OCF TAutoString arg0);

	// _Index:   [dispid 2]
	long _Index();

	// Delete:   [dispid 11]
	void Delete();
};
#endif

// Version
// {000209B4-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE Version
DECLARE_INTERFACE_(Version, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// Version methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get_SavedBy) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Comment) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Date) (THIS_ DATE* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Index) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, OpenOld) (THIS ) PURE; 
	STDMETHOD_(HRESULT, Delete) (THIS ) PURE; 
	STDMETHOD_(HRESULT, Open) (THIS_ Document** prop) PURE; 
};
typedef Version* LPERSION;
#ifdef __cplusplus
// Version  {000209B4-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TVersionProxy : public __OCF TAutoProxy
{
public:
	TVersionProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// SavedBy:   [dispid 1003]
	__OCF TAutoString SavedBy();

	// _Comment:   [dispid 1004]
	__OCF TAutoString _Comment();

	// Date:   [dispid 1005]
	__OCF TAutoDate Date();

	// _Index:   [dispid 2]
	long _Index();

	// OpenOld:   [dispid 101]
	void OpenOld();

	// Delete:   [dispid 102]
	void Delete();

	// Open:   [dispid 103]
	Document* Open();
};
#endif

// WdFieldShading
typedef enum tagWdFieldShading
{
	wdFieldShadingNever = 0, 
	wdFieldShadingAlways = 1, 
	wdFieldShadingWhenSelected = 2, 
} WdFieldShading;

// WdSeekView
typedef enum tagWdSeekView
{
	wdSeekMainDocument = 0, 
	wdSeekPrimaryHeader = 1, 
	wdSeekFirstPageHeader = 2, 
	wdSeekEvenPagesHeader = 3, 
	wdSeekPrimaryFooter = 4, 
	wdSeekFirstPageFooter = 5, 
	wdSeekEvenPagesFooter = 6, 
	wdSeekFootnotes = 7, 
	wdSeekEndnotes = 8, 
	wdSeekCurrentPageHeader = 9, 
	wdSeekCurrentPageFooter = 10, 
} WdSeekView;

// WdSpecialPane
typedef enum tagWdSpecialPane
{
	wdPaneNone = 0, 
	wdPanePrimaryHeader = 1, 
	wdPaneFirstPageHeader = 2, 
	wdPaneEvenPagesHeader = 3, 
	wdPanePrimaryFooter = 4, 
	wdPaneFirstPageFooter = 5, 
	wdPaneEvenPagesFooter = 6, 
	wdPaneFootnotes = 7, 
	wdPaneEndnotes = 8, 
	wdPaneFootnoteContinuationNotice = 9, 
	wdPaneFootnoteContinuationSeparator = 10, 
	wdPaneFootnoteSeparator = 11, 
	wdPaneEndnoteContinuationNotice = 12, 
	wdPaneEndnoteContinuationSeparator = 13, 
	wdPaneEndnoteSeparator = 14, 
	wdPaneComments = 15, 
	wdPaneCurrentPageHeader = 16, 
	wdPaneCurrentPageFooter = 17, 
	wdPaneRevisions = 18, 
} WdSpecialPane;

// WdRevisionsView
typedef enum tagWdRevisionsView
{
	wdRevisionsViewFinal = 0, 
	wdRevisionsViewOriginal = 1, 
} WdRevisionsView;

// WdRevisionsMode
typedef enum tagWdRevisionsMode
{
	wdBalloonRevisions = 0, 
	wdInLineRevisions = 1, 
	wdMixedRevisions = 2, 
} WdRevisionsMode;

// WdRevisionsBalloonWidthType
typedef enum tagWdRevisionsBalloonWidthType
{
	wdBalloonWidthPercent = 0, 
	wdBalloonWidthPoints = 1, 
} WdRevisionsBalloonWidthType;

// WdRevisionsBalloonMargin
typedef enum tagWdRevisionsBalloonMargin
{
	wdLeftMargin = 0, 
	wdRightMargin = 1, 
} WdRevisionsBalloonMargin;

// View
// {000209A5-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE View
DECLARE_INTERFACE_(View, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// View methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Type) (THIS_ WdViewType* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Type) (THIS_ WdViewType prop) PURE; 
	STDMETHOD_(HRESULT, Get_FullScreen) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_FullScreen) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_Draft) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Draft) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_ShowAll) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_ShowAll) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_ShowFieldCodes) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_ShowFieldCodes) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_MailMergeDataView) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_MailMergeDataView) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_Magnifier) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Magnifier) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_ShowFirstLineOnly) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_ShowFirstLineOnly) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_ShowFormat) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_ShowFormat) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_Zoom) (THIS_ Zoom** prop) PURE; 
	STDMETHOD_(HRESULT, Get_ShowObjectAnchors) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_ShowObjectAnchors) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_ShowTextBoundaries) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_ShowTextBoundaries) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_ShowHighlight) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_ShowHighlight) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_ShowDrawings) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_ShowDrawings) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_ShowTabs) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_ShowTabs) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_ShowSpaces) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_ShowSpaces) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_ShowParagraphs) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_ShowParagraphs) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_ShowHyphens) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_ShowHyphens) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_ShowHiddenText) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_ShowHiddenText) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_WrapToWindow) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_WrapToWindow) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_ShowPicturePlaceHolders) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_ShowPicturePlaceHolders) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_ShowBookmarks) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_ShowBookmarks) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_FieldShading) (THIS_ WdFieldShading* prop) PURE; 
	STDMETHOD_(HRESULT, Set_FieldShading) (THIS_ WdFieldShading prop) PURE; 
	STDMETHOD_(HRESULT, Get_ShowAnimation) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_ShowAnimation) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_TableGridlines) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_TableGridlines) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_EnlargeFontsLessThan) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Set_EnlargeFontsLessThan) (THIS_ long prop) PURE; 
	STDMETHOD_(HRESULT, Get_ShowMainTextLayer) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_ShowMainTextLayer) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_SeekView) (THIS_ WdSeekView* prop) PURE; 
	STDMETHOD_(HRESULT, Set_SeekView) (THIS_ WdSeekView prop) PURE; 
	STDMETHOD_(HRESULT, Get_SplitSpecial) (THIS_ WdSpecialPane* prop) PURE; 
	STDMETHOD_(HRESULT, Set_SplitSpecial) (THIS_ WdSpecialPane prop) PURE; 
	STDMETHOD_(HRESULT, Get_BrowseToWindow) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Set_BrowseToWindow) (THIS_ long prop) PURE; 
	STDMETHOD_(HRESULT, Get_ShowOptionalBreaks) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_ShowOptionalBreaks) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, CollapseOutline) (THIS_ VARIANT* ) PURE; 
	STDMETHOD_(HRESULT, ExpandOutline) (THIS_ VARIANT* ) PURE; 
	STDMETHOD_(HRESULT, ShowAllHeadings) (THIS ) PURE; 
	STDMETHOD_(HRESULT, ShowHeading) (THIS_ long Level) PURE; 
	STDMETHOD_(HRESULT, PreviousHeaderFooter) (THIS ) PURE; 
	STDMETHOD_(HRESULT, NextHeaderFooter) (THIS ) PURE; 
	STDMETHOD_(HRESULT, Get_DisplayPageBoundaries) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_DisplayPageBoundaries) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_DisplaySmartTags) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_DisplaySmartTags) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_ShowRevisionsAndComments) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_ShowRevisionsAndComments) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_ShowComments) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_ShowComments) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_ShowInsertionsAndDeletions) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_ShowInsertionsAndDeletions) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_ShowFormatChanges) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_ShowFormatChanges) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_RevisionsView) (THIS_ WdRevisionsView* prop) PURE; 
	STDMETHOD_(HRESULT, Set_RevisionsView) (THIS_ WdRevisionsView prop) PURE; 
	STDMETHOD_(HRESULT, Get_RevisionsMode) (THIS_ WdRevisionsMode* prop) PURE; 
	STDMETHOD_(HRESULT, Set_RevisionsMode) (THIS_ WdRevisionsMode prop) PURE; 
	STDMETHOD_(HRESULT, Get_RevisionsBalloonWidth) (THIS_ float* prop) PURE; 
	STDMETHOD_(HRESULT, Set_RevisionsBalloonWidth) (THIS_ float prop) PURE; 
	STDMETHOD_(HRESULT, Get_RevisionsBalloonWidthType) (THIS_ WdRevisionsBalloonWidthType* prop) PURE; 
	STDMETHOD_(HRESULT, Set_RevisionsBalloonWidthType) (THIS_ WdRevisionsBalloonWidthType prop) PURE; 
	STDMETHOD_(HRESULT, Get_RevisionsBalloonSide) (THIS_ WdRevisionsBalloonMargin* prop) PURE; 
	STDMETHOD_(HRESULT, Set_RevisionsBalloonSide) (THIS_ WdRevisionsBalloonMargin prop) PURE; 
	STDMETHOD_(HRESULT, Get_Reviewers) (THIS_ Reviewers** prop) PURE; 
	STDMETHOD_(HRESULT, Get_RevisionsBalloonShowConnectingLines) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_RevisionsBalloonShowConnectingLines) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_ReadingLayout) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_ReadingLayout) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_ShowXMLMarkup) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Set_ShowXMLMarkup) (THIS_ long prop) PURE; 
	STDMETHOD_(HRESULT, Get_ShadeEditableRanges) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Set_ShadeEditableRanges) (THIS_ long prop) PURE; 
	STDMETHOD_(HRESULT, Get_ShowInkAnnotations) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_ShowInkAnnotations) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_DisplayBackgrounds) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_DisplayBackgrounds) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_ReadingLayoutActualView) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_ReadingLayoutActualView) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_ReadingLayoutAllowMultiplePages) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_ReadingLayoutAllowMultiplePages) (THIS_ VARIANT_BOOL prop) PURE; 
};
typedef View* LPIEW;
#ifdef __cplusplus
// View  {000209A5-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TViewProxy : public __OCF TAutoProxy
{
public:
	TViewProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// Type:   [dispid 0]
	WdViewType Type();

	// Type:   [dispid 0]
	void Type(WdViewType arg0);

	// FullScreen:   [dispid 1]
	/*__OWL*/ TBool FullScreen();

	// FullScreen:   [dispid 1]
	void FullScreen(/*__OWL*/ TBool arg0);

	// Draft:   [dispid 2]
	/*__OWL*/ TBool Draft();

	// Draft:   [dispid 2]
	void Draft(/*__OWL*/ TBool arg0);

	// ShowAll:   [dispid 3]
	/*__OWL*/ TBool ShowAll();

	// ShowAll:   [dispid 3]
	void ShowAll(/*__OWL*/ TBool arg0);

	// ShowFieldCodes:   [dispid 4]
	/*__OWL*/ TBool ShowFieldCodes();

	// ShowFieldCodes:   [dispid 4]
	void ShowFieldCodes(/*__OWL*/ TBool arg0);

	// MailMergeDataView:   [dispid 5]
	/*__OWL*/ TBool MailMergeDataView();

	// MailMergeDataView:   [dispid 5]
	void MailMergeDataView(/*__OWL*/ TBool arg0);

	// Magnifier:   [dispid 7]
	/*__OWL*/ TBool Magnifier();

	// Magnifier:   [dispid 7]
	void Magnifier(/*__OWL*/ TBool arg0);

	// ShowFirstLineOnly:   [dispid 8]
	/*__OWL*/ TBool ShowFirstLineOnly();

	// ShowFirstLineOnly:   [dispid 8]
	void ShowFirstLineOnly(/*__OWL*/ TBool arg0);

	// ShowFormat:   [dispid 9]
	/*__OWL*/ TBool ShowFormat();

	// ShowFormat:   [dispid 9]
	void ShowFormat(/*__OWL*/ TBool arg0);

	// _Zoom:   [dispid 10]
	void _Zoom(TZoomProxy& Obj);

	// ShowObjectAnchors:   [dispid 11]
	/*__OWL*/ TBool ShowObjectAnchors();

	// ShowObjectAnchors:   [dispid 11]
	void ShowObjectAnchors(/*__OWL*/ TBool arg0);

	// ShowTextBoundaries:   [dispid 12]
	/*__OWL*/ TBool ShowTextBoundaries();

	// ShowTextBoundaries:   [dispid 12]
	void ShowTextBoundaries(/*__OWL*/ TBool arg0);

	// ShowHighlight:   [dispid 13]
	/*__OWL*/ TBool ShowHighlight();

	// ShowHighlight:   [dispid 13]
	void ShowHighlight(/*__OWL*/ TBool arg0);

	// ShowDrawings:   [dispid 14]
	/*__OWL*/ TBool ShowDrawings();

	// ShowDrawings:   [dispid 14]
	void ShowDrawings(/*__OWL*/ TBool arg0);

	// ShowTabs:   [dispid 15]
	/*__OWL*/ TBool ShowTabs();

	// ShowTabs:   [dispid 15]
	void ShowTabs(/*__OWL*/ TBool arg0);

	// ShowSpaces:   [dispid 16]
	/*__OWL*/ TBool ShowSpaces();

	// ShowSpaces:   [dispid 16]
	void ShowSpaces(/*__OWL*/ TBool arg0);

	// ShowParagraphs:   [dispid 17]
	/*__OWL*/ TBool ShowParagraphs();

	// ShowParagraphs:   [dispid 17]
	void ShowParagraphs(/*__OWL*/ TBool arg0);

	// ShowHyphens:   [dispid 18]
	/*__OWL*/ TBool ShowHyphens();

	// ShowHyphens:   [dispid 18]
	void ShowHyphens(/*__OWL*/ TBool arg0);

	// ShowHiddenText:   [dispid 19]
	/*__OWL*/ TBool ShowHiddenText();

	// ShowHiddenText:   [dispid 19]
	void ShowHiddenText(/*__OWL*/ TBool arg0);

	// WrapToWindow:   [dispid 20]
	/*__OWL*/ TBool WrapToWindow();

	// WrapToWindow:   [dispid 20]
	void WrapToWindow(/*__OWL*/ TBool arg0);

	// ShowPicturePlaceHolders:   [dispid 21]
	/*__OWL*/ TBool ShowPicturePlaceHolders();

	// ShowPicturePlaceHolders:   [dispid 21]
	void ShowPicturePlaceHolders(/*__OWL*/ TBool arg0);

	// ShowBookmarks:   [dispid 22]
	/*__OWL*/ TBool ShowBookmarks();

	// ShowBookmarks:   [dispid 22]
	void ShowBookmarks(/*__OWL*/ TBool arg0);

	// FieldShading:   [dispid 23]
	WdFieldShading FieldShading();

	// FieldShading:   [dispid 23]
	void FieldShading(WdFieldShading arg0);

	// ShowAnimation:   [dispid 24]
	/*__OWL*/ TBool ShowAnimation();

	// ShowAnimation:   [dispid 24]
	void ShowAnimation(/*__OWL*/ TBool arg0);

	// TableGridlines:   [dispid 25]
	/*__OWL*/ TBool TableGridlines();

	// TableGridlines:   [dispid 25]
	void TableGridlines(/*__OWL*/ TBool arg0);

	// EnlargeFontsLessThan:   [dispid 26]
	long EnlargeFontsLessThan();

	// EnlargeFontsLessThan:   [dispid 26]
	void EnlargeFontsLessThan(long arg0);

	// ShowMainTextLayer:   [dispid 27]
	/*__OWL*/ TBool ShowMainTextLayer();

	// ShowMainTextLayer:   [dispid 27]
	void ShowMainTextLayer(/*__OWL*/ TBool arg0);

	// SeekView:   [dispid 28]
	WdSeekView SeekView();

	// SeekView:   [dispid 28]
	void SeekView(WdSeekView arg0);

	// SplitSpecial:   [dispid 29]
	WdSpecialPane SplitSpecial();

	// SplitSpecial:   [dispid 29]
	void SplitSpecial(WdSpecialPane arg0);

	// BrowseToWindow:   [dispid 30]
	long BrowseToWindow();

	// BrowseToWindow:   [dispid 30]
	void BrowseToWindow(long arg0);

	// ShowOptionalBreaks:   [dispid 31]
	/*__OWL*/ TBool ShowOptionalBreaks();

	// ShowOptionalBreaks:   [dispid 31]
	void ShowOptionalBreaks(/*__OWL*/ TBool arg0);

	// CollapseOutline:   [dispid 101]
	void CollapseOutline(__OCF TAutoVal* arg0 = 0);

	// ExpandOutline:   [dispid 102]
	void ExpandOutline(__OCF TAutoVal* arg0 = 0);

	// ShowAllHeadings:   [dispid 103]
	void ShowAllHeadings();

	// ShowHeading:   [dispid 104]
	void ShowHeading(long Level);

	// PreviousHeaderFooter:   [dispid 105]
	void PreviousHeaderFooter();

	// NextHeaderFooter:   [dispid 106]
	void NextHeaderFooter();

	// DisplayPageBoundaries:   [dispid 32]
	/*__OWL*/ TBool DisplayPageBoundaries();

	// DisplayPageBoundaries:   [dispid 32]
	void DisplayPageBoundaries(/*__OWL*/ TBool arg0);

	// DisplaySmartTags:   [dispid 33]
	/*__OWL*/ TBool DisplaySmartTags();

	// DisplaySmartTags:   [dispid 33]
	void DisplaySmartTags(/*__OWL*/ TBool arg0);

	// ShowRevisionsAndComments:   [dispid 34]
	/*__OWL*/ TBool ShowRevisionsAndComments();

	// ShowRevisionsAndComments:   [dispid 34]
	void ShowRevisionsAndComments(/*__OWL*/ TBool arg0);

	// ShowComments:   [dispid 35]
	/*__OWL*/ TBool ShowComments();

	// ShowComments:   [dispid 35]
	void ShowComments(/*__OWL*/ TBool arg0);

	// ShowInsertionsAndDeletions:   [dispid 36]
	/*__OWL*/ TBool ShowInsertionsAndDeletions();

	// ShowInsertionsAndDeletions:   [dispid 36]
	void ShowInsertionsAndDeletions(/*__OWL*/ TBool arg0);

	// ShowFormatChanges:   [dispid 37]
	/*__OWL*/ TBool ShowFormatChanges();

	// ShowFormatChanges:   [dispid 37]
	void ShowFormatChanges(/*__OWL*/ TBool arg0);

	// RevisionsView:   [dispid 38]
	WdRevisionsView RevisionsView();

	// RevisionsView:   [dispid 38]
	void RevisionsView(WdRevisionsView arg0);

	// RevisionsMode:   [dispid 39]
	WdRevisionsMode RevisionsMode();

	// RevisionsMode:   [dispid 39]
	void RevisionsMode(WdRevisionsMode arg0);

	// RevisionsBalloonWidth:   [dispid 40]
	float RevisionsBalloonWidth();

	// RevisionsBalloonWidth:   [dispid 40]
	void RevisionsBalloonWidth(float arg0);

	// RevisionsBalloonWidthType:   [dispid 41]
	WdRevisionsBalloonWidthType RevisionsBalloonWidthType();

	// RevisionsBalloonWidthType:   [dispid 41]
	void RevisionsBalloonWidthType(WdRevisionsBalloonWidthType arg0);

	// RevisionsBalloonSide:   [dispid 42]
	WdRevisionsBalloonMargin RevisionsBalloonSide();

	// RevisionsBalloonSide:   [dispid 42]
	void RevisionsBalloonSide(WdRevisionsBalloonMargin arg0);

	// _Reviewers:   [dispid 43]
	void _Reviewers(TReviewersProxy& Obj);

	// RevisionsBalloonShowConnectingLines:   [dispid 44]
	/*__OWL*/ TBool RevisionsBalloonShowConnectingLines();

	// RevisionsBalloonShowConnectingLines:   [dispid 44]
	void RevisionsBalloonShowConnectingLines(/*__OWL*/ TBool arg0);

	// ReadingLayout:   [dispid 45]
	/*__OWL*/ TBool ReadingLayout();

	// ReadingLayout:   [dispid 45]
	void ReadingLayout(/*__OWL*/ TBool arg0);

	// ShowXMLMarkup:   [dispid 46]
	long ShowXMLMarkup();

	// ShowXMLMarkup:   [dispid 46]
	void ShowXMLMarkup(long arg0);

	// ShadeEditableRanges:   [dispid 47]
	long ShadeEditableRanges();

	// ShadeEditableRanges:   [dispid 47]
	void ShadeEditableRanges(long arg0);

	// ShowInkAnnotations:   [dispid 48]
	/*__OWL*/ TBool ShowInkAnnotations();

	// ShowInkAnnotations:   [dispid 48]
	void ShowInkAnnotations(/*__OWL*/ TBool arg0);

	// DisplayBackgrounds:   [dispid 49]
	/*__OWL*/ TBool DisplayBackgrounds();

	// DisplayBackgrounds:   [dispid 49]
	void DisplayBackgrounds(/*__OWL*/ TBool arg0);

	// ReadingLayoutActualView:   [dispid 50]
	/*__OWL*/ TBool ReadingLayoutActualView();

	// ReadingLayoutActualView:   [dispid 50]
	void ReadingLayoutActualView(/*__OWL*/ TBool arg0);

	// ReadingLayoutAllowMultiplePages:   [dispid 51]
	/*__OWL*/ TBool ReadingLayoutAllowMultiplePages();

	// ReadingLayoutAllowMultiplePages:   [dispid 51]
	void ReadingLayoutAllowMultiplePages(/*__OWL*/ TBool arg0);
};
#endif

// WebPageFont
// {000C0913-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE WebPageFont
DECLARE_INTERFACE_(WebPageFont, _IMsoDispObj)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
	// _IMsoDispObj methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ IDispatch** ppidisp) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* plCreator) PURE; 
#endif
	// WebPageFont methods:
	STDMETHOD_(HRESULT, Get_ProportionalFont) (THIS_ BSTR* pstr) PURE; 
	STDMETHOD_(HRESULT, Set_ProportionalFont) (THIS_ BSTR pstr) PURE; 
	STDMETHOD_(HRESULT, Get_ProportionalFontSize) (THIS_ float* pf) PURE; 
	STDMETHOD_(HRESULT, Set_ProportionalFontSize) (THIS_ float pf) PURE; 
	STDMETHOD_(HRESULT, Get_FixedWidthFont) (THIS_ BSTR* pstr) PURE; 
	STDMETHOD_(HRESULT, Set_FixedWidthFont) (THIS_ BSTR pstr) PURE; 
	STDMETHOD_(HRESULT, Get_FixedWidthFontSize) (THIS_ float* pf) PURE; 
	STDMETHOD_(HRESULT, Set_FixedWidthFontSize) (THIS_ float pf) PURE; 
};
typedef WebPageFont* LPEBPAGEFONT;
#ifdef __cplusplus
// WebPageFont  {000C0913-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TWebPageFontProxy : public __OCF TAutoProxy
{
public:
	TWebPageFontProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1610743808]
	IDispatch* _Application();

	// Creator:   [dispid 1610743809]
	long Creator();

	// ProportionalFont:   [dispid 10]
	__OCF TAutoString ProportionalFont();

	// ProportionalFont:   [dispid 10]
	void ProportionalFont(__OCF TAutoString arg0);

	// ProportionalFontSize:   [dispid 11]
	float ProportionalFontSize();

	// ProportionalFontSize:   [dispid 11]
	void ProportionalFontSize(float arg0);

	// FixedWidthFont:   [dispid 12]
	__OCF TAutoString FixedWidthFont();

	// FixedWidthFont:   [dispid 12]
	void FixedWidthFont(__OCF TAutoString arg0);

	// FixedWidthFontSize:   [dispid 13]
	float FixedWidthFontSize();

	// FixedWidthFontSize:   [dispid 13]
	void FixedWidthFontSize(float arg0);
};
#endif

// XMLChildNodeSuggestion
// {A87E00E9-3AC3-4B53-ABE3-7379653D0E82}
#undef INTERFACE
#define INTERFACE XMLChildNodeSuggestion
DECLARE_INTERFACE_(XMLChildNodeSuggestion, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// XMLChildNodeSuggestion methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get_BaseName) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Get_NamespaceURI) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Get_XMLSchemaReference) (THIS_ XMLSchemaReference** prop) PURE; 
	STDMETHOD_(HRESULT, Insert) (THIS_ VARIANT* , XMLNode** prop) PURE; 
};
typedef XMLChildNodeSuggestion* LPMLCHILDNODESUGGESTION;
#ifdef __cplusplus
// XMLChildNodeSuggestion  {A87E00E9-3AC3-4B53-ABE3-7379653D0E82}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TXMLChildNodeSuggestionProxy : public __OCF TAutoProxy
{
public:
	TXMLChildNodeSuggestionProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// BaseName:   [dispid 0]
	__OCF TAutoString BaseName();

	// NamespaceURI:   [dispid 3]
	__OCF TAutoString NamespaceURI();

	// _XMLSchemaReference:   [dispid 4]
	void _XMLSchemaReference(TXMLSchemaReferenceProxy& Obj);

	// Insert:   [dispid 100]
	void Insert(TXMLNodeProxy& Obj, __OCF TAutoVal* arg0 = 0);
};
#endif

// XMLNamespace
// {B140A023-4850-4DA6-BC5F-CC459C4507BC}
#undef INTERFACE
#define INTERFACE XMLNamespace
DECLARE_INTERFACE_(XMLNamespace, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// XMLNamespace methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get_URI) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Location) (THIS_ VARIANT_BOOL AllUsers, BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Location) (THIS_ VARIANT_BOOL AllUsers, BSTR prop) PURE; 
	STDMETHOD_(HRESULT, Get_Alias) (THIS_ VARIANT_BOOL AllUsers, BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Alias) (THIS_ VARIANT_BOOL AllUsers, BSTR prop) PURE; 
	STDMETHOD_(HRESULT, Get_XSLTransforms) (THIS_ XSLTransforms** prop) PURE; 
	STDMETHOD_(HRESULT, Get_DefaultTransform) (THIS_ VARIANT_BOOL AllUsers, XSLTransform** prop) PURE; 
	STDMETHOD_(HRESULT, Set_DefaultTransform) (THIS_ VARIANT_BOOL AllUsers, XSLTransform* prop) PURE; 
	STDMETHOD_(HRESULT, AttachToDocument) (THIS_ VARIANT* ) PURE; 
	STDMETHOD_(HRESULT, Delete) (THIS ) PURE; 
};
typedef XMLNamespace* LPMLNAMESPACE;
#ifdef __cplusplus
// XMLNamespace  {B140A023-4850-4DA6-BC5F-CC459C4507BC}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TXMLNamespaceProxy : public __OCF TAutoProxy
{
public:
	TXMLNamespaceProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// URI:   [dispid 2]
	__OCF TAutoString URI();

	// Location:   [dispid 3]
	__OCF TAutoString Location(/*__OWL*/ TBool AllUsers);

	// Location:   [dispid 3]
	void Location(/*__OWL*/ TBool AllUsers, __OCF TAutoString arg1);

	// Alias:   [dispid 4]
	__OCF TAutoString Alias(/*__OWL*/ TBool AllUsers);

	// Alias:   [dispid 4]
	void Alias(/*__OWL*/ TBool AllUsers, __OCF TAutoString arg1);

	// _XSLTransforms:   [dispid 5]
	void _XSLTransforms(TXSLTransformsProxy& Obj);

	// DefaultTransform:   [dispid 6]
	void DefaultTransform(TXSLTransformProxy& Obj, /*__OWL*/ TBool AllUsers);

	// DefaultTransform:   [dispid 6]
	void DefaultTransform(/*__OWL*/ TBool AllUsers, XSLTransform* arg1);

	// AttachToDocument:   [dispid 100]
	void AttachToDocument(__OCF TAutoVal* arg0);

	// Delete:   [dispid 101]
	void Delete();
};
#endif

// XMLSchemaReference
// {FE0971F0-5E60-4985-BCDA-95CB0B8E0308}
#undef INTERFACE
#define INTERFACE XMLSchemaReference
DECLARE_INTERFACE_(XMLSchemaReference, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// XMLSchemaReference methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get_NamespaceURI) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Location) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Delete) (THIS ) PURE; 
	STDMETHOD_(HRESULT, Reload) (THIS ) PURE; 
};
typedef XMLSchemaReference* LPMLSCHEMAREFERENCE;
#ifdef __cplusplus
// XMLSchemaReference  {FE0971F0-5E60-4985-BCDA-95CB0B8E0308}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TXMLSchemaReferenceProxy : public __OCF TAutoProxy
{
public:
	TXMLSchemaReferenceProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// NamespaceURI:   [dispid 2]
	__OCF TAutoString NamespaceURI();

	// Location:   [dispid 3]
	__OCF TAutoString Location();

	// Delete:   [dispid 100]
	void Delete();

	// Reload:   [dispid 101]
	void Reload();
};
#endif

// XSLTransform
// {E3124493-7D6A-410F-9A48-CC822C033CEC}
#undef INTERFACE
#define INTERFACE XSLTransform
DECLARE_INTERFACE_(XSLTransform, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// XSLTransform methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Alias) (THIS_ VARIANT_BOOL AllUsers, BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Alias) (THIS_ VARIANT_BOOL AllUsers, BSTR prop) PURE; 
	STDMETHOD_(HRESULT, Get_Location) (THIS_ VARIANT_BOOL AllUsers, BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Location) (THIS_ VARIANT_BOOL AllUsers, BSTR prop) PURE; 
	STDMETHOD_(HRESULT, Delete) (THIS ) PURE; 
};
typedef XSLTransform* LPSLTRANSFORM;
#ifdef __cplusplus
// XSLTransform  {E3124493-7D6A-410F-9A48-CC822C033CEC}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TXSLTransformProxy : public __OCF TAutoProxy
{
public:
	TXSLTransformProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// Alias:   [dispid 2]
	__OCF TAutoString Alias(/*__OWL*/ TBool AllUsers);

	// Alias:   [dispid 2]
	void Alias(/*__OWL*/ TBool AllUsers, __OCF TAutoString arg1);

	// Location:   [dispid 3]
	__OCF TAutoString Location(/*__OWL*/ TBool AllUsers);

	// Location:   [dispid 3]
	void Location(/*__OWL*/ TBool AllUsers, __OCF TAutoString arg1);

	// Delete:   [dispid 101]
	void Delete();
};
#endif

// XSLTransforms
// {C774F5EA-A539-4284-A1BE-30AEC052D899}
#undef INTERFACE
#define INTERFACE XSLTransforms
DECLARE_INTERFACE_(XSLTransforms, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// XSLTransforms methods:
	STDMETHOD_(HRESULT, Get__NewEnum) (THIS_ IUnknown** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Count) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Item) (THIS_ VARIANT* , XSLTransform** prop) PURE; 
	STDMETHOD_(HRESULT, Add) (THIS_ BSTR Location, VARIANT* Alias, VARIANT_BOOL InstallForAllUsers, XSLTransform** prop) PURE; 
};
typedef XSLTransforms* LPSLTRANSFORMS;
#ifdef __cplusplus
// XSLTransforms  {C774F5EA-A539-4284-A1BE-30AEC052D899}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TXSLTransformsProxy : public __OCF TAutoProxy
{
public:
	TXSLTransformsProxy() : TAutoProxy(0x0) {}

	// _NewEnum:   [dispid -4]
	void _NewEnum(__OCF TAutoEnumerator<IUnknown*>& Obj);

	// Count:   [dispid 2]
	long Count();

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// Item:   [dispid 0]
	void Item(TXSLTransformProxy& Obj, __OCF TAutoVal* arg0);

	// Add:   [dispid 101]
	void Add(TXSLTransformProxy& Obj, __OCF TAutoString Location, __OCF TAutoVal* Alias, /*__OWL*/ TBool InstallForAllUsers);
};
#endif

// WdPageFit
typedef enum tagWdPageFit
{
	wdPageFitNone = 0, 
	wdPageFitFullPage = 1, 
	wdPageFitBestFit = 2, 
	wdPageFitTextFit = 3, 
} WdPageFit;

// Zoom
// {000209A6-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE Zoom
DECLARE_INTERFACE_(Zoom, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// Zoom methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Percentage) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Percentage) (THIS_ long prop) PURE; 
	STDMETHOD_(HRESULT, Get_PageFit) (THIS_ WdPageFit* prop) PURE; 
	STDMETHOD_(HRESULT, Set_PageFit) (THIS_ WdPageFit prop) PURE; 
	STDMETHOD_(HRESULT, Get_PageRows) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Set_PageRows) (THIS_ long prop) PURE; 
	STDMETHOD_(HRESULT, Get_PageColumns) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Set_PageColumns) (THIS_ long prop) PURE; 
};
typedef Zoom* LPOOM;
#ifdef __cplusplus
// Zoom  {000209A6-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TZoomProxy : public __OCF TAutoProxy
{
public:
	TZoomProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// Percentage:   [dispid 0]
	long Percentage();

	// Percentage:   [dispid 0]
	void Percentage(long arg0);

	// PageFit:   [dispid 1]
	WdPageFit PageFit();

	// PageFit:   [dispid 1]
	void PageFit(WdPageFit arg0);

	// PageRows:   [dispid 2]
	long PageRows();

	// PageRows:   [dispid 2]
	void PageRows(long arg0);

	// PageColumns:   [dispid 3]
	long PageColumns();

	// PageColumns:   [dispid 3]
	void PageColumns(long arg0);
};
#endif

// Zooms
// {000209A7-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE Zooms
DECLARE_INTERFACE_(Zooms, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// Zooms methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Item) (THIS_ WdViewType , Zoom** prop) PURE; 
};
typedef Zooms* LPOOMS;
#ifdef __cplusplus
// Zooms  {000209A7-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TZoomsProxy : public __OCF TAutoProxy
{
public:
	TZoomsProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// Item:   [dispid 0]
	void Item(TZoomProxy& Obj, WdViewType arg0);
};
#endif

// _CommandBarControlEvents
// {0002E130-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE _CommandBarControlEvents
DECLARE_INTERFACE_(_CommandBarControlEvents, IUnknown)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
#endif
	// _CommandBarControlEvents methods:
};
typedef _CommandBarControlEvents* LPCOMMANDBARCONTROLEVENTS;
// _ReferencesEvents
// {0002E11A-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE _ReferencesEvents
DECLARE_INTERFACE_(_ReferencesEvents, IUnknown)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
#endif
	// _ReferencesEvents methods:
};
typedef _ReferencesEvents* LPREFERENCESEVENTS;
// CheckBox
// {00020926-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE CheckBox
DECLARE_INTERFACE_(CheckBox, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// CheckBox methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Valid) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Get_AutoSize) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_AutoSize) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_Size) (THIS_ float* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Size) (THIS_ float prop) PURE; 
	STDMETHOD_(HRESULT, Get_Default) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Default) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_Value) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Value) (THIS_ VARIANT_BOOL prop) PURE; 
};
typedef CheckBox* LPHECKBOX;
#ifdef __cplusplus
// CheckBox  {00020926-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TCheckBoxProxy : public __OCF TAutoProxy
{
public:
	TCheckBoxProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// Valid:   [dispid 0]
	/*__OWL*/ TBool Valid();

	// AutoSize:   [dispid 1]
	/*__OWL*/ TBool AutoSize();

	// AutoSize:   [dispid 1]
	void AutoSize(/*__OWL*/ TBool arg0);

	// Size:   [dispid 2]
	float Size();

	// Size:   [dispid 2]
	void Size(float arg0);

	// Default:   [dispid 3]
	/*__OWL*/ TBool Default();

	// Default:   [dispid 3]
	void Default(/*__OWL*/ TBool arg0);

	// Value:   [dispid 4]
	/*__OWL*/ TBool Value();

	// Value:   [dispid 4]
	void Value(/*__OWL*/ TBool arg0);
};
#endif

// WdCustomLabelPageSize
typedef enum tagWdCustomLabelPageSize
{
	wdCustomLabelLetter = 0, 
	wdCustomLabelLetterLS = 1, 
	wdCustomLabelA4 = 2, 
	wdCustomLabelA4LS = 3, 
	wdCustomLabelA5 = 4, 
	wdCustomLabelA5LS = 5, 
	wdCustomLabelB5 = 6, 
	wdCustomLabelMini = 7, 
	wdCustomLabelFanfold = 8, 
	wdCustomLabelVertHalfSheet = 9, 
	wdCustomLabelVertHalfSheetLS = 10, 
	wdCustomLabelHigaki = 11, 
	wdCustomLabelHigakiLS = 12, 
	wdCustomLabelB4JIS = 13, 
} WdCustomLabelPageSize;

// CustomLabel
// {00020915-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE CustomLabel
DECLARE_INTERFACE_(CustomLabel, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// CustomLabel methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Index) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Name) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Name) (THIS_ BSTR prop) PURE; 
	STDMETHOD_(HRESULT, Get_TopMargin) (THIS_ float* prop) PURE; 
	STDMETHOD_(HRESULT, Set_TopMargin) (THIS_ float prop) PURE; 
	STDMETHOD_(HRESULT, Get_SideMargin) (THIS_ float* prop) PURE; 
	STDMETHOD_(HRESULT, Set_SideMargin) (THIS_ float prop) PURE; 
	STDMETHOD_(HRESULT, Get_Height) (THIS_ float* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Height) (THIS_ float prop) PURE; 
	STDMETHOD_(HRESULT, Get_Width) (THIS_ float* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Width) (THIS_ float prop) PURE; 
	STDMETHOD_(HRESULT, Get_VerticalPitch) (THIS_ float* prop) PURE; 
	STDMETHOD_(HRESULT, Set_VerticalPitch) (THIS_ float prop) PURE; 
	STDMETHOD_(HRESULT, Get_HorizontalPitch) (THIS_ float* prop) PURE; 
	STDMETHOD_(HRESULT, Set_HorizontalPitch) (THIS_ float prop) PURE; 
	STDMETHOD_(HRESULT, Get_NumberAcross) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Set_NumberAcross) (THIS_ long prop) PURE; 
	STDMETHOD_(HRESULT, Get_NumberDown) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Set_NumberDown) (THIS_ long prop) PURE; 
	STDMETHOD_(HRESULT, Get_DotMatrix) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Get_PageSize) (THIS_ WdCustomLabelPageSize* prop) PURE; 
	STDMETHOD_(HRESULT, Set_PageSize) (THIS_ WdCustomLabelPageSize prop) PURE; 
	STDMETHOD_(HRESULT, Get_Valid) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Delete) (THIS ) PURE; 
};
typedef CustomLabel* LPUSTOMLABEL;
#ifdef __cplusplus
// CustomLabel  {00020915-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TCustomLabelProxy : public __OCF TAutoProxy
{
public:
	TCustomLabelProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// _Index:   [dispid 1]
	long _Index();

	// Name:   [dispid 2]
	__OCF TAutoString Name();

	// Name:   [dispid 2]
	void Name(__OCF TAutoString arg0);

	// TopMargin:   [dispid 3]
	float TopMargin();

	// TopMargin:   [dispid 3]
	void TopMargin(float arg0);

	// SideMargin:   [dispid 4]
	float SideMargin();

	// SideMargin:   [dispid 4]
	void SideMargin(float arg0);

	// Height:   [dispid 5]
	float Height();

	// Height:   [dispid 5]
	void Height(float arg0);

	// Width:   [dispid 6]
	float Width();

	// Width:   [dispid 6]
	void Width(float arg0);

	// VerticalPitch:   [dispid 7]
	float VerticalPitch();

	// VerticalPitch:   [dispid 7]
	void VerticalPitch(float arg0);

	// HorizontalPitch:   [dispid 8]
	float HorizontalPitch();

	// HorizontalPitch:   [dispid 8]
	void HorizontalPitch(float arg0);

	// NumberAcross:   [dispid 9]
	long NumberAcross();

	// NumberAcross:   [dispid 9]
	void NumberAcross(long arg0);

	// NumberDown:   [dispid 10]
	long NumberDown();

	// NumberDown:   [dispid 10]
	void NumberDown(long arg0);

	// DotMatrix:   [dispid 11]
	/*__OWL*/ TBool DotMatrix();

	// PageSize:   [dispid 12]
	WdCustomLabelPageSize PageSize();

	// PageSize:   [dispid 12]
	void PageSize(WdCustomLabelPageSize arg0);

	// Valid:   [dispid 13]
	/*__OWL*/ TBool Valid();

	// Delete:   [dispid 101]
	void Delete();
};
#endif

// CustomProperties
// {B923FDE1-F08C-11D3-91B0-00105A0A19FD}
#undef INTERFACE
#define INTERFACE CustomProperties
DECLARE_INTERFACE_(CustomProperties, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// CustomProperties methods:
	STDMETHOD_(HRESULT, Get__NewEnum) (THIS_ IUnknown** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Count) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Item) (THIS_ VARIANT* , CustomProperty** prop) PURE; 
	STDMETHOD_(HRESULT, Add) (THIS_ BSTR Name, BSTR Value, CustomProperty** prop) PURE; 
};
typedef CustomProperties* LPUSTOMPROPERTIES;
#ifdef __cplusplus
// CustomProperties  {B923FDE1-F08C-11D3-91B0-00105A0A19FD}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TCustomPropertiesProxy : public __OCF TAutoProxy
{
public:
	TCustomPropertiesProxy() : TAutoProxy(0x0) {}

	// _NewEnum:   [dispid -4]
	void _NewEnum(__OCF TAutoEnumerator<IUnknown*>& Obj);

	// Count:   [dispid 2]
	long Count();

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// Item:   [dispid 0]
	void Item(TCustomPropertyProxy& Obj, __OCF TAutoVal* arg0);

	// Add:   [dispid 5]
	void Add(TCustomPropertyProxy& Obj, __OCF TAutoString Name, __OCF TAutoString Value);
};
#endif

// CustomProperty
// {B923FDE0-F08C-11D3-91B0-00105A0A19FD}
#undef INTERFACE
#define INTERFACE CustomProperty
DECLARE_INTERFACE_(CustomProperty, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// CustomProperty methods:
	STDMETHOD_(HRESULT, Get_Name) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Value) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Value) (THIS_ BSTR prop) PURE; 
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Delete) (THIS ) PURE; 
};
typedef CustomProperty* LPUSTOMPROPERTY;
#ifdef __cplusplus
// CustomProperty  {B923FDE0-F08C-11D3-91B0-00105A0A19FD}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TCustomPropertyProxy : public __OCF TAutoProxy
{
public:
	TCustomPropertyProxy() : TAutoProxy(0x0) {}

	// Name:   [dispid 1]
	__OCF TAutoString Name();

	// Value:   [dispid 0]
	__OCF TAutoString Value();

	// Value:   [dispid 0]
	void Value(__OCF TAutoString arg0);

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// Delete:   [dispid 11]
	void Delete();
};
#endif

// DiagramNodeChildren
// {000209EA-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE DiagramNodeChildren
DECLARE_INTERFACE_(DiagramNodeChildren, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// DiagramNodeChildren methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get__NewEnum) (THIS_ IUnknown** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Count) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_FirstChild) (THIS_ DiagramNode** prop) PURE; 
	STDMETHOD_(HRESULT, Get_LastChild) (THIS_ DiagramNode** prop) PURE; 
	STDMETHOD_(HRESULT, Item) (THIS_ VARIANT* , DiagramNode** prop) PURE; 
	STDMETHOD_(HRESULT, AddNode) (THIS_ VARIANT* , MsoDiagramNodeType NodeType, DiagramNode** prop) PURE; 
	STDMETHOD_(HRESULT, SelectAll) (THIS ) PURE; 
};
typedef DiagramNodeChildren* LPIAGRAMNODECHILDREN;
#ifdef __cplusplus
// DiagramNodeChildren  {000209EA-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TDiagramNodeChildrenProxy : public __OCF TAutoProxy
{
public:
	TDiagramNodeChildrenProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// _NewEnum:   [dispid -4]
	void _NewEnum(__OCF TAutoEnumerator<IUnknown*>& Obj);

	// Parent:   [dispid 100]
	IDispatch* Parent();

	// Count:   [dispid 101]
	long Count();

	// FirstChild:   [dispid 103]
	void FirstChild(TDiagramNodeProxy& Obj);

	// LastChild:   [dispid 104]
	void LastChild(TDiagramNodeProxy& Obj);

	// Item:   [dispid 0]
	void Item(TDiagramNodeProxy& Obj, __OCF TAutoVal* arg0);

	// AddNode:   [dispid 10]
	void AddNode(TDiagramNodeProxy& Obj, __OCF TAutoVal* arg0, MsoDiagramNodeType NodeType);

	// SelectAll:   [dispid 11]
	void SelectAll();
};
#endif

// DiagramNodes
// {000209EB-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE DiagramNodes
DECLARE_INTERFACE_(DiagramNodes, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// DiagramNodes methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get__NewEnum) (THIS_ IUnknown** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Count) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Item) (THIS_ VARIANT* , DiagramNode** prop) PURE; 
	STDMETHOD_(HRESULT, SelectAll) (THIS ) PURE; 
};
typedef DiagramNodes* LPIAGRAMNODES;
#ifdef __cplusplus
// DiagramNodes  {000209EB-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TDiagramNodesProxy : public __OCF TAutoProxy
{
public:
	TDiagramNodesProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// _NewEnum:   [dispid -4]
	void _NewEnum(__OCF TAutoEnumerator<IUnknown*>& Obj);

	// Parent:   [dispid 100]
	IDispatch* Parent();

	// Count:   [dispid 101]
	long Count();

	// Item:   [dispid 0]
	void Item(TDiagramNodeProxy& Obj, __OCF TAutoVal* arg0);

	// SelectAll:   [dispid 10]
	void SelectAll();
};
#endif

// DropDown
// {00020925-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE DropDown
DECLARE_INTERFACE_(DropDown, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// DropDown methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Valid) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Default) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Default) (THIS_ long prop) PURE; 
	STDMETHOD_(HRESULT, Get_Value) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Value) (THIS_ long prop) PURE; 
	STDMETHOD_(HRESULT, Get_ListEntries) (THIS_ ListEntries** prop) PURE; 
};
typedef DropDown* LPROPDOWN;
#ifdef __cplusplus
// DropDown  {00020925-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TDropDownProxy : public __OCF TAutoProxy
{
public:
	TDropDownProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// Valid:   [dispid 0]
	/*__OWL*/ TBool Valid();

	// Default:   [dispid 1]
	long Default();

	// Default:   [dispid 1]
	void Default(long arg0);

	// Value:   [dispid 2]
	long Value();

	// Value:   [dispid 2]
	void Value(long arg0);

	// _ListEntries:   [dispid 3]
	void _ListEntries(TListEntriesProxy& Obj);
};
#endif

// Editor
// {DD947D72-F33C-4198-9BDF-F86181D05E41}
#undef INTERFACE
#define INTERFACE Editor
DECLARE_INTERFACE_(Editor, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// Editor methods:
	STDMETHOD_(HRESULT, Get_ID) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Name) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Range) (THIS_ WordRange** prop) PURE; 
	STDMETHOD_(HRESULT, Get_NextRange) (THIS_ WordRange** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Delete) (THIS ) PURE; 
	STDMETHOD_(HRESULT, DeleteAll) (THIS ) PURE; 
	STDMETHOD_(HRESULT, SelectAll) (THIS ) PURE; 
};
typedef Editor* LPDITOR;
#ifdef __cplusplus
// Editor  {DD947D72-F33C-4198-9BDF-F86181D05E41}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TEditorProxy : public __OCF TAutoProxy
{
public:
	TEditorProxy() : TAutoProxy(0x0) {}

	// ID:   [dispid 100]
	__OCF TAutoString ID();

	// Name:   [dispid 101]
	__OCF TAutoString Name();

	// _Range:   [dispid 102]
	void _Range(TRangeProxy& Obj);

	// NextRange:   [dispid 103]
	void NextRange(TRangeProxy& Obj);

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// Delete:   [dispid 500]
	void Delete();

	// DeleteAll:   [dispid 501]
	void DeleteAll();

	// SelectAll:   [dispid 502]
	void SelectAll();
};
#endif

// FileDialogFilter
// {000C0364-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE FileDialogFilter
DECLARE_INTERFACE_(FileDialogFilter, _IMsoDispObj)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
	// _IMsoDispObj methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ IDispatch** ppidisp) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* plCreator) PURE; 
#endif
	// FileDialogFilter methods:
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** Parent) PURE; 
	STDMETHOD_(HRESULT, Get_Extensions) (THIS_ BSTR* Extensions) PURE; 
	STDMETHOD_(HRESULT, Get_Description) (THIS_ BSTR* Description) PURE; 
};
typedef FileDialogFilter* LPILEDIALOGFILTER;
#ifdef __cplusplus
// FileDialogFilter  {000C0364-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TFileDialogFilterProxy : public __OCF TAutoProxy
{
public:
	TFileDialogFilterProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1610743808]
	IDispatch* _Application();

	// Creator:   [dispid 1610743809]
	long Creator();

	// Parent:   [dispid 1610809344]
	IDispatch* Parent();

	// Extensions:   [dispid 1610809345]
	__OCF TAutoString Extensions();

	// Description:   [dispid 1610809346]
	__OCF TAutoString Description();
};
#endif

// HeadersFooters
// {00020984-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE HeadersFooters
DECLARE_INTERFACE_(HeadersFooters, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// HeadersFooters methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get__NewEnum) (THIS_ IUnknown** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Count) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Item) (THIS_ WdHeaderFooterIndex , HeaderFooter** prop) PURE; 
};
typedef HeadersFooters* LPEADERSFOOTERS;
#ifdef __cplusplus
// HeadersFooters  {00020984-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS THeadersFootersProxy : public __OCF TAutoProxy
{
public:
	THeadersFootersProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// _NewEnum:   [dispid -4]
	void _NewEnum(__OCF TAutoEnumerator<IUnknown*>& Obj);

	// Count:   [dispid 1]
	long Count();

	// Item:   [dispid 0]
	void Item(THeaderFooterProxy& Obj, WdHeaderFooterIndex arg0);
};
#endif

// HeadingStyles
// {0002098A-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE HeadingStyles
DECLARE_INTERFACE_(HeadingStyles, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// HeadingStyles methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get__NewEnum) (THIS_ IUnknown** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Count) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Item) (THIS_ long , HeadingStyle** prop) PURE; 
	STDMETHOD_(HRESULT, Add) (THIS_ VARIANT* , short Level, HeadingStyle** prop) PURE; 
};
typedef HeadingStyles* LPEADINGSTYLES;
#ifdef __cplusplus
// HeadingStyles  {0002098A-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS THeadingStylesProxy : public __OCF TAutoProxy
{
public:
	THeadingStylesProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// _NewEnum:   [dispid -4]
	void _NewEnum(__OCF TAutoEnumerator<IUnknown*>& Obj);

	// Count:   [dispid 1]
	long Count();

	// Item:   [dispid 0]
	void Item(THeadingStyleProxy& Obj, long arg0);

	// Add:   [dispid 100]
	void Add(THeadingStyleProxy& Obj, __OCF TAutoVal* arg0, short Level);
};
#endif

// WdHorizontalLineAlignment
typedef enum tagWdHorizontalLineAlignment
{
	wdHorizontalLineAlignLeft = 0, 
	wdHorizontalLineAlignCenter = 1, 
	wdHorizontalLineAlignRight = 2, 
} WdHorizontalLineAlignment;

// WdHorizontalLineWidthType
typedef enum tagWdHorizontalLineWidthType
{
	wdHorizontalLinePercentWidth = -1, 
	wdHorizontalLineFixedWidth = -2, 
} WdHorizontalLineWidthType;

// HorizontalLineFormat
// {000209DE-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE HorizontalLineFormat
DECLARE_INTERFACE_(HorizontalLineFormat, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// HorizontalLineFormat methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get_PercentWidth) (THIS_ float* prop) PURE; 
	STDMETHOD_(HRESULT, Set_PercentWidth) (THIS_ float prop) PURE; 
	STDMETHOD_(HRESULT, Get_NoShade) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_NoShade) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_Alignment) (THIS_ WdHorizontalLineAlignment* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Alignment) (THIS_ WdHorizontalLineAlignment prop) PURE; 
	STDMETHOD_(HRESULT, Get_WidthType) (THIS_ WdHorizontalLineWidthType* prop) PURE; 
	STDMETHOD_(HRESULT, Set_WidthType) (THIS_ WdHorizontalLineWidthType prop) PURE; 
};
typedef HorizontalLineFormat* LPORIZONTALLINEFORMAT;
#ifdef __cplusplus
// HorizontalLineFormat  {000209DE-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS THorizontalLineFormatProxy : public __OCF TAutoProxy
{
public:
	THorizontalLineFormatProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// PercentWidth:   [dispid 2]
	float PercentWidth();

	// PercentWidth:   [dispid 2]
	void PercentWidth(float arg0);

	// NoShade:   [dispid 3]
	/*__OWL*/ TBool NoShade();

	// NoShade:   [dispid 3]
	void NoShade(/*__OWL*/ TBool arg0);

	// Alignment:   [dispid 4]
	WdHorizontalLineAlignment Alignment();

	// Alignment:   [dispid 4]
	void Alignment(WdHorizontalLineAlignment arg0);

	// WidthType:   [dispid 5]
	WdHorizontalLineWidthType WidthType();

	// WidthType:   [dispid 5]
	void WidthType(WdHorizontalLineWidthType arg0);
};
#endif

// HTMLProjectItem
// {000C0358-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE HTMLProjectItem
DECLARE_INTERFACE_(HTMLProjectItem, _IMsoDispObj)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
	// _IMsoDispObj methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ IDispatch** ppidisp) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* plCreator) PURE; 
#endif
	// HTMLProjectItem methods:
	STDMETHOD_(HRESULT, Get_Name) (THIS_ BSTR* RetValue) PURE; 
	STDMETHOD_(HRESULT, Get_IsOpen) (THIS_ VARIANT_BOOL* RetValue) PURE; 
	STDMETHOD_(HRESULT, LoadFromFile) (THIS_ BSTR FileName) PURE; 
	STDMETHOD_(HRESULT, Open) (THIS_ MsoHTMLProjectOpen OpenKind) PURE; 
	STDMETHOD_(HRESULT, SaveCopyAs) (THIS_ BSTR FileName) PURE; 
	STDMETHOD_(HRESULT, Get_Text) (THIS_ BSTR* Text) PURE; 
	STDMETHOD_(HRESULT, Set_Text) (THIS_ BSTR Text) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** ppidisp) PURE; 
};
typedef HTMLProjectItem* LPTMLPROJECTITEM;
#ifdef __cplusplus
// HTMLProjectItem  {000C0358-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS THTMLProjectItemProxy : public __OCF TAutoProxy
{
public:
	THTMLProjectItemProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1610743808]
	IDispatch* _Application();

	// Creator:   [dispid 1610743809]
	long Creator();

	// Name:   [dispid 0]
	__OCF TAutoString Name();

	// IsOpen:   [dispid 4]
	/*__OWL*/ TBool IsOpen();

	// LoadFromFile:   [dispid 5]
	void LoadFromFile(__OCF TAutoString FileName);

	// Open:   [dispid 6]
	void Open(MsoHTMLProjectOpen OpenKind);

	// SaveCopyAs:   [dispid 7]
	void SaveCopyAs(__OCF TAutoString FileName);

	// Text:   [dispid 8]
	__OCF TAutoString Text();

	// Text:   [dispid 8]
	void Text(__OCF TAutoString arg0);

	// Parent:   [dispid 10]
	IDispatch* Parent();
};
#endif

// ListEntries
// {00020924-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE ListEntries
DECLARE_INTERFACE_(ListEntries, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// ListEntries methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get__NewEnum) (THIS_ IUnknown** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Count) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Item) (THIS_ VARIANT* , ListEntry** prop) PURE; 
	STDMETHOD_(HRESULT, Add) (THIS_ BSTR Name, VARIANT* , ListEntry** prop) PURE; 
	STDMETHOD_(HRESULT, Clear) (THIS ) PURE; 
};
typedef ListEntries* LPISTENTRIES;
#ifdef __cplusplus
// ListEntries  {00020924-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TListEntriesProxy : public __OCF TAutoProxy
{
public:
	TListEntriesProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// _NewEnum:   [dispid -4]
	void _NewEnum(__OCF TAutoEnumerator<IUnknown*>& Obj);

	// Count:   [dispid 1]
	long Count();

	// Item:   [dispid 0]
	void Item(TListEntryProxy& Obj, __OCF TAutoVal* arg0);

	// Add:   [dispid 101]
	void Add(TListEntryProxy& Obj, __OCF TAutoString Name, __OCF TAutoVal* arg1 = 0);

	// Clear:   [dispid 102]
	void Clear();
};
#endif

// ListEntry
// {00020923-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE ListEntry
DECLARE_INTERFACE_(ListEntry, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// ListEntry methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Index) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Name) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Name) (THIS_ BSTR prop) PURE; 
	STDMETHOD_(HRESULT, Delete) (THIS ) PURE; 
};
typedef ListEntry* LPISTENTRY;
#ifdef __cplusplus
// ListEntry  {00020923-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TListEntryProxy : public __OCF TAutoProxy
{
public:
	TListEntryProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// _Index:   [dispid 1]
	long _Index();

	// Name:   [dispid 2]
	__OCF TAutoString Name();

	// Name:   [dispid 2]
	void Name(__OCF TAutoString arg0);

	// Delete:   [dispid 11]
	void Delete();
};
#endif

// ListLevels
// {0002098E-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE ListLevels
DECLARE_INTERFACE_(ListLevels, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// ListLevels methods:
	STDMETHOD_(HRESULT, Get__NewEnum) (THIS_ IUnknown** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Count) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Item) (THIS_ long , ListLevel** prop) PURE; 
};
typedef ListLevels* LPISTLEVELS;
#ifdef __cplusplus
// ListLevels  {0002098E-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TListLevelsProxy : public __OCF TAutoProxy
{
public:
	TListLevelsProxy() : TAutoProxy(0x0) {}

	// _NewEnum:   [dispid -4]
	void _NewEnum(__OCF TAutoEnumerator<IUnknown*>& Obj);

	// Count:   [dispid 2]
	long Count();

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// Item:   [dispid 0]
	void Item(TListLevelProxy& Obj, long arg0);
};
#endif

// MailMergeDataFields
// {0002091A-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE MailMergeDataFields
DECLARE_INTERFACE_(MailMergeDataFields, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// MailMergeDataFields methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get__NewEnum) (THIS_ IUnknown** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Count) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Item) (THIS_ VARIANT* , MailMergeDataField** prop) PURE; 
};
typedef MailMergeDataFields* LPAILMERGEDATAFIELDS;
#ifdef __cplusplus
// MailMergeDataFields  {0002091A-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TMailMergeDataFieldsProxy : public __OCF TAutoProxy
{
public:
	TMailMergeDataFieldsProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// _NewEnum:   [dispid -4]
	void _NewEnum(__OCF TAutoEnumerator<IUnknown*>& Obj);

	// Count:   [dispid 1]
	long Count();

	// Item:   [dispid 0]
	void Item(TMailMergeDataFieldProxy& Obj, __OCF TAutoVal* arg0);
};
#endif

// MailMergeFieldName
// {0002091B-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE MailMergeFieldName
DECLARE_INTERFACE_(MailMergeFieldName, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// MailMergeFieldName methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Name) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Index) (THIS_ long* prop) PURE; 
};
typedef MailMergeFieldName* LPAILMERGEFIELDNAME;
#ifdef __cplusplus
// MailMergeFieldName  {0002091B-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TMailMergeFieldNameProxy : public __OCF TAutoProxy
{
public:
	TMailMergeFieldNameProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// Name:   [dispid 0]
	__OCF TAutoString Name();

	// _Index:   [dispid 1]
	long _Index();
};
#endif

// MailMergeField
// {0002091E-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE MailMergeField
DECLARE_INTERFACE_(MailMergeField, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// MailMergeField methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Type) (THIS_ WdFieldType* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Locked) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Locked) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_Code) (THIS_ WordRange** prop) PURE; 
	STDMETHOD_(HRESULT, Set_Code) (THIS_ WordRange* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Next) (THIS_ MailMergeField** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Previous) (THIS_ MailMergeField** prop) PURE; 
	STDMETHOD_(HRESULT, Select) (THIS ) PURE; 
	STDMETHOD_(HRESULT, Copy) (THIS ) PURE; 
	STDMETHOD_(HRESULT, Cut) (THIS ) PURE; 
	STDMETHOD_(HRESULT, Delete) (THIS ) PURE; 
};
typedef MailMergeField* LPAILMERGEFIELD;
#ifdef __cplusplus
// MailMergeField  {0002091E-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TMailMergeFieldProxy : public __OCF TAutoProxy
{
public:
	TMailMergeFieldProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// Type:   [dispid 0]
	WdFieldType Type();

	// Locked:   [dispid 3]
	/*__OWL*/ TBool Locked();

	// Locked:   [dispid 3]
	void Locked(/*__OWL*/ TBool arg0);

	// Code:   [dispid 5]
	void Code(TRangeProxy& Obj);

	// Code:   [dispid 5]
	void Code(WordRange* arg0);

	// Next:   [dispid 8]
	void Next(TMailMergeFieldProxy& Obj);

	// Previous:   [dispid 9]
	void Previous(TMailMergeFieldProxy& Obj);

	// Select:   [dispid 65535]
	void Select();

	// Copy:   [dispid 105]
	void Copy();

	// Cut:   [dispid 106]
	void Cut();

	// Delete:   [dispid 107]
	void Delete();
};
#endif

// MappedDataField
// {5D311669-EA51-11D3-87CC-00105AA31A34}
#undef INTERFACE
#define INTERFACE MappedDataField
DECLARE_INTERFACE_(MappedDataField, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// MappedDataField methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Index) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_DataFieldName) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Name) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Value) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Get_DataFieldIndex) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Set_DataFieldIndex) (THIS_ long prop) PURE; 
};
typedef MappedDataField* LPAPPEDDATAFIELD;
#ifdef __cplusplus
// MappedDataField  {5D311669-EA51-11D3-87CC-00105AA31A34}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TMappedDataFieldProxy : public __OCF TAutoProxy
{
public:
	TMappedDataFieldProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// _Index:   [dispid 1]
	long _Index();

	// DataFieldName:   [dispid 2]
	__OCF TAutoString DataFieldName();

	// Name:   [dispid 0]
	__OCF TAutoString Name();

	// Value:   [dispid 4]
	__OCF TAutoString Value();

	// DataFieldIndex:   [dispid 5]
	long DataFieldIndex();

	// DataFieldIndex:   [dispid 5]
	void DataFieldIndex(long arg0);
};
#endif

// WdPageNumberAlignment
typedef enum tagWdPageNumberAlignment
{
	wdAlignPageNumberLeft = 0, 
	wdAlignPageNumberCenter = 1, 
	wdAlignPageNumberRight = 2, 
	wdAlignPageNumberInside = 3, 
	wdAlignPageNumberOutside = 4, 
} WdPageNumberAlignment;

// PageNumber
// {00020987-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE PageNumber
DECLARE_INTERFACE_(PageNumber, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// PageNumber methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Index) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Alignment) (THIS_ WdPageNumberAlignment* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Alignment) (THIS_ WdPageNumberAlignment prop) PURE; 
	STDMETHOD_(HRESULT, Select) (THIS ) PURE; 
	STDMETHOD_(HRESULT, Copy) (THIS ) PURE; 
	STDMETHOD_(HRESULT, Cut) (THIS ) PURE; 
	STDMETHOD_(HRESULT, Delete) (THIS ) PURE; 
};
typedef PageNumber* LPAGENUMBER;
#ifdef __cplusplus
// PageNumber  {00020987-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TPageNumberProxy : public __OCF TAutoProxy
{
public:
	TPageNumberProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// _Index:   [dispid 1]
	long _Index();

	// Alignment:   [dispid 3]
	WdPageNumberAlignment Alignment();

	// Alignment:   [dispid 3]
	void Alignment(WdPageNumberAlignment arg0);

	// Select:   [dispid 65535]
	void Select();

	// Copy:   [dispid 101]
	void Copy();

	// Cut:   [dispid 102]
	void Cut();

	// Delete:   [dispid 103]
	void Delete();
};
#endif

// Pages
// {91807402-6C6F-47CD-B8FA-C42FEE8EE924}
#undef INTERFACE
#define INTERFACE Pages
DECLARE_INTERFACE_(Pages, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// Pages methods:
	STDMETHOD_(HRESULT, Get__NewEnum) (THIS_ IUnknown** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Count) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Item) (THIS_ long , Page** prop) PURE; 
};
typedef Pages* LPAGES;
#ifdef __cplusplus
// Pages  {91807402-6C6F-47CD-B8FA-C42FEE8EE924}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TPagesProxy : public __OCF TAutoProxy
{
public:
	TPagesProxy() : TAutoProxy(0x0) {}

	// _NewEnum:   [dispid -4]
	void _NewEnum(__OCF TAutoEnumerator<IUnknown*>& Obj);

	// Count:   [dispid 2]
	long Count();

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// Item:   [dispid 0]
	void Item(TPageProxy& Obj, long arg0);
};
#endif

// Reviewers
// {12DCDC9A-5418-48A3-BBE6-EB57BAE275E8}
#undef INTERFACE
#define INTERFACE Reviewers
DECLARE_INTERFACE_(Reviewers, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// Reviewers methods:
	STDMETHOD_(HRESULT, Get__NewEnum) (THIS_ IUnknown** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Count) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Item) (THIS_ VARIANT* , Reviewer** prop) PURE; 
};
typedef Reviewers* LPEVIEWERS;
#ifdef __cplusplus
// Reviewers  {12DCDC9A-5418-48A3-BBE6-EB57BAE275E8}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TReviewersProxy : public __OCF TAutoProxy
{
public:
	TReviewersProxy() : TAutoProxy(0x0) {}

	// _NewEnum:   [dispid -4]
	void _NewEnum(__OCF TAutoEnumerator<IUnknown*>& Obj);

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// Count:   [dispid 2]
	long Count();

	// Item:   [dispid 0]
	void Item(TReviewerProxy& Obj, __OCF TAutoVal* arg0);
};
#endif

// ShapeNode
// {000209CD-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE ShapeNode
DECLARE_INTERFACE_(ShapeNode, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// ShapeNode methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get_EditingType) (THIS_ MsoEditingType* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Points) (THIS_ VARIANT* prop) PURE; 
	STDMETHOD_(HRESULT, Get_SegmentType) (THIS_ MsoSegmentType* prop) PURE; 
};
typedef ShapeNode* LPHAPENODE;
#ifdef __cplusplus
// ShapeNode  {000209CD-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TShapeNodeProxy : public __OCF TAutoProxy
{
public:
	TShapeNodeProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1]
	IDispatch* Parent();

	// EditingType:   [dispid 100]
	MsoEditingType EditingType();

	// Points:   [dispid 101]
	__OCF TAutoVal Points();

	// SegmentType:   [dispid 102]
	MsoSegmentType SegmentType();
};
#endif

// SharedWorkspaceFile
// {000C037B-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE SharedWorkspaceFile
DECLARE_INTERFACE_(SharedWorkspaceFile, _IMsoDispObj)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
	// _IMsoDispObj methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ IDispatch** ppidisp) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* plCreator) PURE; 
#endif
	// SharedWorkspaceFile methods:
	STDMETHOD_(HRESULT, Get_URL) (THIS_ BSTR* pbstrFilename) PURE; 
	STDMETHOD_(HRESULT, Get_CreatedBy) (THIS_ BSTR* pbstrCreatedBy) PURE; 
	STDMETHOD_(HRESULT, Get_CreatedDate) (THIS_ VARIANT* CreatedDate) PURE; 
	STDMETHOD_(HRESULT, Get_ModifiedBy) (THIS_ BSTR* pbstrModifiedBy) PURE; 
	STDMETHOD_(HRESULT, Get_ModifiedDate) (THIS_ VARIANT* ModifiedDate) PURE; 
	STDMETHOD_(HRESULT, Delete) (THIS ) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** ppidisp) PURE; 
};
typedef SharedWorkspaceFile* LPHAREDWORKSPACEFILE;
#ifdef __cplusplus
// SharedWorkspaceFile  {000C037B-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TSharedWorkspaceFileProxy : public __OCF TAutoProxy
{
public:
	TSharedWorkspaceFileProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1610743808]
	IDispatch* _Application();

	// Creator:   [dispid 1610743809]
	long Creator();

	// URL:   [dispid 0]
	__OCF TAutoString URL();

	// CreatedBy:   [dispid 1]
	__OCF TAutoString CreatedBy();

	// CreatedDate:   [dispid 2]
	__OCF TAutoVal CreatedDate();

	// ModifiedBy:   [dispid 3]
	__OCF TAutoString ModifiedBy();

	// ModifiedDate:   [dispid 4]
	__OCF TAutoVal ModifiedDate();

	// Delete:   [dispid 5]
	void Delete();

	// Parent:   [dispid 6]
	IDispatch* Parent();
};
#endif

// SharedWorkspaceFolder
// {000C037D-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE SharedWorkspaceFolder
DECLARE_INTERFACE_(SharedWorkspaceFolder, _IMsoDispObj)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
	// _IMsoDispObj methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ IDispatch** ppidisp) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* plCreator) PURE; 
#endif
	// SharedWorkspaceFolder methods:
	STDMETHOD_(HRESULT, Get_FolderName) (THIS_ BSTR* FolderName) PURE; 
	STDMETHOD_(HRESULT, Delete) (THIS_ VARIANT DeleteEventIfFolderContainsFiles) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** ppidisp) PURE; 
};
typedef SharedWorkspaceFolder* LPHAREDWORKSPACEFOLDER;
#ifdef __cplusplus
// SharedWorkspaceFolder  {000C037D-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TSharedWorkspaceFolderProxy : public __OCF TAutoProxy
{
public:
	TSharedWorkspaceFolderProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1610743808]
	IDispatch* _Application();

	// Creator:   [dispid 1610743809]
	long Creator();

	// FolderName:   [dispid 0]
	__OCF TAutoString FolderName();

	// Delete:   [dispid 1]
	void Delete(__OCF TAutoVal DeleteEventIfFolderContainsFiles = __OCF TNoArg());

	// Parent:   [dispid 2]
	IDispatch* Parent();
};
#endif

// SharedWorkspaceLink
// {000C037F-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE SharedWorkspaceLink
DECLARE_INTERFACE_(SharedWorkspaceLink, _IMsoDispObj)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
	// _IMsoDispObj methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ IDispatch** ppidisp) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* plCreator) PURE; 
#endif
	// SharedWorkspaceLink methods:
	STDMETHOD_(HRESULT, Get_URL) (THIS_ BSTR* URL) PURE; 
	STDMETHOD_(HRESULT, Set_URL) (THIS_ BSTR URL) PURE; 
	STDMETHOD_(HRESULT, Get_Description) (THIS_ BSTR* Description) PURE; 
	STDMETHOD_(HRESULT, Set_Description) (THIS_ BSTR Description) PURE; 
	STDMETHOD_(HRESULT, Get_Notes) (THIS_ BSTR* Notes) PURE; 
	STDMETHOD_(HRESULT, Set_Notes) (THIS_ BSTR Notes) PURE; 
	STDMETHOD_(HRESULT, Get_CreatedBy) (THIS_ BSTR* CreatedBy) PURE; 
	STDMETHOD_(HRESULT, Get_CreatedDate) (THIS_ VARIANT* CreatedDate) PURE; 
	STDMETHOD_(HRESULT, Get_ModifiedBy) (THIS_ BSTR* ModifiedBy) PURE; 
	STDMETHOD_(HRESULT, Get_ModifiedDate) (THIS_ VARIANT* ModifiedDate) PURE; 
	STDMETHOD_(HRESULT, Save) (THIS ) PURE; 
	STDMETHOD_(HRESULT, Delete) (THIS ) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** ppidisp) PURE; 
};
typedef SharedWorkspaceLink* LPHAREDWORKSPACELINK;
#ifdef __cplusplus
// SharedWorkspaceLink  {000C037F-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TSharedWorkspaceLinkProxy : public __OCF TAutoProxy
{
public:
	TSharedWorkspaceLinkProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1610743808]
	IDispatch* _Application();

	// Creator:   [dispid 1610743809]
	long Creator();

	// URL:   [dispid 0]
	__OCF TAutoString URL();

	// URL:   [dispid 0]
	void URL(__OCF TAutoString arg0);

	// Description:   [dispid 1]
	__OCF TAutoString Description();

	// Description:   [dispid 1]
	void Description(__OCF TAutoString arg0);

	// Notes:   [dispid 2]
	__OCF TAutoString Notes();

	// Notes:   [dispid 2]
	void Notes(__OCF TAutoString arg0);

	// CreatedBy:   [dispid 3]
	__OCF TAutoString CreatedBy();

	// CreatedDate:   [dispid 4]
	__OCF TAutoVal CreatedDate();

	// ModifiedBy:   [dispid 5]
	__OCF TAutoString ModifiedBy();

	// ModifiedDate:   [dispid 6]
	__OCF TAutoVal ModifiedDate();

	// Save:   [dispid 7]
	void Save();

	// Delete:   [dispid 8]
	void Delete();

	// Parent:   [dispid 9]
	IDispatch* Parent();
};
#endif

// SharedWorkspaceMember
// {000C0381-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE SharedWorkspaceMember
DECLARE_INTERFACE_(SharedWorkspaceMember, _IMsoDispObj)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
	// _IMsoDispObj methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ IDispatch** ppidisp) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* plCreator) PURE; 
#endif
	// SharedWorkspaceMember methods:
	STDMETHOD_(HRESULT, Get_DomainName) (THIS_ BSTR* pbstrDomainName) PURE; 
	STDMETHOD_(HRESULT, Get_Name) (THIS_ BSTR* pbstrName) PURE; 
	STDMETHOD_(HRESULT, Get_Email) (THIS_ BSTR* pbstrEmail) PURE; 
	STDMETHOD_(HRESULT, Delete) (THIS ) PURE; 
	STDMETHOD_(HRESULT, Get_Id) (THIS_ BSTR* Id) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** ppidisp) PURE; 
};
typedef SharedWorkspaceMember* LPHAREDWORKSPACEMEMBER;
#ifdef __cplusplus
// SharedWorkspaceMember  {000C0381-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TSharedWorkspaceMemberProxy : public __OCF TAutoProxy
{
public:
	TSharedWorkspaceMemberProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1610743808]
	IDispatch* _Application();

	// Creator:   [dispid 1610743809]
	long Creator();

	// DomainName:   [dispid 0]
	__OCF TAutoString DomainName();

	// Name:   [dispid 1]
	__OCF TAutoString Name();

	// _Email:   [dispid 2]
	__OCF TAutoString _Email();

	// Delete:   [dispid 3]
	void Delete();

	// Id:   [dispid 4]
	__OCF TAutoString Id();

	// Parent:   [dispid 5]
	IDispatch* Parent();
};
#endif

// SmartTagActions
// {CDE12CD8-767B-4757-8A31-13029A086305}
#undef INTERFACE
#define INTERFACE SmartTagActions
DECLARE_INTERFACE_(SmartTagActions, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// SmartTagActions methods:
	STDMETHOD_(HRESULT, Get__NewEnum) (THIS_ IUnknown** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Count) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Item) (THIS_ VARIANT* , SmartTagAction** prop) PURE; 
	STDMETHOD_(HRESULT, ReloadActions) (THIS ) PURE; 
};
typedef SmartTagActions* LPMARTTAGACTIONS;
#ifdef __cplusplus
// SmartTagActions  {CDE12CD8-767B-4757-8A31-13029A086305}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TSmartTagActionsProxy : public __OCF TAutoProxy
{
public:
	TSmartTagActionsProxy() : TAutoProxy(0x0) {}

	// _NewEnum:   [dispid -4]
	void _NewEnum(__OCF TAutoEnumerator<IUnknown*>& Obj);

	// Count:   [dispid 2]
	long Count();

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// Item:   [dispid 0]
	void Item(TSmartTagActionProxy& Obj, __OCF TAutoVal* arg0);

	// ReloadActions:   [dispid 1003]
	void ReloadActions();
};
#endif

// HeadingStyle
// {0002098B-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE HeadingStyle
DECLARE_INTERFACE_(HeadingStyle, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE;
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// HeadingStyle methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Style) (THIS_ VARIANT* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Style) (THIS_ VARIANT* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Level) (THIS_ short* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Level) (THIS_ short prop) PURE; 
	STDMETHOD_(HRESULT, Delete) (THIS ) PURE; 
};
typedef HeadingStyle* LPEADINGSTYLE;
#ifdef __cplusplus
// HeadingStyle  {0002098B-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS THeadingStyleProxy : public __OCF TAutoProxy
{
public:
	THeadingStyleProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// _Style:   [dispid 0]
	__OCF TAutoVal _Style();

	// _Style:   [dispid 0]
	void _Style(__OCF TAutoVal* arg0);

	// Level:   [dispid 2]
	short Level();

	// Level:   [dispid 2]
	void Level(short arg0);

	// Delete:   [dispid 100]
	void Delete();
};
#endif

// WdTrailingCharacter
typedef enum tagWdTrailingCharacter
{
	wdTrailingTab = 0, 
	wdTrailingSpace = 1,
	wdTrailingNone = 2, 
} WdTrailingCharacter;

// WdListNumberStyle
typedef enum tagWdListNumberStyle
{
	wdListNumberStyleArabic = 0, 
	wdListNumberStyleUppercaseRoman = 1, 
	wdListNumberStyleLowercaseRoman = 2, 
	wdListNumberStyleUppercaseLetter = 3, 
	wdListNumberStyleLowercaseLetter = 4, 
	wdListNumberStyleOrdinal = 5, 
	wdListNumberStyleCardinalText = 6, 
	wdListNumberStyleOrdinalText = 7, 
	wdListNumberStyleKanji = 10, 
	wdListNumberStyleKanjiDigit = 11, 
	wdListNumberStyleAiueoHalfWidth = 12, 
	wdListNumberStyleIrohaHalfWidth = 13, 
	wdListNumberStyleArabicFullWidth = 14, 
	wdListNumberStyleKanjiTraditional = 16, 
	wdListNumberStyleKanjiTraditional2 = 17, 
	wdListNumberStyleNumberInCircle = 18, 
	wdListNumberStyleAiueo = 20, 
	wdListNumberStyleIroha = 21, 
	wdListNumberStyleArabicLZ = 22, 
	wdListNumberStyleBullet = 23, 
	wdListNumberStyleGanada = 24,
	wdListNumberStyleChosung = 25, 
	wdListNumberStyleGBNum1 = 26, 
	wdListNumberStyleGBNum2 = 27, 
	wdListNumberStyleGBNum3 = 28, 
	wdListNumberStyleGBNum4 = 29, 
	wdListNumberStyleZodiac1 = 30, 
	wdListNumberStyleZodiac2 = 31, 
	wdListNumberStyleZodiac3 = 32, 
	wdListNumberStyleTradChinNum1 = 33, 
	wdListNumberStyleTradChinNum2 = 34, 
	wdListNumberStyleTradChinNum3 = 35, 
	wdListNumberStyleTradChinNum4 = 36, 
	wdListNumberStyleSimpChinNum1 = 37, 
	wdListNumberStyleSimpChinNum2 = 38, 
	wdListNumberStyleSimpChinNum3 = 39, 
	wdListNumberStyleSimpChinNum4 = 40, 
	wdListNumberStyleHanjaRead = 41, 
	wdListNumberStyleHanjaReadDigit = 42, 
	wdListNumberStyleHangul = 43, 
	wdListNumberStyleHanja = 44, 
	wdListNumberStyleHebrew1 = 45, 
	wdListNumberStyleArabic1 = 46, 
	wdListNumberStyleHebrew2 = 47, 
	wdListNumberStyleArabic2 = 48, 
	wdListNumberStyleHindiLetter1 = 49, 
	wdListNumberStyleHindiLetter2 = 50, 
	wdListNumberStyleHindiArabic = 51,
	wdListNumberStyleHindiCardinalText = 52, 
	wdListNumberStyleThaiLetter = 53, 
	wdListNumberStyleThaiArabic = 54, 
	wdListNumberStyleThaiCardinalText = 55, 
	wdListNumberStyleVietCardinalText = 56, 
	wdListNumberStyleLowercaseRussian = 58, 
	wdListNumberStyleUppercaseRussian = 59, 
	wdListNumberStylePictureBullet = 249, 
	wdListNumberStyleLegal = 253, 
	wdListNumberStyleLegalLZ = 254, 
	wdListNumberStyleNone = 255, 
} WdListNumberStyle;

// WdListLevelAlignment
typedef enum tagWdListLevelAlignment
{
	wdListLevelAlignLeft = 0, 
	wdListLevelAlignCenter = 1, 
	wdListLevelAlignRight = 2, 
} WdListLevelAlignment;

// ListLevel
// {0002098D-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE ListLevel
DECLARE_INTERFACE_(ListLevel, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// ListLevel methods:
	STDMETHOD_(HRESULT, Get_Index) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_NumberFormat) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Set_NumberFormat) (THIS_ BSTR prop) PURE; 
	STDMETHOD_(HRESULT, Get_TrailingCharacter) (THIS_ WdTrailingCharacter* prop) PURE; 
	STDMETHOD_(HRESULT, Set_TrailingCharacter) (THIS_ WdTrailingCharacter prop) PURE; 
	STDMETHOD_(HRESULT, Get_NumberStyle) (THIS_ WdListNumberStyle* prop) PURE; 
	STDMETHOD_(HRESULT, Set_NumberStyle) (THIS_ WdListNumberStyle prop) PURE; 
	STDMETHOD_(HRESULT, Get_NumberPosition) (THIS_ float* prop) PURE; 
	STDMETHOD_(HRESULT, Set_NumberPosition) (THIS_ float prop) PURE; 
	STDMETHOD_(HRESULT, Get_Alignment) (THIS_ WdListLevelAlignment* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Alignment) (THIS_ WdListLevelAlignment prop) PURE; 
	STDMETHOD_(HRESULT, Get_TextPosition) (THIS_ float* prop) PURE; 
	STDMETHOD_(HRESULT, Set_TextPosition) (THIS_ float prop) PURE; 
	STDMETHOD_(HRESULT, Get_TabPosition) (THIS_ float* prop) PURE; 
	STDMETHOD_(HRESULT, Set_TabPosition) (THIS_ float prop) PURE;
	STDMETHOD_(HRESULT, Get_ResetOnHigherOld) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_ResetOnHigherOld) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_StartAt) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Set_StartAt) (THIS_ long prop) PURE; 
	STDMETHOD_(HRESULT, Get_LinkedStyle) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Set_LinkedStyle) (THIS_ BSTR prop) PURE; 
	STDMETHOD_(HRESULT, Get_Font) (THIS_ Font** prop) PURE; 
	STDMETHOD_(HRESULT, Set_Font) (THIS_ Font* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE;
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get_ResetOnHigher) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Set_ResetOnHigher) (THIS_ long prop) PURE; 
	STDMETHOD_(HRESULT, Get_PictureBullet) (THIS_ InlineShape** prop) PURE; 
	STDMETHOD_(HRESULT, ApplyPictureBullet) (THIS_ BSTR FileName, InlineShape** prop) PURE; 
};
typedef ListLevel* LPISTLEVEL;
#ifdef __cplusplus
// ListLevel  {0002098D-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TListLevelProxy : public __OCF TAutoProxy
{
public:
	TListLevelProxy() : TAutoProxy(0x0) {}

	// _Index:   [dispid 1]
	long _Index();

	// NumberFormat:   [dispid 2]
	__OCF TAutoString NumberFormat();

	// NumberFormat:   [dispid 2]
	void NumberFormat(__OCF TAutoString arg0);

	// TrailingCharacter:   [dispid 3]
	WdTrailingCharacter TrailingCharacter();

	// TrailingCharacter:   [dispid 3]
	void TrailingCharacter(WdTrailingCharacter arg0);

	// NumberStyle:   [dispid 4]
	WdListNumberStyle NumberStyle();

	// NumberStyle:   [dispid 4]
	void NumberStyle(WdListNumberStyle arg0);

	// NumberPosition:   [dispid 5]
	float NumberPosition();

	// NumberPosition:   [dispid 5]
	void NumberPosition(float arg0);

	// Alignment:   [dispid 6]
	WdListLevelAlignment Alignment();

	// Alignment:   [dispid 6]
	void Alignment(WdListLevelAlignment arg0);

	// TextPosition:   [dispid 7]
	float TextPosition();

	// TextPosition:   [dispid 7]
	void TextPosition(float arg0);

	// TabPosition:   [dispid 8]
	float TabPosition();

	// TabPosition:   [dispid 8]
	void TabPosition(float arg0);

	// ResetOnHigherOld:   [dispid 9]
	/*__OWL*/ TBool ResetOnHigherOld();

	// ResetOnHigherOld:   [dispid 9]
	void ResetOnHigherOld(/*__OWL*/ TBool arg0);

	// StartAt:   [dispid 10]
	long StartAt();

	// StartAt:   [dispid 10]
	void StartAt(long arg0);

	// LinkedStyle:   [dispid 11]
	__OCF TAutoString LinkedStyle();

	// LinkedStyle:   [dispid 11]
	void LinkedStyle(__OCF TAutoString arg0);

	// _Font:   [dispid 12]
	Font* _Font();

	// _Font:   [dispid 12]
	void _Font(Font* arg0);

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// ResetOnHigher:   [dispid 13]
	long ResetOnHigher();

	// ResetOnHigher:   [dispid 13]
	void ResetOnHigher(long arg0);

	// PictureBullet:   [dispid 14]
	void PictureBullet(TInlineShapeProxy& Obj);

	// ApplyPictureBullet:   [dispid 0]
	void ApplyPictureBullet(TInlineShapeProxy& Obj, __OCF TAutoString FileName);
};
#endif

// MailMergeDataField
// {00020919-0000-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE MailMergeDataField
DECLARE_INTERFACE_(MailMergeDataField, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// MailMergeDataField methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Value) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Name) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Index) (THIS_ long* prop) PURE; 
};
typedef MailMergeDataField* LPAILMERGEDATAFIELD;
#ifdef __cplusplus
// MailMergeDataField  {00020919-0000-0000-C000-000000000046}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TMailMergeDataFieldProxy : public __OCF TAutoProxy
{
public:
	TMailMergeDataFieldProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// Value:   [dispid 0]
	__OCF TAutoString Value();

	// Name:   [dispid 1]
	__OCF TAutoString Name();

	// _Index:   [dispid 2]
	long _Index();
};
#endif

// Page
// {352840A9-AF7D-4CA4-87FC-21C68FDAB3E4}
#undef INTERFACE
#define INTERFACE Page
DECLARE_INTERFACE_(Page, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE;
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// Page methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Left) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Top) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Width) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Height) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Rectangles) (THIS_ Rectangles** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Breaks) (THIS_ Breaks** prop) PURE; 
};
typedef Page* LPAGE;
#ifdef __cplusplus
// Page  {352840A9-AF7D-4CA4-87FC-21C68FDAB3E4}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TPageProxy : public __OCF TAutoProxy
{
public:
	TPageProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// Left:   [dispid 2]
	long Left();

	// Top:   [dispid 3]
	long Top();

	// Width:   [dispid 4]
	long Width();

	// Height:   [dispid 5]
	long Height();

	// _Rectangles:   [dispid 6]
	void _Rectangles(TRectanglesProxy& Obj);

	// _Breaks:   [dispid 7]
	void _Breaks(TBreaksProxy& Obj);
};
#endif

// Rectangles
// {7D0F7985-68D9-4D93-91CB-8109280E76CC}
#undef INTERFACE
#define INTERFACE Rectangles
DECLARE_INTERFACE_(Rectangles, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE;
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE;
	STDMETHOD_(unsigned long, Release) (THIS ) PURE;
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE;
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE;
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE;
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE;
#endif
	// Rectangles methods:
	STDMETHOD_(HRESULT, Get__NewEnum) (THIS_ IUnknown** prop) PURE;
	STDMETHOD_(HRESULT, Get_Count) (THIS_ long* prop) PURE;
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE;
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE;
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE;
	STDMETHOD_(HRESULT, Item) (THIS_ long , WordRectangle** prop) PURE;
};
typedef Rectangles* LPECTANGLES;
#ifdef __cplusplus
// Rectangles  {7D0F7985-68D9-4D93-91CB-8109280E76CC}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TRectanglesProxy : public __OCF TAutoProxy
{
public:
	TRectanglesProxy() : TAutoProxy(0x0) {}

	// _NewEnum:   [dispid -4]
	void _NewEnum(__OCF TAutoEnumerator<IUnknown*>& Obj);

	// Count:   [dispid 2]
	long Count();

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// Item:   [dispid 0]
	void Item(TRectangleProxy& Obj, long arg0);
};
#endif

// Reviewer
// {47CEF4AE-DC32-4220-8AA5-19CCC0E6633A}
#undef INTERFACE
#define INTERFACE Reviewer
DECLARE_INTERFACE_(Reviewer, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// Reviewer methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Visible) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_Visible) (THIS_ VARIANT_BOOL prop) PURE; 
};
typedef Reviewer* LPEVIEWER;
#ifdef __cplusplus
// Reviewer  {47CEF4AE-DC32-4220-8AA5-19CCC0E6633A}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TReviewerProxy : public __OCF TAutoProxy
{
public:
	TReviewerProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// Visible:   [dispid 0]
	/*__OWL*/ TBool Visible();

	// Visible:   [dispid 0]
	void Visible(/*__OWL*/ TBool arg0);
};
#endif

// WdSmartTagControlType
typedef enum tagWdSmartTagControlType
{
	wdControlSmartTag = 1, 
	wdControlLink = 2, 
	wdControlHelp = 3, 
	wdControlHelpURL = 4, 
	wdControlSeparator = 5, 
	wdControlButton = 6, 
	wdControlLabel = 7,
	wdControlImage = 8, 
	wdControlCheckbox = 9, 
	wdControlTextbox = 10, 
	wdControlListbox = 11, 
	wdControlCombo = 12, 
	wdControlActiveX = 13, 
	wdControlDocumentFragment = 14, 
	wdControlDocumentFragmentURL = 15, 
	wdControlRadioGroup = 16, 
} WdSmartTagControlType;

// SmartTagAction
// {DFB6AA6C-1068-420F-969D-01280FCC1630}
#undef INTERFACE
#define INTERFACE SmartTagAction
DECLARE_INTERFACE_(SmartTagAction, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE;
#endif
	// SmartTagAction methods:
	STDMETHOD_(HRESULT, Get_Name) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Execute) (THIS ) PURE; 
	STDMETHOD_(HRESULT, Get_Type) (THIS_ WdSmartTagControlType* prop) PURE; 
	STDMETHOD_(HRESULT, Get_PresentInPane) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Get_ExpandHelp) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_ExpandHelp) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_CheckboxState) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_CheckboxState) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_TextboxText) (THIS_ BSTR* prop) PURE; 
	STDMETHOD_(HRESULT, Set_TextboxText) (THIS_ BSTR prop) PURE; 
	STDMETHOD_(HRESULT, Get_ListSelection) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Set_ListSelection) (THIS_ long prop) PURE; 
	STDMETHOD_(HRESULT, Get_RadioGroupSelection) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Set_RadioGroupSelection) (THIS_ long prop) PURE; 
	STDMETHOD_(HRESULT, Get_ExpandDocumentFragment) (THIS_ VARIANT_BOOL* prop) PURE; 
	STDMETHOD_(HRESULT, Set_ExpandDocumentFragment) (THIS_ VARIANT_BOOL prop) PURE; 
	STDMETHOD_(HRESULT, Get_ActiveXControl) (THIS_ IDispatch** prop) PURE; 
};
typedef SmartTagAction* LPMARTTAGACTION;
#ifdef __cplusplus
// SmartTagAction  {DFB6AA6C-1068-420F-969D-01280FCC1630}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TSmartTagActionProxy : public __OCF TAutoProxy
{
public:
	TSmartTagActionProxy() : TAutoProxy(0x0) {}

	// Name:   [dispid 0]
	__OCF TAutoString Name();

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// Execute:   [dispid 1003]
	void Execute();

	// Type:   [dispid 1004]
	WdSmartTagControlType Type();

	// PresentInPane:   [dispid 1005]
	/*__OWL*/ TBool PresentInPane();

	// ExpandHelp:   [dispid 1006]
	/*__OWL*/ TBool ExpandHelp();

	// ExpandHelp:   [dispid 1006]
	void ExpandHelp(/*__OWL*/ TBool arg0);

	// CheckboxState:   [dispid 1007]
	/*__OWL*/ TBool CheckboxState();

	// CheckboxState:   [dispid 1007]
	void CheckboxState(/*__OWL*/ TBool arg0);

	// TextboxText:   [dispid 1008]
	__OCF TAutoString TextboxText();

	// TextboxText:   [dispid 1008]
	void TextboxText(__OCF TAutoString arg0);

	// ListSelection:   [dispid 1009]
	long ListSelection();

	// ListSelection:   [dispid 1009]
	void ListSelection(long arg0);

	// RadioGroupSelection:   [dispid 1010]
	long RadioGroupSelection();

	// RadioGroupSelection:   [dispid 1010]
	void RadioGroupSelection(long arg0);

	// ExpandDocumentFragment:   [dispid 1011]
	/*__OWL*/ TBool ExpandDocumentFragment();

	// ExpandDocumentFragment:   [dispid 1011]
	void ExpandDocumentFragment(/*__OWL*/ TBool arg0);

	// ActiveXControl:   [dispid 1012]
	IDispatch* ActiveXControl();
};
#endif

// Breaks
// {16BE9309-D708-4322-BB1A-B056F58D17EA}
#undef INTERFACE
#define INTERFACE Breaks
DECLARE_INTERFACE_(Breaks, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE;
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// Breaks methods:
	STDMETHOD_(HRESULT, Get__NewEnum) (THIS_ IUnknown** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Count) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Item) (THIS_ long , Break** prop) PURE; 
};
typedef Breaks* LPREAKS;
#ifdef __cplusplus
// Breaks  {16BE9309-D708-4322-BB1A-B056F58D17EA}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TBreaksProxy : public __OCF TAutoProxy
{
public:
	TBreaksProxy() : TAutoProxy(0x0) {}

	// _NewEnum:   [dispid -4]
	void _NewEnum(__OCF TAutoEnumerator<IUnknown*>& Obj);

	// Count:   [dispid 2]
	long Count();

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// Item:   [dispid 0]
	void Item(TBreakProxy& Obj, long arg0);
};
#endif

// WdRectangleType
typedef enum tagWdRectangleType
{
	wdTextRectangle = 0,
	wdShapeRectangle = 1,
	wdMarkupRectangle = 2,
	wdMarkupRectangleButton = 3,
	wdPageBorderRectangle = 4,
	wdLineBetweenColumnRectangle = 5,
	wdSelection = 6, 
	wdSystem = 7, 
} WdRectangleType;

// Rectangle
// {ADD4EDF3-2F33-4734-9CE6-D476097C5ADA}
#undef INTERFACE
#define INTERFACE WordRectangle
DECLARE_INTERFACE_(WordRectangle, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// Rectangle methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get_RectangleType) (THIS_ WdRectangleType* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Left) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Top) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Width) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Height) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Range) (THIS_ WordRange** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Lines) (THIS_ Lines** prop) PURE;
};
typedef WordRectangle* LPECTANGLE;
#ifdef __cplusplus
// Rectangle  {ADD4EDF3-2F33-4734-9CE6-D476097C5ADA}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TRectangleProxy : public __OCF TAutoProxy
{
public:
	TRectangleProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// RectangleType:   [dispid 2]
	WdRectangleType RectangleType();

	// Left:   [dispid 3]
	long Left();

	// Top:   [dispid 4]
	long Top();

	// Width:   [dispid 5]
	long Width();

	// Height:   [dispid 6]
	long Height();

	// _Range:   [dispid 7]
	void _Range(TRangeProxy& Obj);

	// _Lines:   [dispid 8]
	void _Lines(TLinesProxy& Obj);
};
#endif

// Break
// {79635BF1-BD1D-4B3F-A520-C1106F1AAAD8}
#undef INTERFACE
#define INTERFACE Break
DECLARE_INTERFACE_(Break, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// Break methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Range) (THIS_ WordRange** prop) PURE; 
	STDMETHOD_(HRESULT, Get_PageIndex) (THIS_ long* prop) PURE; 
};
typedef Break* LPREAK;
#ifdef __cplusplus
// Break  {79635BF1-BD1D-4B3F-A520-C1106F1AAAD8}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TBreakProxy : public __OCF TAutoProxy
{
public:
	TBreakProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// _Range:   [dispid 2]
	void _Range(TRangeProxy& Obj);

	// PageIndex:   [dispid 3]
	long PageIndex();
};
#endif

// Lines
// {E2E8A400-0615-427D-ADCC-CAD39FFEBD42}
#undef INTERFACE
#define INTERFACE Lines
DECLARE_INTERFACE_(Lines, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE;
#endif
	// Lines methods:
	STDMETHOD_(HRESULT, Get__NewEnum) (THIS_ IUnknown** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Count) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE; 
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE; 
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE; 
	STDMETHOD_(HRESULT, Item) (THIS_ long , Line** prop) PURE; 
};
typedef Lines* LPINES;
#ifdef __cplusplus
// Lines  {E2E8A400-0615-427D-ADCC-CAD39FFEBD42}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TLinesProxy : public __OCF TAutoProxy
{
public:
	TLinesProxy() : TAutoProxy(0x0) {}

	// _NewEnum:   [dispid -4]
	void _NewEnum(__OCF TAutoEnumerator<IUnknown*>& Obj);

	// Count:   [dispid 2]
	long Count();

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// Item:   [dispid 0]
	void Item(TLineProxy& Obj, long arg0);
};
#endif

// WdLineType
typedef enum tagWdLineType
{
	wdTextLine = 0, 
	wdTableRow = 1, 
} WdLineType;

// Line
// {AE6CE2F5-B9D3-407D-85A8-0F10C63289A4}
#undef INTERFACE
#define INTERFACE Line
DECLARE_INTERFACE_(Line, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE;
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE; 
#endif
	// Line methods:
	STDMETHOD_(HRESULT, Get_Application) (THIS_ WordApplication** prop) PURE;
	STDMETHOD_(HRESULT, Get_Creator) (THIS_ long* prop) PURE;
	STDMETHOD_(HRESULT, Get_Parent) (THIS_ IDispatch** prop) PURE;
	STDMETHOD_(HRESULT, Get_LineType) (THIS_ WdLineType* prop) PURE;
	STDMETHOD_(HRESULT, Get_Left) (THIS_ long* prop) PURE;
	STDMETHOD_(HRESULT, Get_Top) (THIS_ long* prop) PURE;
	STDMETHOD_(HRESULT, Get_Width) (THIS_ long* prop) PURE;
	STDMETHOD_(HRESULT, Get_Height) (THIS_ long* prop) PURE;
	STDMETHOD_(HRESULT, Get_Range) (THIS_ WordRange** prop) PURE;
	STDMETHOD_(HRESULT, Get_Rectangles) (THIS_ Rectangles** prop) PURE;
};
typedef Line* LPINE;
#ifdef __cplusplus
// Line  {AE6CE2F5-B9D3-407D-85A8-0F10C63289A4}
//  [flags: TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TLineProxy : public __OCF TAutoProxy
{
public:
	TLineProxy() : TAutoProxy(0x0) {}

	// _Application:   [dispid 1000]
	WordApplication* _Application();

	// Creator:   [dispid 1001]
	long Creator();

	// Parent:   [dispid 1002]
	IDispatch* Parent();

	// LineType:   [dispid 2]
	WdLineType LineType();

	// Left:   [dispid 3]
	long Left();

	// Top:   [dispid 4]
	long Top();

	// Width:   [dispid 5]
	long Width();

	// Height:   [dispid 6]
	long Height();

	// _Range:   [dispid 7]
	void _Range(TRangeProxy& Obj);

	// _Rectangles:   [dispid 8]
	void _Rectangles(TRectanglesProxy& Obj);
};
#endif

// WdBorderTypeHID
typedef enum tagWdBorderTypeHID
{
	emptyWdBorderTypeEnum = 0,
} WdBorderTypeHID;

// WdFramePosition
typedef enum tagWdFramePosition
{
	wdFrameTop = -999999,
	wdFrameLeft = -999998,
	wdFrameBottom = -999997,
	wdFrameRight = -999996,
	wdFrameCenter = -999995,
	wdFrameInside = -999994,
	wdFrameOutside = -999993,
} WdFramePosition;

// WdCharacterCaseHID
typedef enum tagWdCharacterCaseHID
{
	emptyCharacterCaseEnum = 0,
} WdCharacterCaseHID;

// WdSummaryLength
typedef enum tagWdSummaryLength
{
	wd10Sentences = -2,
	wd20Sentences = -3,
	wd100Words = -4,
	wd500Words = -5,
	wd10Percent = -6,
	wd25Percent = -7,
	wd50Percent = -8,
	wd75Percent = -9,
} WdSummaryLength;

// WdInsertCells
typedef enum tagWdInsertCells
{
	wdInsertCellsShiftRight = 0,
	wdInsertCellsShiftDown = 1,
	wdInsertCellsEntireRow = 2,
	wdInsertCellsEntireColumn = 3,
} WdInsertCells;

// WdDeleteCells
typedef enum tagWdDeleteCells
{
	wdDeleteCellsShiftLeft = 0,
	wdDeleteCellsShiftUp = 1,
	wdDeleteCellsEntireRow = 2,
	wdDeleteCellsEntireColumn = 3,
} WdDeleteCells;

// WdListApplyTo
typedef enum tagWdListApplyTo
{
	wdListApplyToWholeList = 0,
	wdListApplyToThisPointForward = 1,
	wdListApplyToSelection = 2,
} WdListApplyTo;

// WdParagraphAlignmentHID
typedef enum tagWdParagraphAlignmentHID
{
	emptyParagraphAlignmentEnum = 0,
} WdParagraphAlignmentHID;

// WdListNumberStyleHID
typedef enum tagWdListNumberStyleHID
{
	emptyListNumberStyleEnum = 0,
} WdListNumberStyleHID;

// WdNoteNumberStyleHID
typedef enum tagWdNoteNumberStyleHID
{
	emptyNoteNumberStyleEnum = 0,
} WdNoteNumberStyleHID;

// WdCaptionNumberStyleHID
typedef enum tagWdCaptionNumberStyleHID
{
	emptyCaptionNumberStyleEnum = 0,
} WdCaptionNumberStyleHID;

// WdPageNumberStyleHID
typedef enum tagWdPageNumberStyleHID
{
	emptyPageNumberStyleEnum = 0,
} WdPageNumberStyleHID;

// WdStatisticHID
typedef enum tagWdStatisticHID
{
	emptyStatisticEnum = 0,
} WdStatisticHID;

// WdBuiltInProperty
typedef enum tagWdBuiltInProperty
{
	wdPropertyTitle = 1,
	wdPropertySubject = 2,
	wdPropertyAuthor = 3,
	wdPropertyKeywords = 4,
	wdPropertyComments = 5,
	wdPropertyTemplate = 6,
	wdPropertyLastAuthor = 7,
	wdPropertyRevision = 8,
	wdPropertyAppName = 9,
	wdPropertyTimeLastPrinted = 10,
	wdPropertyTimeCreated = 11,
	wdPropertyTimeLastSaved = 12,
	wdPropertyVBATotalEdit = 13,
	wdPropertyPages = 14,
	wdPropertyWords = 15,
	wdPropertyCharacters = 16,
	wdPropertySecurity = 17,
	wdPropertyCategory = 18,
	wdPropertyFormat = 19,
	wdPropertyManager = 20,
	wdPropertyCompany = 21,
	wdPropertyBytes = 22,
	wdPropertyLines = 23,
	wdPropertyParas = 24,
	wdPropertySlides = 25,
	wdPropertyNotes = 26,
	wdPropertyHiddenSlides = 27,
	wdPropertyMMClips = 28,
	wdPropertyHyperlinkBase = 29,
	wdPropertyCharsWSpaces = 30,
} WdBuiltInProperty;

// WdNumberType
typedef enum tagWdNumberType
{
	wdNumberParagraph = 1,
	wdNumberListNum = 2,
	wdNumberAllNumbers = 3,
} WdNumberType;

// WdBreakType
typedef enum tagWdBreakType
{
	wdSectionBreakNextPage = 2,
	wdSectionBreakContinuous = 3,
	wdSectionBreakEvenPage = 4,
	wdSectionBreakOddPage = 5,
	wdLineBreak = 6,
	wdPageBreak = 7,
	wdColumnBreak = 8,
	wdLineBreakClearLeft = 9,
	wdLineBreakClearRight = 10,
	wdTextWrappingBreak = 11,
} WdBreakType;

// WdTabLeaderHID
typedef enum tagWdTabLeaderHID
{
	emptyTabLeaderEnum = 0,
} WdTabLeaderHID;

// WdMeasurementUnitsHID
typedef enum tagWdMeasurementUnitsHID
{
	emptyMeasurementUnitsEnum = 0,
} WdMeasurementUnitsHID;

// WdSortSeparator
typedef enum tagWdSortSeparator
{
	wdSortSeparateByTabs = 0,
	wdSortSeparateByCommas = 1,
	wdSortSeparateByDefaultTableSeparator = 2,
} WdSortSeparator;

// WdTableFieldSeparator
typedef enum tagWdTableFieldSeparator
{
	wdSeparateByParagraphs = 0,
	wdSeparateByTabs = 1,
	wdSeparateByCommas = 2,
	wdSeparateByDefaultListSeparator = 3,
} WdTableFieldSeparator;

// WdSortFieldType
typedef enum tagWdSortFieldType
{
	wdSortFieldAlphanumeric = 0,
	wdSortFieldNumeric = 1,
	wdSortFieldDate = 2,
	wdSortFieldSyllable = 3,
	wdSortFieldJapanJIS = 4,
	wdSortFieldStroke = 5,
	wdSortFieldKoreaKS = 6,
} WdSortFieldType;

// WdSortFieldTypeHID
typedef enum tagWdSortFieldTypeHID
{
	emptySortFieldTypeEnum = 0,
} WdSortFieldTypeHID;

// WdSortOrder
typedef enum tagWdSortOrder
{
	wdSortOrderAscending = 0,
	wdSortOrderDescending = 1,
} WdSortOrder;

// WdTableFormat
typedef enum tagWdTableFormat
{
	wdTableFormatNone = 0,
	wdTableFormatSimple1 = 1,
	wdTableFormatSimple2 = 2,
	wdTableFormatSimple3 = 3,
	wdTableFormatClassic1 = 4,
	wdTableFormatClassic2 = 5,
	wdTableFormatClassic3 = 6,
	wdTableFormatClassic4 = 7,
	wdTableFormatColorful1 = 8,
	wdTableFormatColorful2 = 9,
	wdTableFormatColorful3 = 10,
	wdTableFormatColumns1 = 11,
	wdTableFormatColumns2 = 12,
	wdTableFormatColumns3 = 13,
	wdTableFormatColumns4 = 14,
	wdTableFormatColumns5 = 15,
	wdTableFormatGrid1 = 16,
	wdTableFormatGrid2 = 17,
	wdTableFormatGrid3 = 18,
	wdTableFormatGrid4 = 19,
	wdTableFormatGrid5 = 20,
	wdTableFormatGrid6 = 21,
	wdTableFormatGrid7 = 22,
	wdTableFormatGrid8 = 23,
	wdTableFormatList1 = 24,
	wdTableFormatList2 = 25,
	wdTableFormatList3 = 26,
	wdTableFormatList4 = 27,
	wdTableFormatList5 = 28,
	wdTableFormatList6 = 29,
	wdTableFormatList7 = 30,
	wdTableFormatList8 = 31,
	wdTableFormat3DEffects1 = 32,
	wdTableFormat3DEffects2 = 33,
	wdTableFormat3DEffects3 = 34,
	wdTableFormatContemporary = 35,
	wdTableFormatElegant = 36,
	wdTableFormatProfessional = 37,
	wdTableFormatSubtle1 = 38,
	wdTableFormatSubtle2 = 39,
	wdTableFormatWeb1 = 40,
	wdTableFormatWeb2 = 41,
	wdTableFormatWeb3 = 42,
} WdTableFormat;

// WdTableFormatApply
typedef enum tagWdTableFormatApply
{
	wdTableFormatApplyBorders = 1,
	wdTableFormatApplyShading = 2,
	wdTableFormatApplyFont = 4,
	wdTableFormatApplyColor = 8,
	wdTableFormatApplyAutoFit = 16,
	wdTableFormatApplyHeadingRows = 32,
	wdTableFormatApplyLastRow = 64,
	wdTableFormatApplyFirstColumn = 128,
	wdTableFormatApplyLastColumn = 256,
} WdTableFormatApply;

// WdBuiltinStyle
typedef enum tagWdBuiltinStyle
{
	wdStyleNormal = -1,
	wdStyleEnvelopeAddress = -37,
	wdStyleEnvelopeReturn = -38,
	wdStyleBodyText = -67,
	wdStyleHeading1 = -2,
	wdStyleHeading2 = -3,
	wdStyleHeading3 = -4,
	wdStyleHeading4 = -5,
	wdStyleHeading5 = -6,
	wdStyleHeading6 = -7,
	wdStyleHeading7 = -8,
	wdStyleHeading8 = -9,
	wdStyleHeading9 = -10,
	wdStyleIndex1 = -11,
	wdStyleIndex2 = -12,
	wdStyleIndex3 = -13,
	wdStyleIndex4 = -14,
	wdStyleIndex5 = -15,
	wdStyleIndex6 = -16,
	wdStyleIndex7 = -17,
	wdStyleIndex8 = -18,
	wdStyleIndex9 = -19,
	wdStyleTOC1 = -20,
	wdStyleTOC2 = -21,
	wdStyleTOC3 = -22,
	wdStyleTOC4 = -23,
	wdStyleTOC5 = -24,
	wdStyleTOC6 = -25,
	wdStyleTOC7 = -26,
	wdStyleTOC8 = -27,
	wdStyleTOC9 = -28,
	wdStyleNormalIndent = -29,
	wdStyleFootnoteText = -30,
	wdStyleCommentText = -31,
	wdStyleHeader = -32,
	wdStyleFooter = -33,
	wdStyleIndexHeading = -34,
	wdStyleCaption = -35,
	wdStyleTableOfFigures = -36,
	wdStyleFootnoteReference = -39,
	wdStyleCommentReference = -40,
	wdStyleLineNumber = -41,
	wdStylePageNumber = -42,
	wdStyleEndnoteReference = -43,
	wdStyleEndnoteText = -44,
	wdStyleTableOfAuthorities = -45,
	wdStyleMacroText = -46,
	wdStyleTOAHeading = -47,
	wdStyleList = -48,
	wdStyleListBullet = -49,
	wdStyleListNumber = -50,
	wdStyleList2 = -51,
	wdStyleList3 = -52,
	wdStyleList4 = -53,
	wdStyleList5 = -54,
	wdStyleListBullet2 = -55,
	wdStyleListBullet3 = -56,
	wdStyleListBullet4 = -57,
	wdStyleListBullet5 = -58,
	wdStyleListNumber2 = -59,
	wdStyleListNumber3 = -60,
	wdStyleListNumber4 = -61,
	wdStyleListNumber5 = -62,
	wdStyleTitle = -63,
	wdStyleClosing = -64,
	wdStyleSignature = -65,
	wdStyleDefaultParagraphFont = -66,
	wdStyleBodyTextIndent = -68,
	wdStyleListContinue = -69,
	wdStyleListContinue2 = -70,
	wdStyleListContinue3 = -71,
	wdStyleListContinue4 = -72,
	wdStyleListContinue5 = -73,
	wdStyleMessageHeader = -74,
	wdStyleSubtitle = -75,
	wdStyleSalutation = -76,
	wdStyleDate = -77,
	wdStyleBodyTextFirstIndent = -78,
	wdStyleBodyTextFirstIndent2 = -79,
	wdStyleNoteHeading = -80,
	wdStyleBodyText2 = -81,
	wdStyleBodyText3 = -82,
	wdStyleBodyTextIndent2 = -83,
	wdStyleBodyTextIndent3 = -84,
	wdStyleBlockQuotation = -85,
	wdStyleHyperlink = -86,
	wdStyleHyperlinkFollowed = -87,
	wdStyleStrong = -88,
	wdStyleEmphasis = -89,
	wdStyleNavPane = -90,
	wdStylePlainText = -91,
	wdStyleHtmlNormal = -95,
	wdStyleHtmlAcronym = -96,
	wdStyleHtmlAddress = -97,
	wdStyleHtmlCite = -98,
	wdStyleHtmlCode = -99,
	wdStyleHtmlDfn = -100,
	wdStyleHtmlKbd = -101,
	wdStyleHtmlPre = -102,
	wdStyleHtmlSamp = -103,
	wdStyleHtmlTt = -104,
	wdStyleHtmlVar = -105,
	wdStyleNormalTable = -106,
} WdBuiltinStyle;

// WdWordDialogTabHID
typedef enum tagWdWordDialogTabHID
{
	wdDialogFilePageSetupTabPaperSize = 150001,
	wdDialogFilePageSetupTabPaperSource = 150002,
} WdWordDialogTabHID;

// WdWordDialogHID
typedef enum tagWdWordDialogHID
{
	emptyWordDialogEnum = 0,
} WdWordDialogHID;

// WdMailMergeDefaultRecord
typedef enum tagWdMailMergeDefaultRecord
{
	wdDefaultFirstRecord = 1,
	wdDefaultLastRecord = -16,
} WdMailMergeDefaultRecord;

// WdPictureLinkType
typedef enum tagWdPictureLinkType
{
	wdLinkNone = 0,
	wdLinkDataInDoc = 1,
	wdLinkDataOnDisk = 2,
} WdPictureLinkType;

// WdReferenceType
typedef enum tagWdReferenceType
{
	wdRefTypeNumberedItem = 0,
	wdRefTypeHeading = 1,
	wdRefTypeBookmark = 2,
	wdRefTypeFootnote = 3,
	wdRefTypeEndnote = 4,
} WdReferenceType;

// WdRevisionsWrap
typedef enum tagWdRevisionsWrap
{
	wdWrapNever = 0,
	wdWrapAlways = 1,
	wdWrapAsk = 2,
} WdRevisionsWrap;

// WdOriginalFormat
typedef enum tagWdOriginalFormat
{
	wdWordDocument = 0,
	wdOriginalDocumentFormat = 1,
	wdPromptUser = 2,
} WdOriginalFormat;

// WdRelocate
typedef enum tagWdRelocate
{
	wdRelocateUp = 0,
	wdRelocateDown = 1,
} WdRelocate;

// WdPartOfSpeech
typedef enum tagWdPartOfSpeech
{
	wdAdjective = 0,
	wdNoun = 1,
	wdAdverb = 2,
	wdVerb = 3,
	wdPronoun = 4,
	wdConjunction = 5,
	wdPreposition = 6,
	wdInterjection = 7,
	wdIdiom = 8,
	wdOther = 9,
} WdPartOfSpeech;

// WdSubscriberFormats
typedef enum tagWdSubscriberFormats
{
	wdSubscriberBestFormat = 0,
	wdSubscriberRTF = 1,
	wdSubscriberText = 2,
	wdSubscriberPict = 4,
} WdSubscriberFormats;

// WdHelpType
typedef enum tagWdHelpType
{
	wdHelp = 0,
	wdHelpAbout = 1,
	wdHelpActiveWindow = 2,
	wdHelpContents = 3,
	wdHelpExamplesAndDemos = 4,
	wdHelpIndex = 5,
	wdHelpKeyboard = 6,
	wdHelpPSSHelp = 7,
	wdHelpQuickPreview = 8,
	wdHelpSearch = 9,
	wdHelpUsingHelp = 10,
	wdHelpIchitaro = 11,
	wdHelpPE2 = 12,
	wdHelpHWP = 13,
} WdHelpType;

// WdHelpTypeHID
typedef enum tagWdHelpTypeHID
{
	emptyHelpTypeEnum = 0,
} WdHelpTypeHID;

// WdOLEType
typedef enum tagWdOLEType
{
	wdOLELink = 0,
	wdOLEEmbed = 1,
	wdOLEControl = 2,
} WdOLEType;

// WdOLEVerb
typedef enum tagWdOLEVerb
{
	wdOLEVerbPrimary = 0,
	wdOLEVerbShow = -1,
	wdOLEVerbOpen = -2,
	wdOLEVerbHide = -3,
	wdOLEVerbUIActivate = -4,
	wdOLEVerbInPlaceActivate = -5,
	wdOLEVerbDiscardUndoState = -6,
} WdOLEVerb;

// WdOLEPlacement
typedef enum tagWdOLEPlacement
{
	wdInLine = 0,
	wdFloatOverText = 1,
} WdOLEPlacement;

// WdMovementType
typedef enum tagWdMovementType
{
	wdMove = 0,
	wdExtend = 1,
} WdMovementType;

// WdConstants
typedef enum tagWdConstants
{
	wdUndefined = 9999999,
	wdToggle = 9999998,
	wdForward = 1073741823,
	wdBackward = -1073741823,
	wdAutoPosition = 0,
	wdFirst = 1,
	wdCreatorCode = 1297307460,
} WdConstants;

// WdPasteDataType
typedef enum tagWdPasteDataType
{
	wdPasteOLEObject = 0,
	wdPasteRTF = 1,
	wdPasteText = 2,
	wdPasteMetafilePicture = 3,
	wdPasteBitmap = 4,
	wdPasteDeviceIndependentBitmap = 5,
	wdPasteHyperlink = 7,
	wdPasteShape = 8,
	wdPasteEnhancedMetafile = 9,
	wdPasteHTML = 10,
} WdPasteDataType;

// WdPrintOutItem
typedef enum tagWdPrintOutItem
{
	wdPrintDocumentContent = 0,
	wdPrintProperties = 1,
	wdPrintComments = 2,
	wdPrintMarkup = 2,
	wdPrintStyles = 3,
	wdPrintAutoTextEntries = 4,
	wdPrintKeyAssignments = 5,
	wdPrintEnvelope = 6,
	wdPrintDocumentWithMarkup = 7,
} WdPrintOutItem;

// WdPrintOutPages
typedef enum tagWdPrintOutPages
{
	wdPrintAllPages = 0,
	wdPrintOddPagesOnly = 1,
	wdPrintEvenPagesOnly = 2,
} WdPrintOutPages;

// WdPrintOutRange
typedef enum tagWdPrintOutRange
{
	wdPrintAllDocument = 0,
	wdPrintSelection = 1,
	wdPrintCurrentPage = 2,
	wdPrintFromTo = 3,
	wdPrintRangeOfPages = 4,
} WdPrintOutRange;

// WdDictionaryTypeHID
typedef enum tagWdDictionaryTypeHID
{
	emptyDictionaryTypeEnum = 0,
} WdDictionaryTypeHID;

// WdSpellingWordType
typedef enum tagWdSpellingWordType
{
	wdSpellword = 0,
	wdWildcard = 1,
	wdAnagram = 2,
} WdSpellingWordType;

// WdArrangeStyle
typedef enum tagWdArrangeStyle
{
	wdTiled = 0,
	wdIcons = 1,
} WdArrangeStyle;

// WdFindMatch
typedef enum tagWdFindMatch
{
	wdMatchParagraphMark = 65551,
	wdMatchTabCharacter = 9,
	wdMatchCommentMark = 5,
	wdMatchAnyCharacter = 65599,
	wdMatchAnyDigit = 65567,
	wdMatchAnyLetter = 65583,
	wdMatchCaretCharacter = 11,
	wdMatchColumnBreak = 14,
	wdMatchEmDash = 8212,
	wdMatchEnDash = 8211,
	wdMatchEndnoteMark = 65555,
	wdMatchField = 19,
	wdMatchFootnoteMark = 65554,
	wdMatchGraphic = 1,
	wdMatchManualLineBreak = 65551,
	wdMatchManualPageBreak = 65564,
	wdMatchNonbreakingHyphen = 30,
	wdMatchNonbreakingSpace = 160,
	wdMatchOptionalHyphen = 31,
	wdMatchSectionBreak = 65580,
	wdMatchWhiteSpace = 65655,
} WdFindMatch;

// WdTextOrientationHID
typedef enum tagWdTextOrientationHID
{
	emptyTextOrientationEnum = 0,
} WdTextOrientationHID;

// WdReplace
typedef enum tagWdReplace
{
	wdReplaceNone = 0,
	wdReplaceOne = 1,
	wdReplaceAll = 2,
} WdReplace;

// WdFontBias
typedef enum tagWdFontBias
{
	wdFontBiasDontCare = 255,
	wdFontBiasDefault = 0,
	wdFontBiasFareast = 1,
} WdFontBias;

// IApplicationEvents
// {000209F7-0001-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE IApplicationEvents
DECLARE_INTERFACE_(IApplicationEvents, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE;
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE;
	STDMETHOD_(unsigned long, Release) (THIS ) PURE;
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE;
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE;
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE;
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE;
#endif
	// IApplicationEvents methods:
	STDMETHOD_(HRESULT, Startup) (THIS ) PURE;
	STDMETHOD_(HRESULT, Quit) (THIS ) PURE;
	STDMETHOD_(HRESULT, DocumentChange) (THIS ) PURE;
};
typedef IApplicationEvents* LPAPPLICATIONEVENTS;
// The following type was found in the type library
// but is not referenced from the application object
// use at your own discretion!!

/*
#ifdef __cplusplus
// IApplicationEvents  {000209F7-0001-0000-C000-000000000046}
//  [flags: TYPEFLAG_FHIDDEN TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TIApplicationEventsProxy : public __OCF TAutoProxy
{
public:
	TIApplicationEventsProxy() : TAutoProxy(0x0) {}

	// Quit:   [dispid 2]
	void Quit();

	// DocumentChange:   [dispid 3]
	void DocumentChange();
};
#endif
*/

// IApplicationEvents2
// {000209FE-0001-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE IApplicationEvents2
DECLARE_INTERFACE_(IApplicationEvents2, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE;
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE;
	STDMETHOD_(unsigned long, Release) (THIS ) PURE;
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE;
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE;
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE;
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE;
#endif
	// IApplicationEvents2 methods:
	STDMETHOD_(HRESULT, Startup) (THIS ) PURE;
	STDMETHOD_(HRESULT, Quit) (THIS ) PURE;
	STDMETHOD_(HRESULT, DocumentChange) (THIS ) PURE;
	STDMETHOD_(HRESULT, DocumentOpen) (THIS_ Document* Doc) PURE;
	STDMETHOD_(HRESULT, DocumentBeforeClose) (THIS_ Document* Doc, VARIANT_BOOL* Cancel) PURE;
	STDMETHOD_(HRESULT, DocumentBeforePrint) (THIS_ Document* Doc, VARIANT_BOOL* Cancel) PURE;
	STDMETHOD_(HRESULT, DocumentBeforeSave) (THIS_ Document* Doc, VARIANT_BOOL* SaveAsUI, VARIANT_BOOL* Cancel) PURE;
	STDMETHOD_(HRESULT, NewDocument) (THIS_ Document* Doc) PURE;
	STDMETHOD_(HRESULT, WindowActivate) (THIS_ Document* Doc, Window* Wn) PURE;
	STDMETHOD_(HRESULT, WindowDeactivate) (THIS_ Document* Doc, Window* Wn) PURE;
	STDMETHOD_(HRESULT, WindowSelectionChange) (THIS_ Selection* Sel) PURE;
	STDMETHOD_(HRESULT, WindowBeforeRightClick) (THIS_ Selection* Sel, VARIANT_BOOL* Cancel) PURE;
	STDMETHOD_(HRESULT, WindowBeforeDoubleClick) (THIS_ Selection* Sel, VARIANT_BOOL* Cancel) PURE;
};
typedef IApplicationEvents2* LPAPPLICATIONEVENTS2;
// The following type was found in the type library
// but is not referenced from the application object
// use at your own discretion!!

/*
#ifdef __cplusplus
// IApplicationEvents2  {000209FE-0001-0000-C000-000000000046}
//  [flags: TYPEFLAG_FHIDDEN TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TIApplicationEvents2Proxy : public __OCF TAutoProxy
{
public:
	TIApplicationEvents2Proxy() : TAutoProxy(0x0) {}

	// Quit:   [dispid 2]
	void Quit();

	// DocumentChange:   [dispid 3]
	void DocumentChange();

	// DocumentOpen:   [dispid 4]
	void DocumentOpen(Document* Doc);

	// DocumentBeforeClose:   [dispid 6]
	void DocumentBeforeClose(Document* Doc, __OWL TBool* Cancel);

	// DocumentBeforePrint:   [dispid 7]
	void DocumentBeforePrint(Document* Doc, __OWL TBool* Cancel);

	// DocumentBeforeSave:   [dispid 8]
	void DocumentBeforeSave(Document* Doc, __OWL TBool* SaveAsUI, __OWL TBool* Cancel);

	// NewDocument:   [dispid 9]
	void NewDocument(Document* Doc);

	// WindowActivate:   [dispid 10]
	void WindowActivate(Document* Doc, Window* Wn);

	// WindowDeactivate:   [dispid 11]
	void WindowDeactivate(Document* Doc, Window* Wn);

	// WindowSelectionChange:   [dispid 12]
	void WindowSelectionChange(Selection* Sel);

	// WindowBeforeRightClick:   [dispid 13]
	void WindowBeforeRightClick(Selection* Sel, __OWL TBool* Cancel);

	// WindowBeforeDoubleClick:   [dispid 14]
	void WindowBeforeDoubleClick(Selection* Sel, __OWL TBool* Cancel);
};
#endif
*/

// WdEnclosureType
typedef enum tagWdEnclosureType
{
	wdEnclosureCircle = 0,
	wdEnclosureSquare = 1, 
	wdEnclosureTriangle = 2, 
	wdEnclosureDiamond = 3, 
} WdEnclosureType;

// WdEncloseStyle
typedef enum tagWdEncloseStyle
{
	wdEncloseStyleNone = 0, 
	wdEncloseStyleSmall = 1, 
	wdEncloseStyleLarge = 2, 
} WdEncloseStyle;

// WdMailerPriority
typedef enum tagWdMailerPriority
{
	wdPriorityNormal = 1, 
	wdPriorityLow = 2, 
	wdPriorityHigh = 3, 
} WdMailerPriority;

// WdDiacriticColor
typedef enum tagWdDiacriticColor
{
	wdDiacriticColorBidi = 0, 
	wdDiacriticColorLatin = 1, 
} WdDiacriticColor;

// WdDateLanguage
typedef enum tagWdDateLanguage
{
	wdDateLanguageBidi = 10,
	wdDateLanguageLatin = 1033, 
} WdDateLanguage;

// WdCalendarTypeBi
typedef enum tagWdCalendarTypeBi
{
	wdCalendarTypeBidi = 99, 
	wdCalendarTypeGregorian = 100, 
} WdCalendarTypeBi;

// WdCalendarType
typedef enum tagWdCalendarType
{
	wdCalendarWestern = 0, 
	wdCalendarArabic = 1, 
	wdCalendarHebrew = 2, 
	wdCalendarChina = 3,
	wdCalendarJapan = 4, 
	wdCalendarThai = 5, 
	wdCalendarKorean = 6, 
	wdCalendarSakaEra = 7, 
} WdCalendarType;

// WdShapePosition
typedef enum tagWdShapePosition
{
	wdShapeTop = -999999,
	wdShapeLeft = -999998, 
	wdShapeBottom = -999997, 
	wdShapeRight = -999996, 
	wdShapeCenter = -999995, 
	wdShapeInside = -999994, 
	wdShapeOutside = -999993, 
} WdShapePosition;

// WdTablePosition
typedef enum tagWdTablePosition
{
	wdTableTop = -999999,
	wdTableLeft = -999998, 
	wdTableBottom = -999997, 
	wdTableRight = -999996, 
	wdTableCenter = -999995, 
	wdTableInside = -999994, 
	wdTableOutside = -999993, 
} WdTablePosition;

// WdDefaultListBehavior
typedef enum tagWdDefaultListBehavior
{
	wdWord8ListBehavior = 0, 
	wdWord9ListBehavior = 1, 
	wdWord10ListBehavior = 2, 
} WdDefaultListBehavior;

// WdDefaultTableBehavior
typedef enum tagWdDefaultTableBehavior
{
	wdWord8TableBehavior = 0, 
	wdWord9TableBehavior = 1, 
} WdDefaultTableBehavior;

// WdViewTypeOld
typedef enum tagWdViewTypeOld
{
	wdPageView = 3, 
	wdOnlineView = 6, 
} WdViewTypeOld;

// WdNewDocumentType
typedef enum tagWdNewDocumentType
{
	wdNewBlankDocument = 0, 
	wdNewWebPage = 1, 
	wdNewEmailMessage = 2, 
	wdNewFrameset = 3, 
	wdNewXMLDocument = 4, 
} WdNewDocumentType;

// WdNumberStyleWordBasicBiDi
typedef enum tagWdNumberStyleWordBasicBiDi
{
	wdListNumberStyleBidi1 = 49,
	wdListNumberStyleBidi2 = 50, 
	wdCaptionNumberStyleBidiLetter1 = 49, 
	wdCaptionNumberStyleBidiLetter2 = 50, 
	wdNoteNumberStyleBidiLetter1 = 49, 
	wdNoteNumberStyleBidiLetter2 = 50, 
	wdPageNumberStyleBidiLetter1 = 49, 
	wdPageNumberStyleBidiLetter2 = 50, 
} WdNumberStyleWordBasicBiDi;

// IApplicationEvents3
// {00020A00-0001-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE IApplicationEvents3
DECLARE_INTERFACE_(IApplicationEvents3, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE; 
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE;
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE;
#endif
	// IApplicationEvents3 methods:
	STDMETHOD_(HRESULT, Startup) (THIS ) PURE; 
	STDMETHOD_(HRESULT, Quit) (THIS ) PURE; 
	STDMETHOD_(HRESULT, DocumentChange) (THIS ) PURE; 
	STDMETHOD_(HRESULT, DocumentOpen) (THIS_ Document* Doc) PURE; 
	STDMETHOD_(HRESULT, DocumentBeforeClose) (THIS_ Document* Doc, VARIANT_BOOL* Cancel) PURE; 
	STDMETHOD_(HRESULT, DocumentBeforePrint) (THIS_ Document* Doc, VARIANT_BOOL* Cancel) PURE; 
	STDMETHOD_(HRESULT, DocumentBeforeSave) (THIS_ Document* Doc, VARIANT_BOOL* SaveAsUI, VARIANT_BOOL* Cancel) PURE; 
	STDMETHOD_(HRESULT, NewDocument) (THIS_ Document* Doc) PURE; 
	STDMETHOD_(HRESULT, WindowActivate) (THIS_ Document* Doc, Window* Wn) PURE; 
	STDMETHOD_(HRESULT, WindowDeactivate) (THIS_ Document* Doc, Window* Wn) PURE; 
	STDMETHOD_(HRESULT, WindowSelectionChange) (THIS_ Selection* Sel) PURE; 
	STDMETHOD_(HRESULT, WindowBeforeRightClick) (THIS_ Selection* Sel, VARIANT_BOOL* Cancel) PURE; 
	STDMETHOD_(HRESULT, WindowBeforeDoubleClick) (THIS_ Selection* Sel, VARIANT_BOOL* Cancel) PURE; 
	STDMETHOD_(HRESULT, EPostagePropertyDialog) (THIS_ Document* Doc) PURE; 
	STDMETHOD_(HRESULT, EPostageInsert) (THIS_ Document* Doc) PURE; 
	STDMETHOD_(HRESULT, MailMergeAfterMerge) (THIS_ Document* Doc, Document* DocResult) PURE; 
	STDMETHOD_(HRESULT, MailMergeAfterRecordMerge) (THIS_ Document* Doc) PURE;
	STDMETHOD_(HRESULT, MailMergeBeforeMerge) (THIS_ Document* Doc, long StartRecord, long EndRecord, VARIANT_BOOL* Cancel) PURE; 
	STDMETHOD_(HRESULT, MailMergeBeforeRecordMerge) (THIS_ Document* Doc, VARIANT_BOOL* Cancel) PURE; 
	STDMETHOD_(HRESULT, MailMergeDataSourceLoad) (THIS_ Document* Doc) PURE; 
	STDMETHOD_(HRESULT, MailMergeDataSourceValidate) (THIS_ Document* Doc, VARIANT_BOOL* Handled) PURE; 
	STDMETHOD_(HRESULT, MailMergeWizardSendToCustom) (THIS_ Document* Doc) PURE; 
	STDMETHOD_(HRESULT, MailMergeWizardStateChange) (THIS_ Document* Doc, int* FromState, int* ToState, VARIANT_BOOL* Handled) PURE; 
	STDMETHOD_(HRESULT, WindowSize) (THIS_ Document* Doc, Window* Wn) PURE; 
};
typedef IApplicationEvents3* LPAPPLICATIONEVENTS3;
// The following type was found in the type library
// but is not referenced from the application object
// use at your own discretion!!

/*
#ifdef __cplusplus
// IApplicationEvents3  {00020A00-0001-0000-C000-000000000046}
//  [flags: TYPEFLAG_FHIDDEN TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TIApplicationEvents3Proxy : public __OCF TAutoProxy
{
public:
	TIApplicationEvents3Proxy() : TAutoProxy(0x0) {}

	// Quit:   [dispid 2]
	void Quit();

	// DocumentChange:   [dispid 3]
	void DocumentChange();

	// DocumentOpen:   [dispid 4]
	void DocumentOpen(Document* Doc);

	// DocumentBeforeClose:   [dispid 6]
	void DocumentBeforeClose(Document* Doc, __OWL TBool* Cancel);

	// DocumentBeforePrint:   [dispid 7]
	void DocumentBeforePrint(Document* Doc, __OWL TBool* Cancel);

	// DocumentBeforeSave:   [dispid 8]
	void DocumentBeforeSave(Document* Doc, __OWL TBool* SaveAsUI, __OWL TBool* Cancel);

	// NewDocument:   [dispid 9]
	void NewDocument(Document* Doc);

	// WindowActivate:   [dispid 10]
	void WindowActivate(Document* Doc, Window* Wn);

	// WindowDeactivate:   [dispid 11]
	void WindowDeactivate(Document* Doc, Window* Wn);

	// WindowSelectionChange:   [dispid 12]
	void WindowSelectionChange(Selection* Sel);

	// WindowBeforeRightClick:   [dispid 13]
	void WindowBeforeRightClick(Selection* Sel, __OWL TBool* Cancel);

	// WindowBeforeDoubleClick:   [dispid 14]
	void WindowBeforeDoubleClick(Selection* Sel, __OWL TBool* Cancel);

	// EPostagePropertyDialog:   [dispid 15]
	void EPostagePropertyDialog(Document* Doc);

	// EPostageInsert:   [dispid 16]
	void EPostageInsert(Document* Doc);

	// MailMergeAfterMerge:   [dispid 17]
	void MailMergeAfterMerge(Document* Doc, Document* DocResult);

	// MailMergeAfterRecordMerge:   [dispid 18]
	void MailMergeAfterRecordMerge(Document* Doc);

	// MailMergeBeforeMerge:   [dispid 19]
	void MailMergeBeforeMerge(Document* Doc, long StartRecord, long EndRecord, __OWL TBool* Cancel);

	// MailMergeBeforeRecordMerge:   [dispid 20]
	void MailMergeBeforeRecordMerge(Document* Doc, __OWL TBool* Cancel);

	// MailMergeDataSourceLoad:   [dispid 21]
	void MailMergeDataSourceLoad(Document* Doc);

	// MailMergeDataSourceValidate:   [dispid 22]
	void MailMergeDataSourceValidate(Document* Doc, __OWL TBool* Handled);

	// MailMergeWizardSendToCustom:   [dispid 23]
	void MailMergeWizardSendToCustom(Document* Doc);

	// MailMergeWizardStateChange:   [dispid 24]
	void MailMergeWizardStateChange(Document* Doc, int* FromState, int* ToState, __OWL TBool* Handled);

	// WindowSize:   [dispid 25]
	void WindowSize(Document* Doc, Window* Wn);
};
#endif
*/

// WdCompareTarget
typedef enum tagWdCompareTarget
{
	wdCompareTargetSelected = 0, 
	wdCompareTargetCurrent = 1, 
	wdCompareTargetNew = 2, 
} WdCompareTarget;

// WdMergeTarget
typedef enum tagWdMergeTarget
{
	wdMergeTargetSelected = 0, 
	wdMergeTargetCurrent = 1, 
	wdMergeTargetNew = 2, 
} WdMergeTarget;

// WdUseFormattingFrom
typedef enum tagWdUseFormattingFrom
{
	wdFormattingFromCurrent = 0, 
	wdFormattingFromSelected = 1, 
	wdFormattingFromPrompt = 2,
} WdUseFormattingFrom;

// WdMergeSubType
typedef enum tagWdMergeSubType
{
	wdMergeSubTypeOther = 0, 
	wdMergeSubTypeAccess = 1, 
	wdMergeSubTypeOAL = 2, 
	wdMergeSubTypeOLEDBWord = 3, 
	wdMergeSubTypeWorks = 4, 
	wdMergeSubTypeOLEDBText = 5, 
	wdMergeSubTypeOutlook = 6, 
	wdMergeSubTypeWord = 7, 
	wdMergeSubTypeWord2000 = 8, 
} WdMergeSubType;

// WdDocumentDirection
typedef enum tagWdDocumentDirection
{
	wdLeftToRight = 0, 
	wdRightToLeft = 1, 
} WdDocumentDirection;

// WdLanguageID2000
typedef enum tagWdLanguageID2000
{
	wdChineseHongKong = 3076,
	wdChineseMacao = 5124, 
	wdEnglishTrinidad = 11273, 
} WdLanguageID2000;

// MsoSyncEventType
typedef enum tagMsoSyncEventType
{
	msoSyncEventDownloadInitiated = 0, 
	msoSyncEventDownloadSucceeded = 1, 
	msoSyncEventDownloadFailed = 2, 
	msoSyncEventUploadInitiated = 3,
	msoSyncEventUploadSucceeded = 4, 
	msoSyncEventUploadFailed = 5, 
	msoSyncEventDownloadNoChange = 6, 
	msoSyncEventOffline = 7, 
} MsoSyncEventType;

// IApplicationEvents4
// {00020A01-0001-0000-C000-000000000046}
#undef INTERFACE
#define INTERFACE IApplicationEvents4
DECLARE_INTERFACE_(IApplicationEvents4, IDispatch)
{
#ifndef __cplusplus
	// IUnknown methods:
	STDMETHOD_(HRESULT, QueryInterface) (THIS_ GUID* riid, void** ppvObj) PURE; 
	STDMETHOD_(unsigned long, AddRef) (THIS ) PURE;
	STDMETHOD_(unsigned long, Release) (THIS ) PURE; 
	// IDispatch methods:
	STDMETHOD_(HRESULT, GetTypeInfoCount) (THIS_ unsigned int* pctinfo) PURE; 
	STDMETHOD_(HRESULT, GetTypeInfo) (THIS_ unsigned int itinfo, unsigned long lcid, void** pptinfo) PURE; 
	STDMETHOD_(HRESULT, GetIDsOfNames) (THIS_ GUID* riid, signed char** rgszNames, unsigned int cNames, unsigned long lcid, long* rgdispid) PURE; 
	STDMETHOD_(HRESULT, Invoke) (THIS_ long dispidMember, GUID* riid, unsigned long lcid, unsigned short wFlags, DISPPARAMS* pdispparams, VARIANT* pvarResult, EXCEPINFO* pexcepinfo, unsigned int* puArgErr) PURE;
#endif
	// IApplicationEvents4 methods:
	STDMETHOD_(HRESULT, Startup) (THIS ) PURE; 
	STDMETHOD_(HRESULT, Quit) (THIS ) PURE; 
	STDMETHOD_(HRESULT, DocumentChange) (THIS ) PURE; 
	STDMETHOD_(HRESULT, DocumentOpen) (THIS_ Document* Doc) PURE; 
	STDMETHOD_(HRESULT, DocumentBeforeClose) (THIS_ Document* Doc, VARIANT_BOOL* Cancel) PURE; 
	STDMETHOD_(HRESULT, DocumentBeforePrint) (THIS_ Document* Doc, VARIANT_BOOL* Cancel) PURE; 
	STDMETHOD_(HRESULT, DocumentBeforeSave) (THIS_ Document* Doc, VARIANT_BOOL* SaveAsUI, VARIANT_BOOL* Cancel) PURE; 
	STDMETHOD_(HRESULT, NewDocument) (THIS_ Document* Doc) PURE; 
	STDMETHOD_(HRESULT, WindowActivate) (THIS_ Document* Doc, Window* Wn) PURE; 
	STDMETHOD_(HRESULT, WindowDeactivate) (THIS_ Document* Doc, Window* Wn) PURE; 
	STDMETHOD_(HRESULT, WindowSelectionChange) (THIS_ Selection* Sel) PURE; 
	STDMETHOD_(HRESULT, WindowBeforeRightClick) (THIS_ Selection* Sel, VARIANT_BOOL* Cancel) PURE; 
	STDMETHOD_(HRESULT, WindowBeforeDoubleClick) (THIS_ Selection* Sel, VARIANT_BOOL* Cancel) PURE; 
	STDMETHOD_(HRESULT, EPostagePropertyDialog) (THIS_ Document* Doc) PURE; 
	STDMETHOD_(HRESULT, EPostageInsert) (THIS_ Document* Doc) PURE; 
	STDMETHOD_(HRESULT, MailMergeAfterMerge) (THIS_ Document* Doc, Document* DocResult) PURE; 
	STDMETHOD_(HRESULT, MailMergeAfterRecordMerge) (THIS_ Document* Doc) PURE; 
	STDMETHOD_(HRESULT, MailMergeBeforeMerge) (THIS_ Document* Doc, long StartRecord, long EndRecord, VARIANT_BOOL* Cancel) PURE; 
	STDMETHOD_(HRESULT, MailMergeBeforeRecordMerge) (THIS_ Document* Doc, VARIANT_BOOL* Cancel) PURE;
	STDMETHOD_(HRESULT, MailMergeDataSourceLoad) (THIS_ Document* Doc) PURE;
	STDMETHOD_(HRESULT, MailMergeDataSourceValidate) (THIS_ Document* Doc, VARIANT_BOOL* Handled) PURE; 
	STDMETHOD_(HRESULT, MailMergeWizardSendToCustom) (THIS_ Document* Doc) PURE; 
	STDMETHOD_(HRESULT, MailMergeWizardStateChange) (THIS_ Document* Doc, int* FromState, int* ToState, VARIANT_BOOL* Handled) PURE;
	STDMETHOD_(HRESULT, WindowSize) (THIS_ Document* Doc, Window* Wn) PURE;
	STDMETHOD_(HRESULT, XMLSelectionChange) (THIS_ Selection* Sel, XMLNode* OldXMLNode, XMLNode* NewXMLNode, long* Reason) PURE;
	STDMETHOD_(HRESULT, XMLValidationError) (THIS_ XMLNode* ) PURE;
	STDMETHOD_(HRESULT, DocumentSync) (THIS_ Document* Doc, MsoSyncEventType SyncEventType) PURE;
	STDMETHOD_(HRESULT, EPostageInsertEx) (THIS_ Document* Doc, int cpDeliveryAddrStart, int cpDeliveryAddrEnd, int cpReturnAddrStart, int cpReturnAddrEnd, int xaWidth, int yaHeight, BSTR bstrPrinterName, BSTR bstrPaperFeed, VARIANT_BOOL fPrint, VARIANT_BOOL* fCancel) PURE;
};
typedef IApplicationEvents4* LPAPPLICATIONEVENTS4;
// The following type was found in the type library
// but is not referenced from the application object
// use at your own discretion!!

/*
#ifdef __cplusplus
// IApplicationEvents4  {00020A01-0001-0000-C000-000000000046}
//  [flags: TYPEFLAG_FHIDDEN TYPEFLAG_FDUAL TYPEFLAG_FNONEXTENSIBLE TYPEFLAG_FDISPATCHABLE ]
class _PWCLASS TIApplicationEvents4Proxy : public __OCF TAutoProxy
{
public:
	TIApplicationEvents4Proxy() : TAutoProxy(0x0) {}

	// Quit:   [dispid 2]
	void Quit();

	// DocumentChange:   [dispid 3]
	void DocumentChange();

	// DocumentOpen:   [dispid 4]
	void DocumentOpen(Document* Doc);

	// DocumentBeforeClose:   [dispid 6]
	void DocumentBeforeClose(Document* Doc, __OWL TBool* Cancel);

	// DocumentBeforePrint:   [dispid 7]
	void DocumentBeforePrint(Document* Doc, __OWL TBool* Cancel);

	// DocumentBeforeSave:   [dispid 8]
	void DocumentBeforeSave(Document* Doc, __OWL TBool* SaveAsUI, __OWL TBool* Cancel);

	// NewDocument:   [dispid 9]
	void NewDocument(Document* Doc);

	// WindowActivate:   [dispid 10]
	void WindowActivate(Document* Doc, Window* Wn);

	// WindowDeactivate:   [dispid 11]
	void WindowDeactivate(Document* Doc, Window* Wn);

	// WindowSelectionChange:   [dispid 12]
	void WindowSelectionChange(Selection* Sel);

	// WindowBeforeRightClick:   [dispid 13]
	void WindowBeforeRightClick(Selection* Sel, __OWL TBool* Cancel);

	// WindowBeforeDoubleClick:   [dispid 14]
	void WindowBeforeDoubleClick(Selection* Sel, __OWL TBool* Cancel);

	// EPostagePropertyDialog:   [dispid 15]
	void EPostagePropertyDialog(Document* Doc);

	// EPostageInsert:   [dispid 16]
	void EPostageInsert(Document* Doc);

	// MailMergeAfterMerge:   [dispid 17]
	void MailMergeAfterMerge(Document* Doc, Document* DocResult);

	// MailMergeAfterRecordMerge:   [dispid 18]
	void MailMergeAfterRecordMerge(Document* Doc);

	// MailMergeBeforeMerge:   [dispid 19]
	void MailMergeBeforeMerge(Document* Doc, long StartRecord, long EndRecord, __OWL TBool* Cancel);

	// MailMergeBeforeRecordMerge:   [dispid 20]
	void MailMergeBeforeRecordMerge(Document* Doc, __OWL TBool* Cancel);

	// MailMergeDataSourceLoad:   [dispid 21]
	void MailMergeDataSourceLoad(Document* Doc);

	// MailMergeDataSourceValidate:   [dispid 22]
	void MailMergeDataSourceValidate(Document* Doc, __OWL TBool* Handled);

	// MailMergeWizardSendToCustom:   [dispid 23]
	void MailMergeWizardSendToCustom(Document* Doc);

	// MailMergeWizardStateChange:   [dispid 24]
	void MailMergeWizardStateChange(Document* Doc, int* FromState, int* ToState, __OWL TBool* Handled);

	// WindowSize:   [dispid 25]
	void WindowSize(Document* Doc, Window* Wn);

	// XMLSelectionChange:   [dispid 26]
	void XMLSelectionChange(Selection* Sel, XMLNode* OldXMLNode, XMLNode* NewXMLNode, long* Reason);

	// XMLValidationError:   [dispid 27]
	void XMLValidationError(XMLNode* arg0);

	// DocumentSync:   [dispid 28]
	void DocumentSync(Document* Doc, MsoSyncEventType SyncEventType);

	// EPostageInsertEx:   [dispid 29]
	void EPostageInsertEx(Document* Doc, int cpDeliveryAddrStart, int cpDeliveryAddrEnd, int cpReturnAddrStart, int cpReturnAddrEnd, int xaWidth, int yaHeight, __OCF TAutoString bstrPrinterName, __OCF TAutoString bstrPaperFeed, __OWL TBool fPrint, __OWL TBool* fCancel);
};
#endif
*/

// WdXMLSelectionChangeReason
typedef enum tagWdXMLSelectionChangeReason
{
	wdXMLSelectionChangeReasonMove = 0,
	wdXMLSelectionChangeReasonInsert = 1,
	wdXMLSelectionChangeReasonDelete = 2, 
} WdXMLSelectionChangeReason;

// WdEditorType
typedef enum tagWdEditorType
{
	wdEditorEveryone = -1, 
	wdEditorOwners = -4, 
	wdEditorEditors = -5, 
	wdEditorCurrent = -6, 
} WdEditorType;

#include <poppack.h>

// ApplicationEvents
// Demo class indicates custom event handling
// cut and paste code from here to your TOleWindow
// or TOleDialog based ActiveX container

/*

class _PWCLASS TApplicationEventsProxy : public __OCF TOleDialog
{
public:
	TApplicationEventsProxy(__OWL TWindow* parent, __OWL TResId resId, __OWL TModule* module = 0);
	virtual ~TApplicationEventsProxy();
	void SetupWindow();
protected:
	bool EvOcCtrlCustomEvent(__OCF TCtrlCustomEvent* pev);
protected:
	__OCF TOcControl* Ocx;
	T_ApplicationProxy Control;
};
*/

// ApplicationEvents2
// Demo class indicates custom event handling
// cut and paste code from here to your TOleWindow
// or TOleDialog based ActiveX container

/*

class _PWCLASS TApplicationEvents2Proxy : public __OCF TOleDialog
{
public:
	TApplicationEvents2Proxy(__OWL TWindow* parent, __OWL TResId resId, __OWL TModule* module = 0);
	virtual ~TApplicationEvents2Proxy();
	void SetupWindow();
protected:
	bool EvOcCtrlCustomEvent(__OCF TCtrlCustomEvent* pev);

	// Quit:   [dispid 2]
	void Quit();

	// DocumentChange:   [dispid 3]
	void DocumentChange();

	// DocumentOpen:   [dispid 4]
	void DocumentOpen(Document* Doc);

	// DocumentBeforeClose:   [dispid 6]
	void DocumentBeforeClose(Document* Doc, __OWL TBool* Cancel);

	// DocumentBeforePrint:   [dispid 7]
	void DocumentBeforePrint(Document* Doc, __OWL TBool* Cancel);

	// DocumentBeforeSave:   [dispid 8]
	void DocumentBeforeSave(Document* Doc, __OWL TBool* SaveAsUI, __OWL TBool* Cancel);

	// NewDocument:   [dispid 9]
	void NewDocument(Document* Doc);

	// WindowActivate:   [dispid 10]
	void WindowActivate(Document* Doc, TWindowProxy* Wn);

	// WindowDeactivate:   [dispid 11]
	void WindowDeactivate(Document* Doc, TWindowProxy* Wn);

	// WindowSelectionChange:   [dispid 12]
	void WindowSelectionChange(TSelectionProxy* Sel);

	// WindowBeforeRightClick:   [dispid 13]
	void WindowBeforeRightClick(TSelectionProxy* Sel, __OWL TBool* Cancel);

	// WindowBeforeDoubleClick:   [dispid 14]
	void WindowBeforeDoubleClick(TSelectionProxy* Sel, __OWL TBool* Cancel);
protected:
	__OCF TOcControl* Ocx;
	T_ApplicationProxy Control;
};
*/

// ApplicationEvents3
// Demo class indicates custom event handling
// cut and paste code from here to your TOleWindow
// or TOleDialog based ActiveX container

/*

class _PWCLASS TApplicationEvents3Proxy : public __OCF TOleDialog
{
public:
	TApplicationEvents3Proxy(__OWL TWindow* parent, __OWL TResId resId, __OWL TModule* module = 0);
	virtual ~TApplicationEvents3Proxy();
	void SetupWindow();
protected:
	bool EvOcCtrlCustomEvent(__OCF TCtrlCustomEvent* pev);

	// Quit:   [dispid 2]
	void Quit();

	// DocumentChange:   [dispid 3]
	void DocumentChange();

	// DocumentOpen:   [dispid 4]
	void DocumentOpen(Document* Doc);

	// DocumentBeforeClose:   [dispid 6]
	void DocumentBeforeClose(Document* Doc, __OWL TBool* Cancel);

	// DocumentBeforePrint:   [dispid 7]
	void DocumentBeforePrint(Document* Doc, __OWL TBool* Cancel);

	// DocumentBeforeSave:   [dispid 8]
	void DocumentBeforeSave(Document* Doc, __OWL TBool* SaveAsUI, __OWL TBool* Cancel);

	// NewDocument:   [dispid 9]
	void NewDocument(Document* Doc);

	// WindowActivate:   [dispid 10]
	void WindowActivate(Document* Doc, TWindowProxy* Wn);

	// WindowDeactivate:   [dispid 11]
	void WindowDeactivate(Document* Doc, TWindowProxy* Wn);

	// WindowSelectionChange:   [dispid 12]
	void WindowSelectionChange(TSelectionProxy* Sel);

	// WindowBeforeRightClick:   [dispid 13]
	void WindowBeforeRightClick(TSelectionProxy* Sel, __OWL TBool* Cancel);

	// WindowBeforeDoubleClick:   [dispid 14]
	void WindowBeforeDoubleClick(TSelectionProxy* Sel, __OWL TBool* Cancel);

	// EPostagePropertyDialog:   [dispid 15]
	void EPostagePropertyDialog(Document* Doc);

	// EPostageInsert:   [dispid 16]
	void EPostageInsert(Document* Doc);

	// MailMergeAfterMerge:   [dispid 17]
	void MailMergeAfterMerge(Document* Doc, Document* DocResult);

	// MailMergeAfterRecordMerge:   [dispid 18]
	void MailMergeAfterRecordMerge(Document* Doc);

	// MailMergeBeforeMerge:   [dispid 19]
	void MailMergeBeforeMerge(Document* Doc, long StartRecord, long EndRecord, __OWL TBool* Cancel);

	// MailMergeBeforeRecordMerge:   [dispid 20]
	void MailMergeBeforeRecordMerge(Document* Doc, __OWL TBool* Cancel);

	// MailMergeDataSourceLoad:   [dispid 21]
	void MailMergeDataSourceLoad(Document* Doc);

	// MailMergeDataSourceValidate:   [dispid 22]
	void MailMergeDataSourceValidate(Document* Doc, __OWL TBool* Handled);

	// MailMergeWizardSendToCustom:   [dispid 23]
	void MailMergeWizardSendToCustom(Document* Doc);

	// MailMergeWizardStateChange:   [dispid 24]
	void MailMergeWizardStateChange(Document* Doc, int* FromState, int* ToState, __OWL TBool* Handled);

	// WindowSize:   [dispid 25]
	void WindowSize(Document* Doc, TWindowProxy* Wn);
protected:
	__OCF TOcControl* Ocx;
	T_ApplicationProxy Control;
};
*/

// ApplicationEvents4
// Demo class indicates custom event handling
// cut and paste code from here to your TOleWindow
// or TOleDialog based ActiveX container

/*

class _PWCLASS TApplicationEvents4Proxy : public __OCF TOleDialog
{
public:
	TApplicationEvents4Proxy(__OWL TWindow* parent, __OWL TResId resId, __OWL TModule* module = 0);
	virtual ~TApplicationEvents4Proxy();
	void SetupWindow();
protected:
	bool EvOcCtrlCustomEvent(__OCF TCtrlCustomEvent* pev);

	// Quit:   [dispid 2]
	void Quit();

	// DocumentChange:   [dispid 3]
	void DocumentChange();

	// DocumentOpen:   [dispid 4]
	void DocumentOpen(Document* Doc);

	// DocumentBeforeClose:   [dispid 6]
	void DocumentBeforeClose(Document* Doc, __OWL TBool* Cancel);

	// DocumentBeforePrint:   [dispid 7]
	void DocumentBeforePrint(Document* Doc, __OWL TBool* Cancel);

	// DocumentBeforeSave:   [dispid 8]
	void DocumentBeforeSave(Document* Doc, __OWL TBool* SaveAsUI, __OWL TBool* Cancel);

	// NewDocument:   [dispid 9]
	void NewDocument(Document* Doc);

	// WindowActivate:   [dispid 10]
	void WindowActivate(Document* Doc, TWindowProxy* Wn);

	// WindowDeactivate:   [dispid 11]
	void WindowDeactivate(Document* Doc, TWindowProxy* Wn);

	// WindowSelectionChange:   [dispid 12]
	void WindowSelectionChange(TSelectionProxy* Sel);

	// WindowBeforeRightClick:   [dispid 13]
	void WindowBeforeRightClick(TSelectionProxy* Sel, __OWL TBool* Cancel);

	// WindowBeforeDoubleClick:   [dispid 14]
	void WindowBeforeDoubleClick(TSelectionProxy* Sel, __OWL TBool* Cancel);

	// EPostagePropertyDialog:   [dispid 15]
	void EPostagePropertyDialog(Document* Doc);

	// EPostageInsert:   [dispid 16]
	void EPostageInsert(Document* Doc);

	// MailMergeAfterMerge:   [dispid 17]
	void MailMergeAfterMerge(Document* Doc, Document* DocResult);

	// MailMergeAfterRecordMerge:   [dispid 18]
	void MailMergeAfterRecordMerge(Document* Doc);

	// MailMergeBeforeMerge:   [dispid 19]
	void MailMergeBeforeMerge(Document* Doc, long StartRecord, long EndRecord, __OWL TBool* Cancel);

	// MailMergeBeforeRecordMerge:   [dispid 20]
	void MailMergeBeforeRecordMerge(Document* Doc, __OWL TBool* Cancel);

	// MailMergeDataSourceLoad:   [dispid 21]
	void MailMergeDataSourceLoad(Document* Doc);

	// MailMergeDataSourceValidate:   [dispid 22]
	void MailMergeDataSourceValidate(Document* Doc, __OWL TBool* Handled);

	// MailMergeWizardSendToCustom:   [dispid 23]
	void MailMergeWizardSendToCustom(Document* Doc);

	// MailMergeWizardStateChange:   [dispid 24]
	void MailMergeWizardStateChange(Document* Doc, int* FromState, int* ToState, __OWL TBool* Handled);

	// WindowSize:   [dispid 25]
	void WindowSize(Document* Doc, TWindowProxy* Wn);

	// XMLSelectionChange:   [dispid 26]
	void XMLSelectionChange(TSelectionProxy* Sel, TXMLNodeProxy* OldXMLNode, TXMLNodeProxy* NewXMLNode, long* Reason);

	// XMLValidationError:   [dispid 27]
	void XMLValidationError(TXMLNodeProxy* XMLNode);

	// DocumentSync:   [dispid 28]
	void DocumentSync(Document* Doc, MsoSyncEventType SyncEventType);

	// EPostageInsertEx:   [dispid 29]
	void EPostageInsertEx(Document* Doc, int cpDeliveryAddrStart, int cpDeliveryAddrEnd, int cpReturnAddrStart, int cpReturnAddrEnd, int xaWidth, int yaHeight, __OCF TAutoString bstrPrinterName, __OCF TAutoString bstrPaperFeed, __OWL TBool fPrint, __OWL TBool* fCancel);
protected:
	__OCF TOcControl* Ocx;
	T_ApplicationProxy Control;
};
*/

// DocumentEvents
// Demo class indicates custom event handling
// cut and paste code from here to your TOleWindow
// or TOleDialog based ActiveX container

/*

class _PWCLASS TDocumentEventsProxy : public __OCF TOleDialog
{
public:
	TDocumentEventsProxy(__OWL TWindow* parent, __OWL TResId resId, __OWL TModule* module = 0);
	virtual ~TDocumentEventsProxy();
	void SetupWindow();
protected:
	bool EvOcCtrlCustomEvent(__OCF TCtrlCustomEvent* pev);

	// New:   [dispid 4]
	void New();

	// Open:   [dispid 5]
	void Open();

	// Close:   [dispid 6]
	void Close();
protected:
	__OCF TOcControl* Ocx;
	T_DocumentProxy Control;
};
*/

// DocumentEvents2
// Demo class indicates custom event handling
// cut and paste code from here to your TOleWindow
// or TOleDialog based ActiveX container

/*

class _PWCLASS TDocumentEvents2Proxy : public __OCF TOleDialog
{
public:
	TDocumentEvents2Proxy(__OWL TWindow* parent, __OWL TResId resId, __OWL TModule* module = 0);
	virtual ~TDocumentEvents2Proxy();
	void SetupWindow();
protected:
	bool EvOcCtrlCustomEvent(__OCF TCtrlCustomEvent* pev);

	// New:   [dispid 4]
	void New();

	// Open:   [dispid 5]
	void Open();

	// Close:   [dispid 6]
	void Close();

	// Sync:   [dispid 7]
	void Sync(MsoSyncEventType SyncEventType);

	// XMLAfterInsert:   [dispid 8]
	void XMLAfterInsert(TXMLNodeProxy* NewXMLNode, __OWL TBool InUndoRedo);

	// XMLBeforeDelete:   [dispid 9]
	void XMLBeforeDelete(TRangeProxy* DeletedRange, TXMLNodeProxy* OldXMLNode, __OWL TBool InUndoRedo);
protected:
	__OCF TOcControl* Ocx;
	T_DocumentProxy Control;
};
*/

// OCXEvents
// Demo class indicates custom event handling
// cut and paste code from here to your TOleWindow
// or TOleDialog based ActiveX container

/*

class _PWCLASS TOCXEventsProxy : public __OCF TOleDialog
{
public:
	TOCXEventsProxy(__OWL TWindow* parent, __OWL TResId resId, __OWL TModule* module = 0);
	virtual ~TOCXEventsProxy();
	void SetupWindow();
protected:
	bool EvOcCtrlCustomEvent(__OCF TCtrlCustomEvent* pev);
protected:
	__OCF TOcControl* Ocx;
	T_OLEControlProxy Control;
};
*/

// _CommandBarsEvents
// Demo class indicates custom event handling
// cut and paste code from here to your TOleWindow
// or TOleDialog based ActiveX container

/*

class _PWCLASS T_CommandBarsEventsProxy : public __OCF TOleDialog
{
public:
	T_CommandBarsEventsProxy(__OWL TWindow* parent, __OWL TResId resId, __OWL TModule* module = 0);
	virtual ~T_CommandBarsEventsProxy();
	void SetupWindow();
protected:
	bool EvOcCtrlCustomEvent(__OCF TCtrlCustomEvent* pev);

	// OnUpdate:   [dispid 1]
	void OnUpdate();
protected:
	__OCF TOcControl* Ocx;
	T_CommandBarsProxy Control;
};
*/

// IMsoEnvelopeVBEvents
// Demo class indicates custom event handling
// cut and paste code from here to your TOleWindow
// or TOleDialog based ActiveX container

/*

class _PWCLASS TIMsoEnvelopeVBEventsProxy : public __OCF TOleDialog
{
public:
	TIMsoEnvelopeVBEventsProxy(__OWL TWindow* parent, __OWL TResId resId, __OWL TModule* module = 0);
	virtual ~TIMsoEnvelopeVBEventsProxy();
	void SetupWindow();
protected:
	bool EvOcCtrlCustomEvent(__OCF TCtrlCustomEvent* pev);

	// EnvelopeShow:   [dispid 1]
	void EnvelopeShow();

	// EnvelopeHide:   [dispid 2]
	void EnvelopeHide();
protected:
	__OCF TOcControl* Ocx;
	TIMsoEnvelopeVBProxy Control;
};
*/

// _dispReferences_Events
// Demo class indicates custom event handling
// cut and paste code from here to your TOleWindow
// or TOleDialog based ActiveX container

/*

class _PWCLASS T_dispReferences_EventsProxy : public __OCF TOleDialog
{
public:
	T_dispReferences_EventsProxy(__OWL TWindow* parent, __OWL TResId resId, __OWL TModule* module = 0);
	virtual ~T_dispReferences_EventsProxy();
	void SetupWindow();
protected:
	bool EvOcCtrlCustomEvent(__OCF TCtrlCustomEvent* pev);

	// ItemAdded:   [dispid 0]
	void ItemAdded(TReferenceProxy* Reference);

	// ItemRemoved:   [dispid 1]
	void ItemRemoved(TReferenceProxy* Reference);
protected:
	__OCF TOcControl* Ocx;
	T_ReferencesProxy Control;
};
*/

// _dispCommandBarControlEvents
// Demo class indicates custom event handling
// cut and paste code from here to your TOleWindow
// or TOleDialog based ActiveX container

/*

class _PWCLASS T_dispCommandBarControlEventsProxy : public __OCF TOleDialog
{
public:
	T_dispCommandBarControlEventsProxy(__OWL TWindow* parent, __OWL TResId resId, __OWL TModule* module = 0);
	virtual ~T_dispCommandBarControlEventsProxy();
	void SetupWindow();
protected:
	bool EvOcCtrlCustomEvent(__OCF TCtrlCustomEvent* pev);

	// Click:   [dispid 1]
	void Click(IDispatch* CommandBarControl, __OWL TBool* handled, __OWL TBool* CancelDefault);
protected:
	__OCF TOcControl* Ocx;
};
*/

// _dispReferencesEvents
// Demo class indicates custom event handling
// cut and paste code from here to your TOleWindow
// or TOleDialog based ActiveX container

/*

class _PWCLASS T_dispReferencesEventsProxy : public __OCF TOleDialog
{
public:
	T_dispReferencesEventsProxy(__OWL TWindow* parent, __OWL TResId resId, __OWL TModule* module = 0);
	virtual ~T_dispReferencesEventsProxy();
	void SetupWindow();
protected:
	bool EvOcCtrlCustomEvent(__OCF TCtrlCustomEvent* pev);

	// ItemAdded:   [dispid 1]
	void ItemAdded(TReferenceProxy* Reference);

	// ItemRemoved:   [dispid 2]
	void ItemRemoved(TReferenceProxy* Reference);
protected:
	__OCF TOcControl* Ocx;
};
*/

#endif

