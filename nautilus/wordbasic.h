//---------------------------------------------------------------------------//
//Version:            1.0
//Copyright:
//Description:        wb70en32.tlb (Word.Basic)
//Author:             R.Spaak
//Company:            Nautilus
//
//Header Type:        Abstract type descriptions.
//
//File:               wordbasic.h
//
//Type Library:       Word
//Type Description:   Microsoft WordBasic 95 Type Library
//
//GUID:               {5ECD1920-D1CA-11CE-AA2F-00AA006156DA}
//System:             WIN32
//Version:            7.0
//
//Code generated by ProxyWiz 1.0
//ProxyWiz Copyright Dr John Maddock 1997, all rights reserved.
//
//---------------------------------------------------------------------------

#if !defined(__WORDBASIC_H)#define __WORDBASIC_H

#include "wizard.h"

//------------------------------------------------------------
//Predeclaration of classes and interfaces
#ifdef __cplusplus#else
#endif

typedef IDispatch WordBasic;
//------------------------------------------------------------//Declaration of GUID's

#ifdef __cplusplus

class TXSecureOle : public TXOle {
  public:
    TXSecureOle(const string& msg, HRESULT stat) ;
    TXSecureOle(const TXSecureOle& src) ;
 #if defined(BI_STD_RTL)
    ~TXSecureOle() throw() {}
 #else
    ~TXSecureOle() {}
 #endif

    static void Check(HRESULT stat, const char far* msg);
    static void Throw(HRESULT stat, const char far* msg);
};

//
//
//
inline
TXSecureOle::TXSecureOle(const string& msg, HRESULT stat)
            : TXOle(msg, stat)
{}

//
//
//
inline TXSecureOle::TXSecureOle(const TXSecureOle& src)
                   : TXOle(src)
{}

// WordBasic  {00020400-0000-0000-C000-000000000046}
//  [flags: ]
class _PWCLASS TWordBasicProxy : public TAutoProxy
{
public:

  TAutoVal& SecureInvoke(uint16 attr, TAutoProxyArgs& args, long* ids, unsigned named) ;

	TWordBasicProxy() : TAutoProxy(0x9) {}

	//AOCEAddRecipient: (Macintosh only)  [dispid 33252]
	void AOCEAddRecipient(TAutoString Recipient, short AddressType, TAutoString Mailslot);

	//AOCEAuthenticateUser: (Macintosh only)  [dispid 33260]
	short AOCEAuthenticateUser(short AllowPrompt);

	//AOCEClearMailerField: (Macintosh only)  [dispid 33261]
	void AOCEClearMailerField(short FieldNumber);

	//AOCECountRecipients: (Macintosh only)  [dispid 33253]
	short AOCECountRecipients(short AddressType);

	//AOCEGetRecipient: (Macintosh only)  [dispid 33254]
	TAutoString AOCEGetRecipient(short RecipientNumber, short AddressType);

	//AOCEGetSender: (Macintosh only)  [dispid 33255]
	TAutoString AOCEGetSender();

	//AOCEGetSubject: (Macintosh only)  [dispid 33257]
	TAutoString AOCEGetSubject();

	//AOCESendMail: (Macintosh only)  [dispid 33259]
	void AOCESendMail(short SignLetter, short Priority, short SendAppleMail, short SendImage, short SendWordDoc, TAutoString Format);

	//AOCESetSubject: (Macintosh only)  [dispid 33258]
	void AOCESetSubject(TAutoString Subject);

	//EditCopyAsPicture: (Macintosh only)  [dispid 751]
	void EditCopyAsPicture();

	//EditCreatePublisher: (Macintosh only)  [dispid 732]
	void EditCreatePublisher(TAutoString FileName, short Apperance, short RTF, short Pict);

	//EditFindBorder: (Macintosh only)  [dispid 447]
	void EditFindBorder(short ApplyTo, short Shadow, short TopBorder, short LeftBorder, short BottomBorder, short RightBorder, short HorizBorder, short VertBorder, short TopColor, short LeftColor, short BottomColor, short RightColor, short HorizColor, short VertColor, short FineShading, TAutoVal FromText, short Shading, short Foreground, short Background, short Tab);

	//EditFindFrame: (Macintosh only)  [dispid 448]
	void EditFindFrame(short Wrap, short WidthRule, TAutoVal FixedWidth, short HeightRule, TAutoVal FixedHeight, TAutoVal PositionHoriz, short PositionHorzRel, TAutoVal DistFromText, TAutoVal PositionVert, short PositionVertRel, TAutoVal DistVertFromText, short MoveWithTExt, short LockAnchor);

	//EditFindTabs: (Macintosh only)  [dispid 446]
	void EditFindTabs(TAutoString Position, short Align, short Leader);

	//EditPublishOptions: (Macintosh only)  [dispid 735]
	void EditPublishOptions(short SendManually, short SendEditionNow, short SendEditionWhenEdited, TAutoVal Delete, short Apperance, short RTF, short Pict);

	//EditReplaceBorder: (Macintosh only)  [dispid 457]
	void EditReplaceBorder(short ApplyTo, short Shadow, short TopBorder, short LeftBorder, short BottomBorder, short RightBorder, short HorizBorder, short VertBorder, short TopColor, short LeftColor, short BottomColor, short RightColor, short HorizColor, short VertColor, short FineShading, TAutoVal FromText, short Shading, short Foreground, short Background, short Tab);

	//EditReplaceFrame: (Macintosh only)  [dispid 458]
	void EditReplaceFrame(short Wrap, short WidthRule, TAutoVal FixedWidth, short HeightRule, TAutoVal FixedHeight, TAutoVal PositionHoriz, short PositionHorzRel, TAutoVal DistFromText, TAutoVal PositionVert, short PositionVertRel, TAutoVal DistVertFromText, short MoveWithTExt, short LockAnchor);

	//EditReplaceTabs: (Macintosh only)  [dispid 456]
	void EditReplaceTabs(TAutoString Position, short Align, short Leader);

	//EditSubscribeOptions: (Macintosh only)  [dispid 736]
	void EditSubscribeOptions(short GetManually, short GetEditionNow, short Format, short KeepFormatting);

	//EditSubscribeTo: (Macintosh only)  [dispid 733]
	void EditSubscribeTo(TAutoString FileName, short Format, short GetManually);

	//FileAOCEAddMailer: (Macintosh only)  [dispid 312]
	void FileAOCEAddMailer();

	//FileAOCEDeleteMailer: (Macintosh only)  [dispid 313]
	void FileAOCEDeleteMailer();

	//FileAOCEExpandMailer: (Macintosh only)  [dispid 314]
	void FileAOCEExpandMailer();

	//FileAOCEForwardMail: (Macintosh only)  [dispid 318]
	void FileAOCEForwardMail();

	//FileAOCENextLetter: (Macintosh only)  [dispid 319]
	void FileAOCENextLetter();

	//FileAOCEReplyAllMail: (Macintosh only)  [dispid 317]
	void FileAOCEReplyAllMail();

	//FileAOCEReplyMail: (Macintosh only)  [dispid 316]
	void FileAOCEReplyMail();

	//FileAOCESendMail: (Macintosh only)  [dispid 315]
	void FileAOCESendMail();

	//FileCreator: (Macintosh only)  [dispid 33269]
	TAutoString FileCreator(TAutoString File);

	//FileMacCustomPageSetupGX:   [dispid 737]
	void FileMacCustomPageSetupGX(TAutoVal PageWidth, TAutoVal Pageheight, short Orientation, short ApplyPropsTo);

	//FileMacPageSetup: (Macintosh only)  [dispid 685]
	void FileMacPageSetup(TAutoVal PageWidth, TAutoVal Pageheight, short Orientation, short ApplyPropsTo, TAutoVal Default);

	//FileMacPageSetupGX: (Macintosh only)  [dispid 444]
	void FileMacPageSetupGX(TAutoVal PageWidth, TAutoVal Pageheight, short Orientation);

	//FilePrintOneCopy: (Macintosh only)  [dispid 738]
	void FilePrintOneCopy();

	//FileType: (Macintosh only)  [dispid 33268]
	TAutoString FileType(TAutoString File);

	//ListCommands: (Not in Word 6.0)  [dispid 723]
	void ListCommands();

	//MacID: (Macintosh only)  [dispid 33134]
	TAutoString MacID(TAutoString Identifier);

	//MacScript: (Macintosh only) Runs an existing AppleScript(TM) resource, or passes the specified string to the defualt scripting language to compile and run  [dispid 33132]
	void MacScript();

	//MacScriptStr: (Macintosh only) Runs an existing AppleScript(TM) resource, or passes the specified string to the defualt scripting language to compile and run and returns a string with the return value of the script  [dispid 33133]
	TAutoString MacScriptStr(TAutoString Script);

	//MountVolume: (Macintosh only)  [dispid 33118]
	short MountVolume(TAutoString Zone, TAutoString Server, TAutoString Volume, TAutoString User, TAutoString UserPassword, TAutoString VolumePassword);

	//Outline: (Macintosh only)  [dispid 33267]
	void Outline(short On);

	//SetFileCreatorAndType: (Macintosh only)  [dispid 33270]
	void SetFileCreatorAndType(TAutoString File, TAutoString Creator, TAutoString Type);

	//Shadow: (Macintosh only)  [dispid 33266]
	void Shadow(short On);

	//ShowClipboard: (Macintosh only)  [dispid 459]
	void ShowClipboard();

	//Help: Displays Help for the current task or command  [dispid 1]
	void Help();

	//HelpMSN: Connects to a desired forum on The Microsoft Network  [dispid 795]
	void HelpMSN();

	//HelpTool: Lets you get help on a command or screen region or examine text properties  [dispid 2]
	void HelpTool();

	//HelpUsingHelp: Displays the instructions for how to use Help  [dispid 3]
	void HelpUsingHelp();

	//HelpActiveWindow: Displays the information about the active pane or document view  [dispid 4]
	void HelpActiveWindow();

	//HelpKeyboard: Lists the keys and their actions  [dispid 5]
	void HelpKeyboard();

	//HelpIndex: Displays Help index  [dispid 6]
	void HelpIndex();

	//HelpQuickPreview: Word 6.0 only: Lists the lessons for getting started with Word  [dispid 7]
	void HelpQuickPreview();

	//HelpExamplesAndDemos: Word 6.0 only: Lists the lessons for learning Word  [dispid 8]
	void HelpExamplesAndDemos();

	//HelpAbout: Displays the program information, Word version number, and the copyright  [dispid 9]
	void HelpAbout(TAutoVal Appname = TNoArg(), TAutoVal AppCopyright = TNoArg(), TAutoVal AppUserName = TNoArg(), TAutoVal AppOrganization = TNoArg(), TAutoVal AppSerialNumber = TNoArg());

	//HelpWordPerfectHelp: Not in all languages: Shows the equivalent for a WordPerfect command  [dispid 10]
	void HelpWordPerfectHelp();

	//GrowFont: Increases the font size of the selection  [dispid 11]
	void GrowFont();

	//ShrinkFont: Decreases the font size of the selection  [dispid 12]
	void ShrinkFont();

	//Spike: Deletes the selection and adds it to the special AutoText entry  [dispid 15]
	void Spike();

	//InsertSpike: Empties the spike AutoText entry and inserts all of its contents into the document  [dispid 16]
	void InsertSpike();

	//MoveText: Moves the selection to a specified location  [dispid 18]
	void MoveText();

	//CopyText: Makes a copy of the selection at a specified location  [dispid 19]
	void CopyText();

	//InsertAutoText: Replaces the name of the AutoText entry with its contents  [dispid 20]
	void InsertAutoText();

	//OtherPane: Switches to the other window pane  [dispid 21]
	void OtherPane();

	//NextWindow: Switches to the next document window  [dispid 22]
	void NextWindow();

	//PrevWindow: Switches back to the previous document window  [dispid 23]
	void PrevWindow();

	//RepeatFind: Repeats Go To or Find to find the next occurrence  [dispid 24]
	void RepeatFind();

	//DeleteWord: Deletes the next word without putting it on the Clipboard  [dispid 28]
	void DeleteWord();

	//DeleteBackWord: Deletes the previous word without putting it on the Clipboard  [dispid 29]
	void DeleteBackWord();

	//InsertFieldChars: Inserts a field with the enclosing field characters  [dispid 31]
	void InsertFieldChars();

	//UpdateFields: Updates and displays the results of the selected fields  [dispid 32]
	void UpdateFields();

	//UnlinkFields: Permanently replaces the field codes with the results  [dispid 33]
	void UnlinkFields();

	//ToggleFieldDisplay: Shows the field codes or the results for the selection (toggle)  [dispid 34]
	void ToggleFieldDisplay();

	//LockFields: Locks the selected fields to prevent updating  [dispid 35]
	void LockFields();

	//UnlockFields: Unlocks the selected fields for updating  [dispid 36]
	void UnlockFields();

	//UpdateSource: Copies the modified text of a linked file back to its source  [dispid 37]
	void UpdateSource();

	//Indent: Moves the left indent to the next tab stop  [dispid 38]
	void Indent();

	//UnIndent: Moves the left indent to the previous tab stop  [dispid 39]
	void UnIndent();

	//HangingIndent: Increases the hanging indent  [dispid 40]
	void HangingIndent();

	//UnHang: Decreases the hanging indent  [dispid 41]
	void UnHang();

	//FontSizeSelect: Changes the font size of the selection  [dispid 43]
	void FontSizeSelect();

	//EditRepeat: Repeats the last action  [dispid 68]
	void EditRepeat();

	//GoBack: Returns to the previous insertion point  [dispid 69]
	void GoBack();


	//SaveTemplate: Saves the document template of the active document  [dispid 70]
	void SaveTemplate();
	//OK: Confirms a location for copying or moving the selection  [dispid 71]	void OK();

	//Cancel: Terminates an action  [dispid 72]	void Cancel();

	//CopyFormat: Copies the formatting of the selection to a specified location  [dispid 73]	void CopyFormat();

	//DocumentStatistics: Displays the statistics of the active document  [dispid 78]	void DocumentStatistics(TAutoVal FileName = TNoArg(), TAutoVal Directory = TNoArg(), TAutoVal Template = TNoArg(), TAutoVal Title = TNoArg(), TAutoVal Created = TNoArg(), TAutoVal LastSaved = TNoArg(), TAutoVal LastSavedBy = TNoArg(), TAutoVal Revision = TNoArg(), TAutoVal Time = TNoArg(), TAutoVal Printed = TNoArg(), TAutoVal Pages = TNoArg(), TAutoVal Words = TNoArg(), TAutoVal Characters = TNoArg(), TAutoVal Paragraphs = TNoArg(), TAutoVal Lines = TNoArg(), TAutoVal FileSize = TNoArg());

	//FileNew: Creates a new document or template  [dispid 79]	void FileNew(TAutoVal Template = TNoArg(), TAutoVal NewTemplate = TNoArg());

	//FileOpen: Opens an existing document or template  [dispid 80]	void FileOpen(TAutoVal Name = TNoArg(), TAutoVal ConfirmConversions = TNoArg(), TAutoVal ReadOnly = TNoArg(), TAutoVal AddToMru = TNoArg(), TAutoVal PasswordDoc = TNoArg(), TAutoVal PasswordDot = TNoArg(), TAutoVal Revert = TNoArg(), TAutoVal WritePasswordDoc = TNoArg(), TAutoVal WritePasswordDot = TNoArg());

	//MailMergeOpenDataSource: Opens a data source for mail merge or insert database  [dispid 81]	void MailMergeOpenDataSource(TAutoVal Name = TNoArg(), TAutoVal ConfirmConversions = TNoArg(), TAutoVal ReadOnly = TNoArg(), TAutoVal LinkToSource = TNoArg(), TAutoVal AddToMru = TNoArg(), TAutoVal PasswordDoc = TNoArg(), TAutoVal PasswordDot = TNoArg(), TAutoVal Revert = TNoArg(), TAutoVal WritePasswordDoc = TNoArg(), TAutoVal WritePasswordDot = TNoArg(), TAutoVal Connection = TNoArg(), TAutoVal SQLStatement = TNoArg(), TAutoVal SQLStatement1 = TNoArg());

	//MailMergeOpenHeaderSource: Opens a header source for mail merge  [dispid 82]	void MailMergeOpenHeaderSource(TAutoVal Name = TNoArg(), TAutoVal ConfirmConversions = TNoArg(), TAutoVal ReadOnly = TNoArg(), TAutoVal AddToMru = TNoArg(), TAutoVal PasswordDoc = TNoArg(), TAutoVal PasswordDot = TNoArg(), TAutoVal Revert = TNoArg(), TAutoVal WritePasswordDoc = TNoArg(), TAutoVal WritePasswordDot = TNoArg());

	//FileSave: Saves the active document or template  [dispid 83]	void FileSave();

	//FileSaveAs: Saves a copy of the document in a separate file (SaveAsAOCELetter is not valid in Word 6.0 and Word 6.0a  [dispid 84]	void FileSaveAs(TAutoVal Name = TNoArg(), TAutoVal Format = TNoArg(), TAutoVal LockAnnot = TNoArg(), TAutoVal Password = TNoArg(), TAutoVal AddToMru = TNoArg(), TAutoVal WritePassword = TNoArg(), TAutoVal RecommendReadOnly = TNoArg(), TAutoVal EmbedFonts = TNoArg(), TAutoVal NativePictureFormat = TNoArg(), TAutoVal FormsData = TNoArg(), TAutoVal SaveAsAOCELetter = TNoArg());

	//FileSummaryInfo: Shows the summary information about the active document  [dispid 86]	void FileSummaryInfo(TAutoVal Title = TNoArg(), TAutoVal Subject = TNoArg(), TAutoVal Author = TNoArg(), TAutoVal Keywords = TNoArg(), TAutoVal Comments = TNoArg(), TAutoVal FileName = TNoArg(), TAutoVal Directory = TNoArg(), TAutoVal Template = TNoArg(), TAutoVal CreateDate = TNoArg(), TAutoVal LastSavedDate = TNoArg(), TAutoVal LastSavedBy = TNoArg(), TAutoVal RevisionNumber = TNoArg(), TAutoVal EditTime = TNoArg(), TAutoVal LastPrintedDate = TNoArg(), TAutoVal NumPages = TNoArg(), TAutoVal NumWords = TNoArg(), TAutoVal NumChars = TNoArg(), TAutoVal NumParas = TNoArg(), TAutoVal NumLines = TNoArg(), TAutoVal Update = TNoArg(), TAutoVal FileSize = TNoArg());


	//FileTemplates: Changes the active template and the template options  [dispid 87]
	void FileTemplates(TAutoVal Template = TNoArg(), TAutoVal LinkStyles = TNoArg());

	//FilePrint: Prints the active document (the parameters Printer and OutputPrinter are only valid in Word 95)  [dispid 88]
	void FilePrint(TAutoVal Background = TNoArg(), TAutoVal Printer = TNoArg(), TAutoVal OutputPrinter = TNoArg(), TAutoVal AppendPrFile = TNoArg(), TAutoVal Range = TNoArg(), TAutoVal PrToFileName = TNoArg(), TAutoVal From = TNoArg(), TAutoVal To = TNoArg(), TAutoVal Type = TNoArg(), TAutoVal NumCopies = TNoArg(), TAutoVal Pages = TNoArg(), TAutoVal Order = TNoArg(), TAutoVal PrintToFile = TNoArg(), TAutoVal Collate = TNoArg(), TAutoVal FileName = TNoArg());

	//MailMergeReset: Resets a mail merge main document to a normal document  [dispid 96]
	void MailMergeReset();

	//FilePrintSetup: Changes the printer and the printing options (DoNotSetAsSysDefault is only valid in Word 95, Network is not valid in Word 95)  [dispid 97]
	void FilePrintSetup(TAutoVal Printer = TNoArg(), TAutoVal Options = TNoArg(), TAutoVal DoNotSetAsSysDefault = TNoArg(), TAutoVal Network = TNoArg());

	//FileFind: Locates the documents in any directory, drive, or folder (ShowFolders is not valid in Word 6.0)  [dispid 99]
	void FileFind(TAutoVal SearchName = TNoArg(), TAutoVal SearchPath = TNoArg(), TAutoVal Name = TNoArg(), TAutoVal SubDir = TNoArg(), TAutoVal Title = TNoArg(), TAutoVal Author = TNoArg(), TAutoVal Keywords = TNoArg(), TAutoVal Subject = TNoArg(), TAutoVal Options = TNoArg(), TAutoVal MatchCase = TNoArg(), TAutoVal Text = TNoArg(), TAutoVal PatternMatch = TNoArg(), TAutoVal DateSavedFrom = TNoArg(), TAutoVal DateSavedTo = TNoArg(), TAutoVal SavedBy = TNoArg(), TAutoVal DateCreatedFrom = TNoArg(), TAutoVal DateCreatedTo = TNoArg(), TAutoVal View = TNoArg(), TAutoVal SortBy = TNoArg(), TAutoVal ListBy = TNoArg(), TAutoVal SelectedFile = TNoArg(), TAutoVal Add = TNoArg(), TAutoVal Delete = TNoArg(), TAutoVal ShowFolders = TNoArg());

	//FormatAddrFonts: Formats the delivery address font for envelopes   (Shadow is only valid on the Macintosh)  [dispid 103]
	void FormatAddrFonts(TAutoVal Points = TNoArg(), TAutoVal Underline = TNoArg(), TAutoVal Color = TNoArg(), TAutoVal Strikethrough = TNoArg(), TAutoVal Superscript = TNoArg(), TAutoVal Subscript = TNoArg(), TAutoVal Hidden = TNoArg(), TAutoVal SmallCaps = TNoArg(), TAutoVal AllCaps = TNoArg(), TAutoVal Spacing = TNoArg(), TAutoVal Position = TNoArg(), TAutoVal Kerning = TNoArg(), TAutoVal KerningMin = TNoArg(), TAutoVal Default = TNoArg(), TAutoVal Tab = TNoArg(), TAutoVal Font = TNoArg(), TAutoVal Bold = TNoArg(), TAutoVal Italic = TNoArg(), TAutoVal Shadow = TNoArg());

	//MailMergeEditDataSource: Opens a mail merge data source  [dispid 104]
	void MailMergeEditDataSource();

	//EditCut: Cuts the selection and puts it on the Clipboard  [dispid 108]	void EditCut();
	//EditCopy: Copies the selection and puts it on the Clipboard  [dispid 109]	void EditCopy();
	//EditPaste: Inserts the Clipboard contents at the insertion point  [dispid 110]	void EditPaste();
	//EditPasteSpecial: Inserts the Clipboard contents as a linked object, embedded object, or other format  [dispid 111]	void EditPasteSpecial(TAutoVal IconNumber = TNoArg(), TAutoVal Link = TNoArg(), TAutoVal DisplayIcon = TNoArg(), TAutoVal Class = TNoArg(), TAutoVal DataType = TNoArg(), TAutoVal IconFilename = TNoArg(), TAutoVal Caption = TNoArg());
	//EditFind: Finds the specified text or the specified formatting (FindAllWordFors is only valid for some languages and only in Word 95)  [dispid 112]	void EditFind(TAutoVal Find = TNoArg(), TAutoVal Direction = TNoArg(), TAutoVal MatchCase = TNoArg(), TAutoVal WholeWord = TNoArg(), TAutoVal PatternMatch = TNoArg(), TAutoVal SoundsLike = TNoArg(), TAutoVal Format = TNoArg(), TAutoVal Wrap = TNoArg(), TAutoVal FindAllWordForms = TNoArg());
	//EditFindFont: (Outline and Shadow are only valid on Macintosh)  [dispid 113]	void EditFindFont(TAutoVal Points = TNoArg(), TAutoVal Underline = TNoArg(), TAutoVal Color = TNoArg(), TAutoVal Strikethrough = TNoArg(), TAutoVal Superscript = TNoArg(), TAutoVal Subscript = TNoArg(), TAutoVal Hidden = TNoArg(), TAutoVal SmallCaps = TNoArg(), TAutoVal AllCaps = TNoArg(), TAutoVal Spacing = TNoArg(), TAutoVal Position = TNoArg(), TAutoVal Kerning = TNoArg(), TAutoVal KerningMin = TNoArg(), TAutoVal Default = TNoArg(), TAutoVal Tab = TNoArg(), TAutoVal Font = TNoArg(), TAutoVal Bold = TNoArg(), TAutoVal Italic = TNoArg(), TAutoVal Outline = TNoArg(), TAutoVal Shadow = TNoArg());
	//EditFindPara:   [dispid 114]	void EditFindPara(TAutoVal LeftIndent = TNoArg(), TAutoVal RightIndent = TNoArg(), TAutoVal Before = TNoArg(), TAutoVal After = TNoArg(), TAutoVal LineSpacingRule = TNoArg(), TAutoVal LineSpacing = TNoArg(), TAutoVal Alignment = TNoArg(), TAutoVal WidowControl = TNoArg(), TAutoVal KeepWithNext = TNoArg(), TAutoVal KeepTogether = TNoArg(), TAutoVal PageBreak = TNoArg(), TAutoVal NoLineNum = TNoArg(), TAutoVal DontHyphen = TNoArg(), TAutoVal Tab = TNoArg(), TAutoVal FirstIndent = TNoArg());
	//EditFindStyle:   [dispid 115]	void EditFindStyle(TAutoVal Style = TNoArg());
	//EditFindClearFormatting:   [dispid 116]	void EditFindClearFormatting();
	//EditReplace: Finds the specified text or the specified formatting and replaces it (FindAllWordFors is only valid for some languages and only in Word 95)  [dispid 117]	void EditReplace(TAutoVal Find = TNoArg(), TAutoVal Replace = TNoArg(), TAutoVal Direction = TNoArg(), TAutoVal MatchCase = TNoArg(), TAutoVal WholeWord = TNoArg(), TAutoVal PatternMatch = TNoArg(), TAutoVal SoundsLike = TNoArg(), TAutoVal FindNext = TNoArg(), TAutoVal ReplaceOne = TNoArg(), TAutoVal ReplaceAll = TNoArg(), TAutoVal Format = TNoArg(), TAutoVal Wrap = TNoArg(), TAutoVal FindAllWordForms = TNoArg());
	//EditReplaceFont: (Outline and Shadow are only valid on Macintosh)  [dispid 118]	void EditReplaceFont(TAutoVal Points = TNoArg(), TAutoVal Underline = TNoArg(), TAutoVal Color = TNoArg(), TAutoVal Strikethrough = TNoArg(), TAutoVal Superscript = TNoArg(), TAutoVal Subscript = TNoArg(), TAutoVal Hidden = TNoArg(), TAutoVal SmallCaps = TNoArg(), TAutoVal AllCaps = TNoArg(), TAutoVal Spacing = TNoArg(), TAutoVal Position = TNoArg(), TAutoVal Kerning = TNoArg(), TAutoVal KerningMin = TNoArg(), TAutoVal Default = TNoArg(), TAutoVal Tab = TNoArg(), TAutoVal Font = TNoArg(), TAutoVal Bold = TNoArg(), TAutoVal Italic = TNoArg());
	//EditReplacePara:   [dispid 119]	void EditReplacePara(TAutoVal LeftIndent = TNoArg(), TAutoVal RightIndent = TNoArg(), TAutoVal Before = TNoArg(), TAutoVal After = TNoArg(), TAutoVal LineSpacingRule = TNoArg(), TAutoVal LineSpacing = TNoArg(), TAutoVal Alignment = TNoArg(), TAutoVal WidowControl = TNoArg(), TAutoVal KeepWithNext = TNoArg(), TAutoVal KeepTogether = TNoArg(), TAutoVal PageBreak = TNoArg(), TAutoVal NoLineNum = TNoArg(), TAutoVal DontHyphen = TNoArg(), TAutoVal Tab = TNoArg(), TAutoVal FirstIndent = TNoArg());
	//EditReplaceStyle:   [dispid 120]	void EditReplaceStyle(TAutoVal Style = TNoArg());
	//EditReplaceClearFormatting:   [dispid 121]	void EditReplaceClearFormatting();
	//EditGoTo: Jumps to a specified place in the active document  [dispid 122]	void EditGoTo(TAutoVal Destination = TNoArg());
	//EditAutoText: Inserts or defines AutoText entries  [dispid 123]	void EditAutoText(TAutoVal Name = TNoArg(), TAutoVal Context = TNoArg(), TAutoVal InsertAs = TNoArg(), TAutoVal Insert = TNoArg(), TAutoVal Add = TNoArg(), TAutoVal Delete = TNoArg());
	//EditLinks: Allows links to be viewed, updated, opened, or removed  [dispid 124]	void EditLinks(TAutoVal UpdateMode = TNoArg(), TAutoVal Locked = TNoArg(), TAutoVal SavePictureInDoc = TNoArg(), TAutoVal UpdateNow = TNoArg(), TAutoVal OpenSource = TNoArg(), TAutoVal KillLink = TNoArg(), TAutoVal Link = TNoArg(), TAutoVal Application = TNoArg(), TAutoVal Item = TNoArg(), TAutoVal FileName = TNoArg());
	//EditObject: Opens the selected object for editing  [dispid 125]	void EditObject();
	//ActivateObject: Activates an object  [dispid 126]	void ActivateObject();
	//TextToTable: Converts the text to table form  [dispid 127]	void TextToTable(TAutoVal ConvertFrom = TNoArg(), TAutoVal NumColumns = TNoArg(), TAutoVal NumRows = TNoArg(), TAutoVal InitialColWidth = TNoArg(), TAutoVal Format = TNoArg(), TAutoVal Apply = TNoArg());
	//TableToText: Converts a table to text  [dispid 128]	void TableToText(TAutoVal ConvertTo = TNoArg());
	//TableInsertTable: Inserts a table  [dispid 129]	void TableInsertTable(TAutoVal ConvertFrom = TNoArg(), TAutoVal NumColumns = TNoArg(), TAutoVal NumRows = TNoArg(), TAutoVal InitialColWidth = TNoArg(), TAutoVal Wizard = TNoArg(), TAutoVal Format = TNoArg(), TAutoVal Apply = TNoArg());
	//TableInsertCells: Inserts one or more cells into the table  [dispid 130]	void TableInsertCells(TAutoVal ShiftCells = TNoArg());
	//TableInsertRow: Inserts one or more rows into the table  [dispid 131]	void TableInsertRow(TAutoVal NumRows = TNoArg());
	//TableInsertColumn: Inserts one or more columns into the table  [dispid 132]	void TableInsertColumn();
	//TableDeleteCells: Deletes the selected cells from the table  [dispid 133]	void TableDeleteCells(TAutoVal ShiftCells = TNoArg());
	//TableDeleteRow: Deletes the selected rows from the table  [dispid 134]	void TableDeleteRow();
	//TableDeleteColumn: Deletes the selected columns from the table  [dispid 135]	void TableDeleteColumn();

	//TableMergeCells: Merges the selected table cells into a single cell  [dispid 136]
	void TableMergeCells();

	//TableSplitCells: Splits the selected table cells  [dispid 137]
	void TableSplitCells(TAutoVal NumColumns = TNoArg());

	//TableSplit: Inserts a paragraph mark above the current row in the table  [dispid 138]
	void TableSplit();

	//TableSelectTable: Selects an entire table  [dispid 139]
	void TableSelectTable();

	//TableSelectRow: Selects the current row in a table  [dispid 140]
	void TableSelectRow();

	//TableSelectColumn: Selects the current column in a table  [dispid 141]
	void TableSelectColumn();

	//TableRowHeight: Changes the height of the rows in a table  [dispid 142]
	void TableRowHeight(TAutoVal RulerStyle = TNoArg(), TAutoVal LineSpacingRule = TNoArg(), TAutoVal LineSpacing = TNoArg(), TAutoVal LeftIndent = TNoArg(), TAutoVal Alignment = TNoArg(), TAutoVal AllowRowSplit = TNoArg(), TAutoVal PrevRow = TNoArg(), TAutoVal NextRow = TNoArg());

	//TableColumnWidth: Changes the width of the columns in a table  [dispid 143]
	void TableColumnWidth(TAutoVal ColumnWidth = TNoArg(), TAutoVal SpaceBetweenCols = TNoArg(), TAutoVal PrevColumn = TNoArg(), TAutoVal NextColumn = TNoArg(), TAutoVal AutoFit = TNoArg(), TAutoVal RulerStyle = TNoArg());

	//ToolsCustomize: Customizes the Word user interface (menus, keyboard and toolbars)  [dispid 152]
	void ToolsCustomize(TAutoVal Tab = TNoArg());

	//NormalViewHeaderArea: Shows a list of headers and footers for editing  [dispid 155]
	void NormalViewHeaderArea(TAutoVal Type = TNoArg(), TAutoVal FirstPage = TNoArg(), TAutoVal OddAndEvenPages = TNoArg(), TAutoVal HeaderDistance = TNoArg(), TAutoVal FooterDistance = TNoArg());

	//InsertFrame: Inserts an empty frame or encloses the selected item in a frame  [dispid 158]
	void InsertFrame();

	//InsertBreak: Ends a page, column, or section at the insertion point  [dispid 159]
	void InsertBreak(TAutoVal Type = TNoArg());

	//InsertAnnotation: Inserts a comment and opens the annotation pane  [dispid 161]
	void InsertAnnotation();

	//InsertSymbol: Inserts a special character  [dispid 162]
	void InsertSymbol(TAutoVal Font = TNoArg(), TAutoVal Tab = TNoArg(), TAutoVal CharNum = TNoArg());

	//InsertPicture: Inserts a picture from a graphic file  [dispid 163]
	void InsertPicture(TAutoVal Name = TNoArg(), TAutoVal LinkToFile = TNoArg(), TAutoVal New = TNoArg());

	//InsertFile: Inserts the text of another file into the active document  [dispid 164]
	void InsertFile(TAutoVal Name = TNoArg(), TAutoVal Range = TNoArg(), TAutoVal ConfirmConversions = TNoArg(), TAutoVal Link = TNoArg());

	//InsertDateTime: Inserts the current date and/or time into the active document  [dispid 165]
	void InsertDateTime(TAutoVal DateTimePic = TNoArg(), TAutoVal InsertAsField = TNoArg());

	//InsertField: Inserts a field in the active document  [dispid 166]
	void InsertField(TAutoVal Field = TNoArg());

	//InsertMergeField: Inserts a mail merge field at the insertion point  [dispid 167]
	void InsertMergeField(TAutoVal MergeField = TNoArg());

	//EditBookmark: Assigns a name to the selection  [dispid 168]
	void EditBookmark(TAutoVal Name = TNoArg(), TAutoVal SortBy = TNoArg(), TAutoVal Add = TNoArg(), TAutoVal Delete = TNoArg(), TAutoVal Goto = TNoArg());

	//MarkIndexEntry: Marks the text you want to include in the index  [dispid 169]
	void MarkIndexEntry(TAutoVal MarkAll = TNoArg(), TAutoVal Entry = TNoArg(), TAutoVal Range = TNoArg(), TAutoVal Bold = TNoArg(), TAutoVal Italic = TNoArg(), TAutoVal CrossReference = TNoArg(), TAutoVal EntryAutoText = TNoArg(), TAutoVal CrossReferenceAutoText = TNoArg());

	//InsertIndex: Collects the index entries into an index  [dispid 170]
	void InsertIndex(TAutoVal HeadingSeparator = TNoArg(), TAutoVal Replace = TNoArg(), TAutoVal Type = TNoArg(), TAutoVal RightAlignPageNumbers = TNoArg(), TAutoVal Columns = TNoArg());

	//InsertTableOfContents: Collects the headings or the table of contents entries into a table of contents  [dispid 171]
	void InsertTableOfContents(TAutoVal Outline = TNoArg(), TAutoVal Fields = TNoArg(), TAutoVal From = TNoArg(), TAutoVal To = TNoArg(), TAutoVal TableId = TNoArg(), TAutoVal AddedStyles = TNoArg(), TAutoVal Replace = TNoArg(), TAutoVal RightAlignPageNumbers = TNoArg());

	//InsertObject: Inserts an equation, chart, drawing, or some other object  [dispid 172]
	void InsertObject(TAutoVal IconNumber = TNoArg(), TAutoVal FileName = TNoArg(), TAutoVal Link = TNoArg(), TAutoVal DisplayIcon = TNoArg(), TAutoVal Tab = TNoArg(), TAutoVal Class = TNoArg(), TAutoVal IconFilename = TNoArg(), TAutoVal Caption = TNoArg());

	//ToolsCreateEnvelope: Creates or prints an envelope  [dispid 173]
	void ToolsCreateEnvelope(TAutoVal ExtractAddress = TNoArg(), TAutoVal EnvAddress = TNoArg(), TAutoVal EnvOmitReturn = TNoArg(), TAutoVal EnvReturn = TNoArg(), TAutoVal PrintBarCode = TNoArg(), TAutoVal EnvWidth = TNoArg(), TAutoVal EnvHeight = TNoArg(), TAutoVal EnvPaperSize = TNoArg());

	//FormatFont: Changes the appearance of the selected characters  (Outline and Shadow are only valid on Macintosh)  [dispid 174]
	void FormatFont(TAutoVal Points = TNoArg(), TAutoVal Underline = TNoArg(), TAutoVal Color = TNoArg(), TAutoVal Strikethrough = TNoArg(), TAutoVal Superscript = TNoArg(), TAutoVal Subscript = TNoArg(), TAutoVal Hidden = TNoArg(), TAutoVal SmallCaps = TNoArg(), TAutoVal AllCaps = TNoArg(), TAutoVal Spacing = TNoArg(), TAutoVal Position = TNoArg(), TAutoVal Kerning = TNoArg(), TAutoVal KerningMin = TNoArg(), TAutoVal Default = TNoArg(), TAutoVal Tab = TNoArg(), TAutoVal Font = TNoArg(), TAutoVal Bold = TNoArg(), TAutoVal Italic = TNoArg(), TAutoVal Outline = TNoArg(), TAutoVal Shadow = TNoArg());

	//FormatParagraph: Changes the appearance and line numbering of the selected paragraphs  [dispid 175]
	void FormatParagraph(TAutoVal LeftIndent = TNoArg(), TAutoVal RightIndent = TNoArg(), TAutoVal Before = TNoArg(), TAutoVal After = TNoArg(), TAutoVal LineSpacingRule = TNoArg(), TAutoVal LineSpacing = TNoArg(), TAutoVal Alignment = TNoArg(), TAutoVal WidowControl = TNoArg(), TAutoVal KeepWithNext = TNoArg(), TAutoVal KeepTogether = TNoArg(), TAutoVal PageBreak = TNoArg(), TAutoVal NoLineNum = TNoArg(), TAutoVal DontHyphen = TNoArg(), TAutoVal Tab = TNoArg(), TAutoVal FirstIndent = TNoArg());

	//FormatSectionLayout: Changes the page format of the selected sections  [dispid 176]
	void FormatSectionLayout(TAutoVal SectionStart = TNoArg(), TAutoVal VertAlign = TNoArg(), TAutoVal Endnotes = TNoArg(), TAutoVal LineNum = TNoArg(), TAutoVal StartingNum = TNoArg(), TAutoVal FromText = TNoArg(), TAutoVal CountBy = TNoArg(), TAutoVal NumMode = TNoArg());

	//FormatColumns: Changes the column format of the selected sections  [dispid 177]
	void FormatColumns(TAutoVal Columns = TNoArg(), TAutoVal ColumnNo = TNoArg(), TAutoVal ColumnWidth = TNoArg(), TAutoVal ColumnSpacing = TNoArg(), TAutoVal EvenlySpaced = TNoArg(), TAutoVal ApplyColsTo = TNoArg(), TAutoVal ColLine = TNoArg(), TAutoVal StartNewCol = TNoArg());

	//FilePageSetup: Changes the page setup of the selected sections  [dispid 178]
	void FilePageSetup(TAutoVal Tab = TNoArg(), TAutoVal TopMargin = TNoArg(), TAutoVal BottomMargin = TNoArg(), TAutoVal LeftMargin = TNoArg(), TAutoVal RightMargin = TNoArg(), TAutoVal Gutter = TNoArg(), TAutoVal PageWidth = TNoArg(), TAutoVal Pageheight = TNoArg(), TAutoVal Orientation = TNoArg(), TAutoVal FirstPage = TNoArg(), TAutoVal OtherPages = TNoArg(), TAutoVal VertAlign = TNoArg(), TAutoVal ApplyPropsTo = TNoArg(), TAutoVal Default = TNoArg(), TAutoVal FacingPages = TNoArg(), TAutoVal HeaderDistance = TNoArg(), TAutoVal FooterDistance = TNoArg(), TAutoVal SectionStart = TNoArg(), TAutoVal OddAndEvenPages = TNoArg(), TAutoVal DifferentFirstPage = TNoArg(), TAutoVal Endnotes = TNoArg(), TAutoVal LineNum = TNoArg(), TAutoVal StartingNum = TNoArg(), TAutoVal FromText = TNoArg(), TAutoVal CountBy = TNoArg(), TAutoVal NumMode = TNoArg());

	//FormatTabs: Sets and clears the tab stops for the selected paragraphs  [dispid 179]
	void FormatTabs(TAutoVal Position = TNoArg(), TAutoVal DefTabs = TNoArg(), TAutoVal Align = TNoArg(), TAutoVal Leader = TNoArg(), TAutoVal Set = TNoArg(), TAutoVal Clear = TNoArg(), TAutoVal ClearAll = TNoArg());

	//FormatStyle: Applies, creates, or modifies styles  [dispid 180]
	void FormatStyle(TAutoVal Name = TNoArg(), TAutoVal Delete = TNoArg(), TAutoVal Merge = TNoArg(), TAutoVal NewName = TNoArg(), TAutoVal BasedOn = TNoArg(), TAutoVal NextStyle = TNoArg(), TAutoVal Type = TNoArg(), TAutoVal FileName = TNoArg(), TAutoVal Source = TNoArg(), TAutoVal AddToTemplate = TNoArg(), TAutoVal Define = TNoArg(), TAutoVal Rename = TNoArg(), TAutoVal Apply = TNoArg());

	//FormatDefineStyleFont: (Outline and Shadow are only valid on Macintosh)  [dispid 181]
	void FormatDefineStyleFont(TAutoVal Points = TNoArg(), TAutoVal Underline = TNoArg(), TAutoVal Color = TNoArg(), TAutoVal Strikethrough = TNoArg(), TAutoVal Superscript = TNoArg(), TAutoVal Subscript = TNoArg(), TAutoVal Hidden = TNoArg(), TAutoVal SmallCaps = TNoArg(), TAutoVal AllCaps = TNoArg(), TAutoVal Spacing = TNoArg(), TAutoVal Position = TNoArg(), TAutoVal Kerning = TNoArg(), TAutoVal KerningMin = TNoArg(), TAutoVal Default = TNoArg(), TAutoVal Tab = TNoArg(), TAutoVal Font = TNoArg(), TAutoVal Bold = TNoArg(), TAutoVal Italic = TNoArg(), TAutoVal Outline = TNoArg(), TAutoVal Shadow = TNoArg());

	//FormatDefineStylePara:   [dispid 182]
	void FormatDefineStylePara(TAutoVal LeftIndent = TNoArg(), TAutoVal RightIndent = TNoArg(), TAutoVal Before = TNoArg(), TAutoVal After = TNoArg(), TAutoVal LineSpacingRule = TNoArg(), TAutoVal LineSpacing = TNoArg(), TAutoVal Alignment = TNoArg(), TAutoVal WidowControl = TNoArg(), TAutoVal KeepWithNext = TNoArg(), TAutoVal KeepTogether = TNoArg(), TAutoVal PageBreak = TNoArg(), TAutoVal NoLineNum = TNoArg(), TAutoVal DontHyphen = TNoArg(), TAutoVal Tab = TNoArg(), TAutoVal FirstIndent = TNoArg());

	//FormatDefineStyleTabs:   [dispid 183]
	void FormatDefineStyleTabs(TAutoVal Position = TNoArg(), TAutoVal DefTabs = TNoArg(), TAutoVal Align = TNoArg(), TAutoVal Leader = TNoArg(), TAutoVal Set = TNoArg(), TAutoVal Clear = TNoArg(), TAutoVal ClearAll = TNoArg());

	//FormatDefineStyleFrame:   [dispid 184]
	void FormatDefineStyleFrame(TAutoVal Wrap = TNoArg(), TAutoVal WidthRule = TNoArg(), TAutoVal FixedWidth = TNoArg(), TAutoVal HeightRule = TNoArg(), TAutoVal FixedHeight = TNoArg(), TAutoVal PositionHorz = TNoArg(), TAutoVal PositionHorzRel = TNoArg(), TAutoVal DistFromText = TNoArg(), TAutoVal PositionVert = TNoArg(), TAutoVal PositionVertRel = TNoArg(), TAutoVal DistVertFromText = TNoArg(), TAutoVal MoveWithTExt = TNoArg(), TAutoVal LockAnchor = TNoArg(), TAutoVal RemoveFrame = TNoArg());

	//FormatDefineStyleBorders:   [dispid 185]
	void FormatDefineStyleBorders(TAutoVal ApplyTo = TNoArg(), TAutoVal Shadow = TNoArg(), TAutoVal TopBorder = TNoArg(), TAutoVal LeftBorder = TNoArg(), TAutoVal BottomBorder = TNoArg(), TAutoVal RightBorder = TNoArg(), TAutoVal HorizBorder = TNoArg(), TAutoVal VertBorder = TNoArg(), TAutoVal TopColor = TNoArg(), TAutoVal LeftColor = TNoArg(), TAutoVal BottomColor = TNoArg(), TAutoVal RightColor = TNoArg(), TAutoVal HorizColor = TNoArg(), TAutoVal VertColor = TNoArg(), TAutoVal FromText = TNoArg(), TAutoVal Shading = TNoArg(), TAutoVal Foreground = TNoArg(), TAutoVal Background = TNoArg(), TAutoVal Tab = TNoArg(), TAutoVal FineShading = TNoArg());

	//FormatDefineStyleLang:   [dispid 186]
	void FormatDefineStyleLang(TAutoVal Language = TNoArg(), TAutoVal Default = TNoArg());

	//FormatPicture: Changes the picture scaling, size, and cropping information  [dispid 187]
	void FormatPicture(TAutoVal SetSize = TNoArg(), TAutoVal CropLeft = TNoArg(), TAutoVal CropRight = TNoArg(), TAutoVal CropTop = TNoArg(), TAutoVal CropBottom = TNoArg(), TAutoVal ScaleX = TNoArg(), TAutoVal ScaleY = TNoArg(), TAutoVal SizeX = TNoArg(), TAutoVal SizeY = TNoArg());

	//ToolsLanguage: Changes the language formatting of the selected characters  [dispid 188]
	void ToolsLanguage(TAutoVal Language = TNoArg(), TAutoVal Default = TNoArg());

	//FormatBordersAndShading: Changes the borders and shading of the selected paragraphs, table cells, and pictures  [dispid 189]
	void FormatBordersAndShading(TAutoVal ApplyTo = TNoArg(), TAutoVal Shadow = TNoArg(), TAutoVal TopBorder = TNoArg(), TAutoVal LeftBorder = TNoArg(), TAutoVal BottomBorder = TNoArg(), TAutoVal RightBorder = TNoArg(), TAutoVal HorizBorder = TNoArg(), TAutoVal VertBorder = TNoArg(), TAutoVal TopColor = TNoArg(), TAutoVal LeftColor = TNoArg(), TAutoVal BottomColor = TNoArg(), TAutoVal RightColor = TNoArg(), TAutoVal HorizColor = TNoArg(), TAutoVal VertColor = TNoArg(), TAutoVal FromText = TNoArg(), TAutoVal Shading = TNoArg(), TAutoVal Foreground = TNoArg(), TAutoVal Background = TNoArg(), TAutoVal Tab = TNoArg(), TAutoVal FineShading = TNoArg());

	//FormatFrame: Changes the options for frame formatting  [dispid 190]
	void FormatFrame(TAutoVal Wrap = TNoArg(), TAutoVal WidthRule = TNoArg(), TAutoVal FixedWidth = TNoArg(), TAutoVal HeightRule = TNoArg(), TAutoVal FixedHeight = TNoArg(), TAutoVal PositionHorz = TNoArg(), TAutoVal PositionHorzRel = TNoArg(), TAutoVal DistFromText = TNoArg(), TAutoVal PositionVert = TNoArg(), TAutoVal PositionVertRel = TNoArg(), TAutoVal DistVertFromText = TNoArg(), TAutoVal MoveWithTExt = TNoArg(), TAutoVal LockAnchor = TNoArg(), TAutoVal RemoveFrame = TNoArg());
	//ToolsSpelling: Checks the spelling in the active document  [dispid 191]	void ToolsSpelling();
	//ToolsSpellSelection: Checks the spelling of the selected text  [dispid 192]	void ToolsSpellSelection();
	//ToolsGrammar: Checks the grammar in the active document  [dispid 193]	void ToolsGrammar();
	//ToolsThesaurus: Finds a synonym for the selected word  [dispid 194]	void ToolsThesaurus();
	//ToolsHyphenation: Changes the hyphenation settings for the active document  [dispid 195]	void ToolsHyphenation(TAutoVal AutoHyphenation = TNoArg(), TAutoVal HyphenateCaps = TNoArg(), TAutoVal HyphenationZone = TNoArg(), TAutoVal LimitConsecutiveHyphens = TNoArg());
	//ToolsBulletsNumbers: Changes the numbered and bulleted paragraphs  [dispid 196]	void ToolsBulletsNumbers(TAutoVal Replace = TNoArg(), TAutoVal Font = TNoArg(), TAutoVal CharNum = TNoArg(), TAutoVal Type = TNoArg(), TAutoVal FormatOutline = TNoArg(), TAutoVal AutoUpdate = TNoArg(), TAutoVal FormatNumber = TNoArg(), TAutoVal Punctuation = TNoArg(), TAutoVal StartAt = TNoArg(), TAutoVal Points = TNoArg(), TAutoVal Hang = TNoArg(), TAutoVal Indent = TNoArg(), TAutoVal Remove = TNoArg());
	//ToolsRevisions: Sets revision marking for the active document  [dispid 197]	void ToolsRevisions(TAutoVal MarkRevisions = TNoArg(), TAutoVal ViewRevisions = TNoArg(), TAutoVal PrintRevisions = TNoArg(), TAutoVal AcceptAll = TNoArg(), TAutoVal RejectAll = TNoArg());
	//ToolsCompareVersions: Compares the active document with an earlier version  [dispid 198]	void ToolsCompareVersions(TAutoVal Name = TNoArg());
	//TableSort: Rearranges the selection into a specified order  [dispid 199]	void TableSort(TAutoVal DontSortHdr = TNoArg(), TAutoVal FieldNum = TNoArg(), TAutoVal Type = TNoArg(), TAutoVal Order = TNoArg(), TAutoVal FieldNum2 = TNoArg(), TAutoVal Type2 = TNoArg(), TAutoVal Order2 = TNoArg(), TAutoVal FieldNum3 = TNoArg(), TAutoVal Type3 = TNoArg(), TAutoVal Order3 = TNoArg(), TAutoVal Separator = TNoArg(), TAutoVal SortColumn = TNoArg(), TAutoVal CaseSensitive = TNoArg());
	//ToolsRepaginate: Recalculates the page breaks  [dispid 201]	void ToolsRepaginate();
	//ToolsOptions: Changes various categories of Word for Windows options  [dispid 202]	void ToolsOptions(TAutoVal Tab = TNoArg());
	//ToolsOptionsGeneral: Changes the general options (MenuName, RTFInClipboard and ConfirmConversion are not valid in Word 6.0)  [dispid 203]	void ToolsOptionsGeneral(TAutoVal Pagination = TNoArg(), TAutoVal WPHelp = TNoArg(), TAutoVal WPDocNavKeys = TNoArg(), TAutoVal BlueScreen = TNoArg(), TAutoVal ErrorBeeps = TNoArg(), TAutoVal Effects3d = TNoArg(), TAutoVal UpdateLinks = TNoArg(), TAutoVal SendMailAttach = TNoArg(), TAutoVal RecentFiles = TNoArg(), TAutoVal RecentFileCount = TNoArg(), TAutoVal Units = TNoArg(), TAutoVal ButtonFieldClicks = TNoArg(), TAutoVal MenuName = TNoArg(), TAutoVal RTFInClipboard = TNoArg(), TAutoVal ConfirmConversions = TNoArg(), TAutoVal TipWizardActive = TNoArg());
	//ToolsOptionsView: Set specific view mode options (Highlight is only valid in Word 95)  [dispid 204]	void ToolsOptionsView(TAutoVal DraftFont = TNoArg(), TAutoVal WrapToWindow = TNoArg(), TAutoVal PicturePlaceHolders = TNoArg(), TAutoVal FieldCodes = TNoArg(), TAutoVal BookMarks = TNoArg(), TAutoVal FieldShading = TNoArg(), TAutoVal StatusBar = TNoArg(), TAutoVal HScroll = TNoArg(), TAutoVal VScroll = TNoArg(), TAutoVal StyleAreaWidth = TNoArg(), TAutoVal Tabs = TNoArg(), TAutoVal Spaces = TNoArg(), TAutoVal Paras = TNoArg(), TAutoVal Hyphens = TNoArg(), TAutoVal Hidden = TNoArg(), TAutoVal ShowAll = TNoArg(), TAutoVal Drawings = TNoArg(), TAutoVal Anchors = TNoArg(), TAutoVal TextBoundaries = TNoArg(), TAutoVal Vruler = TNoArg(), TAutoVal Highlight = TNoArg());
	//ToolsAdvancedSettings: Changes advanced options in the initialization (WINWORD6.INI and WIN.INI) files  [dispid 206]	void ToolsAdvancedSettings(TAutoVal Application = TNoArg(), TAutoVal Option = TNoArg(), TAutoVal Setting = TNoArg(), TAutoVal Delete = TNoArg(), TAutoVal Set = TNoArg());
	//ToolsOptionsPrint: Changes the printing options (FractionalWidths and PSOverText are valid only on Macinthosh)  [dispid 208]	void ToolsOptionsPrint(TAutoVal Draft = TNoArg(), TAutoVal Reverse = TNoArg(), TAutoVal UpdateFields = TNoArg(), TAutoVal Summary = TNoArg(), TAutoVal ShowCodes = TNoArg(), TAutoVal Annotations = TNoArg(), TAutoVal ShowHidden = TNoArg(), TAutoVal EnvFeederInstalled = TNoArg(), TAutoVal UpdateLinks = TNoArg(), TAutoVal Background = TNoArg(), TAutoVal DrawingObjects = TNoArg(), TAutoVal FormsData = TNoArg(), TAutoVal DefaultTray = TNoArg(), TAutoVal FractionalWidths = TNoArg(), TAutoVal PSOverText = TNoArg());
	//ToolsOptionsSave: Changes the save settings  [dispid 209]	void ToolsOptionsSave(TAutoVal CreateBackup = TNoArg(), TAutoVal FastSaves = TNoArg(), TAutoVal SummaryPrompt = TNoArg(), TAutoVal GlobalDotPrompt = TNoArg(), TAutoVal NativePictureFormat = TNoArg(), TAutoVal EmbedFonts = TNoArg(), TAutoVal FormsData = TNoArg(), TAutoVal AutoSave = TNoArg(), TAutoVal SaveInterval = TNoArg(), TAutoVal Password = TNoArg(), TAutoVal WritePassword = TNoArg(), TAutoVal RecommendReadOnly = TNoArg());
	//ToolsOptionsSpelling: Changes the spelling options (AutomaticSpellChecking, HideSpellingErrors and RecheckDocument are valid only in Word 95)  [dispid 211]	void ToolsOptionsSpelling(TAutoVal AlwaysSuggest = TNoArg(), TAutoVal SuggestFromMainDictOnly = TNoArg(), TAutoVal IgnoreAllCaps = TNoArg(), TAutoVal IgnoreMixedDigits = TNoArg(), TAutoVal ResetIgnoreAll = TNoArg(), TAutoVal Type = TNoArg(), TAutoVal CustomDict1 = TNoArg(), TAutoVal CustomDict2 = TNoArg(), TAutoVal CustomDict3 = TNoArg(), TAutoVal CustomDict4 = TNoArg(), TAutoVal CustomDict5 = TNoArg(), TAutoVal CustomDict6 = TNoArg(), TAutoVal CustomDict7 = TNoArg(), TAutoVal CustomDict8 = TNoArg(), TAutoVal CustomDict9 = TNoArg(), TAutoVal CustomDict10 = TNoArg(), TAutoVal AutomaticSpelling = TNoArg(), TAutoVal HideSpellingErrors = TNoArg(), TAutoVal RecheckDocument = TNoArg());
	//ToolsOptionsGrammar: Changes the grammar options  [dispid 212]	void ToolsOptionsGrammar(TAutoVal Options = TNoArg(), TAutoVal CheckSpelling = TNoArg(), TAutoVal ShowStatistics = TNoArg());
	//ToolsOptionsUserInfo: Changes the user information options  [dispid 213]	void ToolsOptionsUserInfo(TAutoVal Name = TNoArg(), TAutoVal Initials = TNoArg(), TAutoVal Address = TNoArg());
	//ToolsMacro: Runs, creates, deletes, or revises a macro  [dispid 215]	void ToolsMacro(TAutoVal Name = TNoArg(), TAutoVal Run = TNoArg(), TAutoVal Edit = TNoArg(), TAutoVal Show = TNoArg(), TAutoVal Delete = TNoArg(), TAutoVal Rename = TNoArg(), TAutoVal Description = TNoArg(), TAutoVal NewName = TNoArg(), TAutoVal SetDesc = TNoArg());
	//PauseRecorder: Pauses the macro recorder (toggle)  [dispid 216]	void PauseRecorder();
	//WindowNewWindow: Opens another window for the active document  [dispid 217]	void WindowNewWindow();
	//WindowArrangeAll: Arranges windows as non-overlapping tiles  [dispid 218]	void WindowArrangeAll();
	//MailMergeEditMainDocument: Switches to a mail merge main document  [dispid 219]	void MailMergeEditMainDocument();
	//FormatRetAddrFonts: Formats the return address font for envelopes  (Outline and Shadow are valid only on Macintosh)  [dispid 221]	void FormatRetAddrFonts(TAutoVal Points = TNoArg(), TAutoVal Underline = TNoArg(), TAutoVal Color = TNoArg(), TAutoVal Strikethrough = TNoArg(), TAutoVal Superscript = TNoArg(), TAutoVal Subscript = TNoArg(), TAutoVal Hidden = TNoArg(), TAutoVal SmallCaps = TNoArg(), TAutoVal AllCaps = TNoArg(), TAutoVal Spacing = TNoArg(), TAutoVal Position = TNoArg(), TAutoVal Kerning = TNoArg(), TAutoVal KerningMin = TNoArg(), TAutoVal Default = TNoArg(), TAutoVal Tab = TNoArg(), TAutoVal Font = TNoArg(), TAutoVal Bold = TNoArg(), TAutoVal Italic = TNoArg(), TAutoVal Outline = TNoArg(), TAutoVal Shadow = TNoArg());
	//Organizer: Manages AutoText entries, styles, macros, and toolbars  [dispid 222]	void Organizer(TAutoVal Copy = TNoArg(), TAutoVal Delete = TNoArg(), TAutoVal Rename = TNoArg(), TAutoVal Source = TNoArg(), TAutoVal Destination = TNoArg(), TAutoVal Name = TNoArg(), TAutoVal NewName = TNoArg(), TAutoVal Tab = TNoArg());
	//ToolsOptionsEdit: Changes the editing options (TabIntent is only valid in Word 95)  [dispid 224]	void ToolsOptionsEdit(TAutoVal ReplaceSelection = TNoArg(), TAutoVal DragAndDrop = TNoArg(), TAutoVal AutoWordSelection = TNoArg(), TAutoVal InsForPaste = TNoArg(), TAutoVal Overtype = TNoArg(), TAutoVal SmartCutPaste = TNoArg(), TAutoVal AllowAccentedUppercase = TNoArg(), TAutoVal PictureEditor = TNoArg(), TAutoVal TabIntent = TNoArg());
	//ToolsOptionsFileLocations: Changes the default locations Word uses to find files  [dispid 225]	void ToolsOptionsFileLocations(TAutoVal Path = TNoArg(), TAutoVal Setting = TNoArg());
	//ToolsWordCount: Displays the word count statistics of the active document  [dispid 228]	void ToolsWordCount(TAutoVal CountFootnotes = TNoArg(), TAutoVal Pages = TNoArg(), TAutoVal Words = TNoArg(), TAutoVal Characters = TNoArg(), TAutoVal Paragraphs = TNoArg(), TAutoVal Lines = TNoArg());
	//DocRestore: Restores the window to normal size  [dispid 233]	void DocRestore();
	//ControlRun: Displays the Control Panel or the Clipboard  [dispid 235]	void ControlRun(TAutoVal Application = TNoArg());
	//ShrinkSelection: Shrinks the selection to the next smaller unit  [dispid 236]	void ShrinkSelection();
	//EditSelectAll: Selects the entire document  [dispid 237]	void EditSelectAll();
	//InsertPageField: Inserts a page number field  [dispid 239]	void InsertPageField();
	//InsertDateField: Inserts a date field  [dispid 240]	void InsertDateField();
	//InsertTimeField: Inserts a time field  [dispid 241]	void InsertTimeField();
	//FormatHeaderFooterLink: Links this header/footer to the previous section  [dispid 242]	void FormatHeaderFooterLink();
	//ClosePane: Closes the active window pane  [dispid 243]	void ClosePane();
	//OutlinePromote: Promotes the selected paragraphs one heading level  [dispid 244]	void OutlinePromote();
	//OutlineDemote: Demotes the selected paragraphs one heading level  [dispid 245]	void OutlineDemote();
	//OutlineMoveUp: Moves the selection above the previous item in the outline  [dispid 246]	void OutlineMoveUp();
	//OutlineMoveDown: Moves the selection below the next item in the outline  [dispid 247]	void OutlineMoveDown();
	//NormalStyle: Applies the Normal style  [dispid 248]	void NormalStyle();
	//OutlineExpand: Displays the next level of subtext of the selection  [dispid 249]	void OutlineExpand();
	//OutlineCollapse: Hides the lowest subtext of the selection  [dispid 250]	void OutlineCollapse();
	//ShowHeading1: Displays the level 1 headings only  [dispid 251]	void ShowHeading1();
	//ShowHeading2: Displays the level 1 and 2 headings  [dispid 252]	void ShowHeading2();
	//ShowHeading3: Displays the level 1 through 3 headings  [dispid 253]	void ShowHeading3();
	//ShowHeading4: Displays the level 1 through 4 headings  [dispid 254]	void ShowHeading4();
	//ShowHeading5: Displays the level 1 through 5 headings  [dispid 255]	void ShowHeading5();
	//ShowHeading6: Displays the level 1 through 6 headings  [dispid 256]	void ShowHeading6();
	//ShowHeading7: Displays the level 1 through 7 headings  [dispid 257]	void ShowHeading7();
	//ShowHeading8: Displays the level 1 through 8 headings  [dispid 258]	void ShowHeading8();
	//ShowHeading9: Displays the level 1 through 9 headings  [dispid 259]	void ShowHeading9();
	//ShowAllHeadings: Displays all of the heading levels and the body text  [dispid 260]	void ShowAllHeadings();
	//OutlineShowFormat: Toggles the display of character formatting in outline view  [dispid 262]	void OutlineShowFormat();
	//ShowVars: Lists the active macro's variables  [dispid 263]	void ShowVars();
	//InsertPageBreak: Inserts a page break at the insertion point  [dispid 277]	void InsertPageBreak();
	//InsertColumnBreak: Inserts a column break at the insertion point  [dispid 278]	void InsertColumnBreak();
	//DoFieldClick: Executes the action associated with the button fields  [dispid 282]	void DoFieldClick();
	//InsertDrawing: Inserts a Microsoft Draw object  [dispid 284]	void InsertDrawing();
	//InsertChart: Inserts a Microsoft Graph object  [dispid 285]	void InsertChart();
	//SelectCurFont: Selects all characters with the same font name and point size  [dispid 286]	void SelectCurFont();
	//SelectCurAlignment: Selects all paragraphs with the same alignment  [dispid 287]	void SelectCurAlignment();
	//SelectCurSpacing: Selects all paragraphs with the same line spacing  [dispid 288]	void SelectCurSpacing();
	//SelectCurIndent: Selects all paragraphs with the same indentation  [dispid 289]	void SelectCurIndent();
	//SelectCurTabs: Selects all paragraphs with the same tabs  [dispid 290]	void SelectCurTabs();
	//SelectCurColor: Selects all characters with the same color  [dispid 291]	void SelectCurColor();
	//RemoveFrames: Removes frame formatting from the selection  [dispid 292]	void RemoveFrames();
	//MenuMode: Makes the menu bar active  [dispid 293]	void MenuMode();
	//InsertPageNumbers: Adds page numbers to the top or the bottom of the pages  [dispid 294]	void InsertPageNumbers(TAutoVal Type = TNoArg(), TAutoVal Position = TNoArg(), TAutoVal FirstPage = TNoArg());
	//EditPicture: Uses the specified drawing application to edit the selected picture  [dispid 296]	void EditPicture();
	//FormatPageNumber: Changes the appearance of page numbers  [dispid 298]	void FormatPageNumber(TAutoVal ChapterNumber = TNoArg(), TAutoVal NumRestart = TNoArg(), TAutoVal NumFormat = TNoArg(), TAutoVal StartingNum = TNoArg(), TAutoVal Level = TNoArg(), TAutoVal Separator = TNoArg());
	//CopyFile:   [dispid 300]	void CopyFile(TAutoVal FileName = TNoArg(), TAutoVal Directory = TNoArg());
	//FileNewDefault: Creates a new document based on the NORMAL template  [dispid 301]	void FileNewDefault();
	//FilePrintDefault: Prints the active document using the current defaults  [dispid 302]	void FilePrintDefault();
	//ViewZoomWholePage: Scales the editing view to see the whole page in page layout view  [dispid 303]	void ViewZoomWholePage();
	//ViewZoomPageWidth: Scales the editing view to see the width of the page  [dispid 304]	void ViewZoomPageWidth();
	//ViewZoom100: Scales the editing view to 100% in normal view  [dispid 305]	void ViewZoom100();
	//TogglePortrait: Toggles between portrait and landscape mode  [dispid 306]	void TogglePortrait();
	//ToolsBulletListDefault: Creates a bulleted list based on the current defaults  [dispid 307]	void ToolsBulletListDefault();
	//ToggleScribbleMode: Inserts a pen annotation at the location of the insertion point  [dispid 308]	void ToggleScribbleMode();
	//ToolsNumberListDefault: Creates a numbered list based on the current defaults  [dispid 309]	void ToolsNumberListDefault();
	//FormatChangeCase: Changes the case of the letters in the selection  [dispid 322]	void FormatChangeCase(TAutoVal Type = TNoArg());
	//ViewToolbars: Shows or hides the Word toolbars (ToolTipsKeys is valid only in Word 95)  [dispid 323]	void ViewToolbars(TAutoVal Toolbar = TNoArg(), TAutoVal Context = TNoArg(), TAutoVal ColorButtons = TNoArg(), TAutoVal LargeButtons = TNoArg(), TAutoVal ToolTipsKey = TNoArg(), TAutoVal ToolTips = TNoArg(), TAutoVal Reset = TNoArg(), TAutoVal Delete = TNoArg(), TAutoVal Show = TNoArg(), TAutoVal Hide = TNoArg());
	//MailMergeDataForm: Edits a list or table in a form  [dispid 340]	void MailMergeDataForm();
	//InsertDatabase: Inserts information from an external data source into the active document  [dispid 341]	void InsertDatabase(TAutoVal Format = TNoArg(), TAutoVal Style = TNoArg(), TAutoVal LinkToSource = TNoArg(), TAutoVal Connection = TNoArg(), TAutoVal SQLStatement = TNoArg(), TAutoVal SQLStatement1 = TNoArg(), TAutoVal PasswordDoc = TNoArg(), TAutoVal PasswordDot = TNoArg(), TAutoVal DataSource = TNoArg(), TAutoVal From = TNoArg(), TAutoVal To = TNoArg(), TAutoVal IncludeFields = TNoArg());
	//TableFormula: Inserts a formula field into a table cell  [dispid 348]	void TableFormula(TAutoVal Formula = TNoArg(), TAutoVal NumFormat = TNoArg());
	//TextFormField: Inserts a text form field  [dispid 349]	void TextFormField();
	//CheckBoxFormField: Inserts a check box form field  [dispid 350]	void CheckBoxFormField();
	//DropDownFormField: Inserts a drop-down form field  [dispid 351]	void DropDownFormField();
	//FormFieldOptions: Changes the options for a form field  [dispid 353]	void FormFieldOptions(TAutoVal Entry = TNoArg(), TAutoVal Exit = TNoArg(), TAutoVal Name = TNoArg(), TAutoVal Enable = TNoArg(), TAutoVal TextType = TNoArg(), TAutoVal TextWidth = TNoArg(), TAutoVal TextDefault = TNoArg(), TAutoVal TextFormat = TNoArg(), TAutoVal CheckSize = TNoArg(), TAutoVal CheckWidth = TNoArg(), TAutoVal CheckDefault = TNoArg(), TAutoVal Type = TNoArg(), TAutoVal OwnHelp = TNoArg(), TAutoVal HelpText = TNoArg(), TAutoVal OwnStat = TNoArg(), TAutoVal StatText = TNoArg());
	//InsertCaption: Inserts a caption above or below a selected object  [dispid 357]	void InsertCaption(TAutoVal Label = TNoArg(), TAutoVal TitleAutoText = TNoArg(), TAutoVal Title = TNoArg(), TAutoVal Delete = TNoArg(), TAutoVal Position = TNoArg());
	//InsertCaptionNumbering: Sets the number for a caption type  [dispid 358]	void InsertCaptionNumbering(TAutoVal Label = TNoArg(), TAutoVal FormatNumber = TNoArg(), TAutoVal ChapterNumber = TNoArg(), TAutoVal Level = TNoArg(), TAutoVal Separator = TNoArg());
	//InsertAutoCaption: Defines which objects are inserted with a caption  [dispid 359]	void InsertAutoCaption(TAutoVal Clear = TNoArg(), TAutoVal ClearAll = TNoArg(), TAutoVal Object = TNoArg(), TAutoVal Label = TNoArg(), TAutoVal Position = TNoArg());
	//HelpPSSHelp: Displays information about the support available for Microsoft Word  [dispid 360]	void HelpPSSHelp();
	//DrawTextbox: Inserts a text box drawing object  [dispid 363]	void DrawTextbox();
	//ToolsOptionsAutoFormat: Changes the AutoFormat options (ApplyBulletedLists, ReplaceOrdinals, ReplaceFractions ApplyBorders, ApplyNumberedLists and ShowOptionsFor are only valid in Word 95)  [dispid 365]	void ToolsOptionsAutoFormat(TAutoVal PreserveStyles = TNoArg(), TAutoVal ApplyStylesHeadings = TNoArg(), TAutoVal ApplyStylesLists = TNoArg(), TAutoVal ApplyStylesOtherParas = TNoArg(), TAutoVal AdjustParaMarks = TNoArg(), TAutoVal AdjustTabsSpaces = TNoArg(), TAutoVal AdjustEmptyParas = TNoArg(), TAutoVal ReplaceQuotes = TNoArg(), TAutoVal ReplaceSymbols = TNoArg(), TAutoVal ReplaceBullets = TNoArg(), TAutoVal ApplyBulletedLists = TNoArg(), TAutoVal ReplaceOrdinals = TNoArg(), TAutoVal ReplaceFractions = TNoArg(), TAutoVal ApplyBorders = TNoArg(), TAutoVal ApplyNumberedLists = TNoArg(), TAutoVal ShowOptionsFor = TNoArg());
	//DemoteToBodyText: Applies the Normal style and converts the selected headings to body text  [dispid 366]	void DemoteToBodyText();
	//InsertCrossReference: Inserts a cross-reference  [dispid 367]	void InsertCrossReference(TAutoVal ReferenceType = TNoArg(), TAutoVal ReferenceKind = TNoArg(), TAutoVal ReferenceItem = TNoArg());
	//InsertFootnote: Inserts a footnote or endnote reference at the insertion point  [dispid 370]	void InsertFootnote(TAutoVal Reference = TNoArg(), TAutoVal NoteType = TNoArg());
	//NoteOptions: Changes the options for footnotes or endnotes  [dispid 373]	void NoteOptions(TAutoVal FootnotesAt = TNoArg(), TAutoVal FootNumberAs = TNoArg(), TAutoVal FootStartingNum = TNoArg(), TAutoVal FootRestartNum = TNoArg(), TAutoVal EndnotesAt = TNoArg(), TAutoVal EndNumberAs = TNoArg(), TAutoVal EndStartingNum = TNoArg(), TAutoVal EndRestartNum = TNoArg());
	//DrawLine: Inserts a line drawing object  [dispid 376]	void DrawLine();
	//DrawRectangle: Inserts a rectangle drawing object  [dispid 377]	void DrawRectangle();
	//ToolsAutoCorrect: Adds or deletes AutoCorrect entries (SmartQuotes is in Word 95 the last parameter, CapsLock is only valid in Word 95  [dispid 378]	void ToolsAutoCorrect(TAutoVal SmartQuotes = TNoArg(), TAutoVal InitialCaps = TNoArg(), TAutoVal SentenceCaps = TNoArg(), TAutoVal Days = TNoArg(), TAutoVal CapsLock = TNoArg(), TAutoVal ReplaceText = TNoArg(), TAutoVal Formatting = TNoArg(), TAutoVal Replace = TNoArg(), TAutoVal With = TNoArg(), TAutoVal Add = TNoArg(), TAutoVal Delete = TNoArg());
	//FormatAutoFormat: Automatically formats a document  [dispid 385]	void FormatAutoFormat();
	//ToolsOptionsRevisions: Changes revision marking options (Highlight Color is only valid in Word 95)  [dispid 386]	void ToolsOptionsRevisions(TAutoVal InsertedTextMark = TNoArg(), TAutoVal InsertedTextColor = TNoArg(), TAutoVal DeletedTextMark = TNoArg(), TAutoVal DeletedTextColor = TNoArg(), TAutoVal RevisedLinesMark = TNoArg(), TAutoVal RevisedLinesColor = TNoArg(), TAutoVal HighlightColor = TNoArg());
	//ResetNoteSepOrNotice: Resets a separator, continuation separator, or continuation notice to the Word default  [dispid 388]	void ResetNoteSepOrNotice();
	//FormatBullet: Creates a bulleted list  [dispid 389]	void FormatBullet(TAutoVal Points = TNoArg(), TAutoVal Color = TNoArg(), TAutoVal Alignment = TNoArg(), TAutoVal Indent = TNoArg(), TAutoVal Space = TNoArg(), TAutoVal Hang = TNoArg(), TAutoVal CharNum = TNoArg(), TAutoVal Font = TNoArg());

	//FormatNumber: Creates a numbered list  [dispid 390]
	void FormatNumber(TAutoVal Points = TNoArg(), TAutoVal Color = TNoArg(), TAutoVal Before = TNoArg(), TAutoVal Type = TNoArg(), TAutoVal After = TNoArg(), TAutoVal StartAt = TNoArg(), TAutoVal Include = TNoArg(), TAutoVal Alignment = TNoArg(), TAutoVal Indent = TNoArg(), TAutoVal Space = TNoArg(), TAutoVal Hang = TNoArg(), TAutoVal Font = TNoArg(), TAutoVal Strikethrough = TNoArg(), TAutoVal Bold = TNoArg(), TAutoVal Italic = TNoArg(), TAutoVal Underline = TNoArg());

	//FormatMultilevel: Creates a multilevel list  [dispid 391]
	void FormatMultilevel(TAutoVal Points = TNoArg(), TAutoVal Color = TNoArg(), TAutoVal Before = TNoArg(), TAutoVal Type = TNoArg(), TAutoVal After = TNoArg(), TAutoVal StartAt = TNoArg(), TAutoVal Include = TNoArg(), TAutoVal Alignment = TNoArg(), TAutoVal Indent = TNoArg(), TAutoVal Space = TNoArg(), TAutoVal Hang = TNoArg(), TAutoVal Level = TNoArg(), TAutoVal Font = TNoArg(), TAutoVal Strikethrough = TNoArg(), TAutoVal Bold = TNoArg(), TAutoVal Italic = TNoArg(), TAutoVal Underline = TNoArg());

	//ConvertObject: Converts or activates an object as another type  [dispid 392]
	void ConvertObject(TAutoVal IconNumber = TNoArg(), TAutoVal ActivateAs = TNoArg(), TAutoVal IconFilename = TNoArg(), TAutoVal Caption = TNoArg(), TAutoVal Class = TNoArg(), TAutoVal DisplayIcon = TNoArg());

	//TableSortAToZ: Sorts records in ascending order (A to Z)  [dispid 393]
	void TableSortAToZ();

	//TableSortZToA: Sorts records in descending order (Z to A)  [dispid 394]
	void TableSortZToA();

	//FormatBulletsAndNumbering: Creates a numbered or bulleted list  [dispid 397]
	void FormatBulletsAndNumbering(TAutoVal Remove = TNoArg(), TAutoVal Hang = TNoArg(), TAutoVal Tab = TNoArg(), TAutoVal Preset = TNoArg());

	//InsertAddCaption: Adds a new caption type  [dispid 402]
	void InsertAddCaption(TAutoVal Name = TNoArg());
	//GoToNextPage: Jumps to the next page in the active document  [dispid 404]	void GoToNextPage();
	//GoToPreviousPage: Jumps to the previous page in the active document  [dispid 405]	void GoToPreviousPage();
	//GoToNextSection: Jumps to the next section in the active document  [dispid 406]	void GoToNextSection();
	//GoToPreviousSection: Jumps to the previous section in the active document  [dispid 407]	void GoToPreviousSection();
	//GoToNextFootnote: Jumps to the next footnote in the active document  [dispid 408]	void GoToNextFootnote();
	//GoToPreviousFootnote: Jumps to the previous footnote in the active document  [dispid 409]	void GoToPreviousFootnote();
	//GoToNextEndnote: Jumps to the next endnote in the active document  [dispid 410]	void GoToNextEndnote();
	//GoToPreviousEndnote: Jumps to the previous endnote in the active document  [dispid 411]	void GoToPreviousEndnote();
	//GoToNextAnnotation: Jumps to the next annotation in the active document  [dispid 412]	void GoToNextAnnotation();
	//GoToPreviousAnnotation: Jumps to the previous annotation in the active document  [dispid 413]	void GoToPreviousAnnotation();
	//Connect: Connects to a network drive  [dispid 420]	void Connect(TAutoVal Drive = TNoArg(), TAutoVal Path = TNoArg(), TAutoVal Password = TNoArg());
	//EditFindLang:   [dispid 428]	void EditFindLang(TAutoVal Language = TNoArg());
	//EditReplaceLang:   [dispid 429]	void EditReplaceLang(TAutoVal Language = TNoArg());
	//ToolsCustomizeKeyboard: Customizes the Word key assignments  [dispid 432]	void ToolsCustomizeKeyboard(TAutoVal KeyCode = TNoArg(), TAutoVal KeyCode2 = TNoArg(), TAutoVal Category = TNoArg(), TAutoVal Name = TNoArg(), TAutoVal Add = TNoArg(), TAutoVal Remove = TNoArg(), TAutoVal ResetAll = TNoArg(), TAutoVal CommandValue = TNoArg(), TAutoVal Context = TNoArg());
	//ToolsCustomizeMenus: Customizes the Word menu assignments  [dispid 433]	void ToolsCustomizeMenus(TAutoVal MenuType = TNoArg(), TAutoVal Position = TNoArg(), TAutoVal Category = TNoArg(), TAutoVal Name = TNoArg(), TAutoVal Menu = TNoArg(), TAutoVal AddBelow = TNoArg(), TAutoVal MenuText = TNoArg(), TAutoVal Rename = TNoArg(), TAutoVal Add = TNoArg(), TAutoVal Remove = TNoArg(), TAutoVal ResetAll = TNoArg(), TAutoVal CommandValue = TNoArg(), TAutoVal Context = TNoArg());
	//ToolsMergeRevisions: Merges revisions from the active document to an earlier version  [dispid 435]	void ToolsMergeRevisions(TAutoVal Name = TNoArg());
	//ClosePreview: Exits print preview  [dispid 437]	void ClosePreview();
	//EditConvertAllFootnotes: Converts all footnotes into endnotes  [dispid 439]	void EditConvertAllFootnotes();
	//EditConvertAllEndnotes: Converts all endnotes into footnotes  [dispid 440]	void EditConvertAllEndnotes();
	//EditSwapAllNotes: Changes all footnotes to endnotes and all endnotes to footnotes  [dispid 441]	void EditSwapAllNotes();
	//MarkTableOfContentsEntry: Marks the text you want to include in the table of contents  [dispid 442]	void MarkTableOfContentsEntry(TAutoVal Entry = TNoArg(), TAutoVal EntryAutoText = TNoArg(), TAutoVal TableId = TNoArg(), TAutoVal Level = TNoArg());
	//DrawEllipse: Inserts an ellipse drawing object  [dispid 454]	void DrawEllipse();
	//DrawArc: Inserts an arc drawing object  [dispid 455]	void DrawArc();
	//EditConvertNotes: Converts selected footnotes into endnotes, or converts selected endnotes into footnotes  [dispid 462]	void EditConvertNotes();

	//MarkCitation: Marks the text you want to include in the table of authorities  [dispid 463]
	void MarkCitation(TAutoVal LongCitation = TNoArg(), TAutoVal LongCitationAutoText = TNoArg(), TAutoVal Category = TNoArg(), TAutoVal ShortCitation = TNoArg(), TAutoVal NextCitation = TNoArg(), TAutoVal Mark = TNoArg(), TAutoVal MarkAll = TNoArg());

	//DrawGroup: Groups the selected drawing objects  [dispid 465]
	void DrawGroup();

	//DrawBringToFront: Brings the selected drawing objects to the front  [dispid 466]
	void DrawBringToFront();

	//DrawSendToBack: Sends the selected drawing objects to the back  [dispid 467]
	void DrawSendToBack();

	//DrawSendBehindText: Sends the selected drawing objects back one layer  [dispid 468]
	void DrawSendBehindText();

	//DrawBringInFrontOfText: Brings the selected drawing objects forward one layer  [dispid 469]
	void DrawBringInFrontOfText();

	//InsertTableOfAuthorities: Collects the table of authorities entries into a table of authorities  [dispid 471]
	void InsertTableOfAuthorities(TAutoVal Replace = TNoArg(), TAutoVal Passim = TNoArg(), TAutoVal KeepFormatting = TNoArg(), TAutoVal Category = TNoArg());

	//InsertTableOfFigures: Collects captions into a table of figures  [dispid 472]
	void InsertTableOfFigures(TAutoVal Caption = TNoArg(), TAutoVal Replace = TNoArg(), TAutoVal RightAlignPageNumbers = TNoArg(), TAutoVal Label = TNoArg());

	//MailMergeNextRecord: Displays the next record in the active mail merge data source  [dispid 478]
	void MailMergeNextRecord();

	//MailMergePrevRecord: Displays the previous record in the active mail merge data source  [dispid 479]
	void MailMergePrevRecord();

	//MailMergeFirstRecord: Displays the first record in the active mail merge data source  [dispid 480]
	void MailMergeFirstRecord();

	//MailMergeLastRecord: Displays the last record in the active mail merge data source  [dispid 481]
	void MailMergeLastRecord();

	//InsertFormField: Inserts a new form field  [dispid 483]
	void InsertFormField(TAutoVal Entry = TNoArg(), TAutoVal Exit = TNoArg(), TAutoVal Name = TNoArg(), TAutoVal Enable = TNoArg(), TAutoVal TextType = TNoArg(), TAutoVal TextWidth = TNoArg(), TAutoVal TextDefault = TNoArg(), TAutoVal TextFormat = TNoArg(), TAutoVal CheckSize = TNoArg(), TAutoVal CheckWidth = TNoArg(), TAutoVal CheckDefault = TNoArg(), TAutoVal Type = TNoArg(), TAutoVal OwnHelp = TNoArg(), TAutoVal HelpText = TNoArg(), TAutoVal OwnStat = TNoArg(), TAutoVal StatText = TNoArg());

	//DrawUngroup: Ungroups the selected group of drawing objects  [dispid 485]
	void DrawUngroup();

	//PasteFormat: Applies the previously copied formatting to selection  [dispid 486]
	void PasteFormat();

	//FormatDropCap: Formats the first character of current paragraph as a dropped capital  [dispid 488]
	void FormatDropCap(TAutoVal Position = TNoArg(), TAutoVal Font = TNoArg(), TAutoVal DropHeight = TNoArg(), TAutoVal DistFromText = TNoArg());

	//ToolsCreateLabels: Creates or prints a label or a sheet of labels  [dispid 489]
	void ToolsCreateLabels(TAutoVal LabelListIndex = TNoArg(), TAutoVal LabelIndex = TNoArg(), TAutoVal LabelDotMatrix = TNoArg(), TAutoVal LabelTray = TNoArg(), TAutoVal LabelAcross = TNoArg(), TAutoVal LabelDown = TNoArg(), TAutoVal SingleLabel = TNoArg(), TAutoVal LabelRow = TNoArg(), TAutoVal LabelColumn = TNoArg(), TAutoVal PrintEnvLabel = TNoArg(), TAutoVal AddToDocument = TNoArg(), TAutoVal LabelAutoText = TNoArg(), TAutoVal LabelText = TNoArg(), TAutoVal LabelTopMargin = TNoArg(), TAutoVal LabelSideMargin = TNoArg(), TAutoVal LabelVertPitch = TNoArg(), TAutoVal LabelHorPitch = TNoArg(), TAutoVal LabelHeight = TNoArg(), TAutoVal LabelWidth = TNoArg());

	//CreateSubdocument: Transforms the selected outline items into subdocuments  [dispid 491]
	void CreateSubdocument();

	//ViewFootnoteSeparator: Opens a pane for viewing and editing the footnote separator  [dispid 493]
	void ViewFootnoteSeparator();

	//ViewFootnoteContSeparator: Opens a pane for viewing and editing the footnote continuation separator  [dispid 494]
	void ViewFootnoteContSeparator();

	//ViewFootnoteContNotice: Opens a pane for viewing and editing the footnote continuation notice  [dispid 495]
	void ViewFootnoteContNotice();

	//ViewEndnoteSeparator: Opens a pane for viewing and editing the endnote separator  [dispid 496]
	void ViewEndnoteSeparator();

	//ViewEndnoteContSeparator: Opens a pane for viewing and editing the endnote continuation separator  [dispid 497]
	void ViewEndnoteContSeparator();

	//ViewEndnoteContNotice: Opens a pane for viewing and editing the endnote continuation notice  [dispid 498]
	void ViewEndnoteContNotice();

	//DrawBringForward: Brings the selected drawing objects forward  [dispid 500]
	void DrawBringForward();

	//DrawSendBackward: Sends the selected drawing objects backward  [dispid 501]
	void DrawSendBackward();

	//ToolsProtectDocument: Sets protection for the active document  [dispid 503]
	void ToolsProtectDocument(TAutoVal DocumentPassword = TNoArg(), TAutoVal NoReset = TNoArg(), TAutoVal Type = TNoArg());

	//ToolsShrinkToFit: Attempts to make the document fit on one less page  [dispid 504]
	void ToolsShrinkToFit();

	//FormatStyleGallery: Browse or apply styles from templates  [dispid 505]
	void FormatStyleGallery(TAutoVal Template = TNoArg(), TAutoVal Preview = TNoArg());

	//ToolsReviewRevisions: Reviews revisions to the active document  [dispid 506]
	void ToolsReviewRevisions(TAutoVal ShowMarks = TNoArg(), TAutoVal HideMarks = TNoArg(), TAutoVal Wrap = TNoArg(), TAutoVal FindPrevious = TNoArg(), TAutoVal FindNext = TNoArg(), TAutoVal AcceptRevisions = TNoArg(), TAutoVal RejectRevisions = TNoArg());

	//HelpSearch: Searches for a Help topic by typing or selecting a keyword  [dispid 510]
	void HelpSearch();

	//HelpWordPerfectHelpOptions: Customizes WordPerfect Help  [dispid 511]
	void HelpWordPerfectHelpOptions(TAutoVal CommandKeyHelp = TNoArg(), TAutoVal DocNavKeys = TNoArg(), TAutoVal MouseSimulation = TNoArg(), TAutoVal DemoGuidance = TNoArg(), TAutoVal DemoSpeed = TNoArg(), TAutoVal HelpType = TNoArg());

	//GrowFontOnePoint: Increases the font size of the selection by one point  [dispid 513]
	void GrowFontOnePoint();

	//ShrinkFontOnePoint: Decreases the font size of the selection by one point  [dispid 514]
	void ShrinkFontOnePoint();

	//FilePrintPreviewFullScreen: Toggles full screen  [dispid 516]
	void FilePrintPreviewFullScreen();

	//InsertSound: Inserts a sound object into the document  [dispid 519]
	void InsertSound();

	//ToolsUnprotectDocument: Removes protection from the active document  [dispid 521]
	void ToolsUnprotectDocument(TAutoVal DocumentPassword = TNoArg());

	//RemoveBulletsNumbers: Removes numbers and bullets from the selection  [dispid 522]
	void RemoveBulletsNumbers();
	//ToolsOptionsCompatibility: Changes the document compatibility options  [dispid 525]	void ToolsOptionsCompatibility(TAutoVal Product = TNoArg(), TAutoVal Default = TNoArg(),                                    TAutoVal NoTabHangIndent = TNoArg(), TAutoVal NoSpaceRaiseLower = TNoArg(),                                    TAutoVal PrintColBlack = TNoArg(), TAutoVal WrapTrailSpaces = TNoArg(),                                    TAutoVal NoColumnBalance = TNoArg(), TAutoVal ConvMailMergeEsc = TNoArg(),                                    TAutoVal SuppressSpBfAfterPgBrk = TNoArg(), TAutoVal SuppressTopSpacing = TNoArg(),                                    TAutoVal OrigWordTableRules = TNoArg(), TAutoVal TransparentMetafiles = TNoArg(),
                                    TAutoVal ShowBreaksInFrames = TNoArg(), TAutoVal SwapBordersFacingPages = TNoArg(),
                                    TAutoVal LeaveBackslashAlone = TNoArg(), TAutoVal ExpandShiftReturn = TNoArg(),
                                    TAutoVal DontULTrailSpace = TNoArg(), TAutoVal DontBalanceSbDbWidth = TNoArg(),
                                    TAutoVal SuppressTopSpacingMac5 = TNoArg(), TAutoVal SpacingInWholePoints = TNoArg(),
                                    TAutoVal PrintBodyTextBeforeHeader = TNoArg(), TAutoVal NoLeading = TNoArg(),
                                    TAutoVal NoSpaceForUL = TNoArg(), TAutoVal MWSmallCaps = TNoArg(),
                                    TAutoVal NoExtraLineSpacing = TNoArg(), TAutoVal TruncateFontGeight = TNoArg(),
                                    TAutoVal SubFontBySize = TNoArg());

	//DrawRoundRectangle: Inserts a rounded rectangle drawing object  [dispid 537]
	void DrawRoundRectangle();

	//DrawFreeformPolygon: Inserts a freeform drawing object  [dispid 538]
	void DrawFreeformPolygon();

	//SelectDrawingObjects: Use to select drawing objects -- drag to create a rectangle enclosing the objects  [dispid 545]
	void SelectDrawingObjects();

	//DialogEditor: Opens the macro dialog editor  [dispid 552]
	void DialogEditor();

	//DrawFlipHorizontal: Flips the selected drawing objects from left to right  [dispid 559]
	void DrawFlipHorizontal();

	//DrawFlipVertical: Flips the selected drawing objects from top to bottom  [dispid 560]
	void DrawFlipVertical();

	//DrawRotateRight: Rotates the selected drawing objects 90 degrees to the right  [dispid 561]
	void DrawRotateRight();

	//DrawRotateLeft: Rotates the selected drawing objects 90 degrees to the left  [dispid 562]
	void DrawRotateLeft();

	//TableAutoFormat: Applies a set of formatting to a table  [dispid 563]
	void TableAutoFormat(TAutoVal Format = TNoArg(), TAutoVal Borders = TNoArg(), TAutoVal Shading = TNoArg(), TAutoVal Font = TNoArg(), TAutoVal Color = TNoArg(), TAutoVal AutoFit = TNoArg(), TAutoVal HeadingRows = TNoArg(), TAutoVal FirstColumn = TNoArg(), TAutoVal LastRow = TNoArg(), TAutoVal LastColumn = TNoArg());

	//FormatDrawingObject: Changes the fill, line, size, and position attributes of the selected drawing objects  [dispid 565]
	void FormatDrawingObject(TAutoVal Tab = TNoArg(), TAutoVal FillColor = TNoArg(), TAutoVal LineColor = TNoArg(), TAutoVal FillPatternColor = TNoArg(), TAutoVal FillPattern = TNoArg(), TAutoVal LineType = TNoArg(), TAutoVal LineStyle = TNoArg(), TAutoVal LineWeight = TNoArg(), TAutoVal ArrowStyle = TNoArg(), TAutoVal ArrowWidth = TNoArg(), TAutoVal ArrowLength = TNoArg(), TAutoVal Shadow = TNoArg(), TAutoVal RoundCorners = TNoArg(), TAutoVal HorizontalPos = TNoArg(), TAutoVal HorizontalFrom = TNoArg(), TAutoVal VerticalPos = TNoArg(), TAutoVal VerticalFrom = TNoArg(), TAutoVal LockAnchor = TNoArg(), TAutoVal Height = TNoArg(), TAutoVal Width = TNoArg(), TAutoVal InternalMargin = TNoArg());

	//InsertExcelTable: Inserts a Microsoft Excel worksheet object  [dispid 567]
	void InsertExcelTable();

	//MailMergeFindRecord: Finds a specified record in a mail merge data source  [dispid 569]
	void MailMergeFindRecord(TAutoVal Find = TNoArg(), TAutoVal Field = TNoArg());

	//NormalFontSpacing: Removes the expanded or condensed font attribute  [dispid 571]
	void NormalFontSpacing();

	//NormalFontPosition: Removes the raised or lowered font attribute  [dispid 572]
	void NormalFontPosition();

	//ViewZoom200: Scales the editing view to 200% in normal view  [dispid 573]
	void ViewZoom200();

	//ViewZoom75: Scales the editing view to 75% in normal view  [dispid 574]
	void ViewZoom75();

	//DrawDisassemblePicture: Disassembles the selected metafile picture into drawing objects  [dispid 575]
	void DrawDisassemblePicture();

	//ViewZoom: Scales the editing view  [dispid 577]
	void ViewZoom(TAutoVal AutoFit = TNoArg(), TAutoVal TwoPages = TNoArg(), TAutoVal FullPage = TNoArg(), TAutoVal NumColumns = TNoArg(), TAutoVal NumRows = TNoArg(), TAutoVal ZoomPercent = TNoArg());

	//ToolsProtectSection: Sets protection for sections of the active document  [dispid 578]
	void ToolsProtectSection(TAutoVal Protect = TNoArg(), TAutoVal Section = TNoArg());

	//FontSubstitution: Changes the document's font mapping  [dispid 581]
	void FontSubstitution(TAutoVal UnavailableFont = TNoArg(), TAutoVal SubstituteFont = TNoArg());

	//ToggleFull: Toggles full screen mode on/off  [dispid 582]
	void ToggleFull();

	//InsertSubdocument: Opens a file and inserts it as a subdocument in a master document  [dispid 583]
	void InsertSubdocument(TAutoVal Name = TNoArg(), TAutoVal ConfirmConversions = TNoArg(), TAutoVal ReadOnly = TNoArg(), TAutoVal PasswordDoc = TNoArg(), TAutoVal PasswordDot = TNoArg(), TAutoVal Revert = TNoArg(), TAutoVal WritePasswordDoc = TNoArg(), TAutoVal WritePasswordDot = TNoArg());

	//MergeSubdocument: Merges two adjacent subdocuments into one subdocument  [dispid 584]
	void MergeSubdocument();

	//SplitSubdocument: Splits the selected part of a subdocument into another subdocument at the same level  [dispid 585]
	void SplitSubdocument();

	//NewToolbar: Creates a new toolbar  [dispid 586]
	void NewToolbar(TAutoVal Name = TNoArg(), TAutoVal Context = TNoArg());

	//ToggleMainTextLayer: Toggles showing the main text layer in page layout view  [dispid 587]
	void ToggleMainTextLayer();

	//ShowPrevHeaderFooter: Shows previous section's header/footer in page layout view  [dispid 588]
	void ShowPrevHeaderFooter();

	//ShowNextHeaderFooter: Shows next section's header/footer in page layout view  [dispid 589]
	void ShowNextHeaderFooter();

	//GoToHeaderFooter: Jump between Header and Footer  [dispid 590]
	void GoToHeaderFooter();

	//PromoteList: Promotes the selection one level  [dispid 591]
	void PromoteList();

	//DemoteList: Demotes the selection one level  [dispid 592]
	void DemoteList();

	//GotoAnnotationScope: Highlights the text associated with an annotation reference mark  [dispid 597]
	void GotoAnnotationScope();

	//OpenSubdocument: Opens a subdocument in a new window  [dispid 599]
	void OpenSubdocument();

	//FormatDefineStyleNumbers:   [dispid 602]
	void FormatDefineStyleNumbers(TAutoVal Points = TNoArg(), TAutoVal Color = TNoArg(), TAutoVal Before = TNoArg(), TAutoVal Type = TNoArg(), TAutoVal After = TNoArg(), TAutoVal StartAt = TNoArg(), TAutoVal Include = TNoArg(), TAutoVal Alignment = TNoArg(), TAutoVal Indent = TNoArg(), TAutoVal Space = TNoArg(), TAutoVal Hang = TNoArg(), TAutoVal RestartNum = TNoArg(), TAutoVal Level = TNoArg(), TAutoVal CharNum = TNoArg(), TAutoVal Font = TNoArg(), TAutoVal Strikethrough = TNoArg(), TAutoVal Bold = TNoArg(), TAutoVal Italic = TNoArg(), TAutoVal Underline = TNoArg(), TAutoVal Remove = TNoArg());

	//FormatHeadingNumbering: Changes numbering options for heading level styles  [dispid 603]
	void FormatHeadingNumbering(TAutoVal Remove = TNoArg(), TAutoVal Preset = TNoArg());

	//ViewBorderToolbar: Shows or hides the Borders toolbar  [dispid 604]
	void ViewBorderToolbar();

	//ViewDrawingToolbar: Shows or hides the Drawing toolbar  [dispid 605]
	void ViewDrawingToolbar();

	//FormatHeadingNumber: Modifies Heading Numbering styles  [dispid 606]
	void FormatHeadingNumber(TAutoVal Points = TNoArg(), TAutoVal Color = TNoArg(), TAutoVal Before = TNoArg(), TAutoVal Type = TNoArg(), TAutoVal After = TNoArg(), TAutoVal StartAt = TNoArg(), TAutoVal Include = TNoArg(), TAutoVal Alignment = TNoArg(), TAutoVal Indent = TNoArg(), TAutoVal Space = TNoArg(), TAutoVal Hang = TNoArg(), TAutoVal Level = TNoArg(), TAutoVal Font = TNoArg(), TAutoVal Strikethrough = TNoArg(), TAutoVal Bold = TNoArg(), TAutoVal Italic = TNoArg(), TAutoVal Underline = TNoArg());

	//DrawReshape: Displays resizing handles on selected freeform drawing objects -- drag a handle to reshape  [dispid 608]
	void DrawReshape();

	//FormatCallout: Formats the selected callouts or sets callout defaults  [dispid 610]
	void FormatCallout(TAutoVal Type = TNoArg(), TAutoVal Gap = TNoArg(), TAutoVal Angle = TNoArg(), TAutoVal Drop = TNoArg(), TAutoVal Length = TNoArg(), TAutoVal Border = TNoArg(), TAutoVal AutoAttach = TNoArg(), TAutoVal Accent = TNoArg());

	//DrawCallout: Inserts a callout drawing object  [dispid 611]
	void DrawCallout();

	//FileSendMail: Sends the active document through electronic mail  [dispid 613]
	void FileSendMail();

	//ToolsCustomizeMenuBar:   [dispid 615]
	void ToolsCustomizeMenuBar(TAutoVal Context = TNoArg(), TAutoVal Position = TNoArg(), TAutoVal MenuType = TNoArg(), TAutoVal MenuText = TNoArg(), TAutoVal Menu = TNoArg(), TAutoVal Add = TNoArg(), TAutoVal Remove = TNoArg(), TAutoVal Rename = TNoArg());

	//FileRoutingSlip: Adds or changes the electronic mail routing slip of the active document  [dispid 624]
	void FileRoutingSlip(TAutoVal Subject = TNoArg(), TAutoVal Message = TNoArg(), TAutoVal AllAtOnce = TNoArg(), TAutoVal ReturnWhenDone = TNoArg(), TAutoVal TrackStatus = TNoArg(), TAutoVal Protect = TNoArg(), TAutoVal AddSlip = TNoArg(), TAutoVal RouteDocument = TNoArg(), TAutoVal AddRecipient = TNoArg(), TAutoVal OldRecipient = TNoArg(), TAutoVal ResetSlip = TNoArg(), TAutoVal ClearSlip = TNoArg(), TAutoVal ClearRecipients = TNoArg(), TAutoVal Address = TNoArg());

	//EditTOACategory: Modifies the category names for the table of authorities  [dispid 625]
	void EditTOACategory(TAutoVal Category = TNoArg(), TAutoVal CategoryName = TNoArg());

	//TableUpdateAutoFormat: Updates the table formatting to match the applied formatting set  [dispid 626]
	void TableUpdateAutoFormat();

	//ChooseButtonImage: Attach an image or text to the selected button  [dispid 627]
	void ChooseButtonImage(TAutoVal Face = TNoArg(), TAutoVal Button = TNoArg(), TAutoVal Context = TNoArg(), TAutoVal Text = TNoArg(), TAutoVal Toolbar = TNoArg());

	//ToolsAddRecordDefault: Adds a record to a database  [dispid 629]
	void ToolsAddRecordDefault();

	//ToolsRemoveRecordDefault: Removes a record from a database  [dispid 630]
	void ToolsRemoveRecordDefault();

	//ToolsManageFields: Adds or deletes a field from a database  [dispid 631]
	void ToolsManageFields(TAutoVal FieldName = TNoArg(), TAutoVal Add = TNoArg(), TAutoVal Remove = TNoArg(), TAutoVal Rename = TNoArg(), TAutoVal NewName = TNoArg());

	//ViewToggleMasterDocument: Switches between outline and master document views  [dispid 632]
	void ViewToggleMasterDocument();

	//DrawSnapToGrid: Sets up a grid for aligning drawing objects  [dispid 633]
	void DrawSnapToGrid(TAutoVal SnapToGrid = TNoArg(), TAutoVal XGrid = TNoArg(), TAutoVal YGrid = TNoArg(), TAutoVal XOrigin = TNoArg(), TAutoVal YOrigin = TNoArg());

	//DrawAlign: Aligns the selected drawing objects with one another or the page  [dispid 634]
	void DrawAlign(TAutoVal Horizontal = TNoArg(), TAutoVal Vertical = TNoArg(), TAutoVal RelativeTo = TNoArg());

	//HelpTipOfTheDay: Displays a Word Tip of the Day  [dispid 635]
	void HelpTipOfTheDay(TAutoVal StartupTips = TNoArg());

	//RemoveSubdocument: Merges the selected subdocuments into their containing master document  [dispid 639]
	void RemoveSubdocument();

	//CloseViewHeaderFooter: Return to document text  [dispid 640]
	void CloseViewHeaderFooter();

	//TableAutoSum: Inserts an expression field that automatically sums a table row or column  [dispid 641]
	void TableAutoSum();

	//MailMergeCreateDataSource: Creates a new mail merge data source  [dispid 642]
	void MailMergeCreateDataSource(TAutoVal FileName = TNoArg(), TAutoVal PasswordDoc = TNoArg(), TAutoVal PasswordDot = TNoArg(), TAutoVal HeaderRecord = TNoArg(), TAutoVal MSQuery = TNoArg(), TAutoVal SQLStatement = TNoArg(), TAutoVal SQLStatement1 = TNoArg(), TAutoVal Connection = TNoArg(), TAutoVal LinkToSource = TNoArg());

	//MailMergeCreateHeaderSource: Creates a new mail merge header source  [dispid 643]
	void MailMergeCreateHeaderSource(TAutoVal FileName = TNoArg(), TAutoVal PasswordDoc = TNoArg(), TAutoVal HeaderRecord = TNoArg());

	//DrawInsertWordPicture: Opens a separate window for creating a picture object or inserts the selected drawing objects into a picture  [dispid 648]
	void DrawInsertWordPicture();

	//ToggleHeaderFooterLink: Links or unlinks this header/footer to or from the previous section  [dispid 652]
	void ToggleHeaderFooterLink();

	//AutoText: Creates or Inserts an AutoText entry depending on the selection  [dispid 653]
	void AutoText();

	//MicrosoftMail: Starts or switches to Microsoft Mail  [dispid 656]
	void MicrosoftMail();

	//MicrosoftExcel: Starts or switches to Microsoft Excel  [dispid 657]
	void MicrosoftExcel();

	//MicrosoftAccess: Starts or switches to Microsoft Access  [dispid 658]
	void MicrosoftAccess();

	//MicrosoftSchedule: Starts or switches to Microsoft Schedule+  [dispid 659]
	void MicrosoftSchedule();

	//MicrosoftFoxPro: Starts or switches to Microsoft FoxPro  [dispid 660]
	void MicrosoftFoxPro();

	//MicrosoftPowerPoint: Starts or switches to Microsoft PowerPoint  [dispid 661]
	void MicrosoftPowerPoint();

	//MicrosoftPublisher: Starts or switches to Microsoft Publisher  [dispid 662]
	void MicrosoftPublisher();

	//MicrosoftProject: Starts or switches to Microsoft Project  [dispid 663]
	void MicrosoftProject();

	//ScreenRefresh: Refreshes the display  [dispid 665]
	void ScreenRefresh();

	//DrawNudgeUp: Moves the selected drawing objects up  [dispid 670]
	void DrawNudgeUp();

	//DrawNudgeDown: Moves the selected drawing objects down  [dispid 671]
	void DrawNudgeDown();

	//DrawNudgeLeft: Moves the selected drawing objects to the left  [dispid 672]
	void DrawNudgeLeft();

	//DrawNudgeRight: Moves the selected drawing objects to the right  [dispid 673]
	void DrawNudgeRight();

	//MailMergeEditHeaderSource: Opens a mail merge header source  [dispid 675]
	void MailMergeEditHeaderSource();

	//MailMerge: Combines files to produce form letters, mailing labels, envelopes, and catalogs  [dispid 676]
	void MailMerge(TAutoVal CheckErrors = TNoArg(), TAutoVal Destination = TNoArg(), TAutoVal MergeRecords = TNoArg(), TAutoVal From = TNoArg(), TAutoVal To = TNoArg(), TAutoVal Suppression = TNoArg(), TAutoVal MailMerge = TNoArg(), TAutoVal MailSubject = TNoArg(), TAutoVal MailAsAttachment = TNoArg(), TAutoVal MailAddress = TNoArg());

	//MailMergeCheck: Checks for errors in a mail merge  [dispid 677]
	void MailMergeCheck(TAutoVal CheckErrors = TNoArg());

	//MailMergeToDoc: Collects the results of the mail merge in a document  [dispid 678]
	void MailMergeToDoc();

	//MailMergeToPrinter: Sends the results of the mail merge to the printer  [dispid 679]
	void MailMergeToPrinter();

	//MailMergeHelper: Prepares a main document for a mail merge  [dispid 680]
	void MailMergeHelper();

	//MailMergeQueryOptions: Sets the query options for a mail merge  [dispid 681]
	void MailMergeQueryOptions(TAutoVal SQLStatement = TNoArg(), TAutoVal SQLStatement1 = TNoArg());

	//InsertWordArt: Inserts a Microsoft WordArt object  [dispid 682]
	void InsertWordArt();

	//InsertEquation: Inserts a Microsoft Equation object  [dispid 683]
	void InsertEquation();

	//RunPrintManager: Displays the Print Manager  [dispid 684]
	void RunPrintManager();

	//HelpContents: Displays Help contents  [dispid 688]
	void HelpContents();

	//FileClosePicture: Closes the active picture document  [dispid 694]
	void FileClosePicture();

	//DrawResetWordPicture: Sets document margins to enclose all drawing objects on the page  [dispid 696]
	void DrawResetWordPicture();

	//DrawNudgeUpPixel: Moves the selected drawing objects up one pixel  [dispid 700]
	void DrawNudgeUpPixel();

	//DrawNudgeDownPixel: Moves the selected drawing objects down one pixel  [dispid 701]
	void DrawNudgeDownPixel();

	//DrawNudgeLeftPixel: Moves the selected drawing objects to the left one pixel  [dispid 702]
	void DrawNudgeLeftPixel();

	//DrawNudgeRightPixel: Moves the selected drawing objects to the right one pixel  [dispid 703]
	void DrawNudgeRightPixel();

	//ToolsHyphenationManual: Hyphenates the selection or the entire document  [dispid 704]
	void ToolsHyphenationManual();

	//ClearFormField:   [dispid 706]
	void ClearFormField();

	//InsertSectionBreak: Ends a section at the insertion point  [dispid 707]
	void InsertSectionBreak();

	//DrawUnselect: Unselects a drawn object  [dispid 708]
	void DrawUnselect();

	//DrawSelectNext: Selects the next drawn object  [dispid 709]
	void DrawSelectNext();

	//DrawSelectPrevious: Selects the previous drawn object  [dispid 710]
	void DrawSelectPrevious();

	//MicrosoftSystemInfo: Execute the Microsoft System Info application  [dispid 711]
	void MicrosoftSystemInfo();

	//MailMergeInsertAsk: Inserts a Word ask field at the insertion point  [dispid 4047]
	void MailMergeInsertAsk(TAutoVal Name = TNoArg(), TAutoVal Prompt = TNoArg(), TAutoVal DefaultBookmarkText = TNoArg(), TAutoVal AskOnce = TNoArg());

	//MailMergeInsertFillIn: Inserts a Word fillin field at the insertion point  [dispid 4048]
	void MailMergeInsertFillIn(TAutoVal Prompt = TNoArg(), TAutoVal DefaultFillInText = TNoArg(), TAutoVal AskOnce = TNoArg());

	//MailMergeInsertIf: Inserts a Word field at the insertion point  [dispid 4049]
	void MailMergeInsertIf(TAutoVal MergeField = TNoArg(), TAutoVal Comparison = TNoArg(), TAutoVal CompareTo = TNoArg(), TAutoVal TrueAutoText = TNoArg(), TAutoVal TrueText = TNoArg(), TAutoVal FalseAutoText = TNoArg(), TAutoVal FalseText = TNoArg());

	//MailMergeInsertMergeRec: Inserts a Word record field at the insertion point  [dispid 4050]
	void MailMergeInsertMergeRec();

	//MailMergeInsertMergeSeq: Inserts a Word sequence field at the insertion point  [dispid 4051]
	void MailMergeInsertMergeSeq();

	//MailMergeInsertNext: Inserts a Word next field at the insertion point  [dispid 4052]
	void MailMergeInsertNext();

	//MailMergeInsertNextIf: Inserts a Word next if field at the insertion point  [dispid 4053]
	void MailMergeInsertNextIf(TAutoVal MergeField = TNoArg(), TAutoVal Comparison = TNoArg(), TAutoVal CompareTo = TNoArg());

	//MailMergeInsertSet: Inserts a Word set field at the insertion point  [dispid 4054]
	void MailMergeInsertSet(TAutoVal Name = TNoArg(), TAutoVal ValueText = TNoArg(), TAutoVal ValueAutoText = TNoArg());

	//MailMergeInsertSkipIf: Inserts a Word skip if field at the insertion point  [dispid 4055]
	void MailMergeInsertSkipIf(TAutoVal MergeField = TNoArg(), TAutoVal Comparison = TNoArg(), TAutoVal CompareTo = TNoArg());
	//Rnd:   [dispid 32782]	double Rnd();
	//Instr:   [dispid 32783]	long Instr(TAutoVal Index, TAutoString Source, TAutoString Search);
	//Abs:   [dispid 32768]	double Abs(double n);
	//Sgn:   [dispid 32769]	short Sgn(double n);
	//Int:   [dispid 32770]	short Int(short n);
	//Len:   [dispid 32771]	long Len(TAutoString Source);
	//Asc:   [dispid 32772]	short Asc(TAutoString a);
	//Chr:   [dispid 32773]	TAutoString Chr(short CharCode);
	//Val:   [dispid 32774]	double Val(TAutoString a);
	//Str:   [dispid 32775]	TAutoString Str(double n);
	//Left:   [dispid 32776]	TAutoString Left(TAutoString Source, long Count);
	//Right:   [dispid 32777]	TAutoString Right(TAutoString Source, long Count);
	//Mid:   [dispid 32778]	TAutoString Mid(TAutoString Source, long Start, TAutoVal Count = TNoArg());
	//String:   [dispid 32779]	TAutoString String(long Count, TAutoString Source);
	//Date:   [dispid 32780]	TAutoString Date(TAutoVal SerialNumber = TNoArg());
	//Time:   [dispid 32781]	TAutoString Time(TAutoVal SerialNumber = TNoArg());
	//ShowAll: Shows/hides all nonprinting characters  [dispid 32784]	short ShowAll(TAutoVal On = TNoArg());
	//ColumnSelect: Selects a columnar block of text  [dispid 32785]	void ColumnSelect();
	//Insert:   [dispid 32786]	void Insert(TAutoString Text);
	//InsertPara:   [dispid 32787]	void InsertPara();
	//Selection:   [dispid 32789]	TAutoString Selection();
	//GetBookmark:   [dispid 32790]	TAutoString GetBookmark(TAutoString Name);
	//CmpBookmarks:   [dispid 32791]	short CmpBookmarks(TAutoString Bookmark1, TAutoString Bookmark2);
	//CopyBookmark:   [dispid 32792]	void CopyBookmark(TAutoString Bookmark1, TAutoString Bookmark2);
	//SetStartOfBookmark:   [dispid 32793]	void SetStartOfBookmark(TAutoString Bookmark1, TAutoVal Bookmark2 = TNoArg());
	//SetEndOfBookmark:   [dispid 32794]	void SetEndOfBookmark(TAutoString Bookmark1, TAutoVal Bookmark2 = TNoArg());
	//ExistingBookmark:   [dispid 32795]	short ExistingBookmark(TAutoString Name);
	//EmptyBookmark:   [dispid 32796]	short EmptyBookmark(TAutoString Name);
	//CountBookmarks:   [dispid 32797]	short CountBookmarks();
	//CountMergeFields:   [dispid 32798]	short CountMergeFields();
	//BookmarkName:   [dispid 32799]	TAutoString BookmarkName(short Count);
	//MergeFieldName:   [dispid 32800]	TAutoString MergeFieldName(short Count);
	//CountStyles:   [dispid 32801]	short CountStyles(TAutoVal Context = TNoArg(), TAutoVal All = TNoArg());
	//StyleName:   [dispid 32802]	TAutoString StyleName(TAutoVal Count = TNoArg(), TAutoVal Context = TNoArg(), TAutoVal All = TNoArg());
	//IsDocumentDirty:   [dispid 32803]	short IsDocumentDirty();
	//SetDocumentDirty:   [dispid 32804]	void SetDocumentDirty(TAutoVal Dirty = TNoArg());
	//FileName:   [dispid 32805]	TAutoString FileName(TAutoVal Number = TNoArg());
	//CountFiles:   [dispid 32806]	short CountFiles();
	//GetAutoText:   [dispid 32807]	TAutoString GetAutoText(TAutoString Name, TAutoVal Context = TNoArg());
	//CountAutoTextEntries:   [dispid 32808]	short CountAutoTextEntries(TAutoVal Context = TNoArg());
	//AutoTextName:   [dispid 32809]	TAutoString AutoTextName(short Count, TAutoVal Context = TNoArg());

	//SetAutoText:   [dispid 32810]
	void SetAutoText(TAutoString Name, TAutoString Text, TAutoVal Context = TNoArg());

	//MsgBox:   [dispid 32811]
	short MsgBox(TAutoString Message, TAutoVal Title = TNoArg(), TAutoVal Type = TNoArg());

	//Beep:   [dispid 32812]
	void Beep(TAutoVal BeepType = TNoArg());

	//Shell:   [dispid 32813]
	void Shell(TAutoString Application, TAutoVal WindowStyle = TNoArg());

	//ResetChar: Makes the selection the default character format of the applied style  [dispid 32814]
	short ResetChar();

	//ResetPara: Makes the selection the default paragraph format of the applied style  [dispid 32815]
	short ResetPara();

	//TabType:   [dispid 32816]
	short TabType(double Pos);

	//TabLeader:   [dispid 32817]
	TAutoString TabLeader(double Pos);

	//DocMove: Changes the position of the active window  [dispid 32818]
	void DocMove(short HorizPos, short VertPos);

	//DocSize: Changes the size of the active window  [dispid 32819]
	void DocSize(short Width, short Height);

	//VLine:   [dispid 32820]
	void VLine(TAutoVal Count = TNoArg());

	//HLine:   [dispid 32821]
	void HLine(TAutoVal Count = TNoArg());

	//VPage:   [dispid 32822]
	void VPage(TAutoVal Count = TNoArg());

	//HPage:   [dispid 32823]
	void HPage(TAutoVal Count = TNoArg());

	//VScroll:   [dispid 32824]
	double VScroll(TAutoVal Percentage = TNoArg());

	//HScroll:   [dispid 32825]
	double HScroll(TAutoVal Percentage = TNoArg());

	//CountWindows:   [dispid 32826]
	short CountWindows();

	//WindowName:   [dispid 32827]
	TAutoString WindowName(TAutoVal Number = TNoArg());

	//WindowPane:   [dispid 32828]
	short WindowPane();

	//DocSplit: Splits the active window horizontally and then adjusts the split  [dispid 32829]
	short DocSplit(TAutoVal Percentage = TNoArg());

	//Window:   [dispid 32830]
	short Window();

	//AppSize: Changes the size of the application window  [dispid 32831]
	void AppSize(TAutoString WindowName, short Width, TAutoVal Heigth = TNoArg());

	//AppMove: Changes the position of the application window  [dispid 32832]
	void AppMove(TAutoString WindowName, short HorizPos, TAutoVal VertPos = TNoArg());

	//AppMinimize: Minimizes the application window to an icon  [dispid 32833]
	short AppMinimize(TAutoVal WindowName = TNoArg(), TAutoVal State = TNoArg());

	//AppMaximize: Enlarges the application window to full size  [dispid 32834]
	short AppMaximize(TAutoVal WindowName = TNoArg(), TAutoVal State = TNoArg());

	//AppRestore: Restores the application window to normal size  [dispid 32835]
	short AppRestore(TAutoVal WindowName = TNoArg());

	//DocMaximize: Enlarges the active window to full size  [dispid 32836]
	short DocMaximize(TAutoVal State = TNoArg());

	//GetProfileString:   [dispid 32837]
	TAutoString GetProfileString(TAutoString Section, TAutoVal KeyName = TNoArg());

	//SetProfileString:   [dispid 32838]
	short SetProfileString(TAutoString Section, TAutoString KeyName, TAutoVal Setting = TNoArg());

	//CharColor: Changes the color of the selected text  [dispid 32839]
	short CharColor(TAutoVal Color = TNoArg());

	//Bold: Makes the selection bold (toggle)  [dispid 32840]
	short Bold(TAutoVal On = TNoArg());

	//Italic: Makes the selection italic (toggle)  [dispid 32841]
	short Italic(TAutoVal On = TNoArg());

	//SmallCaps: Makes the selection small capitals (toggle)  [dispid 32842]
	short SmallCaps(TAutoVal On = TNoArg());

	//AllCaps: Makes the selection all capitals (toggle)  [dispid 32843]
	short AllCaps(TAutoVal On = TNoArg());

	//Strikethrough: Makes the selection strikethrough (toggle)  [dispid 32844]
	short Strikethrough(TAutoVal On = TNoArg());

	//Hidden: Makes the selection hidden text (toggle)  [dispid 32845]
	short Hidden(TAutoVal On = TNoArg());

	//Underline: Formats the selection with a continuous underline (toggle)  [dispid 32846]
	short Underline(TAutoVal On = TNoArg());

	//DoubleUnderline: Double underlines the selection (toggle)  [dispid 32847]
	short DoubleUnderline(TAutoVal On = TNoArg());

	//WordUnderline: Underlines the words but not the spaces in the selection (toggle)  [dispid 32848]
	short WordUnderline(TAutoVal On = TNoArg());

	//Superscript: Makes the selection superscript (toggle)  [dispid 32849]
	short Superscript(TAutoVal On = TNoArg());

	//Subscript: Makes the selection subscript (toggle)  [dispid 32850]
	short Subscript(TAutoVal On = TNoArg());

	//CenterPara: Centers the paragraph between the indents  [dispid 32851]
	short CenterPara();

	//LeftPara: Aligns the paragraph at the left indent  [dispid 32852]
	short LeftPara();

	//RightPara: Aligns the paragraph at the right indent  [dispid 32853]
	short RightPara();

	//JustifyPara: Aligns the paragraph at both the left and the right indent  [dispid 32854]
	short JustifyPara();

	//SpacePara1: Sets the line spacing to single space  [dispid 32855]
	short SpacePara1();

	//SpacePara15: Sets the line spacing to one-and-one-half space  [dispid 32856]
	short SpacePara15();

	//SpacePara2: Sets the line spacing to double space  [dispid 32857]
	short SpacePara2();

	//OpenUpPara: Sets extra spacing above the selected paragraph  [dispid 32858]
	void OpenUpPara();

	//CloseUpPara: Removes extra spacing above the selected paragraph  [dispid 32859]
	void CloseUpPara();

	//DDEInitiate:   [dispid 32860]
	short DDEInitiate(TAutoString Application, TAutoString Topic);

	//DDETerminate:   [dispid 32861]
	void DDETerminate(short ChanNum);

	//DDETerminateAll:   [dispid 32862]
	void DDETerminateAll();

	//DDEExecute:   [dispid 32863]
	void DDEExecute(short ChanNum, TAutoString Command);

	//DDEPoke:   [dispid 32864]
	void DDEPoke(short ChanNum, TAutoString Item, TAutoString Data);

	//DDERequest:   [dispid 32865]
	TAutoString DDERequest(short ChanNum, TAutoString Item);

	//Activate:   [dispid 32866]
	void Activate(TAutoString WindowTitle, TAutoVal PaneNum = TNoArg());

	//AppActivate:   [dispid 32867]
	void AppActivate(TAutoString WindowName, TAutoVal Immediate = TNoArg());

	//SendKeys:   [dispid 32868]
	void SendKeys(TAutoString Keys, TAutoVal Wait = TNoArg());

	//StyleDesc:   [dispid 32869]
	TAutoString StyleDesc(TAutoString StyleName);

	//ParaKeepLinesTogether: Prevents a paragraph from splitting across page boundaries  [dispid 32870]
	short ParaKeepLinesTogether(TAutoVal On = TNoArg());

	//ParaKeepWithNext: Keeps a paragraph and the following paragraph on the same page  [dispid 32871]
	short ParaKeepWithNext(TAutoVal On = TNoArg());

	//ParaPageBreakBefore: Makes the current paragraph start on a new page  [dispid 32873]
	short ParaPageBreakBefore(TAutoVal On = TNoArg());

	//ParaWidowOrphanControl: Prevents a page break from leaving a single line of a paragraph on one page  [dispid 32874]
	short ParaWidowOrphanControl(TAutoVal On = TNoArg());

	//ViewFootnotes: Opens a pane for viewing and editing the notes (toggle)  [dispid 32875]
	short ViewFootnotes();

	//ViewAnnotations: Opens the annotation pane for reading annotations (toggle)  [dispid 32876]
	short ViewAnnotations(TAutoVal On = TNoArg());

	//ViewFieldCodes: Shows the field codes or results for all fields (toggle)  [dispid 32877]
	short ViewFieldCodes(TAutoVal On = TNoArg());

	//ViewDraft: Displays the document without formatting and pictures for faster editing (toggle)  [dispid 32878]
	short ViewDraft(TAutoVal On = TNoArg());

	//ViewStatusBar: Shows or hides the status bar  [dispid 32879]
	short ViewStatusBar(TAutoVal On = TNoArg());

	//ViewRuler: Shows or hides the ruler  [dispid 32880]
	short ViewRuler(TAutoVal On = TNoArg());

	//ViewRibbon:   [dispid 32881]
	short ViewRibbon(TAutoVal On = TNoArg());

	//ViewPage: Displays the page as it will be printed and allows editing  [dispid 32883]
	short ViewPage();

	//ViewOutline: Displays a document's outline  [dispid 32884]
	short ViewOutline();

	//ViewNormal: Changes the editing view to normal view  [dispid 32885]
	short ViewNormal();

	//ViewMenus:   [dispid 32886]
	short ViewMenus();

	//TableGridlines: Toggles table gridlines on and off  [dispid 32887]
	short TableGridlines(TAutoVal On = TNoArg());

	//OutlineShowFirstLine: Toggles between showing the first line only or showing all of the body text in the outline  [dispid 32888]
	short OutlineShowFirstLine(TAutoVal On = TNoArg());

	//Overtype: Toggles the typing mode between replacing and inserting  [dispid 32889]
	short Overtype(TAutoVal On = TNoArg());

	//CountFonts:   [dispid 32891]
	short CountFonts();

	//Font: Changes the font of the selection  [dispid 32892]
	void Font(TAutoString Name, TAutoVal Size = TNoArg());

	//FontStr: Returns the font name of the selection, or the font name at position Count in the current font list  [dispid 32890]
	TAutoString FontStr(TAutoVal Count = TNoArg());

	//FontSize: Changes the font size of the selection  [dispid 32893]
	double FontSize(TAutoVal Size = TNoArg());

	//CountLanguages:   [dispid 32895]
	short CountLanguages();

	//Language: Identifies the selected text as being in the specified language  [dispid 32896]
	void Language(TAutoString Language);

	//LanguageStr: Returns the language format of the selected text, or an internal language name  [dispid 32894]
	TAutoString LanguageStr(TAutoVal Language = TNoArg());

	//EditClear: Removes the selection without putting it on the Clipboard  [dispid 32897]
	void EditClear(TAutoVal Count = TNoArg());

	//FileList:   [dispid 32898]
	void FileList(short Number);

	//File1: Opens this document  [dispid 32899]
	void File1();

	//File2: Opens this document  [dispid 32900]
	void File2();

	//File3: Opens this document  [dispid 32901]
	void File3();

	//File4: Opens this document  [dispid 32902]
	void File4();

	//File5: Opens this document  [dispid 32903]
	void File5();

	//File6: Opens this document  [dispid 32904]
	void File6();

	//File7: Opens this document  [dispid 32905]
	void File7();

	//File8: Opens this document  [dispid 32906]
	void File8();

	//File9: Opens this document  [dispid 32907]
	void File9();

	//NextPage: Moves to the next page  [dispid 32916]
	short NextPage();

	//PrevPage: Moves to the previous page  [dispid 32917]
	short PrevPage();

	//NextObject: Moves to the next object on the page  [dispid 32918]
	short NextObject();

	//PrevObject: Moves to the previous object on the page  [dispid 32919]
	short PrevObject();

	//ExtendSelection: Turns on extend selection mode and then expands the selection with the direction keys  [dispid 32920]
	void ExtendSelection(TAutoVal Character = TNoArg());

	//ExtendMode:   [dispid 32921]
	short ExtendMode();

	//SelType:   [dispid 32922]
	short SelType(TAutoVal Type = TNoArg());

	//OutlineLevel:   [dispid 32923]
	short OutlineLevel();

	//NextTab:   [dispid 32924]
	double NextTab(double Position);

	//PrevTab:   [dispid 32925]
	double PrevTab(double Position);

	//DisableInput:   [dispid 32926]
	void DisableInput(TAutoVal Disable = TNoArg());

	//DocClose: Prompts to save the document and then closes the active window  [dispid 32927]
	void DocClose(TAutoVal Save = TNoArg());

	//FileClose: Closes all of the windows of the active document  [dispid 32928]
	void FileClose(TAutoVal Save = TNoArg());

	//Files:   [dispid 32929]
	TAutoString Files(TAutoVal FileSpec = TNoArg());

	//FileSaveAll: Saves all open files, macros, and AutoText entries, prompting for each one separately  [dispid 32931]
	void FileSaveAll(TAutoVal Save = TNoArg(), TAutoVal OriginalFormat = TNoArg());

	//FilePrintPreview: Displays full pages as they will be printed  [dispid 32932]
	short FilePrintPreview(TAutoVal On = TNoArg());

	//FilePrintPreviewPages:   [dispid 32934]
	short FilePrintPreviewPages(TAutoVal PagesAcross = TNoArg());

	//Kill:   [dispid 32939]
	void Kill(TAutoString FileName);

	//ChDir:   [dispid 32940]
	void ChDir(TAutoString Path);

	//MkDir:   [dispid 32941]
	void MkDir(TAutoString Name);

	//RmDir:   [dispid 32942]
	void RmDir(TAutoString Name);

	//UCase:   [dispid 32943]
	TAutoString UCase(TAutoString Source);

	//LCase:   [dispid 32944]
	TAutoString LCase(TAutoString Source);

	//InputBox:   [dispid 32945]
	TAutoString InputBox(TAutoString Prompt, TAutoVal Title = TNoArg(), TAutoVal Default = TNoArg());

	//OnTime:   [dispid 32947]
	void OnTime(TAutoString When, TAutoString Name, TAutoVal Tolerance = TNoArg());

	//ChangeCase: Changes the case of the letters in the selection  [dispid 32948]
	short ChangeCase(TAutoVal Type = TNoArg());

	//AppInfo:   [dispid 32949]
	TAutoString AppInfo(short Type);

	//SelInfo:   [dispid 32950]
	short SelInfo(short Type);

	//CountMacros:   [dispid 32951]
	short CountMacros(TAutoVal Context = TNoArg(), TAutoVal All = TNoArg(), TAutoVal Global = TNoArg());

	//MacroName:   [dispid 32952]
	TAutoString MacroName(short Count, TAutoVal Context = TNoArg(), TAutoVal All = TNoArg(), TAutoVal Global = TNoArg());

	//CountFoundFiles:   [dispid 32953]
	short CountFoundFiles();

	//FoundFileName:   [dispid 32954]
	TAutoString FoundFileName(short Number);

	//MacroDesc:   [dispid 32958]
	TAutoString MacroDesc(TAutoString Name);

	//CountKeys:   [dispid 32959]
	short CountKeys(TAutoVal Context = TNoArg());

	//KeyCode:   [dispid 32960]
	short KeyCode(short Coount, TAutoVal Context = TNoArg(), TAutoVal FirstOrSecond = TNoArg());

	//KeyMacro:   [dispid 32961]
	TAutoString KeyMacro(short Count, TAutoVal Context = TNoArg());

	//MacroCopy:   [dispid 32962]
	void MacroCopy(TAutoString Macro1, TAutoString Macro2, TAutoVal ExecuteOnly = TNoArg());

	//IsExecuteOnly:   [dispid 32963]
	short IsExecuteOnly(TAutoVal Macro = TNoArg());

	//CommandValid:   [dispid 32964]
	short CommandValid(TAutoString CommandName);

	//NextField: Moves to the next field  [dispid 32973]
	short NextField();

	//PrevField: Moves to the previous field  [dispid 32974]
	short PrevField();

	//NextCell: Moves to the next table cell  [dispid 32975]
	short NextCell();

	//PrevCell: Moves to the previous table cell  [dispid 32976]
	short PrevCell();

	//StartOfRow: Moves to the first cell in the current row  [dispid 32977]
	short StartOfRow(TAutoVal Select = TNoArg());

	//EndOfRow: Moves to the last cell in the current row  [dispid 32978]
	short EndOfRow(TAutoVal Select = TNoArg());

	//StartOfColumn: Moves to the first cell in the current column  [dispid 32979]	short StartOfColumn(TAutoVal Select = TNoArg());
	//EndOfColumn: Moves to the last cell in the current column  [dispid 32980]	short EndOfColumn(TAutoVal Select = TNoArg());
	//ExitWindows:   [dispid 32981]	// void ExitWindows();
	//DisableAutoMacros:   [dispid 32982]	void DisableAutoMacros(TAutoVal Disable = TNoArg());
	//EditFindFound:   [dispid 32983]	short EditFindFound();
	//ToolsCalculate: Calculates expressions in the selection  [dispid 32989]	double ToolsCalculate(TAutoVal Expression = TNoArg());
	//WindowList: Switches to the window containing the specified document  [dispid 32990]	void WindowList(short Number);	//Window1:   [dispid 32991]	void Window1();
	//Window2:   [dispid 32992]	void Window2();
	//Window3:   [dispid 32993]	void Window3();

	//Window4:   [dispid 32994]
	void Window4();

	//Window5:   [dispid 32995]
	void Window5();

	//Window6:   [dispid 32996]
	void Window6();

	//Window7:   [dispid 32997]
	void Window7();

	//Window8:   [dispid 32998]
	void Window8();

	//Window9:   [dispid 32999]
	void Window9();

	//CountDirectories:   [dispid 33000]
	short CountDirectories(TAutoVal Directory = TNoArg());

	//GetDirectory:   [dispid 33001]
	TAutoString GetDirectory(TAutoString Directory, TAutoVal Count = TNoArg());

	//LTrim:   [dispid 33002]
	TAutoString LTrim(TAutoString Source);

	//RTrim:   [dispid 33003]
	TAutoString RTrim(TAutoString Source);

	//Environ:   [dispid 33006]
	TAutoString Environ(TAutoString EnvironmentVariable);

	//WaitCursor:   [dispid 33007]
	void WaitCursor(short Wait);

	//DateSerial:   [dispid 33008]
	double DateSerial(short Year, short Month, short Day);

	//DateValue:   [dispid 33009]
	double DateValue(TAutoString DateText);

	//Day:   [dispid 33010]
	short Day(double SerialNumber);

	//Days360:   [dispid 33011]
	long Days360(TAutoString StartDate, TAutoString EndDate);

	//Hour:   [dispid 33012]
	short Hour(double SerialNumber);

	//Minute:   [dispid 33013]
	short Minute(double SerialNumber);

	//Month:   [dispid 33014]
	short Month(double SerialNumber);

	//Now:   [dispid 33015]
	double Now();

	//Weekday:   [dispid 33016]
	short Weekday(double SerialNumber);

	//Year:   [dispid 33017]
	short Year(double SerialNumber);

	//DocWindowHeight:   [dispid 33018]
	short DocWindowHeight(TAutoVal Height = TNoArg());

	//DocWindowWidth:   [dispid 33019]
	short DocWindowWidth(TAutoVal Width = TNoArg());

	//DOSToWin:   [dispid 33020]
	TAutoString DOSToWin(TAutoString StringToTranslate);

	//WinToDOS:   [dispid 33021]
	TAutoString WinToDOS(TAutoString StringToTranslate);

	//TimeSerial:   [dispid 33022]
	double TimeSerial(short Hour, short Minute, short Second);

	//Second:   [dispid 33023]
	short Second(double SerialNumber);

	//TimeValue:   [dispid 33024]
	double TimeValue(TAutoString TimeText);

	//Today:   [dispid 33025]
	double Today();

	//ShowAnnotationBy:   [dispid 33026]
	void ShowAnnotationBy(TAutoString ReviewerName);

	//SetAttr:   [dispid 33027]
	void SetAttr(TAutoString FileName, short Attribute);

	//DocMinimize: Minimizes the active window to an icon  [dispid 33029]
	short DocMinimize();

	//GetSystemInfo:   [dispid 33036]
	TAutoString GetSystemInfo(short Type);

	//AppClose:   [dispid 33031]
	void AppClose(TAutoVal WindowName = TNoArg());

	//AppCount:   [dispid 33032]
	short AppCount();

	//AppHide:   [dispid 33034]
	void AppHide(TAutoVal WindowName = TNoArg());

	//AppIsRunning:   [dispid 33035]
	short AppIsRunning(TAutoString WindowName);

	//GetPrivateProfileString:   [dispid 33037]
	TAutoString GetPrivateProfileString(TAutoString Section, TAutoString KeyName, TAutoString FileName);

	//SetPrivateProfileString:   [dispid 33038]
	short SetPrivateProfileString(TAutoString Section, TAutoString KeyName, TAutoString Setting, TAutoString FileName);

	//GetAttr:   [dispid 33039]
	short GetAttr(TAutoString FileName);

	//AppSendMessage:   [dispid 33040]
	void AppSendMessage(TAutoString WindowName, double Message, double Wparam, TAutoVal Lparam = TNoArg());

	//ScreenUpdating:   [dispid 33041]
	short ScreenUpdating(TAutoVal On = TNoArg());

	//AppWindowPosTop:   [dispid 33042]
	short AppWindowPosTop(TAutoVal WindowName = TNoArg(), TAutoVal VertPos = TNoArg());

	//Style: Applies an existing style or records a style by example  [dispid 33043]
	void Style(TAutoString StyleName);

	//MailMergeDataSource:   [dispid 33044]
	TAutoString MailMergeDataSource(short Type);

	//MailMergeState:   [dispid 33045]
	short MailMergeState(short Type);

	//SelectCurWord:   [dispid 33046]
	void SelectCurWord();

	//SelectCurSentence:   [dispid 33047]
	void SelectCurSentence();

	//IsTemplateDirty:   [dispid 33048]
	short IsTemplateDirty();

	//SetTemplateDirty:   [dispid 33049]
	void SetTemplateDirty(TAutoVal Dirty = TNoArg());

	//ToolsAutoCorrectSmartQuotes: Selects or clears the AutoCorrect SmartQuotes check box  [dispid 33050]
	short ToolsAutoCorrectSmartQuotes(TAutoVal On = TNoArg());

	//AppShow:   [dispid 33057]
	void AppShow(TAutoVal WindowName = TNoArg());

	//ViewEndnoteArea: Opens a pane for viewing and editing the endnotes (toggle)  [dispid 33060]
	short ViewEndnoteArea(TAutoVal On = TNoArg());

	//MailMergeMainDocumentType:   [dispid 33064]
	short MailMergeMainDocumentType(TAutoVal Type = TNoArg());

	//CountToolsGrammarStatistics:   [dispid 33074]
	short CountToolsGrammarStatistics();

	//DottedUnderline: Underlines the selection with dots (toggle)  [dispid 33075]
	short DottedUnderline(TAutoVal On = TNoArg());

	//MailMergeGoToRecord: Displays the specified record in the active mail merge data source  [dispid 33081]
	long MailMergeGoToRecord(TAutoVal RecordNumber = TNoArg());

	//BorderLineStyle: Changes border line styles of the selected paragraphs, table cells, and pictures  [dispid 33083]
	short BorderLineStyle(TAutoVal Style = TNoArg());

	//ShadingPattern: Changes shading pattern of the selected paragraphs, table cells, and pictures  [dispid 33084]
	short ShadingPattern(TAutoVal Type = TNoArg());

	//MenuItemText:   [dispid 33085]
	TAutoString MenuItemText(TAutoString Menu, short Type, short Item, TAutoVal Context = TNoArg());

	//MenuItemMacro:   [dispid 33086]
	TAutoString MenuItemMacro(TAutoString Menu, short Type, short Item, TAutoVal Context = TNoArg());

	//CountMenus:   [dispid 33087]
	short CountMenus(short Type, TAutoVal Context = TNoArg());

	//MenuText:   [dispid 33088]
	TAutoString MenuText(short Type, short MenuNumber, TAutoVal Context = TNoArg());

	//CountMenuItems:   [dispid 33089]
	short CountMenuItems(TAutoString Menu, short Type, TAutoVal Context = TNoArg());

	//AppWindowPosLeft:   [dispid 33090]
	short AppWindowPosLeft(TAutoVal WindowName = TNoArg(), TAutoVal HorizPos = TNoArg());

	//AppWindowHeight:   [dispid 33091]
	short AppWindowHeight(TAutoVal WindowName = TNoArg(), TAutoVal Height = TNoArg());

	//AppWindowWidth:   [dispid 33092]
	short AppWindowWidth(TAutoVal WindowName = TNoArg(), TAutoVal Width = TNoArg());

	//DocWindowPosTop:   [dispid 33093]
	short DocWindowPosTop(TAutoVal Position = TNoArg());

	//DocWindowPosLeft:   [dispid 33094]
	short DocWindowPosLeft(TAutoVal Position = TNoArg());

	//RenameMenu:   [dispid 33097]
	void RenameMenu(TAutoString Menu, TAutoString NewName, short Type, TAutoVal Context = TNoArg());

	//FileCloseAll: Closes all of the windows of all documents  [dispid 33098]
	void FileCloseAll(TAutoVal Save = TNoArg());

	//SetDocumentVar:   [dispid 33100]
	short SetDocumentVar(TAutoString VariableName, TAutoString VariableText);

	//GetDocumentVar:   [dispid 33101]
	TAutoString GetDocumentVar(TAutoString VariableName);

	//AnnotationRefFromSel:   [dispid 33102]
	TAutoString AnnotationRefFromSel();

	//SetFormResult:   [dispid 33104]
	void SetFormResult(TAutoString BookmarkName, TAutoVal Result = TNoArg(), TAutoVal DefaultResult = TNoArg());

	//EnableFormField:   [dispid 33105]
	void EnableFormField(TAutoString BookmarkName, short Enable);

	//IsMacro:   [dispid 33106]
	short IsMacro(TAutoVal WindowName = TNoArg());

	//FileNameFromWindow:   [dispid 33107]
	TAutoString FileNameFromWindow(TAutoVal WindowNumber = TNoArg());

	//MacroNameFromWindow:   [dispid 33108]
	TAutoString MacroNameFromWindow(TAutoVal WindowNumber = TNoArg());

	//GetFieldData:   [dispid 33109]
	TAutoString GetFieldData();

	//PutFieldData:   [dispid 33110]
	short PutFieldData(TAutoString FeildData);

	//MailMergeConvertChevrons: Toggles converting Word for the Macintosh mail merge chevrons  [dispid 33111]
	short MailMergeConvertChevrons(TAutoVal Convert = TNoArg());

	//MailMergeAskToConvertChevrons: Toggles asking the user about converting Word for the Macintosh mail merge chevrons  [dispid 33112]
	short MailMergeAskToConvertChevrons(TAutoVal Prompt = TNoArg());

	//AutoMarkIndexEntries: Inserts index entries using an automark file  [dispid 33114]
	short AutoMarkIndexEntries(TAutoVal ConcordanceFilename = TNoArg());

	//MoveToolbar:   [dispid 33115]
	void MoveToolbar(TAutoString Toolbar, short Dock, short HorizPos, short VertPos);

	//SizeToolbar:   [dispid 33116]
	void SizeToolbar(TAutoString Toolbar, short Width);

	//DrawSetRange:   [dispid 33117]
	short DrawSetRange(TAutoString Bookmark);

	//DrawClearRange:   [dispid 33119]
	void DrawClearRange();

	//DrawCount:   [dispid 33120]
	short DrawCount();

	//DrawSelect:   [dispid 33121]
	short DrawSelect(short Object);

	//DrawExtendSelect:   [dispid 33122]
	short DrawExtendSelect(short Count);

	//DrawSetInsertToTextbox:   [dispid 33123]
	void DrawSetInsertToTextbox(TAutoVal Object = TNoArg());

	//DrawSetInsertToAnchor:   [dispid 33124]
	void DrawSetInsertToAnchor(TAutoVal Object = TNoArg());

	//DrawGetType:   [dispid 33125]
	short DrawGetType(TAutoVal Count = TNoArg());

	//DrawCountPolyPoints:   [dispid 33126]	short DrawCountPolyPoints(TAutoVal Object = TNoArg());
	//Magnifier: Toggle zoom-in zoom-out mode  [dispid 33131]	short Magnifier(TAutoVal On = TNoArg());
	//GetSelStartPos:   [dispid 33135]	long GetSelStartPos();
	//GetSelEndPos:   [dispid 33136]	long GetSelEndPos();
	//SetSelRange:   [dispid 33137]	void SetSelRange(long Pos1, long Pos2);
	//GetText:   [dispid 33138]	TAutoString GetText(long Pos1, long Pos2);
	//MoveButton:   [dispid 33139]	void MoveButton(TAutoString SourceToolbar, short SourcePosition, TAutoString TargetToolbar, short TargetpPosition, TAutoVal Copy = TNoArg(), TAutoVal Context = TNoArg());
	//DeleteButton:   [dispid 33140]	void DeleteButton(TAutoString Toolbar, short Position, TAutoVal Context = TNoArg());
	//AddButton:   [dispid 33141]	void AddButton(TAutoString Toolbar, short Position, short Category, TAutoString Name, TAutoVal ButtonTxtOrImageNum = TNoArg(), TAutoVal Context = TNoArg(), TAutoVal CommandValue = TNoArg());

	//DeleteAddIn:   [dispid 33143]
	void DeleteAddIn(TAutoString AddIn);

	//AddAddIn:   [dispid 33144]
	short AddAddIn(TAutoString AddIn, TAutoVal Load = TNoArg());

	//GetAddInName:   [dispid 33145]
	TAutoString GetAddInName(short AddInID);

	//FormatBulletDefault: Creates a bulleted list based on the current defaults  [dispid 33146]
	short FormatBulletDefault(TAutoVal Add = TNoArg());

	//FormatNumberDefault: Creates a numbered list based on the current defaults  [dispid 33147]
	short FormatNumberDefault(TAutoVal On = TNoArg());

	//ResetButtonImage: Reset the image on the selected button to the built-in image  [dispid 33148]
	void ResetButtonImage(TAutoString Toolbar, short Tool, TAutoVal Context = TNoArg());

	//SkipNumbering: Makes the selected paragraphs skip numbering  [dispid 33150]
	short SkipNumbering();

	//GetAddInId:   [dispid 33152]
	short GetAddInId(TAutoString AddIn);

	//CountAddIns:   [dispid 33153]
	short CountAddIns();

	//ClearAddIns:   [dispid 33154]
	void ClearAddIns(short RemoveFromList);

	//AddInState:   [dispid 33155]
	short AddInState(TAutoString AddIn, TAutoVal Load = TNoArg());

	//ToolsRevisionType:   [dispid 33156]
	short ToolsRevisionType();

	//ToolsRevisionAuthor:   [dispid 33157]
	TAutoString ToolsRevisionAuthor();

	//ToolsRevisionDate: Returns the Date and Time the selected revision was made as number  [dispid 33158]
	double ToolsRevisionDate();

	//ToolsRevisionDateStr: Returns the Date and Time the selected revision was made as string  [dispid 33162]
	TAutoString ToolsRevisionDateStr();

	//MailMergeViewData: Toggles between viewing merge fields and actual data  [dispid 33159]
	short MailMergeViewData(TAutoVal DisplayResults = TNoArg());

	//AddDropDownItem:   [dispid 33160]
	void AddDropDownItem(TAutoString BookmarkName, TAutoString ItemText);

	//RemoveDropDownItem:   [dispid 33161]
	void RemoveDropDownItem(TAutoString BookmarkName, TAutoString ItemText);

	//TableHeadings: Toggles table headings attribute on and off  [dispid 33163]
	short TableHeadings(TAutoVal On = TNoArg());

	//DefaultDir:   [dispid 33164]
	TAutoString DefaultDir(short Type);

	//FileNameInfo:   [dispid 33165]
	TAutoString FileNameInfo(TAutoString FileName, short InfoType);

	//MacroFileName:   [dispid 33166]
	TAutoString MacroFileName(TAutoVal MacroName = TNoArg());

	//ViewHeader: Displays header in page layout view  [dispid 33167]
	short ViewHeader();

	//ViewFooter: Displays footer in page layout view  [dispid 33168]
	short ViewFooter();

	//PasteButtonImage: Paste the image on the Clipboard onto the selected button  [dispid 33169]
	void PasteButtonImage(TAutoString Toolbar, short Tool, TAutoVal Context = TNoArg());

	//CopyButtonImage: Copy the image of the selected button to the Clipboard  [dispid 33170]
	void CopyButtonImage(TAutoString Toolbar, short Tool, TAutoVal Context = TNoArg());

	//EditButtonImage: Edit the image on the selected button  [dispid 33172]
	void EditButtonImage(TAutoString Toolbar, short Position, TAutoVal Context = TNoArg());

	//CountToolbars:   [dispid 33173]
	short CountToolbars(TAutoVal Context = TNoArg());

	//ToolbarName:   [dispid 33174]
	TAutoString ToolbarName(short Toolbar, TAutoVal Context = TNoArg());

	//ChDefaultDir:   [dispid 33176]
	void ChDefaultDir(TAutoString Path, short Type);

	//EditUndo: Reverses the last action  [dispid 33177]
	void EditUndo();

	//EditRedo: Redoes the last action that was undone  [dispid 33178]
	void EditRedo();

	//ViewMasterDocument: Switches to master document view  [dispid 33179]
	short ViewMasterDocument();

	//ToolsAutoCorrectReplaceText: Selects or clears the AutoCorrect ReplaceText check box  [dispid 33180]
	short ToolsAutoCorrectReplaceText(TAutoVal On = TNoArg());

	//ToolsAutoCorrectInitialCaps: Selects or clears the AutoCorrect InitialCaps check box  [dispid 33181]
	short ToolsAutoCorrectInitialCaps(TAutoVal On = TNoArg());

	//ToolsAutoCorrectSentenceCaps: Selects or clears the AutoCorrect SentenceCaps check box  [dispid 33182]
	short ToolsAutoCorrectSentenceCaps(TAutoVal On = TNoArg());

	//ToolsAutoCorrectDays: Selects or clears the AutoCorrect Days check box  [dispid 33183]
	short ToolsAutoCorrectDays(TAutoVal On = TNoArg());

	//GetAutoCorrect:   [dispid 33184]
	TAutoString GetAutoCorrect(TAutoString AutoCorrectEntry);

	//ViewFootnoteArea: Opens a pane for viewing and editing the footnotes (toggle)  [dispid 33185]
	short ViewFootnoteArea(TAutoVal On = TNoArg());

	//ConverterLookup:   [dispid 33187]
	short ConverterLookup(TAutoString FormatName);

	//FileConfirmConversions: Toggles asking the user to confirm the conversion when opening a file.  [dispid 33188]
	short FileConfirmConversions(TAutoVal On = TNoArg());

	//GetMergeField:   [dispid 33189]
	TAutoString GetMergeField(TAutoString FieldName);

	//Converter:   [dispid 33190]
	TAutoString Converter(short FormatNumber);

	//MailMergeFoundRecord:   [dispid 33191]
	short MailMergeFoundRecord();

	//CountDocumentVars:   [dispid 33192]
	short CountDocumentVars();

	//GetDocumentVarName:   [dispid 33193]
	TAutoString GetDocumentVarName(short VariableNumber);

	//CleanString:   [dispid 33195]
	TAutoString CleanString(TAutoString Source);

	//PathFromWinPath:   [dispid 33196]
	TAutoString PathFromWinPath(TAutoString Path);

	//PathFromMacPath:   [dispid 33197]
	TAutoString PathFromMacPath(TAutoString Path);

	//LockDocument: Toggles the file lock state of a document  [dispid 33232]
	short LockDocument(TAutoVal Lock = TNoArg());

	//GoToNextSubdocument:   [dispid 33233]
	void GoToNextSubdocument();

	//GoToPreviousSubdocument:   [dispid 33234]
	void GoToPreviousSubdocument();

	//SelectionFileName:   [dispid 33235]
	TAutoString SelectionFileName();

	//SymbolFont: Applies the Symbol font to the selection  [dispid 33236]
	void SymbolFont(TAutoVal TextToInsert = TNoArg());

	//RemoveAllDropDownItems:   [dispid 33237]
	void RemoveAllDropDownItems(TAutoString BookmarkName);

	//FormShading: Changes shading options for the current form  [dispid 33238]
	short FormShading(TAutoVal On = TNoArg());

	//GetFormResult: Returns a number corresponding to the setting of a checkbox form filed or drop-down form field marked by the specified bookmark name  [dispid 33239]
	short GetFormResult(TAutoString BookmarkName);

	//GetFormResultStr: Returns a string corresponding to the setting form field marked by the specified bookmark name  [dispid 33103]
	TAutoVal GetFormResultStr(TAutoString BookmarkName);

	//ToolbarState:   [dispid 33240]
	short ToolbarState(TAutoString Toolbar);

	//CountToolbarButtons:   [dispid 33241]
	short CountToolbarButtons(TAutoString Toolbar, TAutoVal Context = TNoArg());

	//ToolbarButtonMacro:   [dispid 33242]
	TAutoString ToolbarButtonMacro(TAutoString Toolbar, short Position, TAutoVal Context = TNoArg());

	//AtEndOfDocument:   [dispid 33244]
	short AtEndOfDocument();
	//AtStartOfDocument:   [dispid 33245]	short AtStartOfDocument();
	//FieldSeparator:   [dispid 33248]	TAutoString FieldSeparator(TAutoVal Separator = TNoArg());

	//CharLeft: Moves the insertion point to the left one character  [dispid 49152]
	short CharLeft(TAutoVal Count = TNoArg(), TAutoVal Select = TNoArg());

	//CharRight: Moves the insertion point to the right one character  [dispid 49153]
	short CharRight(TAutoVal Count = TNoArg(), TAutoVal Select = TNoArg());

	//WordLeft: Moves the insertion point to the left one word  [dispid 49154]
	short WordLeft(TAutoVal Count = TNoArg(), TAutoVal Select = TNoArg());

	//WordRight: Moves the insertion point to the right one word  [dispid 49155]
	short WordRight(TAutoVal Count = TNoArg(), TAutoVal Select = TNoArg());

	//SentLeft: Moves the insertion point to the beginning of the previous sentence  [dispid 49156]
	short SentLeft(TAutoVal Count = TNoArg(), TAutoVal Select = TNoArg());

	//SentRight: Moves the insertion point to beginning of the next sentence  [dispid 49157]
	short SentRight(TAutoVal Count = TNoArg(), TAutoVal Select = TNoArg());

	//ParaUp: Moves the insertion point to the beginning of the previous paragraph  [dispid 49158]
	short ParaUp(TAutoVal Count = TNoArg(), TAutoVal Select = TNoArg());

	//ParaDown: Moves the insertion point to the beginning of the next paragraph  [dispid 49159]
	short ParaDown(TAutoVal Count = TNoArg(), TAutoVal Select = TNoArg());

	//LineUp: Moves the insertion point up one line  [dispid 49160]
	short LineUp(TAutoVal Count = TNoArg(), TAutoVal Select = TNoArg());

	//LineDown: Moves the insertion point down one line  [dispid 49161]
	short LineDown(TAutoVal Count = TNoArg(), TAutoVal Select = TNoArg());

	//PageUp: Moves the insertion point and document display to the previous screen of text  [dispid 49162]
	short PageUp(TAutoVal Count = TNoArg(), TAutoVal Select = TNoArg());

	//PageDown: Moves the insertion point and document display to the next screen of text  [dispid 49163]
	short PageDown(TAutoVal Count = TNoArg(), TAutoVal Select = TNoArg());

	//StartOfLine: Moves the insertion point to the beginning of the current line  [dispid 49164]
	short StartOfLine(TAutoVal Select = TNoArg());

	//EndOfLine: Moves the insertion point to the end of the current line  [dispid 49165]
	short EndOfLine(TAutoVal Select = TNoArg());

	//StartOfWindow: Moves the insertion point to the beginning of the first visible line on the screen  [dispid 49166]
	short StartOfWindow(TAutoVal Select = TNoArg());

	//EndOfWindow: Moves the insertion point to the end of the last visible line on the screen  [dispid 49167]
	short EndOfWindow(TAutoVal Select = TNoArg());
	//StartOfDocument: Moves the insertion point to the beginning of the first line of the document  [dispid 49168]	short StartOfDocument(TAutoVal Select = TNoArg());
	//EndOfDocument: Moves the insertion point to the end of the last line of the document  [dispid 49169]	short EndOfDocument(TAutoVal Select = TNoArg());
	//BorderOutside: Changes the outside borders of the selected paragraphs, table cells, and pictures  [dispid 49176]
	short BorderOutside(TAutoVal On = TNoArg());

	//BorderNone: Removes borders from the selected paragraphs, table cells, and pictures  [dispid 49177]
	short BorderNone(TAutoVal Remove = TNoArg());

	//BorderTop: Changes the top borders of the selected paragraphs, table cells, and pictures  [dispid 49188]
	short BorderTop(TAutoVal On = TNoArg());

	//BorderLeft: Changes the left border of the selected paragraphs, table cells, and pictures  [dispid 49189]
	short BorderLeft(TAutoVal On = TNoArg());

	//BorderBottom: Changes the bottom border of the selected paragraphs, table cells, and pictures  [dispid 49190]
	short BorderBottom(TAutoVal On = TNoArg());

	//BorderRight: Changes the right border of the selected paragraphs, table cells, and pictures  [dispid 49191]
	short BorderRight(TAutoVal On = TNoArg());

	//BorderInside: Changes the inside borders of the selected paragraphs, table cells, and pictures  [dispid 49192]
	short BorderInside(TAutoVal On = TNoArg());

	//DocumentProtection: (Word 95 only)  [dispid 49195]
	short DocumentProtection();

	//IsAutoCorrectException: (Word 95 only)  [dispid 33292]
	short IsAutoCorrectException(TAutoVal Tab, TAutoString Source);

	//MailCheckNames: (Word 95 only)  [dispid 774]
	void MailCheckNames();

	//MailHideMessageHeader: (Word 95 only)  [dispid 763]
	void MailHideMessageHeader();

	//MailMessageDelete: (Word 95 only)  [dispid 771]
	void MailMessageDelete();

	//MailMessageForward: (Word 95 only)  [dispid 776]
	void MailMessageForward();

	//MailMessageMove: (Word 95 only)  [dispid 770]
	void MailMessageMove();

	//MailMessageNext: (Word 95 only)  [dispid 773]
	void MailMessageNext();

	//MailMessagePrevious: (Word 95 only)  [dispid 772]
	void MailMessagePrevious();

	//MailMessageProperties: (Word 95 only)  [dispid 764]
	void MailMessageProperties();

	//MailMessageReply: (Word 95 only)  [dispid 768]
	void MailMessageReply();

	//MailMessageReplyAll: (Word 95 only)  [dispid 769]
	void MailMessageReplyAll();

	//MailSelectNames: (Word 95 only)  [dispid 775]
	void MailSelectNames();

	//AutomaticChange: (Word 95 only)  [dispid 4070]
	void AutomaticChange();

	//CountAutoCorrectExceptions: (Word 95 only)  [dispid 33290]
	short CountAutoCorrectExceptions(short Tab);

	//CountDocumentProperties: (Word 95 only)  [dispid 33275]
	short CountDocumentProperties();

	//DeleteDocumentProperty: (Word 95 only)  [dispid 33280]
	void DeleteDocumentProperty(TAutoString PropertyName);

	//DocumentHasMisspellings: (Word 95 only)  [dispid 33273]
	short DocumentHasMisspellings();

	//DocumentPropertyExists: (Word 95 only)  [dispid 33284]
	short DocumentPropertyExists(TAutoString PropertyName);

	//DocumentPropertyName: (Word 95 only)  [dispid 33281]
	TAutoString DocumentPropertyName(short PropertyNumber);

	//DocumentPropertyType: (Word 95 only)  [dispid 7941]
	short DocumentPropertyType(TAutoString PropertyName);

	//EditFindHighlight: (Word 95 only)  [dispid 780]
	void EditFindHighlight();

	//EditFindNotHighlight: (Word 95 only)  [dispid 782]
	void EditFindNotHighlight();

	//EditReplaceHighlight: (Word 95 only)  [dispid 781]
	void EditReplaceHighlight();

	//EditReplaceNotHighlight: (Word 95 only)  [dispid 783]
	void EditReplaceNotHighlight();

	//FilePost: (Word 95 only)  [dispid 760]
	void FilePost(TAutoString FolderName);

	//FileProperties: (Word 95 only)  [dispid 750]
	void FileProperties();

	//GetAutoCorrectException: (Word 95 only)  [dispid 33291]
	TAutoString GetAutoCorrectException(short Tab, short EntryNumber);

	//GetAddress: (Word 95 only)  [dispid 33274]
	TAutoString GetAddress(TAutoVal Name = TNoArg(), TAutoVal Addressproperties = TNoArg(), TAutoVal UseAutoText = TNoArg(), TAutoVal DisplaySelectDialog = TNoArg(), TAutoVal SelectDialogModus = TNoArg(), TAutoVal CheckResolveNamesDialog = TNoArg(), TAutoVal MRUChoice = TNoArg(), TAutoVal UpdateMRU = TNoArg());

	//GetDocumentProperty: (Word 95 only)  [dispid 33276]
	TAutoVal GetDocumentProperty(TAutoString Name, TAutoVal CustomOrBuildIn = TNoArg());

	//Highlight: (Word 95 only)  [dispid 742]
	void Highlight();

	//HighlightColor: (Word 95 only)  [dispid 49193]
	TAutoVal HighlightColor(short Color);

	//InsertAddress: (Word 95 only)  [dispid 758]
	void InsertAddress();

	//IsCustomDocumentProperty: (Word 95 only)  [dispid 33283]
	short IsCustomDocumentProperty(TAutoString Name);

	//IsDocumentPropertyReadOnly: (Word 95 only)  [dispid 33282]
	short IsDocumentPropertyReadOnly(TAutoString Name);

	//MailMergeUseAddressBook: (Word 95 only)  [dispid 779]
	void MailMergeUseAddressBook(short AddressBookType);

	//NextMisspelling: (Word 95 only)  [dispid 759]
	void NextMisspelling();

	//SetDocumentProperty: (Word 95 only)  [dispid 33278]
	void SetDocumentProperty(TAutoString Name, short Type, TAutoVal Value, short CustomOrBuiltIn);

	//SetDocumentPropertyLink: (Word 95 only)  [dispid 33279]
	void SetDocumentPropertyLink(TAutoString Name, TAutoString Source);

	//ShowMe: (Word 95 only)  [dispid 4068]
	void ShowMe();

	//SpellChecked: (Word 95 only)  [dispid 33294]
	TAutoVal SpellChecked(short Yes);

	//TipWizard: (Word 95 only)  [dispid 4067]
	void TipWizard();

	//ToolsAutoCorrectCapsLockOff: (Word 95 only)  [dispid 767]
	TAutoVal ToolsAutoCorrectCapsLockOff(TAutoVal On = TNoArg());

	//ToolsAutoCorrectExceptions: (Word 95 only)  [dispid 762]
	void ToolsAutoCorrectExceptions(short Tab, TAutoString Name, short AutoAdd, TAutoVal Add = TNoArg(), TAutoVal Delete = TNoArg());

	//ToolsSpellingRecheckDocument: (Word 95 only)  [dispid 777]
	void ToolsSpellingRecheckDocument();
};
#endif#include <poppack.h>
#endif

